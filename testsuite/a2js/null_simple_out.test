--  EXPECTED OUTPUT:
--  1
--  END OF EXPECTED OUTPUT
--
--  BIND LIST:
--  consoles.ads
--  interf.ads
--  run.adb
--  END OF BIND LIST
--
--  MAIN: run

with Consoles;
with Interf;
procedure Run is
   use Consoles;

   procedure Do_Call (O : in out Interf.Visitor'Class);

   procedure Do_Call (O : in out Interf.Visitor'Class) is
      V : Integer := 1;
   begin
      O.Enter (V);  --  V should be unchanged
      Console.Log (V);
   end Do_Call;

   type X is new Interf.Visitor with null record;
   O : X;
begin
   Do_Call (O);
end;

package Interf is
   type Visitor is limited interface;
   not overriding procedure Enter
    (Self    : in out Visitor;
     Control : in out Integer) is null;
end Interf;

package Consoles is
   type Console_Type is tagged limited null record;

   type Console_Access is access all Console_Type'Class
     with Storage_Size => 0;

   not overriding procedure Log
     (Self : not null access Console_Type;
      Text : Integer)
     with Import     => True,
          Convention => JavaScript_Function,
          Link_Name  => "log";

   Console : constant Consoles.Console_Access
     with Import     => True,
       Convention => JavaScript;
end Consoles;
