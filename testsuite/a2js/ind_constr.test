--  EXPECTED OUTPUT:
--  1
--  END OF EXPECTED OUTPUT
--
--  BIND LIST:
--  devices.ads
--  consoles.ads
--  ind_constr.adb
--  END OF BIND LIST
--
--  MAIN: ind_constr

package Devices is
   type Device_Information is record
      Id : Natural := 1;
   end record;

   type Device_Array is array (Positive range <>) of Device_Information;

   type Device_Array_Access is access all Device_Array;

   Devices : Device_Array_Access := new Device_Array (1 .. 2);

end;

with Consoles;
with League.Strings;
with Devices;

procedure Ind_Constr is
   use Consoles;
   Old : Devices.Device_Array := Devices.Devices.all (2 .. 2);
begin
   for J in Devices.Devices.all'Range loop
      if J < Devices.Devices.all'Last then
         Console.Log (Devices.Devices.all (J).Id);
      end if;
   end loop;

end;

package Consoles is
   type Console_Type is tagged limited null record;

   type Console_Access is access all Console_Type'Class
     with Storage_Size => 0;

   not overriding procedure Log
     (Self : not null access Console_Type;
      Text : Integer)
     with Import     => True,
          Convention => JavaScript_Function,
          Link_Name  => "log";

   Console : constant Consoles.Console_Access
     with Import     => True,
       Convention => JavaScript;
end Consoles;
