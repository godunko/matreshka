------------------------------------------------------------------------------
--                                                                          --
--                            Matreshka Project                             --
--                                                                          --
--                          Ada Modeling Framework                          --
--                                                                          --
--                        Runtime Library Component                         --
--                                                                          --
------------------------------------------------------------------------------
--                                                                          --
-- Copyright Â© 2011-2012, Vadim Godunko <vgodunko@gmail.com>                --
-- All rights reserved.                                                     --
--                                                                          --
-- Redistribution and use in source and binary forms, with or without       --
-- modification, are permitted provided that the following conditions       --
-- are met:                                                                 --
--                                                                          --
--  * Redistributions of source code must retain the above copyright        --
--    notice, this list of conditions and the following disclaimer.         --
--                                                                          --
--  * Redistributions in binary form must reproduce the above copyright     --
--    notice, this list of conditions and the following disclaimer in the   --
--    documentation and/or other materials provided with the distribution.  --
--                                                                          --
--  * Neither the name of the Vadim Godunko, IE nor the names of its        --
--    contributors may be used to endorse or promote products derived from  --
--    this software without specific prior written permission.              --
--                                                                          --
-- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS      --
-- "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT        --
-- LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR    --
-- A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT     --
-- HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,   --
-- SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED --
-- TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR   --
-- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF   --
-- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING     --
-- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS       --
-- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.             --
--                                                                          --
------------------------------------------------------------------------------
--  $Revision$ $Date$
------------------------------------------------------------------------------
--  This file is generated, don't edit it.
------------------------------------------------------------------------------
with AMF.Boolean_Collections.Internals;
with AMF.CMOF.Elements;
with AMF.DC.Holders;
with AMF.DC.Point_Collections.Internals;
with AMF.DI.Diagram_Elements.Collections;
with AMF.DI.Styles;
with AMF.Holders.Elements;
with AMF.Holders.Reals;
with AMF.Holders.Unlimited_Naturals;
with AMF.Internals.Helpers;
with AMF.Internals.Holders.CMOF_Holders;
with AMF.Internals.Holders.DI_Holders;
with AMF.Internals.Holders.UMLDI_Holders;
with AMF.Internals.Holders.UML_Holders;
with AMF.Internals.Tables.DI_Metamodel;
with AMF.Internals.Tables.Standard_Profile_L2_Metamodel;
with AMF.Internals.Tables.Standard_Profile_L3_Metamodel;
with AMF.Internals.Tables.UMLDI_Metamodel;
with AMF.Internals.Tables.UML_Element_Table;
with AMF.Internals.Tables.UML_Metamodel;
with AMF.Internals.Tables.UML_Types;
with AMF.Standard_Profile_L2.Auxiliaries;
with AMF.Standard_Profile_L2.Calls;
with AMF.Standard_Profile_L2.Creates;
with AMF.Standard_Profile_L2.Derives;
with AMF.Standard_Profile_L2.Destroies;
with AMF.Standard_Profile_L2.Documents;
with AMF.Standard_Profile_L2.Entities;
with AMF.Standard_Profile_L2.Executables;
with AMF.Standard_Profile_L2.Focuses;
with AMF.Standard_Profile_L2.Frameworks;
with AMF.Standard_Profile_L2.Implementation_Classes;
with AMF.Standard_Profile_L2.Implements;
with AMF.Standard_Profile_L2.Instantiates;
with AMF.Standard_Profile_L2.Libraries;
with AMF.Standard_Profile_L2.Metaclasses;
with AMF.Standard_Profile_L2.Model_Libraries;
with AMF.Standard_Profile_L2.Processes;
with AMF.Standard_Profile_L2.Realizations;
with AMF.Standard_Profile_L2.Refines;
with AMF.Standard_Profile_L2.Responsibilities;
with AMF.Standard_Profile_L2.Scripts;
with AMF.Standard_Profile_L2.Sends;
with AMF.Standard_Profile_L2.Services;
with AMF.Standard_Profile_L2.Sources;
with AMF.Standard_Profile_L2.Specifications;
with AMF.Standard_Profile_L2.Subsystems;
with AMF.Standard_Profile_L2.Traces;
with AMF.Standard_Profile_L2.Types;
with AMF.Standard_Profile_L2.Utilities;
with AMF.Standard_Profile_L3.Build_Components;
with AMF.Standard_Profile_L3.Metamodels;
with AMF.Standard_Profile_L3.System_Models;
with AMF.String_Collections.Internals;
with AMF.UML.Abstractions;
with AMF.UML.Accept_Call_Actions;
with AMF.UML.Accept_Event_Actions;
with AMF.UML.Action_Execution_Specifications;
with AMF.UML.Action_Input_Pins;
with AMF.UML.Actions.Collections;
with AMF.UML.Activities;
with AMF.UML.Activity_Edges.Collections;
with AMF.UML.Activity_Final_Nodes;
with AMF.UML.Activity_Groups.Collections;
with AMF.UML.Activity_Nodes.Collections;
with AMF.UML.Activity_Parameter_Nodes;
with AMF.UML.Activity_Partitions.Collections;
with AMF.UML.Actors;
with AMF.UML.Add_Structural_Feature_Value_Actions;
with AMF.UML.Add_Variable_Value_Actions;
with AMF.UML.Any_Receive_Events;
with AMF.UML.Artifacts.Collections;
with AMF.UML.Association_Classes;
with AMF.UML.Associations;
with AMF.UML.Behavior_Execution_Specifications;
with AMF.UML.Behavioral_Features;
with AMF.UML.Behaviored_Classifiers;
with AMF.UML.Behaviors.Collections;
with AMF.UML.Broadcast_Signal_Actions;
with AMF.UML.Call_Behavior_Actions;
with AMF.UML.Call_Events;
with AMF.UML.Call_Operation_Actions;
with AMF.UML.Central_Buffer_Nodes;
with AMF.UML.Change_Events;
with AMF.UML.Classes.Collections;
with AMF.UML.Classifier_Template_Parameters;
with AMF.UML.Classifiers.Collections;
with AMF.UML.Clauses.Collections;
with AMF.UML.Clear_Association_Actions;
with AMF.UML.Clear_Structural_Feature_Actions;
with AMF.UML.Clear_Variable_Actions;
with AMF.UML.Collaboration_Uses.Collections;
with AMF.UML.Collaborations;
with AMF.UML.Combined_Fragments;
with AMF.UML.Comments.Collections;
with AMF.UML.Communication_Paths;
with AMF.UML.Component_Realizations.Collections;
with AMF.UML.Components;
with AMF.UML.Conditional_Nodes;
with AMF.UML.Connectable_Element_Template_Parameters;
with AMF.UML.Connectable_Elements.Collections;
with AMF.UML.Connection_Point_References.Collections;
with AMF.UML.Connector_Ends.Collections;
with AMF.UML.Connectors.Collections;
with AMF.UML.Consider_Ignore_Fragments;
with AMF.UML.Constraints.Collections;
with AMF.UML.Continuations;
with AMF.UML.Control_Flows;
with AMF.UML.Create_Link_Actions;
with AMF.UML.Create_Link_Object_Actions;
with AMF.UML.Create_Object_Actions;
with AMF.UML.Data_Store_Nodes;
with AMF.UML.Data_Types;
with AMF.UML.Decision_Nodes;
with AMF.UML.Dependencies.Collections;
with AMF.UML.Deployed_Artifacts.Collections;
with AMF.UML.Deployment_Specifications.Collections;
with AMF.UML.Deployment_Targets;
with AMF.UML.Deployments.Collections;
with AMF.UML.Destroy_Link_Actions;
with AMF.UML.Destroy_Object_Actions;
with AMF.UML.Destruction_Occurrence_Specifications;
with AMF.UML.Devices;
with AMF.UML.Duration_Constraints;
with AMF.UML.Duration_Intervals;
with AMF.UML.Duration_Observations;
with AMF.UML.Durations;
with AMF.UML.Element_Imports.Collections;
with AMF.UML.Elements.Collections;
with AMF.UML.Enumeration_Literals.Collections;
with AMF.UML.Enumerations;
with AMF.UML.Events;
with AMF.UML.Exception_Handlers.Collections;
with AMF.UML.Executable_Nodes.Collections;
with AMF.UML.Execution_Environments;
with AMF.UML.Execution_Occurrence_Specifications;
with AMF.UML.Execution_Specifications;
with AMF.UML.Expansion_Nodes.Collections;
with AMF.UML.Expansion_Regions;
with AMF.UML.Expressions;
with AMF.UML.Extends.Collections;
with AMF.UML.Extension_Ends;
with AMF.UML.Extension_Points.Collections;
with AMF.UML.Extensions.Collections;
with AMF.UML.Features.Collections;
with AMF.UML.Final_States;
with AMF.UML.Flow_Final_Nodes;
with AMF.UML.Fork_Nodes;
with AMF.UML.Function_Behaviors;
with AMF.UML.Gates.Collections;
with AMF.UML.General_Orderings.Collections;
with AMF.UML.Generalization_Sets.Collections;
with AMF.UML.Generalizations.Collections;
with AMF.UML.Holders.Aggregation_Kinds;
with AMF.UML.Holders.Call_Concurrency_Kinds;
with AMF.UML.Holders.Connector_Kinds;
with AMF.UML.Holders.Expansion_Kinds;
with AMF.UML.Holders.Interaction_Operator_Kinds;
with AMF.UML.Holders.Message_Kinds;
with AMF.UML.Holders.Message_Sorts;
with AMF.UML.Holders.Object_Node_Ordering_Kinds;
with AMF.UML.Holders.Parameter_Direction_Kinds;
with AMF.UML.Holders.Pseudostate_Kinds;
with AMF.UML.Holders.Transition_Kinds;
with AMF.UML.Holders.Visibility_Kinds;
with AMF.UML.Images.Collections;
with AMF.UML.Includes.Collections;
with AMF.UML.Information_Flows;
with AMF.UML.Information_Items;
with AMF.UML.Initial_Nodes;
with AMF.UML.Input_Pins.Collections;
with AMF.UML.Instance_Specifications;
with AMF.UML.Instance_Values;
with AMF.UML.Interaction_Constraints;
with AMF.UML.Interaction_Fragments.Collections;
with AMF.UML.Interaction_Operands.Collections;
with AMF.UML.Interaction_Uses;
with AMF.UML.Interactions;
with AMF.UML.Interface_Realizations.Collections;
with AMF.UML.Interfaces.Collections;
with AMF.UML.Interruptible_Activity_Regions.Collections;
with AMF.UML.Interval_Constraints;
with AMF.UML.Intervals;
with AMF.UML.Join_Nodes;
with AMF.UML.Lifelines.Collections;
with AMF.UML.Link_End_Creation_Datas.Collections;
with AMF.UML.Link_End_Datas.Collections;
with AMF.UML.Link_End_Destruction_Datas.Collections;
with AMF.UML.Literal_Booleans;
with AMF.UML.Literal_Integers;
with AMF.UML.Literal_Nulls;
with AMF.UML.Literal_Reals;
with AMF.UML.Literal_Strings;
with AMF.UML.Literal_Unlimited_Naturals;
with AMF.UML.Loop_Nodes;
with AMF.UML.Manifestations.Collections;
with AMF.UML.Merge_Nodes;
with AMF.UML.Message_Ends;
with AMF.UML.Message_Occurrence_Specifications;
with AMF.UML.Messages.Collections;
with AMF.UML.Models;
with AMF.UML.Multiplicity_Elements;
with AMF.UML.Named_Elements.Collections;
with AMF.UML.Namespaces;
with AMF.UML.Nodes.Collections;
with AMF.UML.Object_Flows;
with AMF.UML.Object_Nodes;
with AMF.UML.Observations.Collections;
with AMF.UML.Occurrence_Specifications;
with AMF.UML.Opaque_Actions;
with AMF.UML.Opaque_Behaviors;
with AMF.UML.Opaque_Expressions;
with AMF.UML.Operation_Template_Parameters;
with AMF.UML.Operations.Collections;
with AMF.UML.Output_Pins.Collections;
with AMF.UML.Package_Imports.Collections;
with AMF.UML.Package_Merges.Collections;
with AMF.UML.Packageable_Elements.Collections;
with AMF.UML.Packages.Collections;
with AMF.UML.Parameter_Sets.Collections;
with AMF.UML.Parameterable_Elements;
with AMF.UML.Parameters.Collections;
with AMF.UML.Part_Decompositions;
with AMF.UML.Ports.Collections;
with AMF.UML.Primitive_Types;
with AMF.UML.Profile_Applications.Collections;
with AMF.UML.Profiles;
with AMF.UML.Properties.Collections;
with AMF.UML.Protocol_Conformances.Collections;
with AMF.UML.Protocol_State_Machines;
with AMF.UML.Protocol_Transitions;
with AMF.UML.Pseudostates.Collections;
with AMF.UML.Qualifier_Values.Collections;
with AMF.UML.Raise_Exception_Actions;
with AMF.UML.Read_Extent_Actions;
with AMF.UML.Read_Is_Classified_Object_Actions;
with AMF.UML.Read_Link_Actions;
with AMF.UML.Read_Link_Object_End_Actions;
with AMF.UML.Read_Link_Object_End_Qualifier_Actions;
with AMF.UML.Read_Self_Actions;
with AMF.UML.Read_Structural_Feature_Actions;
with AMF.UML.Read_Variable_Actions;
with AMF.UML.Realizations;
with AMF.UML.Receptions.Collections;
with AMF.UML.Reclassify_Object_Actions;
with AMF.UML.Redefinable_Elements.Collections;
with AMF.UML.Redefinable_Template_Signatures.Collections;
with AMF.UML.Reduce_Actions;
with AMF.UML.Regions.Collections;
with AMF.UML.Relationships.Collections;
with AMF.UML.Remove_Structural_Feature_Value_Actions;
with AMF.UML.Remove_Variable_Value_Actions;
with AMF.UML.Reply_Actions;
with AMF.UML.Send_Object_Actions;
with AMF.UML.Send_Signal_Actions;
with AMF.UML.Sequence_Nodes;
with AMF.UML.Signal_Events;
with AMF.UML.Signals;
with AMF.UML.Slots.Collections;
with AMF.UML.Start_Classifier_Behavior_Actions;
with AMF.UML.Start_Object_Behavior_Actions;
with AMF.UML.State_Invariants;
with AMF.UML.State_Machines.Collections;
with AMF.UML.States.Collections;
with AMF.UML.Stereotypes.Collections;
with AMF.UML.String_Expressions.Collections;
with AMF.UML.Structural_Features;
with AMF.UML.Structured_Activity_Nodes.Collections;
with AMF.UML.Substitutions.Collections;
with AMF.UML.Template_Bindings.Collections;
with AMF.UML.Template_Parameter_Substitutions.Collections;
with AMF.UML.Template_Parameters.Collections;
with AMF.UML.Template_Signatures;
with AMF.UML.Templateable_Elements;
with AMF.UML.Test_Identity_Actions;
with AMF.UML.Time_Constraints;
with AMF.UML.Time_Events;
with AMF.UML.Time_Expressions;
with AMF.UML.Time_Intervals;
with AMF.UML.Time_Observations;
with AMF.UML.Transitions.Collections;
with AMF.UML.Triggers.Collections;
with AMF.UML.Types.Collections;
with AMF.UML.Unmarshall_Actions;
with AMF.UML.Usages;
with AMF.UML.Use_Cases.Collections;
with AMF.UML.Value_Pins;
with AMF.UML.Value_Specification_Actions;
with AMF.UML.Value_Specifications.Collections;
with AMF.UML.Variables.Collections;
with AMF.UML.Vertexs.Collections;
with AMF.UMLDI.Holders.UML_Association_Or_Connector_Or_Link_Shape_Kinds;
with AMF.UMLDI.Holders.UML_Interaction_Diagram_Kinds;
with AMF.UMLDI.Holders.UML_Interaction_Table_Label_Kinds;
with AMF.UMLDI.Holders.UML_Navigability_Notation_Kinds;
with AMF.UMLDI.UML_Activity_Diagrams;
with AMF.UMLDI.UML_Association_End_Labels;
with AMF.UMLDI.UML_Association_Or_Connector_Or_Link_Shapes;
with AMF.UMLDI.UML_Class_Diagrams;
with AMF.UMLDI.UML_Classifier_Shapes;
with AMF.UMLDI.UML_Compartmentable_Shapes;
with AMF.UMLDI.UML_Compartments.Collections;
with AMF.UMLDI.UML_Component_Diagrams;
with AMF.UMLDI.UML_Composite_Structure_Diagrams;
with AMF.UMLDI.UML_Deployment_Diagrams;
with AMF.UMLDI.UML_Diagram_Elements.Collections;
with AMF.UMLDI.UML_Edges;
with AMF.UMLDI.UML_Interaction_Diagrams;
with AMF.UMLDI.UML_Interaction_Table_Labels;
with AMF.UMLDI.UML_Keyword_Labels;
with AMF.UMLDI.UML_Labels;
with AMF.UMLDI.UML_Multiplicity_Labels;
with AMF.UMLDI.UML_Name_Labels;
with AMF.UMLDI.UML_Object_Diagrams;
with AMF.UMLDI.UML_Package_Diagrams;
with AMF.UMLDI.UML_Profile_Diagrams;
with AMF.UMLDI.UML_Redefines_Labels;
with AMF.UMLDI.UML_Shapes;
with AMF.UMLDI.UML_State_Machine_Diagrams;
with AMF.UMLDI.UML_State_Shapes;
with AMF.UMLDI.UML_Stereotype_Property_Value_Labels;
with AMF.UMLDI.UML_Styles;
with AMF.UMLDI.UML_Typed_Element_Labels;
with AMF.UMLDI.UML_Use_Case_Diagrams;
with League.Holders.Booleans;
with League.Holders.Integers;

package body AMF.Internals.Tables.UML_Reflection is

   ---------
   -- Get --
   ---------

   function Get
    (Self     : AMF.Internals.AMF_Element;
     Property : CMOF_Element) return League.Holders.Holder
   is

      function Standard_Profile_L2_Auxiliary_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Auxiliary class.

      function Standard_Profile_L2_Call_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Call class.

      function Standard_Profile_L2_Create_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Create class.

      function Standard_Profile_L2_Derive_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Derive class.

      function Standard_Profile_L2_Destroy_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Destroy class.

      function Standard_Profile_L2_Document_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Document class.

      function Standard_Profile_L2_Entity_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Entity class.

      function Standard_Profile_L2_Executable_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Executable class.

      function Standard_Profile_L2_Focus_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Focus class.

      function Standard_Profile_L2_Framework_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Framework class.

      function Standard_Profile_L2_Implement_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Implement class.

      function Standard_Profile_L2_Implementation_Class_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ImplementationClass class.

      function Standard_Profile_L2_Instantiate_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Instantiate class.

      function Standard_Profile_L2_Library_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Library class.

      function Standard_Profile_L2_Metaclass_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Metaclass class.

      function Standard_Profile_L2_Model_Library_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ModelLibrary class.

      function Standard_Profile_L2_Process_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Process class.

      function Standard_Profile_L2_Realization_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Realization class.

      function Standard_Profile_L2_Refine_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Refine class.

      function Standard_Profile_L2_Responsibility_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Responsibility class.

      function Standard_Profile_L2_Script_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Script class.

      function Standard_Profile_L2_Send_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Send class.

      function Standard_Profile_L2_Service_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Service class.

      function Standard_Profile_L2_Source_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Source class.

      function Standard_Profile_L2_Specification_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Specification class.

      function Standard_Profile_L2_Subsystem_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Subsystem class.

      function Standard_Profile_L2_Trace_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Trace class.

      function Standard_Profile_L2_Type_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Type class.

      function Standard_Profile_L2_Utility_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Utility class.

      function Standard_Profile_L3_Build_Component_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of BuildComponent class.

      function Standard_Profile_L3_Metamodel_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Metamodel class.

      function Standard_Profile_L3_System_Model_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of SystemModel class.

      function UML_Abstraction_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Abstraction class.

      function UML_Accept_Call_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of AcceptCallAction class.

      function UML_Accept_Event_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of AcceptEventAction class.

      function UML_Action_Execution_Specification_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ActionExecutionSpecification class.

      function UML_Action_Input_Pin_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ActionInputPin class.

      function UML_Activity_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Activity class.

      function UML_Activity_Final_Node_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ActivityFinalNode class.

      function UML_Activity_Parameter_Node_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ActivityParameterNode class.

      function UML_Activity_Partition_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ActivityPartition class.

      function UML_Actor_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Actor class.

      function UML_Add_Structural_Feature_Value_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of AddStructuralFeatureValueAction class.

      function UML_Add_Variable_Value_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of AddVariableValueAction class.

      function UML_Any_Receive_Event_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of AnyReceiveEvent class.

      function UML_Artifact_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Artifact class.

      function UML_Association_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Association class.

      function UML_Association_Class_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of AssociationClass class.

      function UML_Behavior_Execution_Specification_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of BehaviorExecutionSpecification class.

      function UML_Broadcast_Signal_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of BroadcastSignalAction class.

      function UML_Call_Behavior_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of CallBehaviorAction class.

      function UML_Call_Event_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of CallEvent class.

      function UML_Call_Operation_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of CallOperationAction class.

      function UML_Central_Buffer_Node_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of CentralBufferNode class.

      function UML_Change_Event_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ChangeEvent class.

      function UML_Class_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Class class.

      function UML_Classifier_Template_Parameter_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ClassifierTemplateParameter class.

      function UML_Clause_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Clause class.

      function UML_Clear_Association_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ClearAssociationAction class.

      function UML_Clear_Structural_Feature_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ClearStructuralFeatureAction class.

      function UML_Clear_Variable_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ClearVariableAction class.

      function UML_Collaboration_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Collaboration class.

      function UML_Collaboration_Use_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of CollaborationUse class.

      function UML_Combined_Fragment_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of CombinedFragment class.

      function UML_Comment_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Comment class.

      function UML_Communication_Path_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of CommunicationPath class.

      function UML_Component_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Component class.

      function UML_Component_Realization_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ComponentRealization class.

      function UML_Conditional_Node_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ConditionalNode class.

      function UML_Connectable_Element_Template_Parameter_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ConnectableElementTemplateParameter class.

      function UML_Connection_Point_Reference_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ConnectionPointReference class.

      function UML_Connector_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Connector class.

      function UML_Connector_End_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ConnectorEnd class.

      function UML_Consider_Ignore_Fragment_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ConsiderIgnoreFragment class.

      function UML_Constraint_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Constraint class.

      function UML_Continuation_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Continuation class.

      function UML_Control_Flow_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ControlFlow class.

      function UML_Create_Link_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of CreateLinkAction class.

      function UML_Create_Link_Object_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of CreateLinkObjectAction class.

      function UML_Create_Object_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of CreateObjectAction class.

      function UMLDI_UML_Activity_Diagram_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of UMLActivityDiagram class.

      function UMLDI_UML_Association_End_Label_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of UMLAssociationEndLabel class.

      function UMLDI_UML_Association_Or_Connector_Or_Link_Shape_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of UMLAssociationOrConnectorOrLinkShape class.

      function UMLDI_UML_Class_Diagram_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of UMLClassDiagram class.

      function UMLDI_UML_Classifier_Shape_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of UMLClassifierShape class.

      function UMLDI_UML_Compartment_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of UMLCompartment class.

      function UMLDI_UML_Compartmentable_Shape_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of UMLCompartmentableShape class.

      function UMLDI_UML_Component_Diagram_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of UMLComponentDiagram class.

      function UMLDI_UML_Composite_Structure_Diagram_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of UMLCompositeStructureDiagram class.

      function UMLDI_UML_Deployment_Diagram_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of UMLDeploymentDiagram class.

      function UMLDI_UML_Edge_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of UMLEdge class.

      function UMLDI_UML_Interaction_Diagram_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of UMLInteractionDiagram class.

      function UMLDI_UML_Interaction_Table_Label_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of UMLInteractionTableLabel class.

      function UMLDI_UML_Keyword_Label_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of UMLKeywordLabel class.

      function UMLDI_UML_Label_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of UMLLabel class.

      function UMLDI_UML_Multiplicity_Label_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of UMLMultiplicityLabel class.

      function UMLDI_UML_Name_Label_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of UMLNameLabel class.

      function UMLDI_UML_Object_Diagram_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of UMLObjectDiagram class.

      function UMLDI_UML_Package_Diagram_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of UMLPackageDiagram class.

      function UMLDI_UML_Profile_Diagram_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of UMLProfileDiagram class.

      function UMLDI_UML_Redefines_Label_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of UMLRedefinesLabel class.

      function UMLDI_UML_Shape_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of UMLShape class.

      function UMLDI_UML_State_Machine_Diagram_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of UMLStateMachineDiagram class.

      function UMLDI_UML_State_Shape_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of UMLStateShape class.

      function UMLDI_UML_Stereotype_Property_Value_Label_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of UMLStereotypePropertyValueLabel class.

      function UMLDI_UML_Style_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of UMLStyle class.

      function UMLDI_UML_Typed_Element_Label_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of UMLTypedElementLabel class.

      function UMLDI_UML_Use_Case_Diagram_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of UMLUseCaseDiagram class.

      function UML_Data_Store_Node_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of DataStoreNode class.

      function UML_Data_Type_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of DataType class.

      function UML_Decision_Node_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of DecisionNode class.

      function UML_Dependency_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Dependency class.

      function UML_Deployment_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Deployment class.

      function UML_Deployment_Specification_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of DeploymentSpecification class.

      function UML_Destroy_Link_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of DestroyLinkAction class.

      function UML_Destroy_Object_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of DestroyObjectAction class.

      function UML_Destruction_Occurrence_Specification_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of DestructionOccurrenceSpecification class.

      function UML_Device_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Device class.

      function UML_Duration_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Duration class.

      function UML_Duration_Constraint_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of DurationConstraint class.

      function UML_Duration_Interval_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of DurationInterval class.

      function UML_Duration_Observation_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of DurationObservation class.

      function UML_Element_Import_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ElementImport class.

      function UML_Enumeration_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Enumeration class.

      function UML_Enumeration_Literal_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of EnumerationLiteral class.

      function UML_Exception_Handler_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ExceptionHandler class.

      function UML_Execution_Environment_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ExecutionEnvironment class.

      function UML_Execution_Occurrence_Specification_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ExecutionOccurrenceSpecification class.

      function UML_Expansion_Node_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ExpansionNode class.

      function UML_Expansion_Region_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ExpansionRegion class.

      function UML_Expression_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Expression class.

      function UML_Extend_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Extend class.

      function UML_Extension_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Extension class.

      function UML_Extension_End_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ExtensionEnd class.

      function UML_Extension_Point_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ExtensionPoint class.

      function UML_Final_State_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of FinalState class.

      function UML_Flow_Final_Node_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of FlowFinalNode class.

      function UML_Fork_Node_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ForkNode class.

      function UML_Function_Behavior_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of FunctionBehavior class.

      function UML_Gate_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Gate class.

      function UML_General_Ordering_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of GeneralOrdering class.

      function UML_Generalization_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Generalization class.

      function UML_Generalization_Set_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of GeneralizationSet class.

      function UML_Image_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Image class.

      function UML_Include_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Include class.

      function UML_Information_Flow_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of InformationFlow class.

      function UML_Information_Item_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of InformationItem class.

      function UML_Initial_Node_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of InitialNode class.

      function UML_Input_Pin_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of InputPin class.

      function UML_Instance_Specification_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of InstanceSpecification class.

      function UML_Instance_Value_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of InstanceValue class.

      function UML_Interaction_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Interaction class.

      function UML_Interaction_Constraint_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of InteractionConstraint class.

      function UML_Interaction_Operand_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of InteractionOperand class.

      function UML_Interaction_Use_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of InteractionUse class.

      function UML_Interface_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Interface class.

      function UML_Interface_Realization_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of InterfaceRealization class.

      function UML_Interruptible_Activity_Region_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of InterruptibleActivityRegion class.

      function UML_Interval_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Interval class.

      function UML_Interval_Constraint_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of IntervalConstraint class.

      function UML_Join_Node_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of JoinNode class.

      function UML_Lifeline_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Lifeline class.

      function UML_Link_End_Creation_Data_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of LinkEndCreationData class.

      function UML_Link_End_Data_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of LinkEndData class.

      function UML_Link_End_Destruction_Data_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of LinkEndDestructionData class.

      function UML_Literal_Boolean_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of LiteralBoolean class.

      function UML_Literal_Integer_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of LiteralInteger class.

      function UML_Literal_Null_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of LiteralNull class.

      function UML_Literal_Real_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of LiteralReal class.

      function UML_Literal_String_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of LiteralString class.

      function UML_Literal_Unlimited_Natural_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of LiteralUnlimitedNatural class.

      function UML_Loop_Node_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of LoopNode class.

      function UML_Manifestation_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Manifestation class.

      function UML_Merge_Node_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of MergeNode class.

      function UML_Message_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Message class.

      function UML_Message_Occurrence_Specification_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of MessageOccurrenceSpecification class.

      function UML_Model_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Model class.

      function UML_Node_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Node class.

      function UML_Object_Flow_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ObjectFlow class.

      function UML_Occurrence_Specification_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of OccurrenceSpecification class.

      function UML_Opaque_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of OpaqueAction class.

      function UML_Opaque_Behavior_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of OpaqueBehavior class.

      function UML_Opaque_Expression_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of OpaqueExpression class.

      function UML_Operation_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Operation class.

      function UML_Operation_Template_Parameter_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of OperationTemplateParameter class.

      function UML_Output_Pin_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of OutputPin class.

      function UML_Package_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Package class.

      function UML_Package_Import_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of PackageImport class.

      function UML_Package_Merge_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of PackageMerge class.

      function UML_Parameter_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Parameter class.

      function UML_Parameter_Set_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ParameterSet class.

      function UML_Part_Decomposition_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of PartDecomposition class.

      function UML_Port_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Port class.

      function UML_Primitive_Type_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of PrimitiveType class.

      function UML_Profile_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Profile class.

      function UML_Profile_Application_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ProfileApplication class.

      function UML_Property_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Property class.

      function UML_Protocol_Conformance_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ProtocolConformance class.

      function UML_Protocol_State_Machine_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ProtocolStateMachine class.

      function UML_Protocol_Transition_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ProtocolTransition class.

      function UML_Pseudostate_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Pseudostate class.

      function UML_Qualifier_Value_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of QualifierValue class.

      function UML_Raise_Exception_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of RaiseExceptionAction class.

      function UML_Read_Extent_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ReadExtentAction class.

      function UML_Read_Is_Classified_Object_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ReadIsClassifiedObjectAction class.

      function UML_Read_Link_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ReadLinkAction class.

      function UML_Read_Link_Object_End_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ReadLinkObjectEndAction class.

      function UML_Read_Link_Object_End_Qualifier_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ReadLinkObjectEndQualifierAction class.

      function UML_Read_Self_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ReadSelfAction class.

      function UML_Read_Structural_Feature_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ReadStructuralFeatureAction class.

      function UML_Read_Variable_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ReadVariableAction class.

      function UML_Realization_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Realization class.

      function UML_Reception_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Reception class.

      function UML_Reclassify_Object_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ReclassifyObjectAction class.

      function UML_Redefinable_Template_Signature_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of RedefinableTemplateSignature class.

      function UML_Reduce_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ReduceAction class.

      function UML_Region_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Region class.

      function UML_Remove_Structural_Feature_Value_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of RemoveStructuralFeatureValueAction class.

      function UML_Remove_Variable_Value_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of RemoveVariableValueAction class.

      function UML_Reply_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ReplyAction class.

      function UML_Send_Object_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of SendObjectAction class.

      function UML_Send_Signal_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of SendSignalAction class.

      function UML_Sequence_Node_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of SequenceNode class.

      function UML_Signal_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Signal class.

      function UML_Signal_Event_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of SignalEvent class.

      function UML_Slot_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Slot class.

      function UML_Start_Classifier_Behavior_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of StartClassifierBehaviorAction class.

      function UML_Start_Object_Behavior_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of StartObjectBehaviorAction class.

      function UML_State_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of State class.

      function UML_State_Invariant_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of StateInvariant class.

      function UML_State_Machine_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of StateMachine class.

      function UML_Stereotype_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Stereotype class.

      function UML_String_Expression_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of StringExpression class.

      function UML_Structured_Activity_Node_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of StructuredActivityNode class.

      function UML_Substitution_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Substitution class.

      function UML_Template_Binding_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of TemplateBinding class.

      function UML_Template_Parameter_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of TemplateParameter class.

      function UML_Template_Parameter_Substitution_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of TemplateParameterSubstitution class.

      function UML_Template_Signature_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of TemplateSignature class.

      function UML_Test_Identity_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of TestIdentityAction class.

      function UML_Time_Constraint_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of TimeConstraint class.

      function UML_Time_Event_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of TimeEvent class.

      function UML_Time_Expression_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of TimeExpression class.

      function UML_Time_Interval_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of TimeInterval class.

      function UML_Time_Observation_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of TimeObservation class.

      function UML_Transition_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Transition class.

      function UML_Trigger_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Trigger class.

      function UML_Unmarshall_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of UnmarshallAction class.

      function UML_Usage_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Usage class.

      function UML_Use_Case_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of UseCase class.

      function UML_Value_Pin_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ValuePin class.

      function UML_Value_Specification_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ValueSpecificationAction class.

      function UML_Variable_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Variable class.

      ---------------------------------------
      -- Standard_Profile_L2_Auxiliary_Get --
      ---------------------------------------

      function Standard_Profile_L2_Auxiliary_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Auxiliary_Base_Class_A_Extension_Auxiliary then
            --  Auxiliary::base_Class : Class

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classes.UML_Class_Access'
                 (AMF.Standard_Profile_L2.Auxiliaries.Standard_Profile_L2_Auxiliary_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Base_Class));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Auxiliary_Get;

      ----------------------------------
      -- Standard_Profile_L2_Call_Get --
      ----------------------------------

      function Standard_Profile_L2_Call_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Call_Base_Usage_A_Extension_Call then
            --  Call::base_Usage : Usage

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Usages.UML_Usage_Access'
                 (AMF.Standard_Profile_L2.Calls.Standard_Profile_L2_Call_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Base_Usage));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Call_Get;

      ------------------------------------
      -- Standard_Profile_L2_Create_Get --
      ------------------------------------

      function Standard_Profile_L2_Create_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Create_Base_Behavioral_Feature_A_Extension_Create then
            --  Create::base_BehavioralFeature : BehavioralFeature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behavioral_Features.UML_Behavioral_Feature_Access'
                 (AMF.Standard_Profile_L2.Creates.Standard_Profile_L2_Create_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Base_Behavioral_Feature));

         elsif Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Create_Base_Usage_A_Extension_Create then
            --  Create::base_Usage : Usage

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Usages.UML_Usage_Access'
                 (AMF.Standard_Profile_L2.Creates.Standard_Profile_L2_Create_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Base_Usage));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Create_Get;

      ------------------------------------
      -- Standard_Profile_L2_Derive_Get --
      ------------------------------------

      function Standard_Profile_L2_Derive_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Derive_Base_Abstraction_A_Extension_Derive then
            --  Derive::base_Abstraction : Abstraction

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Abstractions.UML_Abstraction_Access'
                 (AMF.Standard_Profile_L2.Derives.Standard_Profile_L2_Derive_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Base_Abstraction));

         elsif Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Derive_Computation_A_Extension_Derive then
            --  Derive::computation : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.Standard_Profile_L2.Derives.Standard_Profile_L2_Derive_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Computation));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Derive_Get;

      -------------------------------------
      -- Standard_Profile_L2_Destroy_Get --
      -------------------------------------

      function Standard_Profile_L2_Destroy_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Destroy_Base_Behavioral_Feature_A_Extension_Destroy then
            --  Destroy::base_BehavioralFeature : BehavioralFeature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behavioral_Features.UML_Behavioral_Feature_Access'
                 (AMF.Standard_Profile_L2.Destroies.Standard_Profile_L2_Destroy_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Base_Behavioral_Feature));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Destroy_Get;

      --------------------------------------
      -- Standard_Profile_L2_Document_Get --
      --------------------------------------

      function Standard_Profile_L2_Document_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Document_Base_Artifact_A_Extension_Document then
            --  Document::base_Artifact : Artifact

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access'
                 (AMF.Standard_Profile_L2.Documents.Standard_Profile_L2_Document_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Base_Artifact));

         elsif Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_File_Base_Artifact_A_Extension_File then
            --  File::base_Artifact : Artifact

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access'
                 (AMF.Standard_Profile_L2.Documents.Standard_Profile_L2_Document_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Base_Artifact));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Document_Get;

      ------------------------------------
      -- Standard_Profile_L2_Entity_Get --
      ------------------------------------

      function Standard_Profile_L2_Entity_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Entity_Base_Component_A_Extension_Entity then
            --  Entity::base_Component : Component

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Components.UML_Component_Access'
                 (AMF.Standard_Profile_L2.Entities.Standard_Profile_L2_Entity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Base_Component));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Entity_Get;

      ----------------------------------------
      -- Standard_Profile_L2_Executable_Get --
      ----------------------------------------

      function Standard_Profile_L2_Executable_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Executable_Base_Artifact_A_Extension_Executable then
            --  Executable::base_Artifact : Artifact

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access'
                 (AMF.Standard_Profile_L2.Executables.Standard_Profile_L2_Executable_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Base_Artifact));

         elsif Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_File_Base_Artifact_A_Extension_File then
            --  File::base_Artifact : Artifact

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access'
                 (AMF.Standard_Profile_L2.Executables.Standard_Profile_L2_Executable_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Base_Artifact));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Executable_Get;

      -----------------------------------
      -- Standard_Profile_L2_Focus_Get --
      -----------------------------------

      function Standard_Profile_L2_Focus_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Focus_Base_Class_A_Extension_Focus then
            --  Focus::base_Class : Class

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classes.UML_Class_Access'
                 (AMF.Standard_Profile_L2.Focuses.Standard_Profile_L2_Focus_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Base_Class));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Focus_Get;

      ---------------------------------------
      -- Standard_Profile_L2_Framework_Get --
      ---------------------------------------

      function Standard_Profile_L2_Framework_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Framework_Base_Package_A_Extension_Framework then
            --  Framework::base_Package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.Standard_Profile_L2.Frameworks.Standard_Profile_L2_Framework_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Base_Package));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Framework_Get;

      ---------------------------------------
      -- Standard_Profile_L2_Implement_Get --
      ---------------------------------------

      function Standard_Profile_L2_Implement_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Implement_Base_Component_A_Extension_Implement then
            --  Implement::base_Component : Component

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Components.UML_Component_Access'
                 (AMF.Standard_Profile_L2.Implements.Standard_Profile_L2_Implement_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Base_Component));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Implement_Get;

      --------------------------------------------------
      -- Standard_Profile_L2_Implementation_Class_Get --
      --------------------------------------------------

      function Standard_Profile_L2_Implementation_Class_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Implementation_Class_Base_Class_A_Extension_Implementation_Class then
            --  ImplementationClass::base_Class : Class

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classes.UML_Class_Access'
                 (AMF.Standard_Profile_L2.Implementation_Classes.Standard_Profile_L2_Implementation_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Base_Class));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Implementation_Class_Get;

      -----------------------------------------
      -- Standard_Profile_L2_Instantiate_Get --
      -----------------------------------------

      function Standard_Profile_L2_Instantiate_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Instantiate_Base_Usage_A_Extension_Instantiate then
            --  Instantiate::base_Usage : Usage

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Usages.UML_Usage_Access'
                 (AMF.Standard_Profile_L2.Instantiates.Standard_Profile_L2_Instantiate_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Base_Usage));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Instantiate_Get;

      -------------------------------------
      -- Standard_Profile_L2_Library_Get --
      -------------------------------------

      function Standard_Profile_L2_Library_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_File_Base_Artifact_A_Extension_File then
            --  File::base_Artifact : Artifact

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access'
                 (AMF.Standard_Profile_L2.Libraries.Standard_Profile_L2_Library_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Base_Artifact));

         elsif Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Library_Base_Artifact_A_Extension_Library then
            --  Library::base_Artifact : Artifact

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access'
                 (AMF.Standard_Profile_L2.Libraries.Standard_Profile_L2_Library_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Base_Artifact));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Library_Get;

      ---------------------------------------
      -- Standard_Profile_L2_Metaclass_Get --
      ---------------------------------------

      function Standard_Profile_L2_Metaclass_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Metaclass_Base_Class_A_Extension_Metaclass then
            --  Metaclass::base_Class : Class

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classes.UML_Class_Access'
                 (AMF.Standard_Profile_L2.Metaclasses.Standard_Profile_L2_Metaclass_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Base_Class));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Metaclass_Get;

      -------------------------------------------
      -- Standard_Profile_L2_Model_Library_Get --
      -------------------------------------------

      function Standard_Profile_L2_Model_Library_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Model_Library_Base_Package_A_Extension_Model_Library then
            --  ModelLibrary::base_Package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.Standard_Profile_L2.Model_Libraries.Standard_Profile_L2_Model_Library_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Base_Package));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Model_Library_Get;

      -------------------------------------
      -- Standard_Profile_L2_Process_Get --
      -------------------------------------

      function Standard_Profile_L2_Process_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Process_Base_Component_A_Extension_Process then
            --  Process::base_Component : Component

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Components.UML_Component_Access'
                 (AMF.Standard_Profile_L2.Processes.Standard_Profile_L2_Process_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Base_Component));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Process_Get;

      -----------------------------------------
      -- Standard_Profile_L2_Realization_Get --
      -----------------------------------------

      function Standard_Profile_L2_Realization_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Realization_Base_Classifier_A_Extension_Realization then
            --  Realization::base_Classifier : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.Standard_Profile_L2.Realizations.Standard_Profile_L2_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Base_Classifier));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Realization_Get;

      ------------------------------------
      -- Standard_Profile_L2_Refine_Get --
      ------------------------------------

      function Standard_Profile_L2_Refine_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Refine_Base_Abstraction_A_Extension_Refine then
            --  Refine::base_Abstraction : Abstraction

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Abstractions.UML_Abstraction_Access'
                 (AMF.Standard_Profile_L2.Refines.Standard_Profile_L2_Refine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Base_Abstraction));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Refine_Get;

      --------------------------------------------
      -- Standard_Profile_L2_Responsibility_Get --
      --------------------------------------------

      function Standard_Profile_L2_Responsibility_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Responsibility_Base_Usage_A_Extension_Responsibility then
            --  Responsibility::base_Usage : Usage

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Usages.UML_Usage_Access'
                 (AMF.Standard_Profile_L2.Responsibilities.Standard_Profile_L2_Responsibility_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Base_Usage));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Responsibility_Get;

      ------------------------------------
      -- Standard_Profile_L2_Script_Get --
      ------------------------------------

      function Standard_Profile_L2_Script_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_File_Base_Artifact_A_Extension_File then
            --  File::base_Artifact : Artifact

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access'
                 (AMF.Standard_Profile_L2.Scripts.Standard_Profile_L2_Script_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Base_Artifact));

         elsif Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Script_Base_Artifact_A_Extension_Script then
            --  Script::base_Artifact : Artifact

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access'
                 (AMF.Standard_Profile_L2.Scripts.Standard_Profile_L2_Script_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Base_Artifact));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Script_Get;

      ----------------------------------
      -- Standard_Profile_L2_Send_Get --
      ----------------------------------

      function Standard_Profile_L2_Send_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Send_Base_Usage_A_Extension_Send then
            --  Send::base_Usage : Usage

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Usages.UML_Usage_Access'
                 (AMF.Standard_Profile_L2.Sends.Standard_Profile_L2_Send_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Base_Usage));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Send_Get;

      -------------------------------------
      -- Standard_Profile_L2_Service_Get --
      -------------------------------------

      function Standard_Profile_L2_Service_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Service_Base_Component_A_Extension_Service then
            --  Service::base_Component : Component

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Components.UML_Component_Access'
                 (AMF.Standard_Profile_L2.Services.Standard_Profile_L2_Service_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Base_Component));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Service_Get;

      ------------------------------------
      -- Standard_Profile_L2_Source_Get --
      ------------------------------------

      function Standard_Profile_L2_Source_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_File_Base_Artifact_A_Extension_File then
            --  File::base_Artifact : Artifact

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access'
                 (AMF.Standard_Profile_L2.Sources.Standard_Profile_L2_Source_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Base_Artifact));

         elsif Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Source_Base_Artifact_A_Extension_Source then
            --  Source::base_Artifact : Artifact

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access'
                 (AMF.Standard_Profile_L2.Sources.Standard_Profile_L2_Source_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Base_Artifact));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Source_Get;

      -------------------------------------------
      -- Standard_Profile_L2_Specification_Get --
      -------------------------------------------

      function Standard_Profile_L2_Specification_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Specification_Base_Classifier_A_Extension_Specification then
            --  Specification::base_Classifier : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.Standard_Profile_L2.Specifications.Standard_Profile_L2_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Base_Classifier));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Specification_Get;

      ---------------------------------------
      -- Standard_Profile_L2_Subsystem_Get --
      ---------------------------------------

      function Standard_Profile_L2_Subsystem_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Subsystem_Base_Component_A_Extension_Subsystem then
            --  Subsystem::base_Component : Component

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Components.UML_Component_Access'
                 (AMF.Standard_Profile_L2.Subsystems.Standard_Profile_L2_Subsystem_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Base_Component));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Subsystem_Get;

      -----------------------------------
      -- Standard_Profile_L2_Trace_Get --
      -----------------------------------

      function Standard_Profile_L2_Trace_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Trace_Base_Abstraction_A_Extension_Trace then
            --  Trace::base_Abstraction : Abstraction

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Abstractions.UML_Abstraction_Access'
                 (AMF.Standard_Profile_L2.Traces.Standard_Profile_L2_Trace_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Base_Abstraction));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Trace_Get;

      ----------------------------------
      -- Standard_Profile_L2_Type_Get --
      ----------------------------------

      function Standard_Profile_L2_Type_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Type_Base_Class_A_Extension_Type then
            --  Type::base_Class : Class

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classes.UML_Class_Access'
                 (AMF.Standard_Profile_L2.Types.Standard_Profile_L2_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Base_Class));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Type_Get;

      -------------------------------------
      -- Standard_Profile_L2_Utility_Get --
      -------------------------------------

      function Standard_Profile_L2_Utility_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Utility_Base_Class_A_Extension_Utility then
            --  Utility::base_Class : Class

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classes.UML_Class_Access'
                 (AMF.Standard_Profile_L2.Utilities.Standard_Profile_L2_Utility_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Base_Class));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Utility_Get;

      ---------------------------------------------
      -- Standard_Profile_L3_Build_Component_Get --
      ---------------------------------------------

      function Standard_Profile_L3_Build_Component_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L3_Metamodel.MP_Standard_Profile_L3_Build_Component_Base_Component_A_Extension_Build_Component then
            --  BuildComponent::base_Component : Component

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Components.UML_Component_Access'
                 (AMF.Standard_Profile_L3.Build_Components.Standard_Profile_L3_Build_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Base_Component));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L3_Build_Component_Get;

      ---------------------------------------
      -- Standard_Profile_L3_Metamodel_Get --
      ---------------------------------------

      function Standard_Profile_L3_Metamodel_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L3_Metamodel.MP_Standard_Profile_L3_Metamodel_Base_Model_A_Extension_Metamodel then
            --  Metamodel::base_Model : Model

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Models.UML_Model_Access'
                 (AMF.Standard_Profile_L3.Metamodels.Standard_Profile_L3_Metamodel_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Base_Model));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L3_Metamodel_Get;

      ------------------------------------------
      -- Standard_Profile_L3_System_Model_Get --
      ------------------------------------------

      function Standard_Profile_L3_System_Model_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L3_Metamodel.MP_Standard_Profile_L3_System_Model_Base_Model_A_Extension_System_Model then
            --  SystemModel::base_Model : Model

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Models.UML_Model_Access'
                 (AMF.Standard_Profile_L3.System_Models.Standard_Profile_L3_System_Model_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Base_Model));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L3_System_Model_Get;

      -------------------------
      -- UML_Abstraction_Get --
      -------------------------

      function UML_Abstraction_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Dependency_Client_Named_Element_Client_Dependency then
            --  Dependency::client : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Abstractions.UML_Abstraction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Abstractions.UML_Abstraction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Abstraction_Mapping_A_Abstraction then
            --  Abstraction::mapping : OpaqueExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access'
                 (AMF.UML.Abstractions.UML_Abstraction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Mapping));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Abstractions.UML_Abstraction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Abstractions.UML_Abstraction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Abstractions.UML_Abstraction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Abstractions.UML_Abstraction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Abstractions.UML_Abstraction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Abstractions.UML_Abstraction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Abstractions.UML_Abstraction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Abstractions.UML_Abstraction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Relationship_Related_Element_A_Relationship then
            --  Relationship::relatedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Abstractions.UML_Abstraction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Directed_Relationship_Source_A_Directed_Relationship then
            --  DirectedRelationship::source : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Abstractions.UML_Abstraction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Source);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Dependency_Supplier_A_Supplier_Dependency then
            --  Dependency::supplier : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Abstractions.UML_Abstraction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Supplier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Directed_Relationship_Target_A_Directed_Relationship then
            --  DirectedRelationship::target : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Abstractions.UML_Abstraction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Target);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Abstractions.UML_Abstraction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Abstractions.UML_Abstraction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Abstractions.UML_Abstraction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Abstraction_Get;

      --------------------------------
      -- UML_Accept_Call_Action_Get --
      --------------------------------

      function UML_Accept_Call_Action_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Accept_Event_Action_Is_Unmarshall then
            --  AcceptEventAction::isUnmarshall : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Unmarshall);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Accept_Event_Action_Result_A_Accept_Event_Action then
            --  AcceptEventAction::result : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Result);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Accept_Call_Action_Return_Information_A_Accept_Call_Action then
            --  AcceptCallAction::returnInformation : OutputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access'
                 (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Return_Information));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Accept_Event_Action_Trigger_A_Accept_Event_Action then
            --  AcceptEventAction::trigger : Trigger

            return
              AMF.UML.Triggers.Collections.UML_Trigger_Collections.Internals.To_Holder
               (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Trigger);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Accept_Call_Action_Get;

      ---------------------------------
      -- UML_Accept_Event_Action_Get --
      ---------------------------------

      function UML_Accept_Event_Action_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Accept_Event_Action_Is_Unmarshall then
            --  AcceptEventAction::isUnmarshall : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Unmarshall);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Accept_Event_Action_Result_A_Accept_Event_Action then
            --  AcceptEventAction::result : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Result);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Accept_Event_Action_Trigger_A_Accept_Event_Action then
            --  AcceptEventAction::trigger : Trigger

            return
              AMF.UML.Triggers.Collections.UML_Trigger_Collections.Internals.To_Holder
               (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Trigger);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Accept_Event_Action_Get;

      --------------------------------------------
      -- UML_Action_Execution_Specification_Get --
      --------------------------------------------

      function UML_Action_Execution_Specification_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Execution_Specification_Action_A_Action_Execution_Specification then
            --  ActionExecutionSpecification::action : Action

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Actions.UML_Action_Access'
                 (AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Action));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Covered_Lifeline_Covered_By then
            --  InteractionFragment::covered : Lifeline

            return
              AMF.UML.Lifelines.Collections.UML_Lifeline_Collections.Internals.To_Holder
               (AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Covered);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Interaction_Interaction_Fragment then
            --  InteractionFragment::enclosingInteraction : Interaction

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access'
                 (AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Interaction));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Operand_Interaction_Operand_Fragment then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access'
                 (AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Operand));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Execution_Specification_Finish_A_Execution_Specification then
            --  ExecutionSpecification::finish : OccurrenceSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access'
                 (AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Finish));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_General_Ordering_A_Interaction_Fragment then
            --  InteractionFragment::generalOrdering : GeneralOrdering

            return
              AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internals.To_Holder
               (AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General_Ordering);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Execution_Specification_Start_A_Execution_Specification then
            --  ExecutionSpecification::start : OccurrenceSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access'
                 (AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Start));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Action_Execution_Specification_Get;

      ------------------------------
      -- UML_Action_Input_Pin_Get --
      ------------------------------

      function UML_Action_Input_Pin_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_Pin_From_Action_A_Action_Input_Pin then
            --  ActionInputPin::fromAction : Action

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Actions.UML_Action_Access'
                 (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_From_Action));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_In_State_A_Object_Node then
            --  ObjectNode::inState : State

            return
              AMF.UML.States.Collections.UML_State_Collections.Internals.To_Holder
               (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_State);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Pin_Is_Control then
            --  Pin::isControl : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Control);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Is_Control_Type then
            --  ObjectNode::isControlType : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Control_Type);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Is_Ordered then
            --  MultiplicityElement::isOrdered : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Ordered);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Is_Unique then
            --  MultiplicityElement::isUnique : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Unique);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Lower then
            --  MultiplicityElement::lower : Integer

            return
              AMF.Holders.To_Holder
               (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Lower);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Lower_Value_A_Owning_Lower then
            --  MultiplicityElement::lowerValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Lower_Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Ordering then
            --  ObjectNode::ordering : ObjectNodeOrderingKind

            return
              AMF.UML.Holders.Object_Node_Ordering_Kinds.To_Holder
               (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Ordering);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Selection_A_Object_Node then
            --  ObjectNode::selection : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Selection));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Upper then
            --  MultiplicityElement::upper : UnlimitedNatural

            return
              AMF.Holders.To_Holder
               (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Upper);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Upper_Bound_A_Object_Node then
            --  ObjectNode::upperBound : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Upper_Bound));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Upper_Value_A_Owning_Upper then
            --  MultiplicityElement::upperValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Upper_Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Action_Input_Pin_Get;

      ----------------------
      -- UML_Activity_Get --
      ----------------------

      function UML_Activity_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Attribute_A_Classifier then
            --  Classifier::attribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Classifier_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::classifierBehavior : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier_Behavior));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Collaboration_Use_A_Classifier then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Context_A_Behavior then
            --  Behavior::context : BehavioredClassifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviored_Classifiers.UML_Behaviored_Classifier_Access'
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Edge_Activity_Edge_Activity then
            --  Activity::edge : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Edge);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Extension_Extension_Metaclass then
            --  Class::extension : Extension

            return
              AMF.UML.Extensions.Collections.UML_Extension_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Extension);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Feature_Feature_Featuring_Classifier then
            --  Classifier::feature : Feature

            return
              AMF.UML.Features.Collections.UML_Feature_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Feature);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_General_A_Classifier then
            --  Classifier::general : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Generalization_Generalization_Specific then
            --  Classifier::generalization : Generalization

            return
              AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_Activity_Group_In_Activity then
            --  Activity::group : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Inherited_Member_A_Classifier then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Interface_Realization_Interface_Realization_Implementing_Classifier then
            --  BehavioredClassifier::interfaceRealization : InterfaceRealization

            return
              AMF.UML.Interface_Realizations.Collections.UML_Interface_Realization_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Interface_Realization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Active);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Is_Read_Only then
            --  Activity::isReadOnly : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Read_Only);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Is_Reentrant then
            --  Behavior::isReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Is_Single_Execution then
            --  Activity::isSingleExecution : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Single_Execution);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Nested_Classifier_A_Class then
            --  Class::nestedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Node_Activity then
            --  Activity::node : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Owned_Attribute_Property_Class then
            --  Class::ownedAttribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Owned_Attribute_A_Structured_Classifier then
            --  StructuredClassifier::ownedAttribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Owned_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::ownedBehavior : Behavior

            return
              AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Behavior);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Owned_Connector_A_Structured_Classifier then
            --  StructuredClassifier::ownedConnector : Connector

            return
              AMF.UML.Connectors.Collections.UML_Connector_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Connector);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Owned_Operation_Operation_Class then
            --  Class::ownedOperation : Operation

            return
              AMF.UML.Operations.Collections.UML_Operation_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Operation);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Owned_Parameter_A_Behavior then
            --  Behavior::ownedParameter : Parameter

            return
              AMF.UML.Parameters.Collections.UML_Parameter_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parameter);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Owned_Parameter_Set_A_Behavior then
            --  Behavior::ownedParameterSet : ParameterSet

            return
              AMF.UML.Parameter_Sets.Collections.UML_Parameter_Set_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parameter_Set);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Encapsulated_Classifier_Owned_Port_A_Encapsulated_Classifier then
            --  EncapsulatedClassifier::ownedPort : Port

            return
              AMF.UML.Ports.Collections.UML_Port_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Port);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Owned_Reception_A_Class then
            --  Class::ownedReception : Reception

            return
              AMF.UML.Receptions.Collections.UML_Reception_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Reception);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Use_Case_A_Classifier then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Part_A_Structured_Classifier then
            --  StructuredClassifier::part : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Part);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Partition_A_Activity then
            --  Activity::partition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Postcondition_A_Behavior then
            --  Behavior::postcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Powertype_Extent_Generalization_Set_Powertype then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Precondition_A_Behavior then
            --  Behavior::precondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Redefined_Behavior_A_Behavior then
            --  Behavior::redefinedBehavior : Behavior

            return
              AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Behavior);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Redefined_Classifier_A_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Role_A_Structured_Classifier then
            --  StructuredClassifier::role : ConnectableElement

            return
              AMF.UML.Connectable_Elements.Collections.UML_Connectable_Element_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Role);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Specification_Behavioral_Feature_Method then
            --  Behavior::specification : BehavioralFeature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behavioral_Features.UML_Behavioral_Feature_Access'
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Specification));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Structured_Node_Structured_Activity_Node_Activity then
            --  Activity::structuredNode : StructuredActivityNode

            return
              AMF.UML.Structured_Activity_Nodes.Collections.UML_Structured_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Structured_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Substitution_Substitution_Substituting_Classifier then
            --  Classifier::substitution : Substitution

            return
              AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Super_Class_A_Class then
            --  Class::superClass : Class

            return
              AMF.UML.Classes.Collections.UML_Class_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Class);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Template_Binding_Template_Binding_Bound_Element then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Use_Case_Use_Case_Subject then
            --  Classifier::useCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Variable_Variable_Activity_Scope then
            --  Activity::variable : Variable

            return
              AMF.UML.Variables.Collections.UML_Variable_Collections.Internals.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Variable);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Activity_Get;

      ---------------------------------
      -- UML_Activity_Final_Node_Get --
      ---------------------------------

      function UML_Activity_Final_Node_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Activity_Final_Node_Get;

      -------------------------------------
      -- UML_Activity_Parameter_Node_Get --
      -------------------------------------

      function UML_Activity_Parameter_Node_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_In_State_A_Object_Node then
            --  ObjectNode::inState : State

            return
              AMF.UML.States.Collections.UML_State_Collections.Internals.To_Holder
               (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_State);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Is_Control_Type then
            --  ObjectNode::isControlType : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Control_Type);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Ordering then
            --  ObjectNode::ordering : ObjectNodeOrderingKind

            return
              AMF.UML.Holders.Object_Node_Ordering_Kinds.To_Holder
               (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Ordering);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Parameter_Node_Parameter_A_Activity_Parameter_Node then
            --  ActivityParameterNode::parameter : Parameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Parameters.UML_Parameter_Access'
                 (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Selection_A_Object_Node then
            --  ObjectNode::selection : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Selection));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Upper_Bound_A_Object_Node then
            --  ObjectNode::upperBound : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Upper_Bound));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Activity_Parameter_Node_Get;

      --------------------------------
      -- UML_Activity_Partition_Get --
      --------------------------------

      function UML_Activity_Partition_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_Contained_Edge_Activity_Edge_In_Group then
            --  ActivityGroup::containedEdge : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Contained_Edge);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_Contained_Node_Activity_Node_In_Group then
            --  ActivityGroup::containedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Contained_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Partition_Edge_Activity_Edge_In_Partition then
            --  ActivityPartition::edge : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Edge);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_In_Activity_Activity_Group then
            --  ActivityGroup::inActivity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Partition_Is_Dimension then
            --  ActivityPartition::isDimension : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Dimension);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Partition_Is_External then
            --  ActivityPartition::isExternal : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_External);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Partition_Node_Activity_Node_In_Partition then
            --  ActivityPartition::node : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Partition_Represents_A_Activity_Partition then
            --  ActivityPartition::represents : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Represents));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_Subgroup_Activity_Group_Super_Group then
            --  ActivityGroup::subgroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Subgroup);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Partition_Subpartition_Activity_Partition_Super_Partition then
            --  ActivityPartition::subpartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Subpartition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_Super_Group_Activity_Group_Subgroup then
            --  ActivityGroup::superGroup : ActivityGroup

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activity_Groups.UML_Activity_Group_Access'
                 (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Group));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Partition_Super_Partition_Activity_Partition_Subpartition then
            --  ActivityPartition::superPartition : ActivityPartition

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access'
                 (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Partition));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Activity_Partition_Get;

      -------------------
      -- UML_Actor_Get --
      -------------------

      function UML_Actor_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Attribute_A_Classifier then
            --  Classifier::attribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Actors.UML_Actor_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Classifier_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::classifierBehavior : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier_Behavior));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Actors.UML_Actor_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Collaboration_Use_A_Classifier then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internals.To_Holder
               (AMF.UML.Actors.UML_Actor_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Actors.UML_Actor_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Feature_Feature_Featuring_Classifier then
            --  Classifier::feature : Feature

            return
              AMF.UML.Features.Collections.UML_Feature_Collections.Internals.To_Holder
               (AMF.UML.Actors.UML_Actor_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Feature);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_General_A_Classifier then
            --  Classifier::general : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Actors.UML_Actor_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Generalization_Generalization_Specific then
            --  Classifier::generalization : Generalization

            return
              AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internals.To_Holder
               (AMF.UML.Actors.UML_Actor_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Actors.UML_Actor_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Inherited_Member_A_Classifier then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Actors.UML_Actor_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Interface_Realization_Interface_Realization_Implementing_Classifier then
            --  BehavioredClassifier::interfaceRealization : InterfaceRealization

            return
              AMF.UML.Interface_Realizations.Collections.UML_Interface_Realization_Collections.Internals.To_Holder
               (AMF.UML.Actors.UML_Actor_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Interface_Realization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Actors.UML_Actor_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Actors.UML_Actor_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Actors.UML_Actor_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Actors.UML_Actor_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Actors.UML_Actor_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Owned_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::ownedBehavior : Behavior

            return
              AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internals.To_Holder
               (AMF.UML.Actors.UML_Actor_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Behavior);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Actors.UML_Actor_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Actors.UML_Actor_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Actors.UML_Actor_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Actors.UML_Actor_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Use_Case_A_Classifier then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Actors.UML_Actor_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Actors.UML_Actor_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Powertype_Extent_Generalization_Set_Powertype then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internals.To_Holder
               (AMF.UML.Actors.UML_Actor_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Actors.UML_Actor_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Redefined_Classifier_A_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Actors.UML_Actor_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Actors.UML_Actor_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Actors.UML_Actor_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Substitution_Substitution_Substituting_Classifier then
            --  Classifier::substitution : Substitution

            return
              AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internals.To_Holder
               (AMF.UML.Actors.UML_Actor_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Template_Binding_Template_Binding_Bound_Element then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internals.To_Holder
               (AMF.UML.Actors.UML_Actor_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Use_Case_Use_Case_Subject then
            --  Classifier::useCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Actors.UML_Actor_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Actors.UML_Actor_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Actors.UML_Actor_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Actor_Get;

      -------------------------------------------------
      -- UML_Add_Structural_Feature_Value_Action_Get --
      -------------------------------------------------

      function UML_Add_Structural_Feature_Value_Action_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Add_Structural_Feature_Value_Action_Insert_At_A_Add_Structural_Feature_Value_Action then
            --  AddStructuralFeatureValueAction::insertAt : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Insert_At));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Add_Structural_Feature_Value_Action_Is_Replace_All then
            --  AddStructuralFeatureValueAction::isReplaceAll : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Replace_All);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structural_Feature_Action_Object_A_Structural_Feature_Action then
            --  StructuralFeatureAction::object : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Object));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Write_Structural_Feature_Action_Result_A_Write_Structural_Feature_Action then
            --  WriteStructuralFeatureAction::result : OutputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access'
                 (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structural_Feature_Action_Structural_Feature_A_Structural_Feature_Action then
            --  StructuralFeatureAction::structuralFeature : StructuralFeature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structural_Features.UML_Structural_Feature_Access'
                 (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Structural_Feature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Write_Structural_Feature_Action_Value_A_Write_Structural_Feature_Action then
            --  WriteStructuralFeatureAction::value : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Add_Structural_Feature_Value_Action_Get;

      ---------------------------------------
      -- UML_Add_Variable_Value_Action_Get --
      ---------------------------------------

      function UML_Add_Variable_Value_Action_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Add_Variable_Value_Action_Insert_At_A_Add_Variable_Value_Action then
            --  AddVariableValueAction::insertAt : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Insert_At));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Add_Variable_Value_Action_Is_Replace_All then
            --  AddVariableValueAction::isReplaceAll : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Replace_All);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Write_Variable_Action_Value_A_Write_Variable_Action then
            --  WriteVariableAction::value : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Variable_Action_Variable_A_Variable_Action then
            --  VariableAction::variable : Variable

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Variables.UML_Variable_Access'
                 (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Variable));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Add_Variable_Value_Action_Get;

      -------------------------------
      -- UML_Any_Receive_Event_Get --
      -------------------------------

      function UML_Any_Receive_Event_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Any_Receive_Events.UML_Any_Receive_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Any_Receive_Events.UML_Any_Receive_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Any_Receive_Events.UML_Any_Receive_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Any_Receive_Events.UML_Any_Receive_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Any_Receive_Events.UML_Any_Receive_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Any_Receive_Events.UML_Any_Receive_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Any_Receive_Events.UML_Any_Receive_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Any_Receive_Events.UML_Any_Receive_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Any_Receive_Events.UML_Any_Receive_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Any_Receive_Events.UML_Any_Receive_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Any_Receive_Events.UML_Any_Receive_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Any_Receive_Events.UML_Any_Receive_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Any_Receive_Event_Get;

      ----------------------
      -- UML_Artifact_Get --
      ----------------------

      function UML_Artifact_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Attribute_A_Classifier then
            --  Classifier::attribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Collaboration_Use_A_Classifier then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internals.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Feature_Feature_Featuring_Classifier then
            --  Classifier::feature : Feature

            return
              AMF.UML.Features.Collections.UML_Feature_Collections.Internals.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Feature);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Artifact_File_Name then
            --  Artifact::fileName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_File_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_General_A_Classifier then
            --  Classifier::general : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Generalization_Generalization_Specific then
            --  Classifier::generalization : Generalization

            return
              AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internals.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Inherited_Member_A_Classifier then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Artifact_Manifestation_A_Artifact then
            --  Artifact::manifestation : Manifestation

            return
              AMF.UML.Manifestations.Collections.UML_Manifestation_Collections.Internals.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Manifestation);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Artifact_Nested_Artifact_A_Artifact then
            --  Artifact::nestedArtifact : Artifact

            return
              AMF.UML.Artifacts.Collections.UML_Artifact_Collections.Internals.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Artifact);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Artifact_Owned_Attribute_A_Artifact then
            --  Artifact::ownedAttribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Artifact_Owned_Operation_A_Artifact then
            --  Artifact::ownedOperation : Operation

            return
              AMF.UML.Operations.Collections.UML_Operation_Collections.Internals.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Operation);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Use_Case_A_Classifier then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Powertype_Extent_Generalization_Set_Powertype then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internals.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Redefined_Classifier_A_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Substitution_Substitution_Substituting_Classifier then
            --  Classifier::substitution : Substitution

            return
              AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internals.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Template_Binding_Template_Binding_Bound_Element then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internals.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Use_Case_Use_Case_Subject then
            --  Classifier::useCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Artifact_Get;

      -------------------------
      -- UML_Association_Get --
      -------------------------

      function UML_Association_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Attribute_A_Classifier then
            --  Classifier::attribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Collaboration_Use_A_Classifier then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internals.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Association_End_Type_A_Association then
            --  Association::endType : Type

            return
              AMF.UML.Types.Collections.UML_Type_Collections.Internals.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_End_Type);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Feature_Feature_Featuring_Classifier then
            --  Classifier::feature : Feature

            return
              AMF.UML.Features.Collections.UML_Feature_Collections.Internals.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Feature);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_General_A_Classifier then
            --  Classifier::general : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Generalization_Generalization_Specific then
            --  Classifier::generalization : Generalization

            return
              AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internals.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Inherited_Member_A_Classifier then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Association_Is_Derived then
            --  Association::isDerived : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Derived);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Association_Member_End_Property_Association then
            --  Association::memberEnd : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member_End);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Association_Navigable_Owned_End_A_Association then
            --  Association::navigableOwnedEnd : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Navigable_Owned_End);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Association_Owned_End_Property_Owning_Association then
            --  Association::ownedEnd : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_End);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Use_Case_A_Classifier then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Powertype_Extent_Generalization_Set_Powertype then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internals.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Redefined_Classifier_A_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Relationship_Related_Element_A_Relationship then
            --  Relationship::relatedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Substitution_Substitution_Substituting_Classifier then
            --  Classifier::substitution : Substitution

            return
              AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internals.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Template_Binding_Template_Binding_Bound_Element then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internals.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Use_Case_Use_Case_Subject then
            --  Classifier::useCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Association_Get;

      -------------------------------
      -- UML_Association_Class_Get --
      -------------------------------

      function UML_Association_Class_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Attribute_A_Classifier then
            --  Classifier::attribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Classifier_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::classifierBehavior : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier_Behavior));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Collaboration_Use_A_Classifier then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Association_End_Type_A_Association then
            --  Association::endType : Type

            return
              AMF.UML.Types.Collections.UML_Type_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_End_Type);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Extension_Extension_Metaclass then
            --  Class::extension : Extension

            return
              AMF.UML.Extensions.Collections.UML_Extension_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Extension);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Feature_Feature_Featuring_Classifier then
            --  Classifier::feature : Feature

            return
              AMF.UML.Features.Collections.UML_Feature_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Feature);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_General_A_Classifier then
            --  Classifier::general : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Generalization_Generalization_Specific then
            --  Classifier::generalization : Generalization

            return
              AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Inherited_Member_A_Classifier then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Interface_Realization_Interface_Realization_Implementing_Classifier then
            --  BehavioredClassifier::interfaceRealization : InterfaceRealization

            return
              AMF.UML.Interface_Realizations.Collections.UML_Interface_Realization_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Interface_Realization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Active);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Association_Is_Derived then
            --  Association::isDerived : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Derived);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Association_Member_End_Property_Association then
            --  Association::memberEnd : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member_End);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Association_Navigable_Owned_End_A_Association then
            --  Association::navigableOwnedEnd : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Navigable_Owned_End);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Nested_Classifier_A_Class then
            --  Class::nestedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Owned_Attribute_Property_Class then
            --  Class::ownedAttribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Owned_Attribute_A_Structured_Classifier then
            --  StructuredClassifier::ownedAttribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Owned_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::ownedBehavior : Behavior

            return
              AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Behavior);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Owned_Connector_A_Structured_Classifier then
            --  StructuredClassifier::ownedConnector : Connector

            return
              AMF.UML.Connectors.Collections.UML_Connector_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Connector);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Association_Owned_End_Property_Owning_Association then
            --  Association::ownedEnd : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_End);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Owned_Operation_Operation_Class then
            --  Class::ownedOperation : Operation

            return
              AMF.UML.Operations.Collections.UML_Operation_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Operation);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Encapsulated_Classifier_Owned_Port_A_Encapsulated_Classifier then
            --  EncapsulatedClassifier::ownedPort : Port

            return
              AMF.UML.Ports.Collections.UML_Port_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Port);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Owned_Reception_A_Class then
            --  Class::ownedReception : Reception

            return
              AMF.UML.Receptions.Collections.UML_Reception_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Reception);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Use_Case_A_Classifier then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Part_A_Structured_Classifier then
            --  StructuredClassifier::part : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Part);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Powertype_Extent_Generalization_Set_Powertype then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Redefined_Classifier_A_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Relationship_Related_Element_A_Relationship then
            --  Relationship::relatedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Role_A_Structured_Classifier then
            --  StructuredClassifier::role : ConnectableElement

            return
              AMF.UML.Connectable_Elements.Collections.UML_Connectable_Element_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Role);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Substitution_Substitution_Substituting_Classifier then
            --  Classifier::substitution : Substitution

            return
              AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Super_Class_A_Class then
            --  Class::superClass : Class

            return
              AMF.UML.Classes.Collections.UML_Class_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Class);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Template_Binding_Template_Binding_Bound_Element then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Use_Case_Use_Case_Subject then
            --  Classifier::useCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Association_Class_Get;

      ----------------------------------------------
      -- UML_Behavior_Execution_Specification_Get --
      ----------------------------------------------

      function UML_Behavior_Execution_Specification_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Execution_Specification_Behavior_A_Behavior_Execution_Specification then
            --  BehaviorExecutionSpecification::behavior : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Behavior));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Covered_Lifeline_Covered_By then
            --  InteractionFragment::covered : Lifeline

            return
              AMF.UML.Lifelines.Collections.UML_Lifeline_Collections.Internals.To_Holder
               (AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Covered);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Interaction_Interaction_Fragment then
            --  InteractionFragment::enclosingInteraction : Interaction

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access'
                 (AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Interaction));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Operand_Interaction_Operand_Fragment then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access'
                 (AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Operand));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Execution_Specification_Finish_A_Execution_Specification then
            --  ExecutionSpecification::finish : OccurrenceSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access'
                 (AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Finish));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_General_Ordering_A_Interaction_Fragment then
            --  InteractionFragment::generalOrdering : GeneralOrdering

            return
              AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internals.To_Holder
               (AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General_Ordering);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Execution_Specification_Start_A_Execution_Specification then
            --  ExecutionSpecification::start : OccurrenceSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access'
                 (AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Start));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Behavior_Execution_Specification_Get;

      -------------------------------------
      -- UML_Broadcast_Signal_Action_Get --
      -------------------------------------

      function UML_Broadcast_Signal_Action_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Invocation_Action_Argument_A_Invocation_Action then
            --  InvocationAction::argument : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Argument);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Invocation_Action_On_Port_A_Invocation_Action then
            --  InvocationAction::onPort : Port

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Ports.UML_Port_Access'
                 (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_On_Port));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Broadcast_Signal_Action_Signal_A_Broadcast_Signal_Action then
            --  BroadcastSignalAction::signal : Signal

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Signals.UML_Signal_Access'
                 (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Signal));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Broadcast_Signal_Action_Get;

      ----------------------------------
      -- UML_Call_Behavior_Action_Get --
      ----------------------------------

      function UML_Call_Behavior_Action_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Invocation_Action_Argument_A_Invocation_Action then
            --  InvocationAction::argument : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Argument);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Call_Behavior_Action_Behavior_A_Call_Behavior_Action then
            --  CallBehaviorAction::behavior : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Behavior));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Call_Action_Is_Synchronous then
            --  CallAction::isSynchronous : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Synchronous);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Invocation_Action_On_Port_A_Invocation_Action then
            --  InvocationAction::onPort : Port

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Ports.UML_Port_Access'
                 (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_On_Port));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Call_Action_Result_A_Call_Action then
            --  CallAction::result : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Result);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Call_Behavior_Action_Get;

      ------------------------
      -- UML_Call_Event_Get --
      ------------------------

      function UML_Call_Event_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Call_Events.UML_Call_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Call_Events.UML_Call_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Call_Events.UML_Call_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Call_Events.UML_Call_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Call_Event_Operation_A_Call_Event then
            --  CallEvent::operation : Operation

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Operations.UML_Operation_Access'
                 (AMF.UML.Call_Events.UML_Call_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Operation));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Call_Events.UML_Call_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Call_Events.UML_Call_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Call_Events.UML_Call_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Call_Events.UML_Call_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Call_Events.UML_Call_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Call_Events.UML_Call_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Call_Events.UML_Call_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Call_Events.UML_Call_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Call_Event_Get;

      -----------------------------------
      -- UML_Call_Operation_Action_Get --
      -----------------------------------

      function UML_Call_Operation_Action_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Invocation_Action_Argument_A_Invocation_Action then
            --  InvocationAction::argument : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Argument);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Call_Action_Is_Synchronous then
            --  CallAction::isSynchronous : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Synchronous);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Invocation_Action_On_Port_A_Invocation_Action then
            --  InvocationAction::onPort : Port

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Ports.UML_Port_Access'
                 (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_On_Port));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Call_Operation_Action_Operation_A_Call_Operation_Action then
            --  CallOperationAction::operation : Operation

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Operations.UML_Operation_Access'
                 (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Operation));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Call_Action_Result_A_Call_Action then
            --  CallAction::result : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Result);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Call_Operation_Action_Target_A_Call_Operation_Action then
            --  CallOperationAction::target : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Target));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Call_Operation_Action_Get;

      ---------------------------------
      -- UML_Central_Buffer_Node_Get --
      ---------------------------------

      function UML_Central_Buffer_Node_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_In_State_A_Object_Node then
            --  ObjectNode::inState : State

            return
              AMF.UML.States.Collections.UML_State_Collections.Internals.To_Holder
               (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_State);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Is_Control_Type then
            --  ObjectNode::isControlType : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Control_Type);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Ordering then
            --  ObjectNode::ordering : ObjectNodeOrderingKind

            return
              AMF.UML.Holders.Object_Node_Ordering_Kinds.To_Holder
               (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Ordering);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Selection_A_Object_Node then
            --  ObjectNode::selection : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Selection));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Upper_Bound_A_Object_Node then
            --  ObjectNode::upperBound : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Upper_Bound));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Central_Buffer_Node_Get;

      --------------------------
      -- UML_Change_Event_Get --
      --------------------------

      function UML_Change_Event_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Change_Event_Change_Expression_A_Change_Event then
            --  ChangeEvent::changeExpression : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Change_Events.UML_Change_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Change_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Change_Events.UML_Change_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Change_Events.UML_Change_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Change_Events.UML_Change_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Change_Events.UML_Change_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Change_Events.UML_Change_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Change_Events.UML_Change_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Change_Events.UML_Change_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Change_Events.UML_Change_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Change_Events.UML_Change_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Change_Events.UML_Change_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Change_Events.UML_Change_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Change_Events.UML_Change_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Change_Event_Get;

      -------------------
      -- UML_Class_Get --
      -------------------

      function UML_Class_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Attribute_A_Classifier then
            --  Classifier::attribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Classifier_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::classifierBehavior : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier_Behavior));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Collaboration_Use_A_Classifier then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internals.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Extension_Extension_Metaclass then
            --  Class::extension : Extension

            return
              AMF.UML.Extensions.Collections.UML_Extension_Collections.Internals.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Extension);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Feature_Feature_Featuring_Classifier then
            --  Classifier::feature : Feature

            return
              AMF.UML.Features.Collections.UML_Feature_Collections.Internals.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Feature);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_General_A_Classifier then
            --  Classifier::general : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Generalization_Generalization_Specific then
            --  Classifier::generalization : Generalization

            return
              AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internals.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Inherited_Member_A_Classifier then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Interface_Realization_Interface_Realization_Implementing_Classifier then
            --  BehavioredClassifier::interfaceRealization : InterfaceRealization

            return
              AMF.UML.Interface_Realizations.Collections.UML_Interface_Realization_Collections.Internals.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Interface_Realization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Active);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Nested_Classifier_A_Class then
            --  Class::nestedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Owned_Attribute_Property_Class then
            --  Class::ownedAttribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Owned_Attribute_A_Structured_Classifier then
            --  StructuredClassifier::ownedAttribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Owned_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::ownedBehavior : Behavior

            return
              AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internals.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Behavior);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Owned_Connector_A_Structured_Classifier then
            --  StructuredClassifier::ownedConnector : Connector

            return
              AMF.UML.Connectors.Collections.UML_Connector_Collections.Internals.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Connector);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Owned_Operation_Operation_Class then
            --  Class::ownedOperation : Operation

            return
              AMF.UML.Operations.Collections.UML_Operation_Collections.Internals.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Operation);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Encapsulated_Classifier_Owned_Port_A_Encapsulated_Classifier then
            --  EncapsulatedClassifier::ownedPort : Port

            return
              AMF.UML.Ports.Collections.UML_Port_Collections.Internals.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Port);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Owned_Reception_A_Class then
            --  Class::ownedReception : Reception

            return
              AMF.UML.Receptions.Collections.UML_Reception_Collections.Internals.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Reception);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Use_Case_A_Classifier then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Part_A_Structured_Classifier then
            --  StructuredClassifier::part : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Part);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Powertype_Extent_Generalization_Set_Powertype then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internals.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Redefined_Classifier_A_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Role_A_Structured_Classifier then
            --  StructuredClassifier::role : ConnectableElement

            return
              AMF.UML.Connectable_Elements.Collections.UML_Connectable_Element_Collections.Internals.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Role);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Substitution_Substitution_Substituting_Classifier then
            --  Classifier::substitution : Substitution

            return
              AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internals.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Super_Class_A_Class then
            --  Class::superClass : Class

            return
              AMF.UML.Classes.Collections.UML_Class_Collections.Internals.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Class);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Template_Binding_Template_Binding_Bound_Element then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internals.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Use_Case_Use_Case_Subject then
            --  Classifier::useCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Class_Get;

      -------------------------------------------
      -- UML_Classifier_Template_Parameter_Get --
      -------------------------------------------

      function UML_Classifier_Template_Parameter_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Allow_Substitutable then
            --  ClassifierTemplateParameter::allowSubstitutable : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Allow_Substitutable);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Constraining_Classifier_A_Classifier_Template_Parameter then
            --  ClassifierTemplateParameter::constrainingClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Constraining_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Default_A_Template_Parameter then
            --  TemplateParameter::default : ParameterableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access'
                 (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Default));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Owned_Default_A_Template_Parameter then
            --  TemplateParameter::ownedDefault : ParameterableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access'
                 (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Default));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Owned_Parametered_Element_Parameterable_Element_Owning_Template_Parameter then
            --  TemplateParameter::ownedParameteredElement : ParameterableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access'
                 (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parametered_Element));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Parametered_Element_Classifier_Template_Parameter then
            --  ClassifierTemplateParameter::parameteredElement : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Parametered_Element));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Parametered_Element_Parameterable_Element_Template_Parameter then
            --  TemplateParameter::parameteredElement : ParameterableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access'
                 (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Parametered_Element));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Signature_Template_Signature_Owned_Parameter then
            --  TemplateParameter::signature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Signature));

         else
            raise Program_Error;
         end if;
      end UML_Classifier_Template_Parameter_Get;

      --------------------
      -- UML_Clause_Get --
      --------------------

      function UML_Clause_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Clause_Body_A_Clause then
            --  Clause::body : ExecutableNode

            return
              AMF.UML.Executable_Nodes.Collections.UML_Executable_Node_Collections.Internals.To_Holder
               (AMF.UML.Clauses.UML_Clause_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Body);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Clause_Body_Output_A_Clause then
            --  Clause::bodyOutput : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Clauses.UML_Clause_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Body_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Clause_Decider_A_Clause then
            --  Clause::decider : OutputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access'
                 (AMF.UML.Clauses.UML_Clause_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Decider));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Clauses.UML_Clause_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Clauses.UML_Clause_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Clauses.UML_Clause_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Clause_Predecessor_Clause_Clause_Successor_Clause then
            --  Clause::predecessorClause : Clause

            return
              AMF.UML.Clauses.Collections.UML_Clause_Collections.Internals.To_Holder
               (AMF.UML.Clauses.UML_Clause_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Predecessor_Clause);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Clause_Successor_Clause_Clause_Predecessor_Clause then
            --  Clause::successorClause : Clause

            return
              AMF.UML.Clauses.Collections.UML_Clause_Collections.Internals.To_Holder
               (AMF.UML.Clauses.UML_Clause_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Successor_Clause);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Clause_Test_A_Clause then
            --  Clause::test : ExecutableNode

            return
              AMF.UML.Executable_Nodes.Collections.UML_Executable_Node_Collections.Internals.To_Holder
               (AMF.UML.Clauses.UML_Clause_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Test);

         else
            raise Program_Error;
         end if;
      end UML_Clause_Get;

      --------------------------------------
      -- UML_Clear_Association_Action_Get --
      --------------------------------------

      function UML_Clear_Association_Action_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Clear_Association_Action_Association_A_Clear_Association_Action then
            --  ClearAssociationAction::association : Association

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Associations.UML_Association_Access'
                 (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Association));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Clear_Association_Action_Object_A_Clear_Association_Action then
            --  ClearAssociationAction::object : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Object));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Clear_Association_Action_Get;

      ---------------------------------------------
      -- UML_Clear_Structural_Feature_Action_Get --
      ---------------------------------------------

      function UML_Clear_Structural_Feature_Action_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structural_Feature_Action_Object_A_Structural_Feature_Action then
            --  StructuralFeatureAction::object : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Object));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Clear_Structural_Feature_Action_Result_A_Clear_Structural_Feature_Action then
            --  ClearStructuralFeatureAction::result : OutputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access'
                 (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structural_Feature_Action_Structural_Feature_A_Structural_Feature_Action then
            --  StructuralFeatureAction::structuralFeature : StructuralFeature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structural_Features.UML_Structural_Feature_Access'
                 (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Structural_Feature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Clear_Structural_Feature_Action_Get;

      -----------------------------------
      -- UML_Clear_Variable_Action_Get --
      -----------------------------------

      function UML_Clear_Variable_Action_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Variable_Action_Variable_A_Variable_Action then
            --  VariableAction::variable : Variable

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Variables.UML_Variable_Access'
                 (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Variable));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Clear_Variable_Action_Get;

      ---------------------------
      -- UML_Collaboration_Get --
      ---------------------------

      function UML_Collaboration_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Attribute_A_Classifier then
            --  Classifier::attribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Classifier_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::classifierBehavior : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier_Behavior));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Collaboration_Collaboration_Role_A_Collaboration then
            --  Collaboration::collaborationRole : ConnectableElement

            return
              AMF.UML.Connectable_Elements.Collections.UML_Connectable_Element_Collections.Internals.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Role);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Collaboration_Use_A_Classifier then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internals.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Feature_Feature_Featuring_Classifier then
            --  Classifier::feature : Feature

            return
              AMF.UML.Features.Collections.UML_Feature_Collections.Internals.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Feature);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_General_A_Classifier then
            --  Classifier::general : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Generalization_Generalization_Specific then
            --  Classifier::generalization : Generalization

            return
              AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internals.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Inherited_Member_A_Classifier then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Interface_Realization_Interface_Realization_Implementing_Classifier then
            --  BehavioredClassifier::interfaceRealization : InterfaceRealization

            return
              AMF.UML.Interface_Realizations.Collections.UML_Interface_Realization_Collections.Internals.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Interface_Realization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Owned_Attribute_A_Structured_Classifier then
            --  StructuredClassifier::ownedAttribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Owned_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::ownedBehavior : Behavior

            return
              AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internals.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Behavior);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Owned_Connector_A_Structured_Classifier then
            --  StructuredClassifier::ownedConnector : Connector

            return
              AMF.UML.Connectors.Collections.UML_Connector_Collections.Internals.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Connector);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Use_Case_A_Classifier then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Part_A_Structured_Classifier then
            --  StructuredClassifier::part : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Part);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Powertype_Extent_Generalization_Set_Powertype then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internals.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Redefined_Classifier_A_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Role_A_Structured_Classifier then
            --  StructuredClassifier::role : ConnectableElement

            return
              AMF.UML.Connectable_Elements.Collections.UML_Connectable_Element_Collections.Internals.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Role);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Substitution_Substitution_Substituting_Classifier then
            --  Classifier::substitution : Substitution

            return
              AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internals.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Template_Binding_Template_Binding_Bound_Element then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internals.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Use_Case_Use_Case_Subject then
            --  Classifier::useCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Collaboration_Get;

      -------------------------------
      -- UML_Collaboration_Use_Get --
      -------------------------------

      function UML_Collaboration_Use_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Collaboration_Use_Role_Binding_A_Collaboration_Use then
            --  CollaborationUse::roleBinding : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Role_Binding);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Collaboration_Use_Type_A_Collaboration_Use then
            --  CollaborationUse::type : Collaboration

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access'
                 (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Collaboration_Use_Get;

      -------------------------------
      -- UML_Combined_Fragment_Get --
      -------------------------------

      function UML_Combined_Fragment_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Combined_Fragment_Cfragment_Gate_A_Combined_Fragment then
            --  CombinedFragment::cfragmentGate : Gate

            return
              AMF.UML.Gates.Collections.UML_Gate_Collections.Internals.To_Holder
               (AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Cfragment_Gate);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Covered_Lifeline_Covered_By then
            --  InteractionFragment::covered : Lifeline

            return
              AMF.UML.Lifelines.Collections.UML_Lifeline_Collections.Internals.To_Holder
               (AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Covered);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Interaction_Interaction_Fragment then
            --  InteractionFragment::enclosingInteraction : Interaction

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access'
                 (AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Interaction));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Operand_Interaction_Operand_Fragment then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access'
                 (AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Operand));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_General_Ordering_A_Interaction_Fragment then
            --  InteractionFragment::generalOrdering : GeneralOrdering

            return
              AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internals.To_Holder
               (AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General_Ordering);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Combined_Fragment_Interaction_Operator then
            --  CombinedFragment::interactionOperator : InteractionOperatorKind

            return
              AMF.UML.Holders.Interaction_Operator_Kinds.To_Holder
               (AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Interaction_Operator);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Combined_Fragment_Operand_A_Combined_Fragment then
            --  CombinedFragment::operand : InteractionOperand

            return
              AMF.UML.Interaction_Operands.Collections.UML_Interaction_Operand_Collections.Internals.To_Holder
               (AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Operand);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Combined_Fragment_Get;

      ---------------------
      -- UML_Comment_Get --
      ---------------------

      function UML_Comment_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Comment_Annotated_Element_A_Comment then
            --  Comment::annotatedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Comments.UML_Comment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Annotated_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Comment_Body then
            --  Comment::body : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Comments.UML_Comment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Body);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Comments.UML_Comment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Comments.UML_Comment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Comments.UML_Comment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         else
            raise Program_Error;
         end if;
      end UML_Comment_Get;

      --------------------------------
      -- UML_Communication_Path_Get --
      --------------------------------

      function UML_Communication_Path_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Attribute_A_Classifier then
            --  Classifier::attribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Collaboration_Use_A_Classifier then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internals.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Association_End_Type_A_Association then
            --  Association::endType : Type

            return
              AMF.UML.Types.Collections.UML_Type_Collections.Internals.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_End_Type);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Feature_Feature_Featuring_Classifier then
            --  Classifier::feature : Feature

            return
              AMF.UML.Features.Collections.UML_Feature_Collections.Internals.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Feature);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_General_A_Classifier then
            --  Classifier::general : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Generalization_Generalization_Specific then
            --  Classifier::generalization : Generalization

            return
              AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internals.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Inherited_Member_A_Classifier then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Association_Is_Derived then
            --  Association::isDerived : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Derived);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Association_Member_End_Property_Association then
            --  Association::memberEnd : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member_End);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Association_Navigable_Owned_End_A_Association then
            --  Association::navigableOwnedEnd : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Navigable_Owned_End);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Association_Owned_End_Property_Owning_Association then
            --  Association::ownedEnd : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_End);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Use_Case_A_Classifier then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Powertype_Extent_Generalization_Set_Powertype then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internals.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Redefined_Classifier_A_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Relationship_Related_Element_A_Relationship then
            --  Relationship::relatedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Substitution_Substitution_Substituting_Classifier then
            --  Classifier::substitution : Substitution

            return
              AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internals.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Template_Binding_Template_Binding_Bound_Element then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internals.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Use_Case_Use_Case_Subject then
            --  Classifier::useCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Communication_Path_Get;

      -----------------------
      -- UML_Component_Get --
      -----------------------

      function UML_Component_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Attribute_A_Classifier then
            --  Classifier::attribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Classifier_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::classifierBehavior : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier_Behavior));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Collaboration_Use_A_Classifier then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internals.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Extension_Extension_Metaclass then
            --  Class::extension : Extension

            return
              AMF.UML.Extensions.Collections.UML_Extension_Collections.Internals.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Extension);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Feature_Feature_Featuring_Classifier then
            --  Classifier::feature : Feature

            return
              AMF.UML.Features.Collections.UML_Feature_Collections.Internals.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Feature);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_General_A_Classifier then
            --  Classifier::general : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Generalization_Generalization_Specific then
            --  Classifier::generalization : Generalization

            return
              AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internals.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Inherited_Member_A_Classifier then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Interface_Realization_Interface_Realization_Implementing_Classifier then
            --  BehavioredClassifier::interfaceRealization : InterfaceRealization

            return
              AMF.UML.Interface_Realizations.Collections.UML_Interface_Realization_Collections.Internals.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Interface_Realization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Active);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Component_Is_Indirectly_Instantiated then
            --  Component::isIndirectlyInstantiated : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Indirectly_Instantiated);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Nested_Classifier_A_Class then
            --  Class::nestedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Owned_Attribute_Property_Class then
            --  Class::ownedAttribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Owned_Attribute_A_Structured_Classifier then
            --  StructuredClassifier::ownedAttribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Owned_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::ownedBehavior : Behavior

            return
              AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internals.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Behavior);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Owned_Connector_A_Structured_Classifier then
            --  StructuredClassifier::ownedConnector : Connector

            return
              AMF.UML.Connectors.Collections.UML_Connector_Collections.Internals.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Connector);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Owned_Operation_Operation_Class then
            --  Class::ownedOperation : Operation

            return
              AMF.UML.Operations.Collections.UML_Operation_Collections.Internals.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Operation);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Encapsulated_Classifier_Owned_Port_A_Encapsulated_Classifier then
            --  EncapsulatedClassifier::ownedPort : Port

            return
              AMF.UML.Ports.Collections.UML_Port_Collections.Internals.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Port);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Owned_Reception_A_Class then
            --  Class::ownedReception : Reception

            return
              AMF.UML.Receptions.Collections.UML_Reception_Collections.Internals.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Reception);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Use_Case_A_Classifier then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Component_Packaged_Element_A_Component then
            --  Component::packagedElement : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Packaged_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Part_A_Structured_Classifier then
            --  StructuredClassifier::part : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Part);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Powertype_Extent_Generalization_Set_Powertype then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internals.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Component_Provided_A_Component then
            --  Component::provided : Interface

            return
              AMF.UML.Interfaces.Collections.UML_Interface_Collections.Internals.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Provided);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Component_Realization_Component_Realization_Abstraction then
            --  Component::realization : ComponentRealization

            return
              AMF.UML.Component_Realizations.Collections.UML_Component_Realization_Collections.Internals.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Realization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Redefined_Classifier_A_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Component_Required_A_Component then
            --  Component::required : Interface

            return
              AMF.UML.Interfaces.Collections.UML_Interface_Collections.Internals.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Required);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Role_A_Structured_Classifier then
            --  StructuredClassifier::role : ConnectableElement

            return
              AMF.UML.Connectable_Elements.Collections.UML_Connectable_Element_Collections.Internals.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Role);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Substitution_Substitution_Substituting_Classifier then
            --  Classifier::substitution : Substitution

            return
              AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internals.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Super_Class_A_Class then
            --  Class::superClass : Class

            return
              AMF.UML.Classes.Collections.UML_Class_Collections.Internals.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Class);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Template_Binding_Template_Binding_Bound_Element then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internals.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Use_Case_Use_Case_Subject then
            --  Classifier::useCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Component_Get;

      -----------------------------------
      -- UML_Component_Realization_Get --
      -----------------------------------

      function UML_Component_Realization_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Component_Realization_Abstraction_Component_Realization then
            --  ComponentRealization::abstraction : Component

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Components.UML_Component_Access'
                 (AMF.UML.Component_Realizations.UML_Component_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Abstraction));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Dependency_Client_Named_Element_Client_Dependency then
            --  Dependency::client : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Component_Realizations.UML_Component_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Component_Realizations.UML_Component_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Abstraction_Mapping_A_Abstraction then
            --  Abstraction::mapping : OpaqueExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access'
                 (AMF.UML.Component_Realizations.UML_Component_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Mapping));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Component_Realizations.UML_Component_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Component_Realizations.UML_Component_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Component_Realizations.UML_Component_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Component_Realizations.UML_Component_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Component_Realizations.UML_Component_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Component_Realizations.UML_Component_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Component_Realizations.UML_Component_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Component_Realizations.UML_Component_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Component_Realization_Realizing_Classifier_A_Component_Realization then
            --  ComponentRealization::realizingClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Component_Realizations.UML_Component_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Realizing_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Relationship_Related_Element_A_Relationship then
            --  Relationship::relatedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Component_Realizations.UML_Component_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Directed_Relationship_Source_A_Directed_Relationship then
            --  DirectedRelationship::source : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Component_Realizations.UML_Component_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Source);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Dependency_Supplier_A_Supplier_Dependency then
            --  Dependency::supplier : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Component_Realizations.UML_Component_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Supplier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Directed_Relationship_Target_A_Directed_Relationship then
            --  DirectedRelationship::target : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Component_Realizations.UML_Component_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Target);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Component_Realizations.UML_Component_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Component_Realizations.UML_Component_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Component_Realizations.UML_Component_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Component_Realization_Get;

      ------------------------------
      -- UML_Conditional_Node_Get --
      ------------------------------

      function UML_Conditional_Node_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Activity_Activity_Structured_Node then
            --  StructuredActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Conditional_Node_Clause_A_Conditional_Node then
            --  ConditionalNode::clause : Clause

            return
              AMF.UML.Clauses.Collections.UML_Clause_Collections.Internals.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Clause);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_Contained_Edge_Activity_Edge_In_Group then
            --  ActivityGroup::containedEdge : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Contained_Edge);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_Contained_Node_Activity_Node_In_Group then
            --  ActivityGroup::containedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Contained_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Edge_Activity_Edge_In_Structured_Node then
            --  StructuredActivityNode::edge : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Edge);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_In_Activity_Activity_Group then
            --  ActivityGroup::inActivity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Conditional_Node_Is_Assured then
            --  ConditionalNode::isAssured : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Assured);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Conditional_Node_Is_Determinate then
            --  ConditionalNode::isDeterminate : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Determinate);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Must_Isolate then
            --  StructuredActivityNode::mustIsolate : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Must_Isolate);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Node_Activity_Node_In_Structured_Node then
            --  StructuredActivityNode::node : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Conditional_Node_Result_A_Conditional_Node then
            --  ConditionalNode::result : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Result);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Structured_Node_Input_A_Structured_Activity_Node then
            --  StructuredActivityNode::structuredNodeInput : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Structured_Node_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Structured_Node_Output_A_Structured_Activity_Node then
            --  StructuredActivityNode::structuredNodeOutput : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Structured_Node_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_Subgroup_Activity_Group_Super_Group then
            --  ActivityGroup::subgroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Subgroup);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_Super_Group_Activity_Group_Subgroup then
            --  ActivityGroup::superGroup : ActivityGroup

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activity_Groups.UML_Activity_Group_Access'
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Group));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Variable_Variable_Scope then
            --  StructuredActivityNode::variable : Variable

            return
              AMF.UML.Variables.Collections.UML_Variable_Collections.Internals.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Variable);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Conditional_Node_Get;

      ----------------------------------------------------
      -- UML_Connectable_Element_Template_Parameter_Get --
      ----------------------------------------------------

      function UML_Connectable_Element_Template_Parameter_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Default_A_Template_Parameter then
            --  TemplateParameter::default : ParameterableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access'
                 (AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Default));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Owned_Default_A_Template_Parameter then
            --  TemplateParameter::ownedDefault : ParameterableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access'
                 (AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Default));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Owned_Parametered_Element_Parameterable_Element_Owning_Template_Parameter then
            --  TemplateParameter::ownedParameteredElement : ParameterableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access'
                 (AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parametered_Element));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Connectable_Element_Template_Parameter_Parametered_Element_Connectable_Element_Template_Parameter then
            --  ConnectableElementTemplateParameter::parameteredElement : ConnectableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Connectable_Elements.UML_Connectable_Element_Access'
                 (AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Parametered_Element));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Parametered_Element_Parameterable_Element_Template_Parameter then
            --  TemplateParameter::parameteredElement : ParameterableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access'
                 (AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Parametered_Element));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Signature_Template_Signature_Owned_Parameter then
            --  TemplateParameter::signature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Signature));

         else
            raise Program_Error;
         end if;
      end UML_Connectable_Element_Template_Parameter_Get;

      ----------------------------------------
      -- UML_Connection_Point_Reference_Get --
      ----------------------------------------

      function UML_Connection_Point_Reference_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Connection_Point_References.UML_Connection_Point_Reference_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Vertex_Container_Region_Subvertex then
            --  Vertex::container : Region

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Regions.UML_Region_Access'
                 (AMF.UML.Connection_Point_References.UML_Connection_Point_Reference_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Container));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Connection_Point_Reference_Entry_A_Connection_Point_Reference then
            --  ConnectionPointReference::entry : Pseudostate

            return
              AMF.UML.Pseudostates.Collections.UML_Pseudostate_Collections.Internals.To_Holder
               (AMF.UML.Connection_Point_References.UML_Connection_Point_Reference_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Entry);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Connection_Point_Reference_Exit_A_Connection_Point_Reference then
            --  ConnectionPointReference::exit : Pseudostate

            return
              AMF.UML.Pseudostates.Collections.UML_Pseudostate_Collections.Internals.To_Holder
               (AMF.UML.Connection_Point_References.UML_Connection_Point_Reference_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Exit);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Vertex_Incoming_Transition_Target then
            --  Vertex::incoming : Transition

            return
              AMF.UML.Transitions.Collections.UML_Transition_Collections.Internals.To_Holder
               (AMF.UML.Connection_Point_References.UML_Connection_Point_Reference_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Connection_Point_References.UML_Connection_Point_Reference_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Connection_Point_References.UML_Connection_Point_Reference_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Connection_Point_References.UML_Connection_Point_Reference_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Vertex_Outgoing_Transition_Source then
            --  Vertex::outgoing : Transition

            return
              AMF.UML.Transitions.Collections.UML_Transition_Collections.Internals.To_Holder
               (AMF.UML.Connection_Point_References.UML_Connection_Point_Reference_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Connection_Point_References.UML_Connection_Point_Reference_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Connection_Point_References.UML_Connection_Point_Reference_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Connection_Point_References.UML_Connection_Point_Reference_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Connection_Point_References.UML_Connection_Point_Reference_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Connection_Point_Reference_State_State_Connection then
            --  ConnectionPointReference::state : State

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.States.UML_State_Access'
                 (AMF.UML.Connection_Point_References.UML_Connection_Point_Reference_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_State));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Connection_Point_References.UML_Connection_Point_Reference_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Connection_Point_Reference_Get;

      -----------------------
      -- UML_Connector_Get --
      -----------------------

      function UML_Connector_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Connectors.UML_Connector_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Connector_Contract_A_Connector then
            --  Connector::contract : Behavior

            return
              AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internals.To_Holder
               (AMF.UML.Connectors.UML_Connector_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Contract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Connector_End_A_Connector then
            --  Connector::end : ConnectorEnd

            return
              AMF.UML.Connector_Ends.Collections.UML_Connector_End_Collections.Internals.To_Holder
               (AMF.UML.Connectors.UML_Connector_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_End);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Feature_Featuring_Classifier_Classifier_Feature then
            --  Feature::featuringClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Connectors.UML_Connector_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Featuring_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Connectors.UML_Connector_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Feature_Is_Static then
            --  Feature::isStatic : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Connectors.UML_Connector_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Static);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Connector_Kind then
            --  Connector::kind : ConnectorKind

            return
              AMF.UML.Holders.Connector_Kinds.To_Holder
               (AMF.UML.Connectors.UML_Connector_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Kind);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Connectors.UML_Connector_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Connectors.UML_Connector_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Connectors.UML_Connector_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Connectors.UML_Connector_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Connectors.UML_Connector_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Connectors.UML_Connector_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Connectors.UML_Connector_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Connector_Redefined_Connector_A_Connector then
            --  Connector::redefinedConnector : Connector

            return
              AMF.UML.Connectors.Collections.UML_Connector_Collections.Internals.To_Holder
               (AMF.UML.Connectors.UML_Connector_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Connector);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Connectors.UML_Connector_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Connectors.UML_Connector_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Connector_Type_A_Connector then
            --  Connector::type : Association

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Associations.UML_Association_Access'
                 (AMF.UML.Connectors.UML_Connector_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Connectors.UML_Connector_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Connector_Get;

      ---------------------------
      -- UML_Connector_End_Get --
      ---------------------------

      function UML_Connector_End_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Connector_End_Defining_End_A_Connector_End then
            --  ConnectorEnd::definingEnd : Property

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access'
                 (AMF.UML.Connector_Ends.UML_Connector_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Defining_End));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Is_Ordered then
            --  MultiplicityElement::isOrdered : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Connector_Ends.UML_Connector_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Ordered);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Is_Unique then
            --  MultiplicityElement::isUnique : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Connector_Ends.UML_Connector_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Unique);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Lower then
            --  MultiplicityElement::lower : Integer

            return
              AMF.Holders.To_Holder
               (AMF.UML.Connector_Ends.UML_Connector_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Lower);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Lower_Value_A_Owning_Lower then
            --  MultiplicityElement::lowerValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Connector_Ends.UML_Connector_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Lower_Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Connector_Ends.UML_Connector_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Connector_Ends.UML_Connector_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Connector_Ends.UML_Connector_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Connector_End_Part_With_Port_A_Connector_End then
            --  ConnectorEnd::partWithPort : Property

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access'
                 (AMF.UML.Connector_Ends.UML_Connector_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Part_With_Port));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Connector_End_Role_Connectable_Element_End then
            --  ConnectorEnd::role : ConnectableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Connectable_Elements.UML_Connectable_Element_Access'
                 (AMF.UML.Connector_Ends.UML_Connector_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Role));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Upper then
            --  MultiplicityElement::upper : UnlimitedNatural

            return
              AMF.Holders.To_Holder
               (AMF.UML.Connector_Ends.UML_Connector_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Upper);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Upper_Value_A_Owning_Upper then
            --  MultiplicityElement::upperValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Connector_Ends.UML_Connector_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Upper_Value));

         else
            raise Program_Error;
         end if;
      end UML_Connector_End_Get;

      --------------------------------------
      -- UML_Consider_Ignore_Fragment_Get --
      --------------------------------------

      function UML_Consider_Ignore_Fragment_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Combined_Fragment_Cfragment_Gate_A_Combined_Fragment then
            --  CombinedFragment::cfragmentGate : Gate

            return
              AMF.UML.Gates.Collections.UML_Gate_Collections.Internals.To_Holder
               (AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Cfragment_Gate);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Covered_Lifeline_Covered_By then
            --  InteractionFragment::covered : Lifeline

            return
              AMF.UML.Lifelines.Collections.UML_Lifeline_Collections.Internals.To_Holder
               (AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Covered);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Interaction_Interaction_Fragment then
            --  InteractionFragment::enclosingInteraction : Interaction

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access'
                 (AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Interaction));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Operand_Interaction_Operand_Fragment then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access'
                 (AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Operand));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_General_Ordering_A_Interaction_Fragment then
            --  InteractionFragment::generalOrdering : GeneralOrdering

            return
              AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internals.To_Holder
               (AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General_Ordering);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Combined_Fragment_Interaction_Operator then
            --  CombinedFragment::interactionOperator : InteractionOperatorKind

            return
              AMF.UML.Holders.Interaction_Operator_Kinds.To_Holder
               (AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Interaction_Operator);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Consider_Ignore_Fragment_Message_A_Consider_Ignore_Fragment then
            --  ConsiderIgnoreFragment::message : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Message);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Combined_Fragment_Operand_A_Combined_Fragment then
            --  CombinedFragment::operand : InteractionOperand

            return
              AMF.UML.Interaction_Operands.Collections.UML_Interaction_Operand_Collections.Internals.To_Holder
               (AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Operand);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Consider_Ignore_Fragment_Get;

      ------------------------
      -- UML_Constraint_Get --
      ------------------------

      function UML_Constraint_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Constraints.UML_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Constraint_Constrained_Element_A_Constraint then
            --  Constraint::constrainedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Constraints.UML_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Constrained_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Constraint_Context_Namespace_Owned_Rule then
            --  Constraint::context : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Constraints.UML_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Constraints.UML_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Constraints.UML_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Constraints.UML_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Constraints.UML_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Constraints.UML_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Constraints.UML_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Constraints.UML_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Constraints.UML_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Constraint_Specification_A_Owning_Constraint then
            --  Constraint::specification : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Constraints.UML_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Specification));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Constraints.UML_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Constraints.UML_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Constraints.UML_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Constraint_Get;

      --------------------------
      -- UML_Continuation_Get --
      --------------------------

      function UML_Continuation_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Continuations.UML_Continuation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Covered_Lifeline_Covered_By then
            --  InteractionFragment::covered : Lifeline

            return
              AMF.UML.Lifelines.Collections.UML_Lifeline_Collections.Internals.To_Holder
               (AMF.UML.Continuations.UML_Continuation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Covered);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Interaction_Interaction_Fragment then
            --  InteractionFragment::enclosingInteraction : Interaction

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access'
                 (AMF.UML.Continuations.UML_Continuation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Interaction));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Operand_Interaction_Operand_Fragment then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access'
                 (AMF.UML.Continuations.UML_Continuation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Operand));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_General_Ordering_A_Interaction_Fragment then
            --  InteractionFragment::generalOrdering : GeneralOrdering

            return
              AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internals.To_Holder
               (AMF.UML.Continuations.UML_Continuation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General_Ordering);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Continuations.UML_Continuation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Continuations.UML_Continuation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Continuations.UML_Continuation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Continuations.UML_Continuation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Continuations.UML_Continuation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Continuations.UML_Continuation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Continuations.UML_Continuation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Continuation_Setting then
            --  Continuation::setting : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Continuations.UML_Continuation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Setting);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Continuations.UML_Continuation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Continuation_Get;

      --------------------------
      -- UML_Control_Flow_Get --
      --------------------------

      function UML_Control_Flow_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Edge_Activity_Activity_Edge then
            --  ActivityEdge::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Control_Flows.UML_Control_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Control_Flows.UML_Control_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Edge_Guard_A_Activity_Edge then
            --  ActivityEdge::guard : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Control_Flows.UML_Control_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Guard));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Edge_In_Group_Activity_Group_Contained_Edge then
            --  ActivityEdge::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Control_Flows.UML_Control_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Edge_In_Partition_Activity_Partition_Edge then
            --  ActivityEdge::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Control_Flows.UML_Control_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Edge_In_Structured_Node_Structured_Activity_Node_Edge then
            --  ActivityEdge::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Control_Flows.UML_Control_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Edge_Interrupts_Interruptible_Activity_Region_Interrupting_Edge then
            --  ActivityEdge::interrupts : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access'
                 (AMF.UML.Control_Flows.UML_Control_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Interrupts));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Control_Flows.UML_Control_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Control_Flows.UML_Control_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Control_Flows.UML_Control_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Control_Flows.UML_Control_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Control_Flows.UML_Control_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Control_Flows.UML_Control_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Control_Flows.UML_Control_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Control_Flows.UML_Control_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Edge_Redefined_Edge_A_Activity_Edge then
            --  ActivityEdge::redefinedEdge : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Control_Flows.UML_Control_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Edge);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Control_Flows.UML_Control_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Control_Flows.UML_Control_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Edge_Source_Activity_Node_Outgoing then
            --  ActivityEdge::source : ActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activity_Nodes.UML_Activity_Node_Access'
                 (AMF.UML.Control_Flows.UML_Control_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Source));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Edge_Target_Activity_Node_Incoming then
            --  ActivityEdge::target : ActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activity_Nodes.UML_Activity_Node_Access'
                 (AMF.UML.Control_Flows.UML_Control_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Target));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Control_Flows.UML_Control_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Edge_Weight_A_Activity_Edge then
            --  ActivityEdge::weight : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Control_Flows.UML_Control_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Weight));

         else
            raise Program_Error;
         end if;
      end UML_Control_Flow_Get;

      --------------------------------
      -- UML_Create_Link_Action_Get --
      --------------------------------

      function UML_Create_Link_Action_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Create_Link_Action_End_Data_A_Create_Link_Action then
            --  CreateLinkAction::endData : LinkEndCreationData

            return
              AMF.UML.Link_End_Creation_Datas.Collections.UML_Link_End_Creation_Data_Collections.Internals.To_Holder
               (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_End_Data);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Link_Action_End_Data_A_Link_Action then
            --  LinkAction::endData : LinkEndData

            return
              AMF.UML.Link_End_Datas.Collections.UML_Link_End_Data_Collections.Internals.To_Holder
               (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_End_Data);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Link_Action_Input_Value_A_Link_Action then
            --  LinkAction::inputValue : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input_Value);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Create_Link_Action_Get;

      ---------------------------------------
      -- UML_Create_Link_Object_Action_Get --
      ---------------------------------------

      function UML_Create_Link_Object_Action_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Create_Link_Action_End_Data_A_Create_Link_Action then
            --  CreateLinkAction::endData : LinkEndCreationData

            return
              AMF.UML.Link_End_Creation_Datas.Collections.UML_Link_End_Creation_Data_Collections.Internals.To_Holder
               (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_End_Data);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Link_Action_End_Data_A_Link_Action then
            --  LinkAction::endData : LinkEndData

            return
              AMF.UML.Link_End_Datas.Collections.UML_Link_End_Data_Collections.Internals.To_Holder
               (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_End_Data);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Link_Action_Input_Value_A_Link_Action then
            --  LinkAction::inputValue : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input_Value);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Create_Link_Object_Action_Result_A_Create_Link_Object_Action then
            --  CreateLinkObjectAction::result : OutputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access'
                 (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Create_Link_Object_Action_Get;

      ----------------------------------
      -- UML_Create_Object_Action_Get --
      ----------------------------------

      function UML_Create_Object_Action_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Create_Object_Action_Classifier_A_Create_Object_Action then
            --  CreateObjectAction::classifier : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Create_Object_Action_Result_A_Create_Object_Action then
            --  CreateObjectAction::result : OutputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access'
                 (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Create_Object_Action_Get;

      ------------------------------------
      -- UMLDI_UML_Activity_Diagram_Get --
      ------------------------------------

      function UMLDI_UML_Activity_Diagram_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            return
              AMF.DC.Holders.To_Holder
               (AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Bounds);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Documentation then
            --  Diagram::documentation : String

            return
              League.Holders.To_Holder
               (AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Documentation);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Heading_A_Headed_Diagram then
            --  UMLDiagram::heading : UMLLabel

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access'
                 (AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Heading));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Activity_Diagram_Is_Activity_Frame then
            --  UMLActivityDiagram::isActivityFrame : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Activity_Frame);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Frame then
            --  UMLDiagram::isFrame : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Frame);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Icon);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Iso then
            --  UMLDiagram::isIso : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Iso);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Activity_Diagram_Model_Element_A_Uml_Diagram_Element then
            --  UMLActivityDiagram::modelElement : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Behavior_Diagram_Model_Element_A_Uml_Diagram_Element then
            --  UMLBehaviorDiagram::modelElement : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Model_Element_A_Uml_Diagram_Element then
            --  UMLDiagramElement::modelElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Model_Element_A_Diagram_Element then
            --  DiagramElement::modelElement : Element

            return
              AMF.Internals.Holders.CMOF_Holders.To_Holder
               (AMF.CMOF.Elements.CMOF_Element_Access'
                 (AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Name then
            --  Diagram::name : String

            return
              League.Holders.To_Holder
               (AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owned_Element_UML_Diagram_Element_Owning_Element then
            --  UMLDiagramElement::ownedElement : UMLDiagramElement

            return
              AMF.UMLDI.UML_Diagram_Elements.Collections.UMLDI_UML_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owned_Element_Diagram_Element_Owning_Element then
            --  DiagramElement::ownedElement : DiagramElement

            return
              AMF.DI.Diagram_Elements.Collections.DI_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owning_Element_Diagram_Element_Owned_Element then
            --  DiagramElement::owningElement : DiagramElement

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Diagram_Elements.DI_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Resolution then
            --  Diagram::resolution : Real

            return
              AMF.Holders.Reals.To_Holder
               (AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Resolution);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Activity_Diagram_Get;

      -----------------------------------------
      -- UMLDI_UML_Association_End_Label_Get --
      -----------------------------------------

      function UMLDI_UML_Association_End_Label_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            return
              AMF.DC.Holders.To_Holder
               (AMF.UMLDI.UML_Association_End_Labels.UMLDI_UML_Association_End_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Bounds);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Association_End_Labels.UMLDI_UML_Association_End_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Icon);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Association_End_Labels.UMLDI_UML_Association_End_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Association_End_Labels.UMLDI_UML_Association_End_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Association_End_Label_Model_Element_A_Uml_Diagram_Element then
            --  UMLAssociationEndLabel::modelElement : Property

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access'
                 (AMF.UMLDI.UML_Association_End_Labels.UMLDI_UML_Association_End_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Model_Element_A_Uml_Diagram_Element then
            --  UMLDiagramElement::modelElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Association_End_Labels.UMLDI_UML_Association_End_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Model_Element_A_Diagram_Element then
            --  DiagramElement::modelElement : Element

            return
              AMF.Internals.Holders.CMOF_Holders.To_Holder
               (AMF.CMOF.Elements.CMOF_Element_Access'
                 (AMF.UMLDI.UML_Association_End_Labels.UMLDI_UML_Association_End_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owned_Element_UML_Diagram_Element_Owning_Element then
            --  UMLDiagramElement::ownedElement : UMLDiagramElement

            return
              AMF.UMLDI.UML_Diagram_Elements.Collections.UMLDI_UML_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Association_End_Labels.UMLDI_UML_Association_End_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owned_Element_Diagram_Element_Owning_Element then
            --  DiagramElement::ownedElement : DiagramElement

            return
              AMF.DI.Diagram_Elements.Collections.DI_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Association_End_Labels.UMLDI_UML_Association_End_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Association_End_Labels.UMLDI_UML_Association_End_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owning_Element_Diagram_Element_Owned_Element then
            --  DiagramElement::owningElement : DiagramElement

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Diagram_Elements.DI_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Association_End_Labels.UMLDI_UML_Association_End_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Association_End_Labels.UMLDI_UML_Association_End_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Association_End_Labels.UMLDI_UML_Association_End_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Label_Text then
            --  UMLLabel::text : String

            return
              League.Holders.To_Holder
               (AMF.UMLDI.UML_Association_End_Labels.UMLDI_UML_Association_End_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Text);

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Association_End_Label_Get;

      ----------------------------------------------------------
      -- UMLDI_UML_Association_Or_Connector_Or_Link_Shape_Get --
      ----------------------------------------------------------

      function UMLDI_UML_Association_Or_Connector_Or_Link_Shape_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            return
              AMF.DC.Holders.To_Holder
               (AMF.UMLDI.UML_Association_Or_Connector_Or_Link_Shapes.UMLDI_UML_Association_Or_Connector_Or_Link_Shape_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Bounds);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Association_Or_Connector_Or_Link_Shapes.UMLDI_UML_Association_Or_Connector_Or_Link_Shape_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Icon);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Association_Or_Connector_Or_Link_Shape_Kind then
            --  UMLAssociationOrConnectorOrLinkShape::kind : UMLAssociationOrConnectorOrLinkShapeKind

            return
              AMF.UMLDI.Holders.UML_Association_Or_Connector_Or_Link_Shape_Kinds.To_Holder
               (AMF.UMLDI.UML_Association_Or_Connector_Or_Link_Shapes.UMLDI_UML_Association_Or_Connector_Or_Link_Shape_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Kind);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Association_Or_Connector_Or_Link_Shapes.UMLDI_UML_Association_Or_Connector_Or_Link_Shape_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Association_Or_Connector_Or_Link_Shapes.UMLDI_UML_Association_Or_Connector_Or_Link_Shape_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Model_Element_A_Uml_Diagram_Element then
            --  UMLDiagramElement::modelElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Association_Or_Connector_Or_Link_Shapes.UMLDI_UML_Association_Or_Connector_Or_Link_Shape_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Model_Element_A_Diagram_Element then
            --  DiagramElement::modelElement : Element

            return
              AMF.Internals.Holders.CMOF_Holders.To_Holder
               (AMF.CMOF.Elements.CMOF_Element_Access'
                 (AMF.UMLDI.UML_Association_Or_Connector_Or_Link_Shapes.UMLDI_UML_Association_Or_Connector_Or_Link_Shape_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owned_Element_UML_Diagram_Element_Owning_Element then
            --  UMLDiagramElement::ownedElement : UMLDiagramElement

            return
              AMF.UMLDI.UML_Diagram_Elements.Collections.UMLDI_UML_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Association_Or_Connector_Or_Link_Shapes.UMLDI_UML_Association_Or_Connector_Or_Link_Shape_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owned_Element_Diagram_Element_Owning_Element then
            --  DiagramElement::ownedElement : DiagramElement

            return
              AMF.DI.Diagram_Elements.Collections.DI_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Association_Or_Connector_Or_Link_Shapes.UMLDI_UML_Association_Or_Connector_Or_Link_Shape_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Association_Or_Connector_Or_Link_Shapes.UMLDI_UML_Association_Or_Connector_Or_Link_Shape_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owning_Element_Diagram_Element_Owned_Element then
            --  DiagramElement::owningElement : DiagramElement

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Diagram_Elements.DI_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Association_Or_Connector_Or_Link_Shapes.UMLDI_UML_Association_Or_Connector_Or_Link_Shape_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Association_Or_Connector_Or_Link_Shapes.UMLDI_UML_Association_Or_Connector_Or_Link_Shape_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Association_Or_Connector_Or_Link_Shapes.UMLDI_UML_Association_Or_Connector_Or_Link_Shape_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Association_Or_Connector_Or_Link_Shape_Get;

      ---------------------------------
      -- UMLDI_UML_Class_Diagram_Get --
      ---------------------------------

      function UMLDI_UML_Class_Diagram_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            return
              AMF.DC.Holders.To_Holder
               (AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Bounds);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Documentation then
            --  Diagram::documentation : String

            return
              League.Holders.To_Holder
               (AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Documentation);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Heading_A_Headed_Diagram then
            --  UMLDiagram::heading : UMLLabel

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access'
                 (AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Heading));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Class_Or_Composite_Structure_Diagram_Is_Association_Dot_Shown then
            --  UMLClassOrCompositeStructureDiagram::isAssociationDotShown : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Association_Dot_Shown);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Frame then
            --  UMLDiagram::isFrame : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Frame);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Icon);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Iso then
            --  UMLDiagram::isIso : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Iso);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Model_Element_A_Uml_Diagram_Element then
            --  UMLDiagramElement::modelElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Model_Element_A_Diagram_Element then
            --  DiagramElement::modelElement : Element

            return
              AMF.Internals.Holders.CMOF_Holders.To_Holder
               (AMF.CMOF.Elements.CMOF_Element_Access'
                 (AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Name then
            --  Diagram::name : String

            return
              League.Holders.To_Holder
               (AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Class_Or_Composite_Structure_Diagram_Navigability_Notation then
            --  UMLClassOrCompositeStructureDiagram::navigabilityNotation : UMLNavigabilityNotationKind

            return
              AMF.UMLDI.Holders.UML_Navigability_Notation_Kinds.To_Holder
               (AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Navigability_Notation);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Class_Or_Composite_Structure_Diagram_Non_Navigability_Notation then
            --  UMLClassOrCompositeStructureDiagram::nonNavigabilityNotation : UMLNavigabilityNotationKind

            return
              AMF.UMLDI.Holders.UML_Navigability_Notation_Kinds.To_Holder
               (AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Non_Navigability_Notation);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owned_Element_UML_Diagram_Element_Owning_Element then
            --  UMLDiagramElement::ownedElement : UMLDiagramElement

            return
              AMF.UMLDI.UML_Diagram_Elements.Collections.UMLDI_UML_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owned_Element_Diagram_Element_Owning_Element then
            --  DiagramElement::ownedElement : DiagramElement

            return
              AMF.DI.Diagram_Elements.Collections.DI_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owning_Element_Diagram_Element_Owned_Element then
            --  DiagramElement::owningElement : DiagramElement

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Diagram_Elements.DI_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Resolution then
            --  Diagram::resolution : Real

            return
              AMF.Holders.Reals.To_Holder
               (AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Resolution);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Class_Diagram_Get;

      ------------------------------------
      -- UMLDI_UML_Classifier_Shape_Get --
      ------------------------------------

      function UMLDI_UML_Classifier_Shape_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            return
              AMF.DC.Holders.To_Holder
               (AMF.UMLDI.UML_Classifier_Shapes.UMLDI_UML_Classifier_Shape_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Bounds);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Compartmentable_Shape_Compartment_A_Compartmented_Shape then
            --  UMLCompartmentableShape::compartment : UMLCompartment

            return
              AMF.UMLDI.UML_Compartments.Collections.UMLDI_UML_Compartment_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Classifier_Shapes.UMLDI_UML_Classifier_Shape_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Compartment);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Classifier_Shape_Is_Double_Sided then
            --  UMLClassifierShape::isDoubleSided : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Classifier_Shapes.UMLDI_UML_Classifier_Shape_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Double_Sided);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Classifier_Shapes.UMLDI_UML_Classifier_Shape_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Icon);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Classifier_Shape_Is_Indent_For_Visibility then
            --  UMLClassifierShape::isIndentForVisibility : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Classifier_Shapes.UMLDI_UML_Classifier_Shape_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Indent_For_Visibility);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Classifier_Shapes.UMLDI_UML_Classifier_Shape_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Classifier_Shapes.UMLDI_UML_Classifier_Shape_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Classifier_Shape_Model_Element_A_Uml_Diagram_Element then
            --  UMLClassifierShape::modelElement : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UMLDI.UML_Classifier_Shapes.UMLDI_UML_Classifier_Shape_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Model_Element_A_Uml_Diagram_Element then
            --  UMLDiagramElement::modelElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Classifier_Shapes.UMLDI_UML_Classifier_Shape_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Model_Element_A_Diagram_Element then
            --  DiagramElement::modelElement : Element

            return
              AMF.Internals.Holders.CMOF_Holders.To_Holder
               (AMF.CMOF.Elements.CMOF_Element_Access'
                 (AMF.UMLDI.UML_Classifier_Shapes.UMLDI_UML_Classifier_Shape_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owned_Element_UML_Diagram_Element_Owning_Element then
            --  UMLDiagramElement::ownedElement : UMLDiagramElement

            return
              AMF.UMLDI.UML_Diagram_Elements.Collections.UMLDI_UML_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Classifier_Shapes.UMLDI_UML_Classifier_Shape_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owned_Element_Diagram_Element_Owning_Element then
            --  DiagramElement::ownedElement : DiagramElement

            return
              AMF.DI.Diagram_Elements.Collections.DI_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Classifier_Shapes.UMLDI_UML_Classifier_Shape_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Classifier_Shapes.UMLDI_UML_Classifier_Shape_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owning_Element_Diagram_Element_Owned_Element then
            --  DiagramElement::owningElement : DiagramElement

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Diagram_Elements.DI_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Classifier_Shapes.UMLDI_UML_Classifier_Shape_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Classifier_Shapes.UMLDI_UML_Classifier_Shape_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Classifier_Shapes.UMLDI_UML_Classifier_Shape_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Classifier_Shape_Get;

      -------------------------------
      -- UMLDI_UML_Compartment_Get --
      -------------------------------

      function UMLDI_UML_Compartment_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Compartment_Element_In_Compartment_A_Owning_Compartment then
            --  UMLCompartment::elementInCompartment : UMLDiagramElement

            return
              AMF.UMLDI.UML_Diagram_Elements.Collections.UMLDI_UML_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Compartments.UMLDI_UML_Compartment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_In_Compartment);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Compartments.UMLDI_UML_Compartment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Icon);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Compartments.UMLDI_UML_Compartment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Compartments.UMLDI_UML_Compartment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Model_Element_A_Uml_Diagram_Element then
            --  UMLDiagramElement::modelElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Compartments.UMLDI_UML_Compartment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Model_Element_A_Diagram_Element then
            --  DiagramElement::modelElement : Element

            return
              AMF.Internals.Holders.CMOF_Holders.To_Holder
               (AMF.CMOF.Elements.CMOF_Element_Access'
                 (AMF.UMLDI.UML_Compartments.UMLDI_UML_Compartment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owned_Element_UML_Diagram_Element_Owning_Element then
            --  UMLDiagramElement::ownedElement : UMLDiagramElement

            return
              AMF.UMLDI.UML_Diagram_Elements.Collections.UMLDI_UML_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Compartments.UMLDI_UML_Compartment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owned_Element_Diagram_Element_Owning_Element then
            --  DiagramElement::ownedElement : DiagramElement

            return
              AMF.DI.Diagram_Elements.Collections.DI_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Compartments.UMLDI_UML_Compartment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Compartments.UMLDI_UML_Compartment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owning_Element_Diagram_Element_Owned_Element then
            --  DiagramElement::owningElement : DiagramElement

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Diagram_Elements.DI_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Compartments.UMLDI_UML_Compartment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Compartments.UMLDI_UML_Compartment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Compartments.UMLDI_UML_Compartment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Compartment_Get;

      -----------------------------------------
      -- UMLDI_UML_Compartmentable_Shape_Get --
      -----------------------------------------

      function UMLDI_UML_Compartmentable_Shape_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            return
              AMF.DC.Holders.To_Holder
               (AMF.UMLDI.UML_Compartmentable_Shapes.UMLDI_UML_Compartmentable_Shape_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Bounds);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Compartmentable_Shape_Compartment_A_Compartmented_Shape then
            --  UMLCompartmentableShape::compartment : UMLCompartment

            return
              AMF.UMLDI.UML_Compartments.Collections.UMLDI_UML_Compartment_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Compartmentable_Shapes.UMLDI_UML_Compartmentable_Shape_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Compartment);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Compartmentable_Shapes.UMLDI_UML_Compartmentable_Shape_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Icon);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Compartmentable_Shapes.UMLDI_UML_Compartmentable_Shape_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Compartmentable_Shapes.UMLDI_UML_Compartmentable_Shape_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Model_Element_A_Uml_Diagram_Element then
            --  UMLDiagramElement::modelElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Compartmentable_Shapes.UMLDI_UML_Compartmentable_Shape_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Model_Element_A_Diagram_Element then
            --  DiagramElement::modelElement : Element

            return
              AMF.Internals.Holders.CMOF_Holders.To_Holder
               (AMF.CMOF.Elements.CMOF_Element_Access'
                 (AMF.UMLDI.UML_Compartmentable_Shapes.UMLDI_UML_Compartmentable_Shape_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owned_Element_UML_Diagram_Element_Owning_Element then
            --  UMLDiagramElement::ownedElement : UMLDiagramElement

            return
              AMF.UMLDI.UML_Diagram_Elements.Collections.UMLDI_UML_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Compartmentable_Shapes.UMLDI_UML_Compartmentable_Shape_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owned_Element_Diagram_Element_Owning_Element then
            --  DiagramElement::ownedElement : DiagramElement

            return
              AMF.DI.Diagram_Elements.Collections.DI_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Compartmentable_Shapes.UMLDI_UML_Compartmentable_Shape_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Compartmentable_Shapes.UMLDI_UML_Compartmentable_Shape_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owning_Element_Diagram_Element_Owned_Element then
            --  DiagramElement::owningElement : DiagramElement

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Diagram_Elements.DI_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Compartmentable_Shapes.UMLDI_UML_Compartmentable_Shape_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Compartmentable_Shapes.UMLDI_UML_Compartmentable_Shape_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Compartmentable_Shapes.UMLDI_UML_Compartmentable_Shape_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Compartmentable_Shape_Get;

      -------------------------------------
      -- UMLDI_UML_Component_Diagram_Get --
      -------------------------------------

      function UMLDI_UML_Component_Diagram_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            return
              AMF.DC.Holders.To_Holder
               (AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Bounds);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Documentation then
            --  Diagram::documentation : String

            return
              League.Holders.To_Holder
               (AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Documentation);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Heading_A_Headed_Diagram then
            --  UMLDiagram::heading : UMLLabel

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access'
                 (AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Heading));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Frame then
            --  UMLDiagram::isFrame : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Frame);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Icon);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Iso then
            --  UMLDiagram::isIso : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Iso);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Model_Element_A_Uml_Diagram_Element then
            --  UMLDiagramElement::modelElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Model_Element_A_Diagram_Element then
            --  DiagramElement::modelElement : Element

            return
              AMF.Internals.Holders.CMOF_Holders.To_Holder
               (AMF.CMOF.Elements.CMOF_Element_Access'
                 (AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Name then
            --  Diagram::name : String

            return
              League.Holders.To_Holder
               (AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owned_Element_UML_Diagram_Element_Owning_Element then
            --  UMLDiagramElement::ownedElement : UMLDiagramElement

            return
              AMF.UMLDI.UML_Diagram_Elements.Collections.UMLDI_UML_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owned_Element_Diagram_Element_Owning_Element then
            --  DiagramElement::ownedElement : DiagramElement

            return
              AMF.DI.Diagram_Elements.Collections.DI_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owning_Element_Diagram_Element_Owned_Element then
            --  DiagramElement::owningElement : DiagramElement

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Diagram_Elements.DI_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Resolution then
            --  Diagram::resolution : Real

            return
              AMF.Holders.Reals.To_Holder
               (AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Resolution);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Component_Diagram_Get;

      -----------------------------------------------
      -- UMLDI_UML_Composite_Structure_Diagram_Get --
      -----------------------------------------------

      function UMLDI_UML_Composite_Structure_Diagram_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            return
              AMF.DC.Holders.To_Holder
               (AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Bounds);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Documentation then
            --  Diagram::documentation : String

            return
              League.Holders.To_Holder
               (AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Documentation);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Heading_A_Headed_Diagram then
            --  UMLDiagram::heading : UMLLabel

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access'
                 (AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Heading));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Class_Or_Composite_Structure_Diagram_Is_Association_Dot_Shown then
            --  UMLClassOrCompositeStructureDiagram::isAssociationDotShown : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Association_Dot_Shown);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Frame then
            --  UMLDiagram::isFrame : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Frame);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Icon);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Iso then
            --  UMLDiagram::isIso : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Iso);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Model_Element_A_Uml_Diagram_Element then
            --  UMLDiagramElement::modelElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Model_Element_A_Diagram_Element then
            --  DiagramElement::modelElement : Element

            return
              AMF.Internals.Holders.CMOF_Holders.To_Holder
               (AMF.CMOF.Elements.CMOF_Element_Access'
                 (AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Name then
            --  Diagram::name : String

            return
              League.Holders.To_Holder
               (AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Class_Or_Composite_Structure_Diagram_Navigability_Notation then
            --  UMLClassOrCompositeStructureDiagram::navigabilityNotation : UMLNavigabilityNotationKind

            return
              AMF.UMLDI.Holders.UML_Navigability_Notation_Kinds.To_Holder
               (AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Navigability_Notation);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Class_Or_Composite_Structure_Diagram_Non_Navigability_Notation then
            --  UMLClassOrCompositeStructureDiagram::nonNavigabilityNotation : UMLNavigabilityNotationKind

            return
              AMF.UMLDI.Holders.UML_Navigability_Notation_Kinds.To_Holder
               (AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Non_Navigability_Notation);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owned_Element_UML_Diagram_Element_Owning_Element then
            --  UMLDiagramElement::ownedElement : UMLDiagramElement

            return
              AMF.UMLDI.UML_Diagram_Elements.Collections.UMLDI_UML_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owned_Element_Diagram_Element_Owning_Element then
            --  DiagramElement::ownedElement : DiagramElement

            return
              AMF.DI.Diagram_Elements.Collections.DI_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owning_Element_Diagram_Element_Owned_Element then
            --  DiagramElement::owningElement : DiagramElement

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Diagram_Elements.DI_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Resolution then
            --  Diagram::resolution : Real

            return
              AMF.Holders.Reals.To_Holder
               (AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Resolution);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Composite_Structure_Diagram_Get;

      --------------------------------------
      -- UMLDI_UML_Deployment_Diagram_Get --
      --------------------------------------

      function UMLDI_UML_Deployment_Diagram_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            return
              AMF.DC.Holders.To_Holder
               (AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Bounds);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Documentation then
            --  Diagram::documentation : String

            return
              League.Holders.To_Holder
               (AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Documentation);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Heading_A_Headed_Diagram then
            --  UMLDiagram::heading : UMLLabel

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access'
                 (AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Heading));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Frame then
            --  UMLDiagram::isFrame : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Frame);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Icon);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Iso then
            --  UMLDiagram::isIso : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Iso);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Model_Element_A_Uml_Diagram_Element then
            --  UMLDiagramElement::modelElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Model_Element_A_Diagram_Element then
            --  DiagramElement::modelElement : Element

            return
              AMF.Internals.Holders.CMOF_Holders.To_Holder
               (AMF.CMOF.Elements.CMOF_Element_Access'
                 (AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Name then
            --  Diagram::name : String

            return
              League.Holders.To_Holder
               (AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owned_Element_UML_Diagram_Element_Owning_Element then
            --  UMLDiagramElement::ownedElement : UMLDiagramElement

            return
              AMF.UMLDI.UML_Diagram_Elements.Collections.UMLDI_UML_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owned_Element_Diagram_Element_Owning_Element then
            --  DiagramElement::ownedElement : DiagramElement

            return
              AMF.DI.Diagram_Elements.Collections.DI_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owning_Element_Diagram_Element_Owned_Element then
            --  DiagramElement::owningElement : DiagramElement

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Diagram_Elements.DI_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Resolution then
            --  Diagram::resolution : Real

            return
              AMF.Holders.Reals.To_Holder
               (AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Resolution);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Deployment_Diagram_Get;

      ------------------------
      -- UMLDI_UML_Edge_Get --
      ------------------------

      function UMLDI_UML_Edge_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Edges.UMLDI_UML_Edge_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Icon);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Edges.UMLDI_UML_Edge_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Edges.UMLDI_UML_Edge_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Model_Element_A_Uml_Diagram_Element then
            --  UMLDiagramElement::modelElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Edges.UMLDI_UML_Edge_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Model_Element_A_Diagram_Element then
            --  DiagramElement::modelElement : Element

            return
              AMF.Internals.Holders.CMOF_Holders.To_Holder
               (AMF.CMOF.Elements.CMOF_Element_Access'
                 (AMF.UMLDI.UML_Edges.UMLDI_UML_Edge_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owned_Element_UML_Diagram_Element_Owning_Element then
            --  UMLDiagramElement::ownedElement : UMLDiagramElement

            return
              AMF.UMLDI.UML_Diagram_Elements.Collections.UMLDI_UML_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Edges.UMLDI_UML_Edge_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owned_Element_Diagram_Element_Owning_Element then
            --  DiagramElement::ownedElement : DiagramElement

            return
              AMF.DI.Diagram_Elements.Collections.DI_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Edges.UMLDI_UML_Edge_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Edges.UMLDI_UML_Edge_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owning_Element_Diagram_Element_Owned_Element then
            --  DiagramElement::owningElement : DiagramElement

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Diagram_Elements.DI_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Edges.UMLDI_UML_Edge_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Edges.UMLDI_UML_Edge_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Edges.UMLDI_UML_Edge_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Edge_Source_A_Source_Edge then
            --  UMLEdge::source : UMLDiagramElement

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Edges.UMLDI_UML_Edge_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Source));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Edge_Source_A_Source_Edge then
            --  Edge::source : DiagramElement

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Diagram_Elements.DI_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Edges.UMLDI_UML_Edge_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Source));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Edge_Target_A_Target_Edge then
            --  UMLEdge::target : UMLDiagramElement

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Edges.UMLDI_UML_Edge_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Target));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Edge_Target_A_Target_Edge then
            --  Edge::target : DiagramElement

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Diagram_Elements.DI_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Edges.UMLDI_UML_Edge_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Target));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Edge_Waypoint then
            --  Edge::waypoint : Point

            return
              AMF.DC.Point_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Edges.UMLDI_UML_Edge_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Waypoint);

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Edge_Get;

      ---------------------------------------
      -- UMLDI_UML_Interaction_Diagram_Get --
      ---------------------------------------

      function UMLDI_UML_Interaction_Diagram_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            return
              AMF.DC.Holders.To_Holder
               (AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Bounds);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Documentation then
            --  Diagram::documentation : String

            return
              League.Holders.To_Holder
               (AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Documentation);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Heading_A_Headed_Diagram then
            --  UMLDiagram::heading : UMLLabel

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access'
                 (AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Heading));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Frame then
            --  UMLDiagram::isFrame : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Frame);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Icon);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Iso then
            --  UMLDiagram::isIso : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Iso);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Interaction_Diagram_Kind then
            --  UMLInteractionDiagram::kind : UMLInteractionDiagramKind

            return
              AMF.UMLDI.Holders.UML_Interaction_Diagram_Kinds.To_Holder
               (AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Kind);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Behavior_Diagram_Model_Element_A_Uml_Diagram_Element then
            --  UMLBehaviorDiagram::modelElement : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Model_Element_A_Uml_Diagram_Element then
            --  UMLDiagramElement::modelElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Interaction_Diagram_Model_Element_A_Uml_Diagram_Element then
            --  UMLInteractionDiagram::modelElement : Interaction

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access'
                 (AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Model_Element_A_Diagram_Element then
            --  DiagramElement::modelElement : Element

            return
              AMF.Internals.Holders.CMOF_Holders.To_Holder
               (AMF.CMOF.Elements.CMOF_Element_Access'
                 (AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Name then
            --  Diagram::name : String

            return
              League.Holders.To_Holder
               (AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owned_Element_UML_Diagram_Element_Owning_Element then
            --  UMLDiagramElement::ownedElement : UMLDiagramElement

            return
              AMF.UMLDI.UML_Diagram_Elements.Collections.UMLDI_UML_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owned_Element_Diagram_Element_Owning_Element then
            --  DiagramElement::ownedElement : DiagramElement

            return
              AMF.DI.Diagram_Elements.Collections.DI_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owning_Element_Diagram_Element_Owned_Element then
            --  DiagramElement::owningElement : DiagramElement

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Diagram_Elements.DI_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Resolution then
            --  Diagram::resolution : Real

            return
              AMF.Holders.Reals.To_Holder
               (AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Resolution);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Interaction_Diagram_Get;

      -------------------------------------------
      -- UMLDI_UML_Interaction_Table_Label_Get --
      -------------------------------------------

      function UMLDI_UML_Interaction_Table_Label_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            return
              AMF.DC.Holders.To_Holder
               (AMF.UMLDI.UML_Interaction_Table_Labels.UMLDI_UML_Interaction_Table_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Bounds);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Interaction_Table_Labels.UMLDI_UML_Interaction_Table_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Icon);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Interaction_Table_Label_Kind then
            --  UMLInteractionTableLabel::kind : UMLInteractionTableLabelKind

            return
              AMF.UMLDI.Holders.UML_Interaction_Table_Label_Kinds.To_Holder
               (AMF.UMLDI.UML_Interaction_Table_Labels.UMLDI_UML_Interaction_Table_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Kind);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Interaction_Table_Labels.UMLDI_UML_Interaction_Table_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Interaction_Table_Labels.UMLDI_UML_Interaction_Table_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Model_Element_A_Uml_Diagram_Element then
            --  UMLDiagramElement::modelElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Interaction_Table_Labels.UMLDI_UML_Interaction_Table_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Model_Element_A_Diagram_Element then
            --  DiagramElement::modelElement : Element

            return
              AMF.Internals.Holders.CMOF_Holders.To_Holder
               (AMF.CMOF.Elements.CMOF_Element_Access'
                 (AMF.UMLDI.UML_Interaction_Table_Labels.UMLDI_UML_Interaction_Table_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owned_Element_UML_Diagram_Element_Owning_Element then
            --  UMLDiagramElement::ownedElement : UMLDiagramElement

            return
              AMF.UMLDI.UML_Diagram_Elements.Collections.UMLDI_UML_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Interaction_Table_Labels.UMLDI_UML_Interaction_Table_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owned_Element_Diagram_Element_Owning_Element then
            --  DiagramElement::ownedElement : DiagramElement

            return
              AMF.DI.Diagram_Elements.Collections.DI_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Interaction_Table_Labels.UMLDI_UML_Interaction_Table_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Interaction_Table_Labels.UMLDI_UML_Interaction_Table_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owning_Element_Diagram_Element_Owned_Element then
            --  DiagramElement::owningElement : DiagramElement

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Diagram_Elements.DI_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Interaction_Table_Labels.UMLDI_UML_Interaction_Table_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Interaction_Table_Labels.UMLDI_UML_Interaction_Table_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Interaction_Table_Labels.UMLDI_UML_Interaction_Table_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Label_Text then
            --  UMLLabel::text : String

            return
              League.Holders.To_Holder
               (AMF.UMLDI.UML_Interaction_Table_Labels.UMLDI_UML_Interaction_Table_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Text);

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Interaction_Table_Label_Get;

      ---------------------------------
      -- UMLDI_UML_Keyword_Label_Get --
      ---------------------------------

      function UMLDI_UML_Keyword_Label_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            return
              AMF.DC.Holders.To_Holder
               (AMF.UMLDI.UML_Keyword_Labels.UMLDI_UML_Keyword_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Bounds);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Keyword_Labels.UMLDI_UML_Keyword_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Icon);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Keyword_Labels.UMLDI_UML_Keyword_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Keyword_Labels.UMLDI_UML_Keyword_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Model_Element_A_Uml_Diagram_Element then
            --  UMLDiagramElement::modelElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Keyword_Labels.UMLDI_UML_Keyword_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Model_Element_A_Diagram_Element then
            --  DiagramElement::modelElement : Element

            return
              AMF.Internals.Holders.CMOF_Holders.To_Holder
               (AMF.CMOF.Elements.CMOF_Element_Access'
                 (AMF.UMLDI.UML_Keyword_Labels.UMLDI_UML_Keyword_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owned_Element_UML_Diagram_Element_Owning_Element then
            --  UMLDiagramElement::ownedElement : UMLDiagramElement

            return
              AMF.UMLDI.UML_Diagram_Elements.Collections.UMLDI_UML_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Keyword_Labels.UMLDI_UML_Keyword_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owned_Element_Diagram_Element_Owning_Element then
            --  DiagramElement::ownedElement : DiagramElement

            return
              AMF.DI.Diagram_Elements.Collections.DI_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Keyword_Labels.UMLDI_UML_Keyword_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Keyword_Labels.UMLDI_UML_Keyword_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owning_Element_Diagram_Element_Owned_Element then
            --  DiagramElement::owningElement : DiagramElement

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Diagram_Elements.DI_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Keyword_Labels.UMLDI_UML_Keyword_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Keyword_Labels.UMLDI_UML_Keyword_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Keyword_Labels.UMLDI_UML_Keyword_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Label_Text then
            --  UMLLabel::text : String

            return
              League.Holders.To_Holder
               (AMF.UMLDI.UML_Keyword_Labels.UMLDI_UML_Keyword_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Text);

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Keyword_Label_Get;

      -------------------------
      -- UMLDI_UML_Label_Get --
      -------------------------

      function UMLDI_UML_Label_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            return
              AMF.DC.Holders.To_Holder
               (AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Bounds);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Icon);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Model_Element_A_Uml_Diagram_Element then
            --  UMLDiagramElement::modelElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Model_Element_A_Diagram_Element then
            --  DiagramElement::modelElement : Element

            return
              AMF.Internals.Holders.CMOF_Holders.To_Holder
               (AMF.CMOF.Elements.CMOF_Element_Access'
                 (AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owned_Element_UML_Diagram_Element_Owning_Element then
            --  UMLDiagramElement::ownedElement : UMLDiagramElement

            return
              AMF.UMLDI.UML_Diagram_Elements.Collections.UMLDI_UML_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owned_Element_Diagram_Element_Owning_Element then
            --  DiagramElement::ownedElement : DiagramElement

            return
              AMF.DI.Diagram_Elements.Collections.DI_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owning_Element_Diagram_Element_Owned_Element then
            --  DiagramElement::owningElement : DiagramElement

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Diagram_Elements.DI_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Label_Text then
            --  UMLLabel::text : String

            return
              League.Holders.To_Holder
               (AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Text);

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Label_Get;

      --------------------------------------
      -- UMLDI_UML_Multiplicity_Label_Get --
      --------------------------------------

      function UMLDI_UML_Multiplicity_Label_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            return
              AMF.DC.Holders.To_Holder
               (AMF.UMLDI.UML_Multiplicity_Labels.UMLDI_UML_Multiplicity_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Bounds);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Multiplicity_Labels.UMLDI_UML_Multiplicity_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Icon);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Multiplicity_Labels.UMLDI_UML_Multiplicity_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Multiplicity_Labels.UMLDI_UML_Multiplicity_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Model_Element_A_Uml_Diagram_Element then
            --  UMLDiagramElement::modelElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Multiplicity_Labels.UMLDI_UML_Multiplicity_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Multiplicity_Label_Model_Element_A_Uml_Diagram_Element then
            --  UMLMultiplicityLabel::modelElement : MultiplicityElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Multiplicity_Elements.UML_Multiplicity_Element_Access'
                 (AMF.UMLDI.UML_Multiplicity_Labels.UMLDI_UML_Multiplicity_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Model_Element_A_Diagram_Element then
            --  DiagramElement::modelElement : Element

            return
              AMF.Internals.Holders.CMOF_Holders.To_Holder
               (AMF.CMOF.Elements.CMOF_Element_Access'
                 (AMF.UMLDI.UML_Multiplicity_Labels.UMLDI_UML_Multiplicity_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owned_Element_UML_Diagram_Element_Owning_Element then
            --  UMLDiagramElement::ownedElement : UMLDiagramElement

            return
              AMF.UMLDI.UML_Diagram_Elements.Collections.UMLDI_UML_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Multiplicity_Labels.UMLDI_UML_Multiplicity_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owned_Element_Diagram_Element_Owning_Element then
            --  DiagramElement::ownedElement : DiagramElement

            return
              AMF.DI.Diagram_Elements.Collections.DI_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Multiplicity_Labels.UMLDI_UML_Multiplicity_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Multiplicity_Labels.UMLDI_UML_Multiplicity_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owning_Element_Diagram_Element_Owned_Element then
            --  DiagramElement::owningElement : DiagramElement

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Diagram_Elements.DI_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Multiplicity_Labels.UMLDI_UML_Multiplicity_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Multiplicity_Labels.UMLDI_UML_Multiplicity_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Multiplicity_Labels.UMLDI_UML_Multiplicity_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Label_Text then
            --  UMLLabel::text : String

            return
              League.Holders.To_Holder
               (AMF.UMLDI.UML_Multiplicity_Labels.UMLDI_UML_Multiplicity_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Text);

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Multiplicity_Label_Get;

      ------------------------------
      -- UMLDI_UML_Name_Label_Get --
      ------------------------------

      function UMLDI_UML_Name_Label_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            return
              AMF.DC.Holders.To_Holder
               (AMF.UMLDI.UML_Name_Labels.UMLDI_UML_Name_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Bounds);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Name_Labels.UMLDI_UML_Name_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Icon);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Name_Labels.UMLDI_UML_Name_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Name_Labels.UMLDI_UML_Name_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Name_Label_Mode_Element_A_Uml_Diagram_Element then
            --  UMLNameLabel::modeElement : NamedElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Named_Elements.UML_Named_Element_Access'
                 (AMF.UMLDI.UML_Name_Labels.UMLDI_UML_Name_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Mode_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Model_Element_A_Uml_Diagram_Element then
            --  UMLDiagramElement::modelElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Name_Labels.UMLDI_UML_Name_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Model_Element_A_Diagram_Element then
            --  DiagramElement::modelElement : Element

            return
              AMF.Internals.Holders.CMOF_Holders.To_Holder
               (AMF.CMOF.Elements.CMOF_Element_Access'
                 (AMF.UMLDI.UML_Name_Labels.UMLDI_UML_Name_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owned_Element_UML_Diagram_Element_Owning_Element then
            --  UMLDiagramElement::ownedElement : UMLDiagramElement

            return
              AMF.UMLDI.UML_Diagram_Elements.Collections.UMLDI_UML_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Name_Labels.UMLDI_UML_Name_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owned_Element_Diagram_Element_Owning_Element then
            --  DiagramElement::ownedElement : DiagramElement

            return
              AMF.DI.Diagram_Elements.Collections.DI_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Name_Labels.UMLDI_UML_Name_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Name_Labels.UMLDI_UML_Name_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owning_Element_Diagram_Element_Owned_Element then
            --  DiagramElement::owningElement : DiagramElement

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Diagram_Elements.DI_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Name_Labels.UMLDI_UML_Name_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Name_Labels.UMLDI_UML_Name_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Name_Labels.UMLDI_UML_Name_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Label_Text then
            --  UMLLabel::text : String

            return
              League.Holders.To_Holder
               (AMF.UMLDI.UML_Name_Labels.UMLDI_UML_Name_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Text);

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Name_Label_Get;

      ----------------------------------
      -- UMLDI_UML_Object_Diagram_Get --
      ----------------------------------

      function UMLDI_UML_Object_Diagram_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            return
              AMF.DC.Holders.To_Holder
               (AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Bounds);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Documentation then
            --  Diagram::documentation : String

            return
              League.Holders.To_Holder
               (AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Documentation);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Heading_A_Headed_Diagram then
            --  UMLDiagram::heading : UMLLabel

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access'
                 (AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Heading));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Frame then
            --  UMLDiagram::isFrame : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Frame);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Icon);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Iso then
            --  UMLDiagram::isIso : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Iso);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Model_Element_A_Uml_Diagram_Element then
            --  UMLDiagramElement::modelElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Model_Element_A_Diagram_Element then
            --  DiagramElement::modelElement : Element

            return
              AMF.Internals.Holders.CMOF_Holders.To_Holder
               (AMF.CMOF.Elements.CMOF_Element_Access'
                 (AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Name then
            --  Diagram::name : String

            return
              League.Holders.To_Holder
               (AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owned_Element_UML_Diagram_Element_Owning_Element then
            --  UMLDiagramElement::ownedElement : UMLDiagramElement

            return
              AMF.UMLDI.UML_Diagram_Elements.Collections.UMLDI_UML_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owned_Element_Diagram_Element_Owning_Element then
            --  DiagramElement::ownedElement : DiagramElement

            return
              AMF.DI.Diagram_Elements.Collections.DI_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owning_Element_Diagram_Element_Owned_Element then
            --  DiagramElement::owningElement : DiagramElement

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Diagram_Elements.DI_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Resolution then
            --  Diagram::resolution : Real

            return
              AMF.Holders.Reals.To_Holder
               (AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Resolution);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Object_Diagram_Get;

      -----------------------------------
      -- UMLDI_UML_Package_Diagram_Get --
      -----------------------------------

      function UMLDI_UML_Package_Diagram_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            return
              AMF.DC.Holders.To_Holder
               (AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Bounds);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Documentation then
            --  Diagram::documentation : String

            return
              League.Holders.To_Holder
               (AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Documentation);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Heading_A_Headed_Diagram then
            --  UMLDiagram::heading : UMLLabel

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access'
                 (AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Heading));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Frame then
            --  UMLDiagram::isFrame : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Frame);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Icon);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Iso then
            --  UMLDiagram::isIso : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Iso);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Model_Element_A_Uml_Diagram_Element then
            --  UMLDiagramElement::modelElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Model_Element_A_Diagram_Element then
            --  DiagramElement::modelElement : Element

            return
              AMF.Internals.Holders.CMOF_Holders.To_Holder
               (AMF.CMOF.Elements.CMOF_Element_Access'
                 (AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Name then
            --  Diagram::name : String

            return
              League.Holders.To_Holder
               (AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owned_Element_UML_Diagram_Element_Owning_Element then
            --  UMLDiagramElement::ownedElement : UMLDiagramElement

            return
              AMF.UMLDI.UML_Diagram_Elements.Collections.UMLDI_UML_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owned_Element_Diagram_Element_Owning_Element then
            --  DiagramElement::ownedElement : DiagramElement

            return
              AMF.DI.Diagram_Elements.Collections.DI_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owning_Element_Diagram_Element_Owned_Element then
            --  DiagramElement::owningElement : DiagramElement

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Diagram_Elements.DI_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Resolution then
            --  Diagram::resolution : Real

            return
              AMF.Holders.Reals.To_Holder
               (AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Resolution);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Package_Diagram_Get;

      -----------------------------------
      -- UMLDI_UML_Profile_Diagram_Get --
      -----------------------------------

      function UMLDI_UML_Profile_Diagram_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            return
              AMF.DC.Holders.To_Holder
               (AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Bounds);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Documentation then
            --  Diagram::documentation : String

            return
              League.Holders.To_Holder
               (AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Documentation);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Heading_A_Headed_Diagram then
            --  UMLDiagram::heading : UMLLabel

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access'
                 (AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Heading));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Frame then
            --  UMLDiagram::isFrame : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Frame);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Icon);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Iso then
            --  UMLDiagram::isIso : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Iso);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Model_Element_A_Uml_Diagram_Element then
            --  UMLDiagramElement::modelElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Model_Element_A_Diagram_Element then
            --  DiagramElement::modelElement : Element

            return
              AMF.Internals.Holders.CMOF_Holders.To_Holder
               (AMF.CMOF.Elements.CMOF_Element_Access'
                 (AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Name then
            --  Diagram::name : String

            return
              League.Holders.To_Holder
               (AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owned_Element_UML_Diagram_Element_Owning_Element then
            --  UMLDiagramElement::ownedElement : UMLDiagramElement

            return
              AMF.UMLDI.UML_Diagram_Elements.Collections.UMLDI_UML_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owned_Element_Diagram_Element_Owning_Element then
            --  DiagramElement::ownedElement : DiagramElement

            return
              AMF.DI.Diagram_Elements.Collections.DI_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owning_Element_Diagram_Element_Owned_Element then
            --  DiagramElement::owningElement : DiagramElement

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Diagram_Elements.DI_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Resolution then
            --  Diagram::resolution : Real

            return
              AMF.Holders.Reals.To_Holder
               (AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Resolution);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Profile_Diagram_Get;

      -----------------------------------
      -- UMLDI_UML_Redefines_Label_Get --
      -----------------------------------

      function UMLDI_UML_Redefines_Label_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            return
              AMF.DC.Holders.To_Holder
               (AMF.UMLDI.UML_Redefines_Labels.UMLDI_UML_Redefines_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Bounds);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Redefines_Labels.UMLDI_UML_Redefines_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Icon);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Redefines_Labels.UMLDI_UML_Redefines_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Redefines_Labels.UMLDI_UML_Redefines_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Model_Element_A_Uml_Diagram_Element then
            --  UMLDiagramElement::modelElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Redefines_Labels.UMLDI_UML_Redefines_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Redefines_Label_Model_Element_A_Uml_Diagram_Element then
            --  UMLRedefinesLabel::modelElement : RedefinableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Elements.UML_Redefinable_Element_Access'
                 (AMF.UMLDI.UML_Redefines_Labels.UMLDI_UML_Redefines_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Model_Element_A_Diagram_Element then
            --  DiagramElement::modelElement : Element

            return
              AMF.Internals.Holders.CMOF_Holders.To_Holder
               (AMF.CMOF.Elements.CMOF_Element_Access'
                 (AMF.UMLDI.UML_Redefines_Labels.UMLDI_UML_Redefines_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owned_Element_UML_Diagram_Element_Owning_Element then
            --  UMLDiagramElement::ownedElement : UMLDiagramElement

            return
              AMF.UMLDI.UML_Diagram_Elements.Collections.UMLDI_UML_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Redefines_Labels.UMLDI_UML_Redefines_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owned_Element_Diagram_Element_Owning_Element then
            --  DiagramElement::ownedElement : DiagramElement

            return
              AMF.DI.Diagram_Elements.Collections.DI_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Redefines_Labels.UMLDI_UML_Redefines_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Redefines_Labels.UMLDI_UML_Redefines_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owning_Element_Diagram_Element_Owned_Element then
            --  DiagramElement::owningElement : DiagramElement

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Diagram_Elements.DI_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Redefines_Labels.UMLDI_UML_Redefines_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Redefines_Labels.UMLDI_UML_Redefines_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Redefines_Labels.UMLDI_UML_Redefines_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Label_Text then
            --  UMLLabel::text : String

            return
              League.Holders.To_Holder
               (AMF.UMLDI.UML_Redefines_Labels.UMLDI_UML_Redefines_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Text);

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Redefines_Label_Get;

      -------------------------
      -- UMLDI_UML_Shape_Get --
      -------------------------

      function UMLDI_UML_Shape_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            return
              AMF.DC.Holders.To_Holder
               (AMF.UMLDI.UML_Shapes.UMLDI_UML_Shape_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Bounds);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Shapes.UMLDI_UML_Shape_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Icon);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Shapes.UMLDI_UML_Shape_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Shapes.UMLDI_UML_Shape_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Model_Element_A_Uml_Diagram_Element then
            --  UMLDiagramElement::modelElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Shapes.UMLDI_UML_Shape_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Model_Element_A_Diagram_Element then
            --  DiagramElement::modelElement : Element

            return
              AMF.Internals.Holders.CMOF_Holders.To_Holder
               (AMF.CMOF.Elements.CMOF_Element_Access'
                 (AMF.UMLDI.UML_Shapes.UMLDI_UML_Shape_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owned_Element_UML_Diagram_Element_Owning_Element then
            --  UMLDiagramElement::ownedElement : UMLDiagramElement

            return
              AMF.UMLDI.UML_Diagram_Elements.Collections.UMLDI_UML_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Shapes.UMLDI_UML_Shape_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owned_Element_Diagram_Element_Owning_Element then
            --  DiagramElement::ownedElement : DiagramElement

            return
              AMF.DI.Diagram_Elements.Collections.DI_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Shapes.UMLDI_UML_Shape_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Shapes.UMLDI_UML_Shape_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owning_Element_Diagram_Element_Owned_Element then
            --  DiagramElement::owningElement : DiagramElement

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Diagram_Elements.DI_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Shapes.UMLDI_UML_Shape_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Shapes.UMLDI_UML_Shape_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Shapes.UMLDI_UML_Shape_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Shape_Get;

      -----------------------------------------
      -- UMLDI_UML_State_Machine_Diagram_Get --
      -----------------------------------------

      function UMLDI_UML_State_Machine_Diagram_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            return
              AMF.DC.Holders.To_Holder
               (AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Bounds);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Documentation then
            --  Diagram::documentation : String

            return
              League.Holders.To_Holder
               (AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Documentation);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Heading_A_Headed_Diagram then
            --  UMLDiagram::heading : UMLLabel

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access'
                 (AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Heading));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_State_Machine_Diagram_Inherited_State_Border then
            --  UMLStateMachineDiagram::inheritedStateBorder : UMLInheritedStateBorderKind

            return
              AMF.UMLDI.Holders.To_Holder
               (AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_State_Border);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_State_Machine_Diagram_Is_Collapse_State_Icon then
            --  UMLStateMachineDiagram::isCollapseStateIcon : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Collapse_State_Icon);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Frame then
            --  UMLDiagram::isFrame : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Frame);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Icon);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Iso then
            --  UMLDiagram::isIso : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Iso);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_State_Machine_Diagram_Is_Transition_Oriented then
            --  UMLStateMachineDiagram::isTransitionOriented : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Transition_Oriented);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Behavior_Diagram_Model_Element_A_Uml_Diagram_Element then
            --  UMLBehaviorDiagram::modelElement : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Model_Element_A_Uml_Diagram_Element then
            --  UMLDiagramElement::modelElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_State_Machine_Diagram_Model_Element_A_Uml_Diagram_Element then
            --  UMLStateMachineDiagram::modelElement : StateMachine

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access'
                 (AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Model_Element_A_Diagram_Element then
            --  DiagramElement::modelElement : Element

            return
              AMF.Internals.Holders.CMOF_Holders.To_Holder
               (AMF.CMOF.Elements.CMOF_Element_Access'
                 (AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Name then
            --  Diagram::name : String

            return
              League.Holders.To_Holder
               (AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owned_Element_UML_Diagram_Element_Owning_Element then
            --  UMLDiagramElement::ownedElement : UMLDiagramElement

            return
              AMF.UMLDI.UML_Diagram_Elements.Collections.UMLDI_UML_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owned_Element_Diagram_Element_Owning_Element then
            --  DiagramElement::ownedElement : DiagramElement

            return
              AMF.DI.Diagram_Elements.Collections.DI_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access'
                 (AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owning_Element_Diagram_Element_Owned_Element then
            --  DiagramElement::owningElement : DiagramElement

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Diagram_Elements.DI_Diagram_Element_Access'
                 (AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Resolution then
            --  Diagram::resolution : Real

            return
              AMF.Holders.Reals.To_Holder
               (AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Resolution);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_State_Machine_Diagram_Get;

      -------------------------------
      -- UMLDI_UML_State_Shape_Get --
      -------------------------------

      function UMLDI_UML_State_Shape_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            return
              AMF.DC.Holders.To_Holder
               (AMF.UMLDI.UML_State_Shapes.UMLDI_UML_State_Shape_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Bounds);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Compartmentable_Shape_Compartment_A_Compartmented_Shape then
            --  UMLCompartmentableShape::compartment : UMLCompartment

            return
              AMF.UMLDI.UML_Compartments.Collections.UMLDI_UML_Compartment_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_State_Shapes.UMLDI_UML_State_Shape_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Compartment);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_State_Shapes.UMLDI_UML_State_Shape_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Icon);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_State_Shape_Is_Tabbed then
            --  UMLStateShape::isTabbed : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_State_Shapes.UMLDI_UML_State_Shape_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Tabbed);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_State_Shapes.UMLDI_UML_State_Shape_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_State_Shapes.UMLDI_UML_State_Shape_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Model_Element_A_Uml_Diagram_Element then
            --  UMLDiagramElement::modelElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_State_Shapes.UMLDI_UML_State_Shape_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_State_Shape_Model_Element_A_Uml_Diagram_Element then
            --  UMLStateShape::modelElement : State

            return
              AMF.UML.States.Collections.UML_State_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_State_Shapes.UMLDI_UML_State_Shape_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Model_Element_A_Diagram_Element then
            --  DiagramElement::modelElement : Element

            return
              AMF.Internals.Holders.CMOF_Holders.To_Holder
               (AMF.CMOF.Elements.CMOF_Element_Access'
                 (AMF.UMLDI.UML_State_Shapes.UMLDI_UML_State_Shape_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owned_Element_UML_Diagram_Element_Owning_Element then
            --  UMLDiagramElement::ownedElement : UMLDiagramElement

            return
              AMF.UMLDI.UML_Diagram_Elements.Collections.UMLDI_UML_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_State_Shapes.UMLDI_UML_State_Shape_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owned_Element_Diagram_Element_Owning_Element then
            --  DiagramElement::ownedElement : DiagramElement

            return
              AMF.DI.Diagram_Elements.Collections.DI_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_State_Shapes.UMLDI_UML_State_Shape_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access'
                 (AMF.UMLDI.UML_State_Shapes.UMLDI_UML_State_Shape_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owning_Element_Diagram_Element_Owned_Element then
            --  DiagramElement::owningElement : DiagramElement

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Diagram_Elements.DI_Diagram_Element_Access'
                 (AMF.UMLDI.UML_State_Shapes.UMLDI_UML_State_Shape_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_State_Shapes.UMLDI_UML_State_Shape_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_State_Shapes.UMLDI_UML_State_Shape_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_State_Shape_Get;

      ---------------------------------------------------
      -- UMLDI_UML_Stereotype_Property_Value_Label_Get --
      ---------------------------------------------------

      function UMLDI_UML_Stereotype_Property_Value_Label_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            return
              AMF.DC.Holders.To_Holder
               (AMF.UMLDI.UML_Stereotype_Property_Value_Labels.UMLDI_UML_Stereotype_Property_Value_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Bounds);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Stereotype_Property_Value_Labels.UMLDI_UML_Stereotype_Property_Value_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Icon);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Stereotype_Property_Value_Labels.UMLDI_UML_Stereotype_Property_Value_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Stereotype_Property_Value_Labels.UMLDI_UML_Stereotype_Property_Value_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Model_Element_A_Uml_Diagram_Element then
            --  UMLDiagramElement::modelElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Stereotype_Property_Value_Labels.UMLDI_UML_Stereotype_Property_Value_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Stereotype_Property_Value_Label_Model_Element_A_Uml_Diagram_Element then
            --  UMLStereotypePropertyValueLabel::modelElement : Property

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access'
                 (AMF.UMLDI.UML_Stereotype_Property_Value_Labels.UMLDI_UML_Stereotype_Property_Value_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Model_Element_A_Diagram_Element then
            --  DiagramElement::modelElement : Element

            return
              AMF.Internals.Holders.CMOF_Holders.To_Holder
               (AMF.CMOF.Elements.CMOF_Element_Access'
                 (AMF.UMLDI.UML_Stereotype_Property_Value_Labels.UMLDI_UML_Stereotype_Property_Value_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owned_Element_UML_Diagram_Element_Owning_Element then
            --  UMLDiagramElement::ownedElement : UMLDiagramElement

            return
              AMF.UMLDI.UML_Diagram_Elements.Collections.UMLDI_UML_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Stereotype_Property_Value_Labels.UMLDI_UML_Stereotype_Property_Value_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owned_Element_Diagram_Element_Owning_Element then
            --  DiagramElement::ownedElement : DiagramElement

            return
              AMF.DI.Diagram_Elements.Collections.DI_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Stereotype_Property_Value_Labels.UMLDI_UML_Stereotype_Property_Value_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Stereotype_Property_Value_Labels.UMLDI_UML_Stereotype_Property_Value_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owning_Element_Diagram_Element_Owned_Element then
            --  DiagramElement::owningElement : DiagramElement

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Diagram_Elements.DI_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Stereotype_Property_Value_Labels.UMLDI_UML_Stereotype_Property_Value_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Stereotype_Property_Value_Labels.UMLDI_UML_Stereotype_Property_Value_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Stereotype_Property_Value_Labels.UMLDI_UML_Stereotype_Property_Value_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Stereotype_Property_Value_Label_Stereotyped_Element_A_Label_Showing_Stereotype_Value then
            --  UMLStereotypePropertyValueLabel::stereotypedElement : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UMLDI.UML_Stereotype_Property_Value_Labels.UMLDI_UML_Stereotype_Property_Value_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Stereotyped_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Label_Text then
            --  UMLLabel::text : String

            return
              League.Holders.To_Holder
               (AMF.UMLDI.UML_Stereotype_Property_Value_Labels.UMLDI_UML_Stereotype_Property_Value_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Text);

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Stereotype_Property_Value_Label_Get;

      -------------------------
      -- UMLDI_UML_Style_Get --
      -------------------------

      function UMLDI_UML_Style_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Style_Font_Name then
            --  UMLStyle::fontName : String

            return
              AMF.Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Font_Name);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Style_Font_Size then
            --  UMLStyle::fontSize : Real

            return
              AMF.Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Font_Size);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Style_Get;

      ---------------------------------------
      -- UMLDI_UML_Typed_Element_Label_Get --
      ---------------------------------------

      function UMLDI_UML_Typed_Element_Label_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            return
              AMF.DC.Holders.To_Holder
               (AMF.UMLDI.UML_Typed_Element_Labels.UMLDI_UML_Typed_Element_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Bounds);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Typed_Element_Labels.UMLDI_UML_Typed_Element_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Icon);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Typed_Element_Labels.UMLDI_UML_Typed_Element_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Typed_Element_Labels.UMLDI_UML_Typed_Element_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Model_Element_A_Uml_Diagram_Element then
            --  UMLDiagramElement::modelElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Typed_Element_Labels.UMLDI_UML_Typed_Element_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Model_Element_A_Diagram_Element then
            --  DiagramElement::modelElement : Element

            return
              AMF.Internals.Holders.CMOF_Holders.To_Holder
               (AMF.CMOF.Elements.CMOF_Element_Access'
                 (AMF.UMLDI.UML_Typed_Element_Labels.UMLDI_UML_Typed_Element_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owned_Element_UML_Diagram_Element_Owning_Element then
            --  UMLDiagramElement::ownedElement : UMLDiagramElement

            return
              AMF.UMLDI.UML_Diagram_Elements.Collections.UMLDI_UML_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Typed_Element_Labels.UMLDI_UML_Typed_Element_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owned_Element_Diagram_Element_Owning_Element then
            --  DiagramElement::ownedElement : DiagramElement

            return
              AMF.DI.Diagram_Elements.Collections.DI_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Typed_Element_Labels.UMLDI_UML_Typed_Element_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Typed_Element_Labels.UMLDI_UML_Typed_Element_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owning_Element_Diagram_Element_Owned_Element then
            --  DiagramElement::owningElement : DiagramElement

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Diagram_Elements.DI_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Typed_Element_Labels.UMLDI_UML_Typed_Element_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Typed_Element_Labels.UMLDI_UML_Typed_Element_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Typed_Element_Labels.UMLDI_UML_Typed_Element_Label_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Label_Text then
            --  UMLLabel::text : String

            return
              League.Holders.To_Holder
               (AMF.UMLDI.UML_Typed_Element_Labels.UMLDI_UML_Typed_Element_Label_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Text);

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Typed_Element_Label_Get;

      ------------------------------------
      -- UMLDI_UML_Use_Case_Diagram_Get --
      ------------------------------------

      function UMLDI_UML_Use_Case_Diagram_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            return
              AMF.DC.Holders.To_Holder
               (AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Bounds);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Documentation then
            --  Diagram::documentation : String

            return
              League.Holders.To_Holder
               (AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Documentation);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Heading_A_Headed_Diagram then
            --  UMLDiagram::heading : UMLLabel

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access'
                 (AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Heading));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Frame then
            --  UMLDiagram::isFrame : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Frame);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Icon);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Iso then
            --  UMLDiagram::isIso : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Iso);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Style));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Behavior_Diagram_Model_Element_A_Uml_Diagram_Element then
            --  UMLBehaviorDiagram::modelElement : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Model_Element_A_Uml_Diagram_Element then
            --  UMLDiagramElement::modelElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Model_Element_A_Diagram_Element then
            --  DiagramElement::modelElement : Element

            return
              AMF.Internals.Holders.CMOF_Holders.To_Holder
               (AMF.CMOF.Elements.CMOF_Element_Access'
                 (AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Model_Element));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Name then
            --  Diagram::name : String

            return
              League.Holders.To_Holder
               (AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owned_Element_UML_Diagram_Element_Owning_Element then
            --  UMLDiagramElement::ownedElement : UMLDiagramElement

            return
              AMF.UMLDI.UML_Diagram_Elements.Collections.UMLDI_UML_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owned_Element_Diagram_Element_Owning_Element then
            --  DiagramElement::ownedElement : DiagramElement

            return
              AMF.DI.Diagram_Elements.Collections.DI_Diagram_Element_Collections.Internals.To_Holder
               (AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Owning_Element_Diagram_Element_Owned_Element then
            --  DiagramElement::owningElement : DiagramElement

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Diagram_Elements.DI_Diagram_Element_Access'
                 (AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Element));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Resolution then
            --  Diagram::resolution : Real

            return
              AMF.Holders.Reals.To_Holder
               (AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Resolution);

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            return
              AMF.Internals.Holders.UMLDI_Holders.To_Holder
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access'
                 (AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            return
              AMF.Internals.Holders.DI_Holders.To_Holder
               (AMF.DI.Styles.DI_Style_Access'
                 (AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Shared_Style));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Use_Case_Diagram_Get;

      -----------------------------
      -- UML_Data_Store_Node_Get --
      -----------------------------

      function UML_Data_Store_Node_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_In_State_A_Object_Node then
            --  ObjectNode::inState : State

            return
              AMF.UML.States.Collections.UML_State_Collections.Internals.To_Holder
               (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_State);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Is_Control_Type then
            --  ObjectNode::isControlType : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Control_Type);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Ordering then
            --  ObjectNode::ordering : ObjectNodeOrderingKind

            return
              AMF.UML.Holders.Object_Node_Ordering_Kinds.To_Holder
               (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Ordering);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Selection_A_Object_Node then
            --  ObjectNode::selection : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Selection));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Upper_Bound_A_Object_Node then
            --  ObjectNode::upperBound : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Upper_Bound));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Data_Store_Node_Get;

      -----------------------
      -- UML_Data_Type_Get --
      -----------------------

      function UML_Data_Type_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Attribute_A_Classifier then
            --  Classifier::attribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Collaboration_Use_A_Classifier then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internals.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Feature_Feature_Featuring_Classifier then
            --  Classifier::feature : Feature

            return
              AMF.UML.Features.Collections.UML_Feature_Collections.Internals.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Feature);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_General_A_Classifier then
            --  Classifier::general : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Generalization_Generalization_Specific then
            --  Classifier::generalization : Generalization

            return
              AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internals.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Inherited_Member_A_Classifier then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Data_Type_Owned_Attribute_Property_Datatype then
            --  DataType::ownedAttribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Data_Type_Owned_Operation_Operation_Datatype then
            --  DataType::ownedOperation : Operation

            return
              AMF.UML.Operations.Collections.UML_Operation_Collections.Internals.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Operation);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Use_Case_A_Classifier then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Powertype_Extent_Generalization_Set_Powertype then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internals.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Redefined_Classifier_A_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Substitution_Substitution_Substituting_Classifier then
            --  Classifier::substitution : Substitution

            return
              AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internals.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Template_Binding_Template_Binding_Bound_Element then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internals.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Use_Case_Use_Case_Subject then
            --  Classifier::useCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Data_Type_Get;

      ---------------------------
      -- UML_Decision_Node_Get --
      ---------------------------

      function UML_Decision_Node_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Decision_Node_Decision_Input_A_Decision_Node then
            --  DecisionNode::decisionInput : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Decision_Input));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Decision_Node_Decision_Input_Flow_A_Decision_Node then
            --  DecisionNode::decisionInputFlow : ObjectFlow

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Object_Flows.UML_Object_Flow_Access'
                 (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Decision_Input_Flow));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Decision_Node_Get;

      ------------------------
      -- UML_Dependency_Get --
      ------------------------

      function UML_Dependency_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Dependency_Client_Named_Element_Client_Dependency then
            --  Dependency::client : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Dependencies.UML_Dependency_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Dependencies.UML_Dependency_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Dependencies.UML_Dependency_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Dependencies.UML_Dependency_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Dependencies.UML_Dependency_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Dependencies.UML_Dependency_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Dependencies.UML_Dependency_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Dependencies.UML_Dependency_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Dependencies.UML_Dependency_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Dependencies.UML_Dependency_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Relationship_Related_Element_A_Relationship then
            --  Relationship::relatedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Dependencies.UML_Dependency_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Directed_Relationship_Source_A_Directed_Relationship then
            --  DirectedRelationship::source : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Dependencies.UML_Dependency_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Source);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Dependency_Supplier_A_Supplier_Dependency then
            --  Dependency::supplier : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Dependencies.UML_Dependency_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Supplier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Directed_Relationship_Target_A_Directed_Relationship then
            --  DirectedRelationship::target : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Dependencies.UML_Dependency_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Target);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Dependencies.UML_Dependency_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Dependencies.UML_Dependency_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Dependencies.UML_Dependency_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Dependency_Get;

      ------------------------
      -- UML_Deployment_Get --
      ------------------------

      function UML_Deployment_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Dependency_Client_Named_Element_Client_Dependency then
            --  Dependency::client : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Deployments.UML_Deployment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Deployments.UML_Deployment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Deployment_Configuration_Deployment_Specification_Deployment then
            --  Deployment::configuration : DeploymentSpecification

            return
              AMF.UML.Deployment_Specifications.Collections.UML_Deployment_Specification_Collections.Internals.To_Holder
               (AMF.UML.Deployments.UML_Deployment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Configuration);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Deployment_Deployed_Artifact_A_Deployment then
            --  Deployment::deployedArtifact : DeployedArtifact

            return
              AMF.UML.Deployed_Artifacts.Collections.UML_Deployed_Artifact_Collections.Internals.To_Holder
               (AMF.UML.Deployments.UML_Deployment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Deployed_Artifact);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Deployment_Location_Deployment_Target_Deployment then
            --  Deployment::location : DeploymentTarget

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Deployment_Targets.UML_Deployment_Target_Access'
                 (AMF.UML.Deployments.UML_Deployment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Location));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Deployments.UML_Deployment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Deployments.UML_Deployment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Deployments.UML_Deployment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Deployments.UML_Deployment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Deployments.UML_Deployment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Deployments.UML_Deployment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Deployments.UML_Deployment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Deployments.UML_Deployment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Relationship_Related_Element_A_Relationship then
            --  Relationship::relatedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Deployments.UML_Deployment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Directed_Relationship_Source_A_Directed_Relationship then
            --  DirectedRelationship::source : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Deployments.UML_Deployment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Source);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Dependency_Supplier_A_Supplier_Dependency then
            --  Dependency::supplier : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Deployments.UML_Deployment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Supplier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Directed_Relationship_Target_A_Directed_Relationship then
            --  DirectedRelationship::target : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Deployments.UML_Deployment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Target);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Deployments.UML_Deployment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Deployments.UML_Deployment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Deployments.UML_Deployment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Deployment_Get;

      --------------------------------------
      -- UML_Deployment_Specification_Get --
      --------------------------------------

      function UML_Deployment_Specification_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Attribute_A_Classifier then
            --  Classifier::attribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Collaboration_Use_A_Classifier then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internals.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Deployment_Specification_Deployment_Deployment_Configuration then
            --  DeploymentSpecification::deployment : Deployment

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Deployments.UML_Deployment_Access'
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Deployment));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Deployment_Specification_Deployment_Location then
            --  DeploymentSpecification::deploymentLocation : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Deployment_Location);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Deployment_Specification_Execution_Location then
            --  DeploymentSpecification::executionLocation : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Execution_Location);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Feature_Feature_Featuring_Classifier then
            --  Classifier::feature : Feature

            return
              AMF.UML.Features.Collections.UML_Feature_Collections.Internals.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Feature);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Artifact_File_Name then
            --  Artifact::fileName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_File_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_General_A_Classifier then
            --  Classifier::general : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Generalization_Generalization_Specific then
            --  Classifier::generalization : Generalization

            return
              AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internals.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Inherited_Member_A_Classifier then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Artifact_Manifestation_A_Artifact then
            --  Artifact::manifestation : Manifestation

            return
              AMF.UML.Manifestations.Collections.UML_Manifestation_Collections.Internals.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Manifestation);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Artifact_Nested_Artifact_A_Artifact then
            --  Artifact::nestedArtifact : Artifact

            return
              AMF.UML.Artifacts.Collections.UML_Artifact_Collections.Internals.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Artifact);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Artifact_Owned_Attribute_A_Artifact then
            --  Artifact::ownedAttribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Artifact_Owned_Operation_A_Artifact then
            --  Artifact::ownedOperation : Operation

            return
              AMF.UML.Operations.Collections.UML_Operation_Collections.Internals.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Operation);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Use_Case_A_Classifier then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Powertype_Extent_Generalization_Set_Powertype then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internals.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Redefined_Classifier_A_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Substitution_Substitution_Substituting_Classifier then
            --  Classifier::substitution : Substitution

            return
              AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internals.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Template_Binding_Template_Binding_Bound_Element then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internals.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Use_Case_Use_Case_Subject then
            --  Classifier::useCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Deployment_Specification_Get;

      ---------------------------------
      -- UML_Destroy_Link_Action_Get --
      ---------------------------------

      function UML_Destroy_Link_Action_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Destroy_Link_Action_End_Data_A_Destroy_Link_Action then
            --  DestroyLinkAction::endData : LinkEndDestructionData

            return
              AMF.UML.Link_End_Destruction_Datas.Collections.UML_Link_End_Destruction_Data_Collections.Internals.To_Holder
               (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_End_Data);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Link_Action_End_Data_A_Link_Action then
            --  LinkAction::endData : LinkEndData

            return
              AMF.UML.Link_End_Datas.Collections.UML_Link_End_Data_Collections.Internals.To_Holder
               (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_End_Data);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Link_Action_Input_Value_A_Link_Action then
            --  LinkAction::inputValue : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input_Value);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Destroy_Link_Action_Get;

      -----------------------------------
      -- UML_Destroy_Object_Action_Get --
      -----------------------------------

      function UML_Destroy_Object_Action_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Destroy_Object_Action_Is_Destroy_Links then
            --  DestroyObjectAction::isDestroyLinks : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Destroy_Links);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Destroy_Object_Action_Is_Destroy_Owned_Objects then
            --  DestroyObjectAction::isDestroyOwnedObjects : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Destroy_Owned_Objects);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Destroy_Object_Action_Target_A_Destroy_Object_Action then
            --  DestroyObjectAction::target : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Target));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Destroy_Object_Action_Get;

      --------------------------------------------------
      -- UML_Destruction_Occurrence_Specification_Get --
      --------------------------------------------------

      function UML_Destruction_Occurrence_Specification_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Covered_Lifeline_Covered_By then
            --  InteractionFragment::covered : Lifeline

            return
              AMF.UML.Lifelines.Collections.UML_Lifeline_Collections.Internals.To_Holder
               (AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Covered);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Occurrence_Specification_Covered_A_Events then
            --  OccurrenceSpecification::covered : Lifeline

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Lifelines.UML_Lifeline_Access'
                 (AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Covered));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Interaction_Interaction_Fragment then
            --  InteractionFragment::enclosingInteraction : Interaction

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access'
                 (AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Interaction));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Operand_Interaction_Operand_Fragment then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access'
                 (AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Operand));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_General_Ordering_A_Interaction_Fragment then
            --  InteractionFragment::generalOrdering : GeneralOrdering

            return
              AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internals.To_Holder
               (AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General_Ordering);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Message_End_Message_A_Message_End then
            --  MessageEnd::message : Message

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Messages.UML_Message_Access'
                 (AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Message));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Occurrence_Specification_To_After_General_Ordering_Before then
            --  OccurrenceSpecification::toAfter : GeneralOrdering

            return
              AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internals.To_Holder
               (AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_To_After);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Occurrence_Specification_To_Before_General_Ordering_After then
            --  OccurrenceSpecification::toBefore : GeneralOrdering

            return
              AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internals.To_Holder
               (AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_To_Before);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Destruction_Occurrence_Specification_Get;

      --------------------
      -- UML_Device_Get --
      --------------------

      function UML_Device_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Attribute_A_Classifier then
            --  Classifier::attribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Classifier_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::classifierBehavior : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier_Behavior));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Collaboration_Use_A_Classifier then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internals.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Deployment_Target_Deployed_Element_A_Deployment_Target then
            --  DeploymentTarget::deployedElement : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Deployed_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Deployment_Target_Deployment_Deployment_Location then
            --  DeploymentTarget::deployment : Deployment

            return
              AMF.UML.Deployments.Collections.UML_Deployment_Collections.Internals.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Deployment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Extension_Extension_Metaclass then
            --  Class::extension : Extension

            return
              AMF.UML.Extensions.Collections.UML_Extension_Collections.Internals.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Extension);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Feature_Feature_Featuring_Classifier then
            --  Classifier::feature : Feature

            return
              AMF.UML.Features.Collections.UML_Feature_Collections.Internals.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Feature);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_General_A_Classifier then
            --  Classifier::general : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Generalization_Generalization_Specific then
            --  Classifier::generalization : Generalization

            return
              AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internals.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Inherited_Member_A_Classifier then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Interface_Realization_Interface_Realization_Implementing_Classifier then
            --  BehavioredClassifier::interfaceRealization : InterfaceRealization

            return
              AMF.UML.Interface_Realizations.Collections.UML_Interface_Realization_Collections.Internals.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Interface_Realization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Active);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Nested_Classifier_A_Class then
            --  Class::nestedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Node_Nested_Node_A_Node then
            --  Node::nestedNode : Node

            return
              AMF.UML.Nodes.Collections.UML_Node_Collections.Internals.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Owned_Attribute_Property_Class then
            --  Class::ownedAttribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Owned_Attribute_A_Structured_Classifier then
            --  StructuredClassifier::ownedAttribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Owned_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::ownedBehavior : Behavior

            return
              AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internals.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Behavior);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Owned_Connector_A_Structured_Classifier then
            --  StructuredClassifier::ownedConnector : Connector

            return
              AMF.UML.Connectors.Collections.UML_Connector_Collections.Internals.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Connector);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Owned_Operation_Operation_Class then
            --  Class::ownedOperation : Operation

            return
              AMF.UML.Operations.Collections.UML_Operation_Collections.Internals.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Operation);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Encapsulated_Classifier_Owned_Port_A_Encapsulated_Classifier then
            --  EncapsulatedClassifier::ownedPort : Port

            return
              AMF.UML.Ports.Collections.UML_Port_Collections.Internals.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Port);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Owned_Reception_A_Class then
            --  Class::ownedReception : Reception

            return
              AMF.UML.Receptions.Collections.UML_Reception_Collections.Internals.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Reception);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Use_Case_A_Classifier then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Part_A_Structured_Classifier then
            --  StructuredClassifier::part : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Part);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Powertype_Extent_Generalization_Set_Powertype then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internals.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Redefined_Classifier_A_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Role_A_Structured_Classifier then
            --  StructuredClassifier::role : ConnectableElement

            return
              AMF.UML.Connectable_Elements.Collections.UML_Connectable_Element_Collections.Internals.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Role);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Substitution_Substitution_Substituting_Classifier then
            --  Classifier::substitution : Substitution

            return
              AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internals.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Super_Class_A_Class then
            --  Class::superClass : Class

            return
              AMF.UML.Classes.Collections.UML_Class_Collections.Internals.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Class);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Template_Binding_Template_Binding_Bound_Element then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internals.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Use_Case_Use_Case_Subject then
            --  Classifier::useCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Device_Get;

      ----------------------
      -- UML_Duration_Get --
      ----------------------

      function UML_Duration_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Durations.UML_Duration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Duration_Expr_A_Duration then
            --  Duration::expr : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Durations.UML_Duration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Expr));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Durations.UML_Duration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Durations.UML_Duration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Durations.UML_Duration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Duration_Observation_A_Duration then
            --  Duration::observation : Observation

            return
              AMF.UML.Observations.Collections.UML_Observation_Collections.Internals.To_Holder
               (AMF.UML.Durations.UML_Duration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Observation);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Durations.UML_Duration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Durations.UML_Duration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Durations.UML_Duration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Durations.UML_Duration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Durations.UML_Duration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Durations.UML_Duration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Durations.UML_Duration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Durations.UML_Duration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Durations.UML_Duration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Duration_Get;

      ---------------------------------
      -- UML_Duration_Constraint_Get --
      ---------------------------------

      function UML_Duration_Constraint_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Constraint_Constrained_Element_A_Constraint then
            --  Constraint::constrainedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Constrained_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Constraint_Context_Namespace_Owned_Rule then
            --  Constraint::context : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Duration_Constraint_First_Event then
            --  DurationConstraint::firstEvent : Boolean

            return
              AMF.Boolean_Collections.Internals.To_Holder
               (AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_First_Event);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Constraint_Specification_A_Owning_Constraint then
            --  Constraint::specification : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Specification));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Duration_Constraint_Specification_A_Duration_Constraint then
            --  DurationConstraint::specification : DurationInterval

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Duration_Intervals.UML_Duration_Interval_Access'
                 (AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Specification));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interval_Constraint_Specification_A_Interval_Constraint then
            --  IntervalConstraint::specification : Interval

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Intervals.UML_Interval_Access'
                 (AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Specification));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Duration_Constraint_Get;

      -------------------------------
      -- UML_Duration_Interval_Get --
      -------------------------------

      function UML_Duration_Interval_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Duration_Interval_Max_A_Duration_Interval then
            --  DurationInterval::max : Duration

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Durations.UML_Duration_Access'
                 (AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Max));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interval_Max_A_Interval then
            --  Interval::max : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Max));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Duration_Interval_Min_A_Duration_Interval then
            --  DurationInterval::min : Duration

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Durations.UML_Duration_Access'
                 (AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Min));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interval_Min_A_Interval then
            --  Interval::min : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Min));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Duration_Interval_Get;

      ----------------------------------
      -- UML_Duration_Observation_Get --
      ----------------------------------

      function UML_Duration_Observation_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Duration_Observations.UML_Duration_Observation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Duration_Observation_Event_A_Duration_Observation then
            --  DurationObservation::event : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Duration_Observations.UML_Duration_Observation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Event);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Duration_Observation_First_Event then
            --  DurationObservation::firstEvent : Boolean

            return
              AMF.Boolean_Collections.Internals.To_Holder
               (AMF.UML.Duration_Observations.UML_Duration_Observation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_First_Event);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Duration_Observations.UML_Duration_Observation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Duration_Observations.UML_Duration_Observation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Duration_Observations.UML_Duration_Observation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Duration_Observations.UML_Duration_Observation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Duration_Observations.UML_Duration_Observation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Duration_Observations.UML_Duration_Observation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Duration_Observations.UML_Duration_Observation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Duration_Observations.UML_Duration_Observation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Duration_Observations.UML_Duration_Observation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Duration_Observations.UML_Duration_Observation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Duration_Observations.UML_Duration_Observation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Duration_Observation_Get;

      ----------------------------
      -- UML_Element_Import_Get --
      ----------------------------

      function UML_Element_Import_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Import_Alias then
            --  ElementImport::alias : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Element_Imports.UML_Element_Import_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Alias);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Import_Imported_Element_A_Element_Import then
            --  ElementImport::importedElement : PackageableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packageable_Elements.UML_Packageable_Element_Access'
                 (AMF.UML.Element_Imports.UML_Element_Import_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Element));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Import_Importing_Namespace_Namespace_Element_Import then
            --  ElementImport::importingNamespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Element_Imports.UML_Element_Import_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Importing_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Element_Imports.UML_Element_Import_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Element_Imports.UML_Element_Import_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Element_Imports.UML_Element_Import_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Relationship_Related_Element_A_Relationship then
            --  Relationship::relatedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Element_Imports.UML_Element_Import_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Directed_Relationship_Source_A_Directed_Relationship then
            --  DirectedRelationship::source : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Element_Imports.UML_Element_Import_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Source);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Directed_Relationship_Target_A_Directed_Relationship then
            --  DirectedRelationship::target : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Element_Imports.UML_Element_Import_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Target);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Import_Visibility then
            --  ElementImport::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Element_Imports.UML_Element_Import_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Element_Import_Get;

      -------------------------
      -- UML_Enumeration_Get --
      -------------------------

      function UML_Enumeration_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Attribute_A_Classifier then
            --  Classifier::attribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Collaboration_Use_A_Classifier then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internals.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Feature_Feature_Featuring_Classifier then
            --  Classifier::feature : Feature

            return
              AMF.UML.Features.Collections.UML_Feature_Collections.Internals.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Feature);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_General_A_Classifier then
            --  Classifier::general : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Generalization_Generalization_Specific then
            --  Classifier::generalization : Generalization

            return
              AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internals.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Inherited_Member_A_Classifier then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Data_Type_Owned_Attribute_Property_Datatype then
            --  DataType::ownedAttribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Enumeration_Owned_Literal_Enumeration_Literal_Enumeration then
            --  Enumeration::ownedLiteral : EnumerationLiteral

            return
              AMF.UML.Enumeration_Literals.Collections.UML_Enumeration_Literal_Collections.Internals.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Literal);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Data_Type_Owned_Operation_Operation_Datatype then
            --  DataType::ownedOperation : Operation

            return
              AMF.UML.Operations.Collections.UML_Operation_Collections.Internals.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Operation);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Use_Case_A_Classifier then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Powertype_Extent_Generalization_Set_Powertype then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internals.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Redefined_Classifier_A_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Substitution_Substitution_Substituting_Classifier then
            --  Classifier::substitution : Substitution

            return
              AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internals.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Template_Binding_Template_Binding_Bound_Element then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internals.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Use_Case_Use_Case_Subject then
            --  Classifier::useCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Enumeration_Get;

      ---------------------------------
      -- UML_Enumeration_Literal_Get --
      ---------------------------------

      function UML_Enumeration_Literal_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Enumeration_Literal_Classifier_A_Enumeration_Literal then
            --  EnumerationLiteral::classifier : Enumeration

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access'
                 (AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Instance_Specification_Classifier_A_Instance_Specification then
            --  InstanceSpecification::classifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Deployment_Target_Deployed_Element_A_Deployment_Target then
            --  DeploymentTarget::deployedElement : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Deployed_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Deployment_Target_Deployment_Deployment_Location then
            --  DeploymentTarget::deployment : Deployment

            return
              AMF.UML.Deployments.Collections.UML_Deployment_Collections.Internals.To_Holder
               (AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Deployment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Enumeration_Literal_Enumeration_Enumeration_Owned_Literal then
            --  EnumerationLiteral::enumeration : Enumeration

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access'
                 (AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enumeration));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Instance_Specification_Slot_Slot_Owning_Instance then
            --  InstanceSpecification::slot : Slot

            return
              AMF.UML.Slots.Collections.UML_Slot_Collections.Internals.To_Holder
               (AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Slot);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Instance_Specification_Specification_A_Owning_Instance_Spec then
            --  InstanceSpecification::specification : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Specification));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Enumeration_Literal_Get;

      -------------------------------
      -- UML_Exception_Handler_Get --
      -------------------------------

      function UML_Exception_Handler_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Exception_Handler_Exception_Input_A_Exception_Handler then
            --  ExceptionHandler::exceptionInput : ObjectNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Object_Nodes.UML_Object_Node_Access'
                 (AMF.UML.Exception_Handlers.UML_Exception_Handler_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Exception_Input));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Exception_Handler_Exception_Type_A_Exception_Handler then
            --  ExceptionHandler::exceptionType : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Exception_Handlers.UML_Exception_Handler_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Exception_Type);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Exception_Handler_Handler_Body_A_Exception_Handler then
            --  ExceptionHandler::handlerBody : ExecutableNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Executable_Nodes.UML_Executable_Node_Access'
                 (AMF.UML.Exception_Handlers.UML_Exception_Handler_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler_Body));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Exception_Handlers.UML_Exception_Handler_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Exception_Handlers.UML_Exception_Handler_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Exception_Handlers.UML_Exception_Handler_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Exception_Handler_Protected_Node_Executable_Node_Handler then
            --  ExceptionHandler::protectedNode : ExecutableNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Executable_Nodes.UML_Executable_Node_Access'
                 (AMF.UML.Exception_Handlers.UML_Exception_Handler_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Protected_Node));

         else
            raise Program_Error;
         end if;
      end UML_Exception_Handler_Get;

      -----------------------------------
      -- UML_Execution_Environment_Get --
      -----------------------------------

      function UML_Execution_Environment_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Attribute_A_Classifier then
            --  Classifier::attribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Classifier_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::classifierBehavior : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier_Behavior));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Collaboration_Use_A_Classifier then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internals.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Deployment_Target_Deployed_Element_A_Deployment_Target then
            --  DeploymentTarget::deployedElement : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Deployed_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Deployment_Target_Deployment_Deployment_Location then
            --  DeploymentTarget::deployment : Deployment

            return
              AMF.UML.Deployments.Collections.UML_Deployment_Collections.Internals.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Deployment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Extension_Extension_Metaclass then
            --  Class::extension : Extension

            return
              AMF.UML.Extensions.Collections.UML_Extension_Collections.Internals.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Extension);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Feature_Feature_Featuring_Classifier then
            --  Classifier::feature : Feature

            return
              AMF.UML.Features.Collections.UML_Feature_Collections.Internals.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Feature);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_General_A_Classifier then
            --  Classifier::general : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Generalization_Generalization_Specific then
            --  Classifier::generalization : Generalization

            return
              AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internals.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Inherited_Member_A_Classifier then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Interface_Realization_Interface_Realization_Implementing_Classifier then
            --  BehavioredClassifier::interfaceRealization : InterfaceRealization

            return
              AMF.UML.Interface_Realizations.Collections.UML_Interface_Realization_Collections.Internals.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Interface_Realization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Active);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Nested_Classifier_A_Class then
            --  Class::nestedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Node_Nested_Node_A_Node then
            --  Node::nestedNode : Node

            return
              AMF.UML.Nodes.Collections.UML_Node_Collections.Internals.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Owned_Attribute_Property_Class then
            --  Class::ownedAttribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Owned_Attribute_A_Structured_Classifier then
            --  StructuredClassifier::ownedAttribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Owned_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::ownedBehavior : Behavior

            return
              AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internals.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Behavior);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Owned_Connector_A_Structured_Classifier then
            --  StructuredClassifier::ownedConnector : Connector

            return
              AMF.UML.Connectors.Collections.UML_Connector_Collections.Internals.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Connector);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Owned_Operation_Operation_Class then
            --  Class::ownedOperation : Operation

            return
              AMF.UML.Operations.Collections.UML_Operation_Collections.Internals.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Operation);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Encapsulated_Classifier_Owned_Port_A_Encapsulated_Classifier then
            --  EncapsulatedClassifier::ownedPort : Port

            return
              AMF.UML.Ports.Collections.UML_Port_Collections.Internals.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Port);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Owned_Reception_A_Class then
            --  Class::ownedReception : Reception

            return
              AMF.UML.Receptions.Collections.UML_Reception_Collections.Internals.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Reception);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Use_Case_A_Classifier then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Part_A_Structured_Classifier then
            --  StructuredClassifier::part : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Part);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Powertype_Extent_Generalization_Set_Powertype then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internals.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Redefined_Classifier_A_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Role_A_Structured_Classifier then
            --  StructuredClassifier::role : ConnectableElement

            return
              AMF.UML.Connectable_Elements.Collections.UML_Connectable_Element_Collections.Internals.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Role);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Substitution_Substitution_Substituting_Classifier then
            --  Classifier::substitution : Substitution

            return
              AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internals.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Super_Class_A_Class then
            --  Class::superClass : Class

            return
              AMF.UML.Classes.Collections.UML_Class_Collections.Internals.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Class);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Template_Binding_Template_Binding_Bound_Element then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internals.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Use_Case_Use_Case_Subject then
            --  Classifier::useCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Execution_Environment_Get;

      ------------------------------------------------
      -- UML_Execution_Occurrence_Specification_Get --
      ------------------------------------------------

      function UML_Execution_Occurrence_Specification_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Covered_Lifeline_Covered_By then
            --  InteractionFragment::covered : Lifeline

            return
              AMF.UML.Lifelines.Collections.UML_Lifeline_Collections.Internals.To_Holder
               (AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Covered);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Occurrence_Specification_Covered_A_Events then
            --  OccurrenceSpecification::covered : Lifeline

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Lifelines.UML_Lifeline_Access'
                 (AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Covered));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Interaction_Interaction_Fragment then
            --  InteractionFragment::enclosingInteraction : Interaction

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access'
                 (AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Interaction));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Operand_Interaction_Operand_Fragment then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access'
                 (AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Operand));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Execution_Occurrence_Specification_Execution_A_Execution_Occurrence_Specification then
            --  ExecutionOccurrenceSpecification::execution : ExecutionSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Execution_Specifications.UML_Execution_Specification_Access'
                 (AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Execution));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_General_Ordering_A_Interaction_Fragment then
            --  InteractionFragment::generalOrdering : GeneralOrdering

            return
              AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internals.To_Holder
               (AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General_Ordering);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Occurrence_Specification_To_After_General_Ordering_Before then
            --  OccurrenceSpecification::toAfter : GeneralOrdering

            return
              AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internals.To_Holder
               (AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_To_After);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Occurrence_Specification_To_Before_General_Ordering_After then
            --  OccurrenceSpecification::toBefore : GeneralOrdering

            return
              AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internals.To_Holder
               (AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_To_Before);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Execution_Occurrence_Specification_Get;

      ----------------------------
      -- UML_Expansion_Node_Get --
      ----------------------------

      function UML_Expansion_Node_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_In_State_A_Object_Node then
            --  ObjectNode::inState : State

            return
              AMF.UML.States.Collections.UML_State_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_State);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Is_Control_Type then
            --  ObjectNode::isControlType : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Control_Type);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Ordering then
            --  ObjectNode::ordering : ObjectNodeOrderingKind

            return
              AMF.UML.Holders.Object_Node_Ordering_Kinds.To_Holder
               (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Ordering);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Expansion_Node_Region_As_Input_Expansion_Region_Input_Element then
            --  ExpansionNode::regionAsInput : ExpansionRegion

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access'
                 (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Region_As_Input));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Expansion_Node_Region_As_Output_Expansion_Region_Output_Element then
            --  ExpansionNode::regionAsOutput : ExpansionRegion

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access'
                 (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Region_As_Output));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Selection_A_Object_Node then
            --  ObjectNode::selection : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Selection));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Upper_Bound_A_Object_Node then
            --  ObjectNode::upperBound : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Upper_Bound));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Expansion_Node_Get;

      ------------------------------
      -- UML_Expansion_Region_Get --
      ------------------------------

      function UML_Expansion_Region_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Activity_Activity_Structured_Node then
            --  StructuredActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_Contained_Edge_Activity_Edge_In_Group then
            --  ActivityGroup::containedEdge : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Contained_Edge);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_Contained_Node_Activity_Node_In_Group then
            --  ActivityGroup::containedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Contained_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Edge_Activity_Edge_In_Structured_Node then
            --  StructuredActivityNode::edge : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Edge);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_In_Activity_Activity_Group then
            --  ActivityGroup::inActivity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Expansion_Region_Input_Element_Expansion_Node_Region_As_Input then
            --  ExpansionRegion::inputElement : ExpansionNode

            return
              AMF.UML.Expansion_Nodes.Collections.UML_Expansion_Node_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Expansion_Region_Mode then
            --  ExpansionRegion::mode : ExpansionKind

            return
              AMF.UML.Holders.Expansion_Kinds.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Mode);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Must_Isolate then
            --  StructuredActivityNode::mustIsolate : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Must_Isolate);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Node_Activity_Node_In_Structured_Node then
            --  StructuredActivityNode::node : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Expansion_Region_Output_Element_Expansion_Node_Region_As_Output then
            --  ExpansionRegion::outputElement : ExpansionNode

            return
              AMF.UML.Expansion_Nodes.Collections.UML_Expansion_Node_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Structured_Node_Input_A_Structured_Activity_Node then
            --  StructuredActivityNode::structuredNodeInput : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Structured_Node_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Structured_Node_Output_A_Structured_Activity_Node then
            --  StructuredActivityNode::structuredNodeOutput : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Structured_Node_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_Subgroup_Activity_Group_Super_Group then
            --  ActivityGroup::subgroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Subgroup);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_Super_Group_Activity_Group_Subgroup then
            --  ActivityGroup::superGroup : ActivityGroup

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activity_Groups.UML_Activity_Group_Access'
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Group));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Variable_Variable_Scope then
            --  StructuredActivityNode::variable : Variable

            return
              AMF.UML.Variables.Collections.UML_Variable_Collections.Internals.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Variable);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Expansion_Region_Get;

      ------------------------
      -- UML_Expression_Get --
      ------------------------

      function UML_Expression_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Expressions.UML_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Expressions.UML_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Expressions.UML_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Expressions.UML_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Expression_Operand_A_Expression then
            --  Expression::operand : ValueSpecification

            return
              AMF.UML.Value_Specifications.Collections.UML_Value_Specification_Collections.Internals.To_Holder
               (AMF.UML.Expressions.UML_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Operand);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Expressions.UML_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Expressions.UML_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Expressions.UML_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Expressions.UML_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Expressions.UML_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Expression_Symbol then
            --  Expression::symbol : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Expressions.UML_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Symbol);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Expressions.UML_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Expressions.UML_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Expressions.UML_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Expressions.UML_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Expression_Get;

      --------------------
      -- UML_Extend_Get --
      --------------------

      function UML_Extend_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Extends.UML_Extend_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Extend_Condition_A_Extend then
            --  Extend::condition : Constraint

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Constraints.UML_Constraint_Access'
                 (AMF.UML.Extends.UML_Extend_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Condition));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Extend_Extended_Case_A_Extend then
            --  Extend::extendedCase : UseCase

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access'
                 (AMF.UML.Extends.UML_Extend_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Extended_Case));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Extend_Extension_Use_Case_Extend then
            --  Extend::extension : UseCase

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access'
                 (AMF.UML.Extends.UML_Extend_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Extension));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Extend_Extension_Location_A_Extension then
            --  Extend::extensionLocation : ExtensionPoint

            return
              AMF.UML.Extension_Points.Collections.UML_Extension_Point_Collections.Internals.To_Holder
               (AMF.UML.Extends.UML_Extend_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Extension_Location);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Extends.UML_Extend_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Extends.UML_Extend_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Extends.UML_Extend_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Extends.UML_Extend_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Extends.UML_Extend_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Extends.UML_Extend_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Extends.UML_Extend_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Relationship_Related_Element_A_Relationship then
            --  Relationship::relatedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Extends.UML_Extend_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Directed_Relationship_Source_A_Directed_Relationship then
            --  DirectedRelationship::source : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Extends.UML_Extend_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Source);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Directed_Relationship_Target_A_Directed_Relationship then
            --  DirectedRelationship::target : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Extends.UML_Extend_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Target);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Extends.UML_Extend_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Extend_Get;

      -----------------------
      -- UML_Extension_Get --
      -----------------------

      function UML_Extension_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Attribute_A_Classifier then
            --  Classifier::attribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Collaboration_Use_A_Classifier then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internals.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Association_End_Type_A_Association then
            --  Association::endType : Type

            return
              AMF.UML.Types.Collections.UML_Type_Collections.Internals.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_End_Type);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Feature_Feature_Featuring_Classifier then
            --  Classifier::feature : Feature

            return
              AMF.UML.Features.Collections.UML_Feature_Collections.Internals.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Feature);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_General_A_Classifier then
            --  Classifier::general : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Generalization_Generalization_Specific then
            --  Classifier::generalization : Generalization

            return
              AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internals.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Inherited_Member_A_Classifier then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Association_Is_Derived then
            --  Association::isDerived : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Derived);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Extension_Is_Required then
            --  Extension::isRequired : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Required);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Association_Member_End_Property_Association then
            --  Association::memberEnd : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member_End);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Extension_Metaclass_Class_Extension then
            --  Extension::metaclass : Class

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classes.UML_Class_Access'
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Metaclass));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Association_Navigable_Owned_End_A_Association then
            --  Association::navigableOwnedEnd : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Navigable_Owned_End);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Association_Owned_End_Property_Owning_Association then
            --  Association::ownedEnd : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_End);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Extension_Owned_End_A_Extension then
            --  Extension::ownedEnd : ExtensionEnd

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access'
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_End));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Use_Case_A_Classifier then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Powertype_Extent_Generalization_Set_Powertype then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internals.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Redefined_Classifier_A_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Relationship_Related_Element_A_Relationship then
            --  Relationship::relatedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Substitution_Substitution_Substituting_Classifier then
            --  Classifier::substitution : Substitution

            return
              AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internals.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Template_Binding_Template_Binding_Bound_Element then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internals.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Use_Case_Use_Case_Subject then
            --  Classifier::useCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Extension_Get;

      ---------------------------
      -- UML_Extension_End_Get --
      ---------------------------

      function UML_Extension_End_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Aggregation then
            --  Property::aggregation : AggregationKind

            return
              AMF.UML.Holders.Aggregation_Kinds.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Aggregation);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Association_Association_Member_End then
            --  Property::association : Association

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Associations.UML_Association_Access'
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Association));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Association_End_Property_Qualifier then
            --  Property::associationEnd : Property

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access'
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Association_End));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Class_Class_Owned_Attribute then
            --  Property::class : Class

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classes.UML_Class_Access'
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Class));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Datatype_Data_Type_Owned_Attribute then
            --  Property::datatype : DataType

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access'
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Datatype));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Default then
            --  Property::default : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Default);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Default_Value_A_Owning_Property then
            --  Property::defaultValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Default_Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Deployment_Target_Deployed_Element_A_Deployment_Target then
            --  DeploymentTarget::deployedElement : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Deployed_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Deployment_Target_Deployment_Deployment_Location then
            --  DeploymentTarget::deployment : Deployment

            return
              AMF.UML.Deployments.Collections.UML_Deployment_Collections.Internals.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Deployment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Connectable_Element_End_Connector_End_Role then
            --  ConnectableElement::end : ConnectorEnd

            return
              AMF.UML.Connector_Ends.Collections.UML_Connector_End_Collections.Internals.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_End);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Feature_Featuring_Classifier_Classifier_Feature then
            --  Feature::featuringClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Featuring_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Interface_Interface_Owned_Attribute then
            --  Property::interface : Interface

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access'
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Interface));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Is_Composite then
            --  Property::isComposite : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Composite);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Is_Derived then
            --  Property::isDerived : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Derived);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Is_Derived_Union then
            --  Property::isDerivedUnion : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Derived_Union);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Is_ID then
            --  Property::isID : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_ID);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Is_Ordered then
            --  MultiplicityElement::isOrdered : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Ordered);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Is_Read_Only then
            --  Property::isReadOnly : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Read_Only);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structural_Feature_Is_Read_Only then
            --  StructuralFeature::isReadOnly : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Read_Only);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Feature_Is_Static then
            --  Feature::isStatic : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Static);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Is_Unique then
            --  MultiplicityElement::isUnique : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Unique);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Extension_End_Lower then
            --  ExtensionEnd::lower : Integer

            return
              AMF.Holders.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Lower);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Lower then
            --  MultiplicityElement::lower : Integer

            return
              AMF.Holders.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Lower);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Lower_Value_A_Owning_Lower then
            --  MultiplicityElement::lowerValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Lower_Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Opposite_A_Property then
            --  Property::opposite : Property

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access'
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Opposite));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Owning_Association_Association_Owned_End then
            --  Property::owningAssociation : Association

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Associations.UML_Association_Access'
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Association));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Qualifier_Property_Association_End then
            --  Property::qualifier : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Redefined_Property_A_Property then
            --  Property::redefinedProperty : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Property);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Subsetted_Property_A_Property then
            --  Property::subsettedProperty : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Subsetted_Property);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Connectable_Element_Template_Parameter_Connectable_Element_Template_Parameter_Parametered_Element then
            --  ConnectableElement::templateParameter : ConnectableElementTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access'
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Extension_End_Type_A_Extension_End then
            --  ExtensionEnd::type : Stereotype

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access'
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Upper then
            --  MultiplicityElement::upper : UnlimitedNatural

            return
              AMF.Holders.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Upper);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Upper_Value_A_Owning_Upper then
            --  MultiplicityElement::upperValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Upper_Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Extension_End_Get;

      -----------------------------
      -- UML_Extension_Point_Get --
      -----------------------------

      function UML_Extension_Point_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Extension_Points.UML_Extension_Point_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Extension_Points.UML_Extension_Point_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Extension_Points.UML_Extension_Point_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Extension_Points.UML_Extension_Point_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Extension_Points.UML_Extension_Point_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Extension_Points.UML_Extension_Point_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Extension_Points.UML_Extension_Point_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Extension_Points.UML_Extension_Point_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Extension_Points.UML_Extension_Point_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Extension_Points.UML_Extension_Point_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Extension_Points.UML_Extension_Point_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Extension_Point_Use_Case_Use_Case_Extension_Point then
            --  ExtensionPoint::useCase : UseCase

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access'
                 (AMF.UML.Extension_Points.UML_Extension_Point_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Extension_Points.UML_Extension_Point_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Extension_Point_Get;

      -------------------------
      -- UML_Final_State_Get --
      -------------------------

      function UML_Final_State_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Final_States.UML_Final_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Connection_Connection_Point_Reference_State then
            --  State::connection : ConnectionPointReference

            return
              AMF.UML.Connection_Point_References.Collections.UML_Connection_Point_Reference_Collections.Internals.To_Holder
               (AMF.UML.Final_States.UML_Final_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Connection);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Connection_Point_Pseudostate_State then
            --  State::connectionPoint : Pseudostate

            return
              AMF.UML.Pseudostates.Collections.UML_Pseudostate_Collections.Internals.To_Holder
               (AMF.UML.Final_States.UML_Final_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Connection_Point);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Vertex_Container_Region_Subvertex then
            --  Vertex::container : Region

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Regions.UML_Region_Access'
                 (AMF.UML.Final_States.UML_Final_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Container));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Deferrable_Trigger_A_State then
            --  State::deferrableTrigger : Trigger

            return
              AMF.UML.Triggers.Collections.UML_Trigger_Collections.Internals.To_Holder
               (AMF.UML.Final_States.UML_Final_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Deferrable_Trigger);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Do_Activity_A_State then
            --  State::doActivity : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Final_States.UML_Final_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Do_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Final_States.UML_Final_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Entry_A_State then
            --  State::entry : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Final_States.UML_Final_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Entry));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Exit_A_State then
            --  State::exit : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Final_States.UML_Final_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Exit));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Final_States.UML_Final_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Vertex_Incoming_Transition_Target then
            --  Vertex::incoming : Transition

            return
              AMF.UML.Transitions.Collections.UML_Transition_Collections.Internals.To_Holder
               (AMF.UML.Final_States.UML_Final_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Is_Composite then
            --  State::isComposite : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Final_States.UML_Final_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Composite);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Final_States.UML_Final_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Is_Orthogonal then
            --  State::isOrthogonal : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Final_States.UML_Final_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Orthogonal);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Is_Simple then
            --  State::isSimple : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Final_States.UML_Final_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Simple);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Is_Submachine_State then
            --  State::isSubmachineState : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Final_States.UML_Final_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Submachine_State);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Final_States.UML_Final_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Final_States.UML_Final_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Final_States.UML_Final_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Final_States.UML_Final_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Vertex_Outgoing_Transition_Source then
            --  Vertex::outgoing : Transition

            return
              AMF.UML.Transitions.Collections.UML_Transition_Collections.Internals.To_Holder
               (AMF.UML.Final_States.UML_Final_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Final_States.UML_Final_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Final_States.UML_Final_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Final_States.UML_Final_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Final_States.UML_Final_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Final_States.UML_Final_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Final_States.UML_Final_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Final_States.UML_Final_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Final_States.UML_Final_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Redefined_State_A_State then
            --  State::redefinedState : State

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.States.UML_State_Access'
                 (AMF.UML.Final_States.UML_Final_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_State));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Final_States.UML_Final_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Redefinition_Context_A_State then
            --  State::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Final_States.UML_Final_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Region_Region_State then
            --  State::region : Region

            return
              AMF.UML.Regions.Collections.UML_Region_Collections.Internals.To_Holder
               (AMF.UML.Final_States.UML_Final_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_State_Invariant_A_Owning_State then
            --  State::stateInvariant : Constraint

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Constraints.UML_Constraint_Access'
                 (AMF.UML.Final_States.UML_Final_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_State_Invariant));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Submachine_State_Machine_Submachine_State then
            --  State::submachine : StateMachine

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access'
                 (AMF.UML.Final_States.UML_Final_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Submachine));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Final_States.UML_Final_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Final_State_Get;

      -----------------------------
      -- UML_Flow_Final_Node_Get --
      -----------------------------

      function UML_Flow_Final_Node_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Flow_Final_Node_Get;

      -----------------------
      -- UML_Fork_Node_Get --
      -----------------------

      function UML_Fork_Node_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Fork_Nodes.UML_Fork_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Fork_Nodes.UML_Fork_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Fork_Nodes.UML_Fork_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Fork_Nodes.UML_Fork_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Fork_Nodes.UML_Fork_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Fork_Nodes.UML_Fork_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Fork_Nodes.UML_Fork_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Fork_Nodes.UML_Fork_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Fork_Nodes.UML_Fork_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Fork_Nodes.UML_Fork_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Fork_Nodes.UML_Fork_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Fork_Nodes.UML_Fork_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Fork_Nodes.UML_Fork_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Fork_Nodes.UML_Fork_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Fork_Nodes.UML_Fork_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Fork_Nodes.UML_Fork_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Fork_Nodes.UML_Fork_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Fork_Nodes.UML_Fork_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Fork_Nodes.UML_Fork_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Fork_Nodes.UML_Fork_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Fork_Node_Get;

      -------------------------------
      -- UML_Function_Behavior_Get --
      -------------------------------

      function UML_Function_Behavior_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Attribute_A_Classifier then
            --  Classifier::attribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Opaque_Behavior_Body then
            --  OpaqueBehavior::body : String

            return
              AMF.String_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Body);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Classifier_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::classifierBehavior : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier_Behavior));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Collaboration_Use_A_Classifier then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Context_A_Behavior then
            --  Behavior::context : BehavioredClassifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviored_Classifiers.UML_Behaviored_Classifier_Access'
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Extension_Extension_Metaclass then
            --  Class::extension : Extension

            return
              AMF.UML.Extensions.Collections.UML_Extension_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Extension);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Feature_Feature_Featuring_Classifier then
            --  Classifier::feature : Feature

            return
              AMF.UML.Features.Collections.UML_Feature_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Feature);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_General_A_Classifier then
            --  Classifier::general : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Generalization_Generalization_Specific then
            --  Classifier::generalization : Generalization

            return
              AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Inherited_Member_A_Classifier then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Interface_Realization_Interface_Realization_Implementing_Classifier then
            --  BehavioredClassifier::interfaceRealization : InterfaceRealization

            return
              AMF.UML.Interface_Realizations.Collections.UML_Interface_Realization_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Interface_Realization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Active);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Is_Reentrant then
            --  Behavior::isReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Opaque_Behavior_Language then
            --  OpaqueBehavior::language : String

            return
              AMF.String_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Language);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Nested_Classifier_A_Class then
            --  Class::nestedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Owned_Attribute_Property_Class then
            --  Class::ownedAttribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Owned_Attribute_A_Structured_Classifier then
            --  StructuredClassifier::ownedAttribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Owned_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::ownedBehavior : Behavior

            return
              AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Behavior);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Owned_Connector_A_Structured_Classifier then
            --  StructuredClassifier::ownedConnector : Connector

            return
              AMF.UML.Connectors.Collections.UML_Connector_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Connector);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Owned_Operation_Operation_Class then
            --  Class::ownedOperation : Operation

            return
              AMF.UML.Operations.Collections.UML_Operation_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Operation);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Owned_Parameter_A_Behavior then
            --  Behavior::ownedParameter : Parameter

            return
              AMF.UML.Parameters.Collections.UML_Parameter_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parameter);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Owned_Parameter_Set_A_Behavior then
            --  Behavior::ownedParameterSet : ParameterSet

            return
              AMF.UML.Parameter_Sets.Collections.UML_Parameter_Set_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parameter_Set);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Encapsulated_Classifier_Owned_Port_A_Encapsulated_Classifier then
            --  EncapsulatedClassifier::ownedPort : Port

            return
              AMF.UML.Ports.Collections.UML_Port_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Port);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Owned_Reception_A_Class then
            --  Class::ownedReception : Reception

            return
              AMF.UML.Receptions.Collections.UML_Reception_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Reception);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Use_Case_A_Classifier then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Part_A_Structured_Classifier then
            --  StructuredClassifier::part : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Part);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Postcondition_A_Behavior then
            --  Behavior::postcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Powertype_Extent_Generalization_Set_Powertype then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Precondition_A_Behavior then
            --  Behavior::precondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Redefined_Behavior_A_Behavior then
            --  Behavior::redefinedBehavior : Behavior

            return
              AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Behavior);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Redefined_Classifier_A_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Role_A_Structured_Classifier then
            --  StructuredClassifier::role : ConnectableElement

            return
              AMF.UML.Connectable_Elements.Collections.UML_Connectable_Element_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Role);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Specification_Behavioral_Feature_Method then
            --  Behavior::specification : BehavioralFeature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behavioral_Features.UML_Behavioral_Feature_Access'
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Specification));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Substitution_Substitution_Substituting_Classifier then
            --  Classifier::substitution : Substitution

            return
              AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Super_Class_A_Class then
            --  Class::superClass : Class

            return
              AMF.UML.Classes.Collections.UML_Class_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Class);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Template_Binding_Template_Binding_Bound_Element then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Use_Case_Use_Case_Subject then
            --  Classifier::useCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Function_Behavior_Get;

      ------------------
      -- UML_Gate_Get --
      ------------------

      function UML_Gate_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Gates.UML_Gate_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Message_End_Message_A_Message_End then
            --  MessageEnd::message : Message

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Messages.UML_Message_Access'
                 (AMF.UML.Gates.UML_Gate_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Message));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Gates.UML_Gate_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Gates.UML_Gate_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Gates.UML_Gate_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Gates.UML_Gate_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Gates.UML_Gate_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Gates.UML_Gate_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Gates.UML_Gate_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Gates.UML_Gate_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Gate_Get;

      ------------------------------
      -- UML_General_Ordering_Get --
      ------------------------------

      function UML_General_Ordering_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_General_Ordering_After_Occurrence_Specification_To_Before then
            --  GeneralOrdering::after : OccurrenceSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access'
                 (AMF.UML.General_Orderings.UML_General_Ordering_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_After));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_General_Ordering_Before_Occurrence_Specification_To_After then
            --  GeneralOrdering::before : OccurrenceSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access'
                 (AMF.UML.General_Orderings.UML_General_Ordering_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Before));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.General_Orderings.UML_General_Ordering_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.General_Orderings.UML_General_Ordering_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.General_Orderings.UML_General_Ordering_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.General_Orderings.UML_General_Ordering_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.General_Orderings.UML_General_Ordering_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.General_Orderings.UML_General_Ordering_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.General_Orderings.UML_General_Ordering_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.General_Orderings.UML_General_Ordering_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.General_Orderings.UML_General_Ordering_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_General_Ordering_Get;

      ----------------------------
      -- UML_Generalization_Get --
      ----------------------------

      function UML_Generalization_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Generalization_General_A_Generalization then
            --  Generalization::general : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Generalizations.UML_Generalization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Generalization_Generalization_Set_Generalization_Set_Generalization then
            --  Generalization::generalizationSet : GeneralizationSet

            return
              AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internals.To_Holder
               (AMF.UML.Generalizations.UML_Generalization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization_Set);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Generalization_Is_Substitutable then
            --  Generalization::isSubstitutable : Boolean

            return
              AMF.Holders.To_Holder
               (AMF.UML.Generalizations.UML_Generalization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Substitutable);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Generalizations.UML_Generalization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Generalizations.UML_Generalization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Generalizations.UML_Generalization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Relationship_Related_Element_A_Relationship then
            --  Relationship::relatedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Generalizations.UML_Generalization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Directed_Relationship_Source_A_Directed_Relationship then
            --  DirectedRelationship::source : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Generalizations.UML_Generalization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Source);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Generalization_Specific_Classifier_Generalization then
            --  Generalization::specific : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Generalizations.UML_Generalization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Specific));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Directed_Relationship_Target_A_Directed_Relationship then
            --  DirectedRelationship::target : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Generalizations.UML_Generalization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Target);

         else
            raise Program_Error;
         end if;
      end UML_Generalization_Get;

      --------------------------------
      -- UML_Generalization_Set_Get --
      --------------------------------

      function UML_Generalization_Set_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Generalization_Set_Generalization_Generalization_Generalization_Set then
            --  GeneralizationSet::generalization : Generalization

            return
              AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internals.To_Holder
               (AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Generalization_Set_Is_Covering then
            --  GeneralizationSet::isCovering : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Covering);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Generalization_Set_Is_Disjoint then
            --  GeneralizationSet::isDisjoint : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Disjoint);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Generalization_Set_Powertype_Classifier_Powertype_Extent then
            --  GeneralizationSet::powertype : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Generalization_Set_Get;

      -------------------
      -- UML_Image_Get --
      -------------------

      function UML_Image_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Image_Content then
            --  Image::content : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Images.UML_Image_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Content);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Image_Format then
            --  Image::format : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Images.UML_Image_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Format);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Image_Location then
            --  Image::location : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Images.UML_Image_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Location);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Images.UML_Image_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Images.UML_Image_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Images.UML_Image_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         else
            raise Program_Error;
         end if;
      end UML_Image_Get;

      ---------------------
      -- UML_Include_Get --
      ---------------------

      function UML_Include_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Include_Addition_A_Include then
            --  Include::addition : UseCase

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access'
                 (AMF.UML.Includes.UML_Include_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Addition));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Includes.UML_Include_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Include_Including_Case_Use_Case_Include then
            --  Include::includingCase : UseCase

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access'
                 (AMF.UML.Includes.UML_Include_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Including_Case));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Includes.UML_Include_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Includes.UML_Include_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Includes.UML_Include_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Includes.UML_Include_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Includes.UML_Include_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Includes.UML_Include_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Includes.UML_Include_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Relationship_Related_Element_A_Relationship then
            --  Relationship::relatedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Includes.UML_Include_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Directed_Relationship_Source_A_Directed_Relationship then
            --  DirectedRelationship::source : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Includes.UML_Include_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Source);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Directed_Relationship_Target_A_Directed_Relationship then
            --  DirectedRelationship::target : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Includes.UML_Include_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Target);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Includes.UML_Include_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Include_Get;

      ------------------------------
      -- UML_Information_Flow_Get --
      ------------------------------

      function UML_Information_Flow_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Information_Flows.UML_Information_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Information_Flow_Conveyed_A_Information_Flow then
            --  InformationFlow::conveyed : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Information_Flows.UML_Information_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Conveyed);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Information_Flow_Information_Source_A_Information_Flow then
            --  InformationFlow::informationSource : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Information_Flows.UML_Information_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Information_Source);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Information_Flow_Information_Target_A_Information_Flow then
            --  InformationFlow::informationTarget : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Information_Flows.UML_Information_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Information_Target);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Information_Flows.UML_Information_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Information_Flows.UML_Information_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Information_Flows.UML_Information_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Information_Flows.UML_Information_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Information_Flows.UML_Information_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Information_Flows.UML_Information_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Information_Flows.UML_Information_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Information_Flows.UML_Information_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Information_Flow_Realization_A_Abstraction then
            --  InformationFlow::realization : Relationship

            return
              AMF.UML.Relationships.Collections.UML_Relationship_Collections.Internals.To_Holder
               (AMF.UML.Information_Flows.UML_Information_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Realization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Information_Flow_Realizing_Activity_Edge_A_Information_Flow then
            --  InformationFlow::realizingActivityEdge : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Information_Flows.UML_Information_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Realizing_Activity_Edge);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Information_Flow_Realizing_Connector_A_Information_Flow then
            --  InformationFlow::realizingConnector : Connector

            return
              AMF.UML.Connectors.Collections.UML_Connector_Collections.Internals.To_Holder
               (AMF.UML.Information_Flows.UML_Information_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Realizing_Connector);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Information_Flow_Realizing_Message_A_Information_Flow then
            --  InformationFlow::realizingMessage : Message

            return
              AMF.UML.Messages.Collections.UML_Message_Collections.Internals.To_Holder
               (AMF.UML.Information_Flows.UML_Information_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Realizing_Message);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Relationship_Related_Element_A_Relationship then
            --  Relationship::relatedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Information_Flows.UML_Information_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Directed_Relationship_Source_A_Directed_Relationship then
            --  DirectedRelationship::source : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Information_Flows.UML_Information_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Source);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Directed_Relationship_Target_A_Directed_Relationship then
            --  DirectedRelationship::target : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Information_Flows.UML_Information_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Target);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Information_Flows.UML_Information_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Information_Flows.UML_Information_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Information_Flows.UML_Information_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Information_Flow_Get;

      ------------------------------
      -- UML_Information_Item_Get --
      ------------------------------

      function UML_Information_Item_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Attribute_A_Classifier then
            --  Classifier::attribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Information_Items.UML_Information_Item_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Information_Items.UML_Information_Item_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Collaboration_Use_A_Classifier then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internals.To_Holder
               (AMF.UML.Information_Items.UML_Information_Item_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Information_Items.UML_Information_Item_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Feature_Feature_Featuring_Classifier then
            --  Classifier::feature : Feature

            return
              AMF.UML.Features.Collections.UML_Feature_Collections.Internals.To_Holder
               (AMF.UML.Information_Items.UML_Information_Item_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Feature);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_General_A_Classifier then
            --  Classifier::general : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Information_Items.UML_Information_Item_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Generalization_Generalization_Specific then
            --  Classifier::generalization : Generalization

            return
              AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internals.To_Holder
               (AMF.UML.Information_Items.UML_Information_Item_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Information_Items.UML_Information_Item_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Inherited_Member_A_Classifier then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Information_Items.UML_Information_Item_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Information_Items.UML_Information_Item_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Information_Items.UML_Information_Item_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Information_Items.UML_Information_Item_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Information_Items.UML_Information_Item_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Information_Items.UML_Information_Item_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Information_Items.UML_Information_Item_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Information_Items.UML_Information_Item_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Information_Items.UML_Information_Item_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Information_Items.UML_Information_Item_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Use_Case_A_Classifier then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Information_Items.UML_Information_Item_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Information_Items.UML_Information_Item_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Powertype_Extent_Generalization_Set_Powertype then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internals.To_Holder
               (AMF.UML.Information_Items.UML_Information_Item_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Information_Items.UML_Information_Item_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Redefined_Classifier_A_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Information_Items.UML_Information_Item_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Information_Items.UML_Information_Item_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Information_Items.UML_Information_Item_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Information_Item_Represented_A_Representation then
            --  InformationItem::represented : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Information_Items.UML_Information_Item_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Represented);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Substitution_Substitution_Substituting_Classifier then
            --  Classifier::substitution : Substitution

            return
              AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internals.To_Holder
               (AMF.UML.Information_Items.UML_Information_Item_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Template_Binding_Template_Binding_Bound_Element then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internals.To_Holder
               (AMF.UML.Information_Items.UML_Information_Item_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Use_Case_Use_Case_Subject then
            --  Classifier::useCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Information_Items.UML_Information_Item_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Information_Items.UML_Information_Item_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Information_Items.UML_Information_Item_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Information_Item_Get;

      --------------------------
      -- UML_Initial_Node_Get --
      --------------------------

      function UML_Initial_Node_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Initial_Nodes.UML_Initial_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Initial_Nodes.UML_Initial_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Initial_Nodes.UML_Initial_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Initial_Nodes.UML_Initial_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Initial_Nodes.UML_Initial_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Initial_Nodes.UML_Initial_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Initial_Nodes.UML_Initial_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Initial_Nodes.UML_Initial_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Initial_Nodes.UML_Initial_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Initial_Nodes.UML_Initial_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Initial_Nodes.UML_Initial_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Initial_Nodes.UML_Initial_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Initial_Nodes.UML_Initial_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Initial_Nodes.UML_Initial_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Initial_Nodes.UML_Initial_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Initial_Nodes.UML_Initial_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Initial_Nodes.UML_Initial_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Initial_Nodes.UML_Initial_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Initial_Nodes.UML_Initial_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Initial_Nodes.UML_Initial_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Initial_Node_Get;

      -----------------------
      -- UML_Input_Pin_Get --
      -----------------------

      function UML_Input_Pin_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Input_Pins.UML_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_In_State_A_Object_Node then
            --  ObjectNode::inState : State

            return
              AMF.UML.States.Collections.UML_State_Collections.Internals.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_State);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Input_Pins.UML_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Pin_Is_Control then
            --  Pin::isControl : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Control);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Is_Control_Type then
            --  ObjectNode::isControlType : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Control_Type);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Is_Ordered then
            --  MultiplicityElement::isOrdered : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Ordered);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Is_Unique then
            --  MultiplicityElement::isUnique : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Unique);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Lower then
            --  MultiplicityElement::lower : Integer

            return
              AMF.Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Lower);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Lower_Value_A_Owning_Lower then
            --  MultiplicityElement::lowerValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Input_Pins.UML_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Lower_Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Input_Pins.UML_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Input_Pins.UML_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Ordering then
            --  ObjectNode::ordering : ObjectNodeOrderingKind

            return
              AMF.UML.Holders.Object_Node_Ordering_Kinds.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Ordering);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Input_Pins.UML_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Selection_A_Object_Node then
            --  ObjectNode::selection : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Input_Pins.UML_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Selection));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Input_Pins.UML_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Upper then
            --  MultiplicityElement::upper : UnlimitedNatural

            return
              AMF.Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Upper);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Upper_Bound_A_Object_Node then
            --  ObjectNode::upperBound : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Input_Pins.UML_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Upper_Bound));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Upper_Value_A_Owning_Upper then
            --  MultiplicityElement::upperValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Input_Pins.UML_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Upper_Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Input_Pin_Get;

      ------------------------------------
      -- UML_Instance_Specification_Get --
      ------------------------------------

      function UML_Instance_Specification_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Instance_Specification_Classifier_A_Instance_Specification then
            --  InstanceSpecification::classifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Deployment_Target_Deployed_Element_A_Deployment_Target then
            --  DeploymentTarget::deployedElement : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Deployed_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Deployment_Target_Deployment_Deployment_Location then
            --  DeploymentTarget::deployment : Deployment

            return
              AMF.UML.Deployments.Collections.UML_Deployment_Collections.Internals.To_Holder
               (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Deployment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Instance_Specification_Slot_Slot_Owning_Instance then
            --  InstanceSpecification::slot : Slot

            return
              AMF.UML.Slots.Collections.UML_Slot_Collections.Internals.To_Holder
               (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Slot);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Instance_Specification_Specification_A_Owning_Instance_Spec then
            --  InstanceSpecification::specification : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Specification));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Instance_Specification_Get;

      ----------------------------
      -- UML_Instance_Value_Get --
      ----------------------------

      function UML_Instance_Value_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Instance_Values.UML_Instance_Value_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Instance_Value_Instance_A_Instance_Value then
            --  InstanceValue::instance : InstanceSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access'
                 (AMF.UML.Instance_Values.UML_Instance_Value_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Instance));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Instance_Values.UML_Instance_Value_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Instance_Values.UML_Instance_Value_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Instance_Values.UML_Instance_Value_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Instance_Values.UML_Instance_Value_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Instance_Values.UML_Instance_Value_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Instance_Values.UML_Instance_Value_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Instance_Values.UML_Instance_Value_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Instance_Values.UML_Instance_Value_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Instance_Values.UML_Instance_Value_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Instance_Values.UML_Instance_Value_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Instance_Values.UML_Instance_Value_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Instance_Values.UML_Instance_Value_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Instance_Value_Get;

      -------------------------
      -- UML_Interaction_Get --
      -------------------------

      function UML_Interaction_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Action_A_Interaction then
            --  Interaction::action : Action

            return
              AMF.UML.Actions.Collections.UML_Action_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Action);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Attribute_A_Classifier then
            --  Classifier::attribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Classifier_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::classifierBehavior : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier_Behavior));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Collaboration_Use_A_Classifier then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Context_A_Behavior then
            --  Behavior::context : BehavioredClassifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviored_Classifiers.UML_Behaviored_Classifier_Access'
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Covered_Lifeline_Covered_By then
            --  InteractionFragment::covered : Lifeline

            return
              AMF.UML.Lifelines.Collections.UML_Lifeline_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Covered);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Interaction_Interaction_Fragment then
            --  InteractionFragment::enclosingInteraction : Interaction

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access'
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Interaction));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Operand_Interaction_Operand_Fragment then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access'
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Operand));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Extension_Extension_Metaclass then
            --  Class::extension : Extension

            return
              AMF.UML.Extensions.Collections.UML_Extension_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Extension);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Feature_Feature_Featuring_Classifier then
            --  Classifier::feature : Feature

            return
              AMF.UML.Features.Collections.UML_Feature_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Feature);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Formal_Gate_A_Interaction then
            --  Interaction::formalGate : Gate

            return
              AMF.UML.Gates.Collections.UML_Gate_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Formal_Gate);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Interaction_Fragment_Enclosing_Interaction then
            --  Interaction::fragment : InteractionFragment

            return
              AMF.UML.Interaction_Fragments.Collections.UML_Interaction_Fragment_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Fragment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_General_A_Classifier then
            --  Classifier::general : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_General_Ordering_A_Interaction_Fragment then
            --  InteractionFragment::generalOrdering : GeneralOrdering

            return
              AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General_Ordering);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Generalization_Generalization_Specific then
            --  Classifier::generalization : Generalization

            return
              AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Inherited_Member_A_Classifier then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Interface_Realization_Interface_Realization_Implementing_Classifier then
            --  BehavioredClassifier::interfaceRealization : InterfaceRealization

            return
              AMF.UML.Interface_Realizations.Collections.UML_Interface_Realization_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Interface_Realization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Active);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Is_Reentrant then
            --  Behavior::isReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Lifeline_Lifeline_Interaction then
            --  Interaction::lifeline : Lifeline

            return
              AMF.UML.Lifelines.Collections.UML_Lifeline_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Lifeline);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Message_Message_Interaction then
            --  Interaction::message : Message

            return
              AMF.UML.Messages.Collections.UML_Message_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Message);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Nested_Classifier_A_Class then
            --  Class::nestedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Owned_Attribute_Property_Class then
            --  Class::ownedAttribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Owned_Attribute_A_Structured_Classifier then
            --  StructuredClassifier::ownedAttribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Owned_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::ownedBehavior : Behavior

            return
              AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Behavior);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Owned_Connector_A_Structured_Classifier then
            --  StructuredClassifier::ownedConnector : Connector

            return
              AMF.UML.Connectors.Collections.UML_Connector_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Connector);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Owned_Operation_Operation_Class then
            --  Class::ownedOperation : Operation

            return
              AMF.UML.Operations.Collections.UML_Operation_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Operation);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Owned_Parameter_A_Behavior then
            --  Behavior::ownedParameter : Parameter

            return
              AMF.UML.Parameters.Collections.UML_Parameter_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parameter);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Owned_Parameter_Set_A_Behavior then
            --  Behavior::ownedParameterSet : ParameterSet

            return
              AMF.UML.Parameter_Sets.Collections.UML_Parameter_Set_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parameter_Set);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Encapsulated_Classifier_Owned_Port_A_Encapsulated_Classifier then
            --  EncapsulatedClassifier::ownedPort : Port

            return
              AMF.UML.Ports.Collections.UML_Port_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Port);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Owned_Reception_A_Class then
            --  Class::ownedReception : Reception

            return
              AMF.UML.Receptions.Collections.UML_Reception_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Reception);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Use_Case_A_Classifier then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Part_A_Structured_Classifier then
            --  StructuredClassifier::part : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Part);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Postcondition_A_Behavior then
            --  Behavior::postcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Powertype_Extent_Generalization_Set_Powertype then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Precondition_A_Behavior then
            --  Behavior::precondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Redefined_Behavior_A_Behavior then
            --  Behavior::redefinedBehavior : Behavior

            return
              AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Behavior);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Redefined_Classifier_A_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Role_A_Structured_Classifier then
            --  StructuredClassifier::role : ConnectableElement

            return
              AMF.UML.Connectable_Elements.Collections.UML_Connectable_Element_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Role);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Specification_Behavioral_Feature_Method then
            --  Behavior::specification : BehavioralFeature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behavioral_Features.UML_Behavioral_Feature_Access'
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Specification));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Substitution_Substitution_Substituting_Classifier then
            --  Classifier::substitution : Substitution

            return
              AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Super_Class_A_Class then
            --  Class::superClass : Class

            return
              AMF.UML.Classes.Collections.UML_Class_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Class);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Template_Binding_Template_Binding_Bound_Element then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Use_Case_Use_Case_Subject then
            --  Classifier::useCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Interaction_Get;

      ------------------------------------
      -- UML_Interaction_Constraint_Get --
      ------------------------------------

      function UML_Interaction_Constraint_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Constraint_Constrained_Element_A_Constraint then
            --  Constraint::constrainedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Constrained_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Constraint_Context_Namespace_Owned_Rule then
            --  Constraint::context : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Constraint_Maxint_A_Interaction_Constraint then
            --  InteractionConstraint::maxint : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Maxint));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Constraint_Minint_A_Interaction_Constraint then
            --  InteractionConstraint::minint : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Minint));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Constraint_Specification_A_Owning_Constraint then
            --  Constraint::specification : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Specification));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Interaction_Constraint_Get;

      ---------------------------------
      -- UML_Interaction_Operand_Get --
      ---------------------------------

      function UML_Interaction_Operand_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Covered_Lifeline_Covered_By then
            --  InteractionFragment::covered : Lifeline

            return
              AMF.UML.Lifelines.Collections.UML_Lifeline_Collections.Internals.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Covered);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Interaction_Interaction_Fragment then
            --  InteractionFragment::enclosingInteraction : Interaction

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access'
                 (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Interaction));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Operand_Interaction_Operand_Fragment then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access'
                 (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Operand));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Operand_Fragment_Interaction_Fragment_Enclosing_Operand then
            --  InteractionOperand::fragment : InteractionFragment

            return
              AMF.UML.Interaction_Fragments.Collections.UML_Interaction_Fragment_Collections.Internals.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Fragment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_General_Ordering_A_Interaction_Fragment then
            --  InteractionFragment::generalOrdering : GeneralOrdering

            return
              AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internals.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General_Ordering);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Operand_Guard_A_Interaction_Operand then
            --  InteractionOperand::guard : InteractionConstraint

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access'
                 (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Guard));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Interaction_Operand_Get;

      -----------------------------
      -- UML_Interaction_Use_Get --
      -----------------------------

      function UML_Interaction_Use_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Use_Actual_Gate_A_Interaction_Use then
            --  InteractionUse::actualGate : Gate

            return
              AMF.UML.Gates.Collections.UML_Gate_Collections.Internals.To_Holder
               (AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Actual_Gate);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Use_Argument_A_Interaction_Use then
            --  InteractionUse::argument : ValueSpecification

            return
              AMF.UML.Value_Specifications.Collections.UML_Value_Specification_Collections.Internals.To_Holder
               (AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Argument);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Covered_Lifeline_Covered_By then
            --  InteractionFragment::covered : Lifeline

            return
              AMF.UML.Lifelines.Collections.UML_Lifeline_Collections.Internals.To_Holder
               (AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Covered);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Interaction_Interaction_Fragment then
            --  InteractionFragment::enclosingInteraction : Interaction

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access'
                 (AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Interaction));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Operand_Interaction_Operand_Fragment then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access'
                 (AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Operand));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_General_Ordering_A_Interaction_Fragment then
            --  InteractionFragment::generalOrdering : GeneralOrdering

            return
              AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internals.To_Holder
               (AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General_Ordering);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Use_Refers_To_A_Interaction_Use then
            --  InteractionUse::refersTo : Interaction

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access'
                 (AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Refers_To));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Use_Return_Value_A_Interaction_Use then
            --  InteractionUse::returnValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Return_Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Use_Return_Value_Recipient_A_Interaction_Use then
            --  InteractionUse::returnValueRecipient : Property

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access'
                 (AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Return_Value_Recipient));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Interaction_Use_Get;

      -----------------------
      -- UML_Interface_Get --
      -----------------------

      function UML_Interface_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Attribute_A_Classifier then
            --  Classifier::attribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Collaboration_Use_A_Classifier then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internals.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Feature_Feature_Featuring_Classifier then
            --  Classifier::feature : Feature

            return
              AMF.UML.Features.Collections.UML_Feature_Collections.Internals.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Feature);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_General_A_Classifier then
            --  Classifier::general : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Generalization_Generalization_Specific then
            --  Classifier::generalization : Generalization

            return
              AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internals.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Inherited_Member_A_Classifier then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interface_Nested_Classifier_A_Interface then
            --  Interface::nestedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interface_Owned_Attribute_Property_Interface then
            --  Interface::ownedAttribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interface_Owned_Operation_Operation_Interface then
            --  Interface::ownedOperation : Operation

            return
              AMF.UML.Operations.Collections.UML_Operation_Collections.Internals.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Operation);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interface_Owned_Reception_A_Interface then
            --  Interface::ownedReception : Reception

            return
              AMF.UML.Receptions.Collections.UML_Reception_Collections.Internals.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Reception);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Use_Case_A_Classifier then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Powertype_Extent_Generalization_Set_Powertype then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internals.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interface_Protocol_A_Interface then
            --  Interface::protocol : ProtocolStateMachine

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access'
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Protocol));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Redefined_Classifier_A_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interface_Redefined_Interface_A_Interface then
            --  Interface::redefinedInterface : Interface

            return
              AMF.UML.Interfaces.Collections.UML_Interface_Collections.Internals.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Interface);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Substitution_Substitution_Substituting_Classifier then
            --  Classifier::substitution : Substitution

            return
              AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internals.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Template_Binding_Template_Binding_Bound_Element then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internals.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Use_Case_Use_Case_Subject then
            --  Classifier::useCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Interface_Get;

      -----------------------------------
      -- UML_Interface_Realization_Get --
      -----------------------------------

      function UML_Interface_Realization_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Dependency_Client_Named_Element_Client_Dependency then
            --  Dependency::client : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interface_Realization_Contract_A_Interface_Realization then
            --  InterfaceRealization::contract : Interface

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access'
                 (AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Contract));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interface_Realization_Implementing_Classifier_Behaviored_Classifier_Interface_Realization then
            --  InterfaceRealization::implementingClassifier : BehavioredClassifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviored_Classifiers.UML_Behaviored_Classifier_Access'
                 (AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Implementing_Classifier));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Abstraction_Mapping_A_Abstraction then
            --  Abstraction::mapping : OpaqueExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access'
                 (AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Mapping));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Relationship_Related_Element_A_Relationship then
            --  Relationship::relatedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Directed_Relationship_Source_A_Directed_Relationship then
            --  DirectedRelationship::source : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Source);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Dependency_Supplier_A_Supplier_Dependency then
            --  Dependency::supplier : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Supplier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Directed_Relationship_Target_A_Directed_Relationship then
            --  DirectedRelationship::target : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Target);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Interface_Realization_Get;

      -------------------------------------------
      -- UML_Interruptible_Activity_Region_Get --
      -------------------------------------------

      function UML_Interruptible_Activity_Region_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_Contained_Edge_Activity_Edge_In_Group then
            --  ActivityGroup::containedEdge : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Contained_Edge);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_Contained_Node_Activity_Node_In_Group then
            --  ActivityGroup::containedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Contained_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_In_Activity_Activity_Group then
            --  ActivityGroup::inActivity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interruptible_Activity_Region_Interrupting_Edge_Activity_Edge_Interrupts then
            --  InterruptibleActivityRegion::interruptingEdge : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Interrupting_Edge);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interruptible_Activity_Region_Node_Activity_Node_In_Interruptible_Region then
            --  InterruptibleActivityRegion::node : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_Subgroup_Activity_Group_Super_Group then
            --  ActivityGroup::subgroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Subgroup);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_Super_Group_Activity_Group_Subgroup then
            --  ActivityGroup::superGroup : ActivityGroup

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activity_Groups.UML_Activity_Group_Access'
                 (AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Group));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Interruptible_Activity_Region_Get;

      ----------------------
      -- UML_Interval_Get --
      ----------------------

      function UML_Interval_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Intervals.UML_Interval_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interval_Max_A_Interval then
            --  Interval::max : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Intervals.UML_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Max));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interval_Min_A_Interval then
            --  Interval::min : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Intervals.UML_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Min));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Intervals.UML_Interval_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Intervals.UML_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Intervals.UML_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Intervals.UML_Interval_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Intervals.UML_Interval_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Intervals.UML_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Intervals.UML_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Intervals.UML_Interval_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Intervals.UML_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Intervals.UML_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Intervals.UML_Interval_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Intervals.UML_Interval_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Interval_Get;

      ---------------------------------
      -- UML_Interval_Constraint_Get --
      ---------------------------------

      function UML_Interval_Constraint_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Constraint_Constrained_Element_A_Constraint then
            --  Constraint::constrainedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Constrained_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Constraint_Context_Namespace_Owned_Rule then
            --  Constraint::context : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Constraint_Specification_A_Owning_Constraint then
            --  Constraint::specification : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Specification));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interval_Constraint_Specification_A_Interval_Constraint then
            --  IntervalConstraint::specification : Interval

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Intervals.UML_Interval_Access'
                 (AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Specification));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Interval_Constraint_Get;

      -----------------------
      -- UML_Join_Node_Get --
      -----------------------

      function UML_Join_Node_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Join_Nodes.UML_Join_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Join_Nodes.UML_Join_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Join_Nodes.UML_Join_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Join_Nodes.UML_Join_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Join_Nodes.UML_Join_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Join_Nodes.UML_Join_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Join_Nodes.UML_Join_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Join_Node_Is_Combine_Duplicate then
            --  JoinNode::isCombineDuplicate : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Join_Nodes.UML_Join_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Combine_Duplicate);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Join_Nodes.UML_Join_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Join_Node_Join_Spec_A_Join_Node then
            --  JoinNode::joinSpec : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Join_Nodes.UML_Join_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Join_Spec));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Join_Nodes.UML_Join_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Join_Nodes.UML_Join_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Join_Nodes.UML_Join_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Join_Nodes.UML_Join_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Join_Nodes.UML_Join_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Join_Nodes.UML_Join_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Join_Nodes.UML_Join_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Join_Nodes.UML_Join_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Join_Nodes.UML_Join_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Join_Nodes.UML_Join_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Join_Nodes.UML_Join_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Join_Nodes.UML_Join_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Join_Node_Get;

      ----------------------
      -- UML_Lifeline_Get --
      ----------------------

      function UML_Lifeline_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Lifelines.UML_Lifeline_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Lifeline_Covered_By_Interaction_Fragment_Covered then
            --  Lifeline::coveredBy : InteractionFragment

            return
              AMF.UML.Interaction_Fragments.Collections.UML_Interaction_Fragment_Collections.Internals.To_Holder
               (AMF.UML.Lifelines.UML_Lifeline_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Covered_By);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Lifeline_Decomposed_As_A_Lifeline then
            --  Lifeline::decomposedAs : PartDecomposition

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access'
                 (AMF.UML.Lifelines.UML_Lifeline_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Decomposed_As));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Lifeline_Interaction_Interaction_Lifeline then
            --  Lifeline::interaction : Interaction

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access'
                 (AMF.UML.Lifelines.UML_Lifeline_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Interaction));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Lifelines.UML_Lifeline_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Lifelines.UML_Lifeline_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Lifelines.UML_Lifeline_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Lifelines.UML_Lifeline_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Lifelines.UML_Lifeline_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Lifelines.UML_Lifeline_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Lifelines.UML_Lifeline_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Lifeline_Represents_A_Lifeline then
            --  Lifeline::represents : ConnectableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Connectable_Elements.UML_Connectable_Element_Access'
                 (AMF.UML.Lifelines.UML_Lifeline_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Represents));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Lifeline_Selector_A_Lifeline then
            --  Lifeline::selector : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Lifelines.UML_Lifeline_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Selector));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Lifelines.UML_Lifeline_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Lifeline_Get;

      ------------------------------------
      -- UML_Link_End_Creation_Data_Get --
      ------------------------------------

      function UML_Link_End_Creation_Data_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Link_End_Data_End_A_Link_End_Data then
            --  LinkEndData::end : Property

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access'
                 (AMF.UML.Link_End_Creation_Datas.UML_Link_End_Creation_Data_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_End));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Link_End_Creation_Data_Insert_At_A_Link_End_Creation_Data then
            --  LinkEndCreationData::insertAt : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Link_End_Creation_Datas.UML_Link_End_Creation_Data_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Insert_At));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Link_End_Creation_Data_Is_Replace_All then
            --  LinkEndCreationData::isReplaceAll : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Link_End_Creation_Datas.UML_Link_End_Creation_Data_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Replace_All);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Link_End_Creation_Datas.UML_Link_End_Creation_Data_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Link_End_Creation_Datas.UML_Link_End_Creation_Data_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Link_End_Creation_Datas.UML_Link_End_Creation_Data_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Link_End_Data_Qualifier_A_Link_End_Data then
            --  LinkEndData::qualifier : QualifierValue

            return
              AMF.UML.Qualifier_Values.Collections.UML_Qualifier_Value_Collections.Internals.To_Holder
               (AMF.UML.Link_End_Creation_Datas.UML_Link_End_Creation_Data_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Link_End_Data_Value_A_Link_End_Data then
            --  LinkEndData::value : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Link_End_Creation_Datas.UML_Link_End_Creation_Data_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Value));

         else
            raise Program_Error;
         end if;
      end UML_Link_End_Creation_Data_Get;

      ---------------------------
      -- UML_Link_End_Data_Get --
      ---------------------------

      function UML_Link_End_Data_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Link_End_Data_End_A_Link_End_Data then
            --  LinkEndData::end : Property

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access'
                 (AMF.UML.Link_End_Datas.UML_Link_End_Data_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_End));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Link_End_Datas.UML_Link_End_Data_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Link_End_Datas.UML_Link_End_Data_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Link_End_Datas.UML_Link_End_Data_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Link_End_Data_Qualifier_A_Link_End_Data then
            --  LinkEndData::qualifier : QualifierValue

            return
              AMF.UML.Qualifier_Values.Collections.UML_Qualifier_Value_Collections.Internals.To_Holder
               (AMF.UML.Link_End_Datas.UML_Link_End_Data_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Link_End_Data_Value_A_Link_End_Data then
            --  LinkEndData::value : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Link_End_Datas.UML_Link_End_Data_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Value));

         else
            raise Program_Error;
         end if;
      end UML_Link_End_Data_Get;

      ---------------------------------------
      -- UML_Link_End_Destruction_Data_Get --
      ---------------------------------------

      function UML_Link_End_Destruction_Data_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Link_End_Destruction_Data_Destroy_At_A_Link_End_Destruction_Data then
            --  LinkEndDestructionData::destroyAt : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Link_End_Destruction_Datas.UML_Link_End_Destruction_Data_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Destroy_At));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Link_End_Data_End_A_Link_End_Data then
            --  LinkEndData::end : Property

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access'
                 (AMF.UML.Link_End_Destruction_Datas.UML_Link_End_Destruction_Data_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_End));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Link_End_Destruction_Data_Is_Destroy_Duplicates then
            --  LinkEndDestructionData::isDestroyDuplicates : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Link_End_Destruction_Datas.UML_Link_End_Destruction_Data_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Destroy_Duplicates);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Link_End_Destruction_Datas.UML_Link_End_Destruction_Data_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Link_End_Destruction_Datas.UML_Link_End_Destruction_Data_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Link_End_Destruction_Datas.UML_Link_End_Destruction_Data_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Link_End_Data_Qualifier_A_Link_End_Data then
            --  LinkEndData::qualifier : QualifierValue

            return
              AMF.UML.Qualifier_Values.Collections.UML_Qualifier_Value_Collections.Internals.To_Holder
               (AMF.UML.Link_End_Destruction_Datas.UML_Link_End_Destruction_Data_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Link_End_Data_Value_A_Link_End_Data then
            --  LinkEndData::value : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Link_End_Destruction_Datas.UML_Link_End_Destruction_Data_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Value));

         else
            raise Program_Error;
         end if;
      end UML_Link_End_Destruction_Data_Get;

      -----------------------------
      -- UML_Literal_Boolean_Get --
      -----------------------------

      function UML_Literal_Boolean_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Literal_Boolean_Value then
            --  LiteralBoolean::value : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Value);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Literal_Boolean_Get;

      -----------------------------
      -- UML_Literal_Integer_Get --
      -----------------------------

      function UML_Literal_Integer_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Literal_Integers.UML_Literal_Integer_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Literal_Integers.UML_Literal_Integer_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Literal_Integers.UML_Literal_Integer_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Literal_Integers.UML_Literal_Integer_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Literal_Integers.UML_Literal_Integer_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Literal_Integers.UML_Literal_Integer_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Literal_Integers.UML_Literal_Integer_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Literal_Integers.UML_Literal_Integer_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Literal_Integers.UML_Literal_Integer_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Literal_Integers.UML_Literal_Integer_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Literal_Integers.UML_Literal_Integer_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Literal_Integer_Value then
            --  LiteralInteger::value : Integer

            return
              League.Holders.Integers.To_Holder
               (AMF.UML.Literal_Integers.UML_Literal_Integer_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Value);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Literal_Integers.UML_Literal_Integer_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Literal_Integers.UML_Literal_Integer_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Literal_Integer_Get;

      --------------------------
      -- UML_Literal_Null_Get --
      --------------------------

      function UML_Literal_Null_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Literal_Nulls.UML_Literal_Null_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Literal_Nulls.UML_Literal_Null_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Literal_Nulls.UML_Literal_Null_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Literal_Nulls.UML_Literal_Null_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Literal_Nulls.UML_Literal_Null_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Literal_Nulls.UML_Literal_Null_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Literal_Nulls.UML_Literal_Null_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Literal_Nulls.UML_Literal_Null_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Literal_Nulls.UML_Literal_Null_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Literal_Nulls.UML_Literal_Null_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Literal_Nulls.UML_Literal_Null_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Literal_Nulls.UML_Literal_Null_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Literal_Nulls.UML_Literal_Null_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Literal_Null_Get;

      --------------------------
      -- UML_Literal_Real_Get --
      --------------------------

      function UML_Literal_Real_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Literal_Reals.UML_Literal_Real_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Literal_Reals.UML_Literal_Real_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Literal_Reals.UML_Literal_Real_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Literal_Reals.UML_Literal_Real_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Literal_Reals.UML_Literal_Real_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Literal_Reals.UML_Literal_Real_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Literal_Reals.UML_Literal_Real_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Literal_Reals.UML_Literal_Real_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Literal_Reals.UML_Literal_Real_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Literal_Reals.UML_Literal_Real_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Literal_Reals.UML_Literal_Real_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Literal_Real_Value then
            --  LiteralReal::value : Real

            return
              AMF.Holders.Reals.To_Holder
               (AMF.UML.Literal_Reals.UML_Literal_Real_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Value);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Literal_Reals.UML_Literal_Real_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Literal_Reals.UML_Literal_Real_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Literal_Real_Get;

      ----------------------------
      -- UML_Literal_String_Get --
      ----------------------------

      function UML_Literal_String_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Literal_Strings.UML_Literal_String_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Literal_Strings.UML_Literal_String_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Literal_Strings.UML_Literal_String_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Literal_Strings.UML_Literal_String_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Literal_Strings.UML_Literal_String_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Literal_Strings.UML_Literal_String_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Literal_Strings.UML_Literal_String_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Literal_Strings.UML_Literal_String_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Literal_Strings.UML_Literal_String_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Literal_Strings.UML_Literal_String_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Literal_Strings.UML_Literal_String_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Literal_String_Value then
            --  LiteralString::value : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Literal_Strings.UML_Literal_String_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Value);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Literal_Strings.UML_Literal_String_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Literal_Strings.UML_Literal_String_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Literal_String_Get;

      ---------------------------------------
      -- UML_Literal_Unlimited_Natural_Get --
      ---------------------------------------

      function UML_Literal_Unlimited_Natural_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Literal_Unlimited_Natural_Value then
            --  LiteralUnlimitedNatural::value : UnlimitedNatural

            return
              AMF.Holders.Unlimited_Naturals.To_Holder
               (AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Value);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Literal_Unlimited_Natural_Get;

      -----------------------
      -- UML_Loop_Node_Get --
      -----------------------

      function UML_Loop_Node_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Activity_Activity_Structured_Node then
            --  StructuredActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Loop_Node_Body_Output_A_Loop_Node then
            --  LoopNode::bodyOutput : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Body_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Loop_Node_Body_Part_A_Loop_Node then
            --  LoopNode::bodyPart : ExecutableNode

            return
              AMF.UML.Executable_Nodes.Collections.UML_Executable_Node_Collections.Internals.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Body_Part);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_Contained_Edge_Activity_Edge_In_Group then
            --  ActivityGroup::containedEdge : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Contained_Edge);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_Contained_Node_Activity_Node_In_Group then
            --  ActivityGroup::containedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Contained_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Loop_Node_Decider_A_Loop_Node then
            --  LoopNode::decider : OutputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access'
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Decider));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Edge_Activity_Edge_In_Structured_Node then
            --  StructuredActivityNode::edge : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Edge);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_In_Activity_Activity_Group then
            --  ActivityGroup::inActivity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Loop_Node_Is_Tested_First then
            --  LoopNode::isTestedFirst : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Tested_First);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Loop_Node_Loop_Variable_A_Loop_Node then
            --  LoopNode::loopVariable : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Loop_Variable);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Loop_Node_Loop_Variable_Input_A_Loop_Node then
            --  LoopNode::loopVariableInput : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Loop_Variable_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Must_Isolate then
            --  StructuredActivityNode::mustIsolate : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Must_Isolate);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Node_Activity_Node_In_Structured_Node then
            --  StructuredActivityNode::node : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Loop_Node_Result_A_Loop_Node then
            --  LoopNode::result : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Result);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Loop_Node_Setup_Part_A_Loop_Node then
            --  LoopNode::setupPart : ExecutableNode

            return
              AMF.UML.Executable_Nodes.Collections.UML_Executable_Node_Collections.Internals.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Setup_Part);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Structured_Node_Input_A_Structured_Activity_Node then
            --  StructuredActivityNode::structuredNodeInput : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Structured_Node_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Structured_Node_Output_A_Structured_Activity_Node then
            --  StructuredActivityNode::structuredNodeOutput : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Structured_Node_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_Subgroup_Activity_Group_Super_Group then
            --  ActivityGroup::subgroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Subgroup);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_Super_Group_Activity_Group_Subgroup then
            --  ActivityGroup::superGroup : ActivityGroup

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activity_Groups.UML_Activity_Group_Access'
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Group));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Loop_Node_Test_A_Loop_Node then
            --  LoopNode::test : ExecutableNode

            return
              AMF.UML.Executable_Nodes.Collections.UML_Executable_Node_Collections.Internals.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Test);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Variable_Variable_Scope then
            --  StructuredActivityNode::variable : Variable

            return
              AMF.UML.Variables.Collections.UML_Variable_Collections.Internals.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Variable);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Loop_Node_Get;

      ---------------------------
      -- UML_Manifestation_Get --
      ---------------------------

      function UML_Manifestation_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Dependency_Client_Named_Element_Client_Dependency then
            --  Dependency::client : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Manifestations.UML_Manifestation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Manifestations.UML_Manifestation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Abstraction_Mapping_A_Abstraction then
            --  Abstraction::mapping : OpaqueExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access'
                 (AMF.UML.Manifestations.UML_Manifestation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Mapping));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Manifestations.UML_Manifestation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Manifestations.UML_Manifestation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Manifestations.UML_Manifestation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Manifestations.UML_Manifestation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Manifestations.UML_Manifestation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Manifestations.UML_Manifestation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Manifestations.UML_Manifestation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Manifestations.UML_Manifestation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Relationship_Related_Element_A_Relationship then
            --  Relationship::relatedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Manifestations.UML_Manifestation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Directed_Relationship_Source_A_Directed_Relationship then
            --  DirectedRelationship::source : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Manifestations.UML_Manifestation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Source);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Dependency_Supplier_A_Supplier_Dependency then
            --  Dependency::supplier : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Manifestations.UML_Manifestation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Supplier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Directed_Relationship_Target_A_Directed_Relationship then
            --  DirectedRelationship::target : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Manifestations.UML_Manifestation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Target);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Manifestations.UML_Manifestation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Manifestation_Utilized_Element_A_Manifestation then
            --  Manifestation::utilizedElement : PackageableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packageable_Elements.UML_Packageable_Element_Access'
                 (AMF.UML.Manifestations.UML_Manifestation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Utilized_Element));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Manifestations.UML_Manifestation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Manifestations.UML_Manifestation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Manifestation_Get;

      ------------------------
      -- UML_Merge_Node_Get --
      ------------------------

      function UML_Merge_Node_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Merge_Nodes.UML_Merge_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Merge_Nodes.UML_Merge_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Merge_Nodes.UML_Merge_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Merge_Nodes.UML_Merge_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Merge_Nodes.UML_Merge_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Merge_Nodes.UML_Merge_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Merge_Nodes.UML_Merge_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Merge_Nodes.UML_Merge_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Merge_Nodes.UML_Merge_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Merge_Nodes.UML_Merge_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Merge_Nodes.UML_Merge_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Merge_Nodes.UML_Merge_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Merge_Nodes.UML_Merge_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Merge_Nodes.UML_Merge_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Merge_Nodes.UML_Merge_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Merge_Nodes.UML_Merge_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Merge_Nodes.UML_Merge_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Merge_Nodes.UML_Merge_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Merge_Nodes.UML_Merge_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Merge_Nodes.UML_Merge_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Merge_Node_Get;

      ---------------------
      -- UML_Message_Get --
      ---------------------

      function UML_Message_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Message_Argument_A_Message then
            --  Message::argument : ValueSpecification

            return
              AMF.UML.Value_Specifications.Collections.UML_Value_Specification_Collections.Internals.To_Holder
               (AMF.UML.Messages.UML_Message_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Argument);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Messages.UML_Message_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Message_Connector_A_Message then
            --  Message::connector : Connector

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Connectors.UML_Connector_Access'
                 (AMF.UML.Messages.UML_Message_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Connector));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Message_Interaction_Interaction_Message then
            --  Message::interaction : Interaction

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access'
                 (AMF.UML.Messages.UML_Message_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Interaction));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Message_Message_Kind then
            --  Message::messageKind : MessageKind

            return
              AMF.UML.Holders.Message_Kinds.To_Holder
               (AMF.UML.Messages.UML_Message_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Message_Kind);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Message_Message_Sort then
            --  Message::messageSort : MessageSort

            return
              AMF.UML.Holders.Message_Sorts.To_Holder
               (AMF.UML.Messages.UML_Message_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Message_Sort);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Messages.UML_Message_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Messages.UML_Message_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Messages.UML_Message_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Messages.UML_Message_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Messages.UML_Message_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Messages.UML_Message_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Messages.UML_Message_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Message_Receive_Event_A_End_Message then
            --  Message::receiveEvent : MessageEnd

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Message_Ends.UML_Message_End_Access'
                 (AMF.UML.Messages.UML_Message_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Receive_Event));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Message_Send_Event_A_End_Message then
            --  Message::sendEvent : MessageEnd

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Message_Ends.UML_Message_End_Access'
                 (AMF.UML.Messages.UML_Message_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Send_Event));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Message_Signature_A_Message then
            --  Message::signature : NamedElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Named_Elements.UML_Named_Element_Access'
                 (AMF.UML.Messages.UML_Message_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Messages.UML_Message_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Message_Get;

      ----------------------------------------------
      -- UML_Message_Occurrence_Specification_Get --
      ----------------------------------------------

      function UML_Message_Occurrence_Specification_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Covered_Lifeline_Covered_By then
            --  InteractionFragment::covered : Lifeline

            return
              AMF.UML.Lifelines.Collections.UML_Lifeline_Collections.Internals.To_Holder
               (AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Covered);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Occurrence_Specification_Covered_A_Events then
            --  OccurrenceSpecification::covered : Lifeline

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Lifelines.UML_Lifeline_Access'
                 (AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Covered));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Interaction_Interaction_Fragment then
            --  InteractionFragment::enclosingInteraction : Interaction

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access'
                 (AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Interaction));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Operand_Interaction_Operand_Fragment then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access'
                 (AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Operand));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_General_Ordering_A_Interaction_Fragment then
            --  InteractionFragment::generalOrdering : GeneralOrdering

            return
              AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internals.To_Holder
               (AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General_Ordering);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Message_End_Message_A_Message_End then
            --  MessageEnd::message : Message

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Messages.UML_Message_Access'
                 (AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Message));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Occurrence_Specification_To_After_General_Ordering_Before then
            --  OccurrenceSpecification::toAfter : GeneralOrdering

            return
              AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internals.To_Holder
               (AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_To_After);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Occurrence_Specification_To_Before_General_Ordering_After then
            --  OccurrenceSpecification::toBefore : GeneralOrdering

            return
              AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internals.To_Holder
               (AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_To_Before);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Message_Occurrence_Specification_Get;

      -------------------
      -- UML_Model_Get --
      -------------------

      function UML_Model_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Package_URI then
            --  Package::URI : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Models.UML_Model_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_URI);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Models.UML_Model_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Models.UML_Model_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Models.UML_Model_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Models.UML_Model_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Models.UML_Model_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Models.UML_Model_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Models.UML_Model_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Package_Nested_Package_Package_Nesting_Package then
            --  Package::nestedPackage : Package

            return
              AMF.UML.Packages.Collections.UML_Package_Collections.Internals.To_Holder
               (AMF.UML.Models.UML_Model_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Package);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Package_Nesting_Package_Package_Nested_Package then
            --  Package::nestingPackage : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Models.UML_Model_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Nesting_Package));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Models.UML_Model_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Models.UML_Model_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Models.UML_Model_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Models.UML_Model_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Package_Owned_Stereotype_A_Owning_Package then
            --  Package::ownedStereotype : Stereotype

            return
              AMF.UML.Stereotypes.Collections.UML_Stereotype_Collections.Internals.To_Holder
               (AMF.UML.Models.UML_Model_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Stereotype);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Models.UML_Model_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Package_Owned_Type_Type_Package then
            --  Package::ownedType : Type

            return
              AMF.UML.Types.Collections.UML_Type_Collections.Internals.To_Holder
               (AMF.UML.Models.UML_Model_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Type);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Models.UML_Model_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Models.UML_Model_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Models.UML_Model_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Package_Package_Merge_Package_Merge_Receiving_Package then
            --  Package::packageMerge : PackageMerge

            return
              AMF.UML.Package_Merges.Collections.UML_Package_Merge_Collections.Internals.To_Holder
               (AMF.UML.Models.UML_Model_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Merge);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Package_Packaged_Element_A_Owning_Package then
            --  Package::packagedElement : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Models.UML_Model_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Packaged_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Package_Profile_Application_Profile_Application_Applying_Package then
            --  Package::profileApplication : ProfileApplication

            return
              AMF.UML.Profile_Applications.Collections.UML_Profile_Application_Collections.Internals.To_Holder
               (AMF.UML.Models.UML_Model_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Profile_Application);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Models.UML_Model_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Template_Binding_Template_Binding_Bound_Element then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internals.To_Holder
               (AMF.UML.Models.UML_Model_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Models.UML_Model_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Model_Viewpoint then
            --  Model::viewpoint : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Models.UML_Model_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Viewpoint);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Models.UML_Model_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Models.UML_Model_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Model_Get;

      ------------------
      -- UML_Node_Get --
      ------------------

      function UML_Node_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Attribute_A_Classifier then
            --  Classifier::attribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Classifier_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::classifierBehavior : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier_Behavior));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Collaboration_Use_A_Classifier then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internals.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Deployment_Target_Deployed_Element_A_Deployment_Target then
            --  DeploymentTarget::deployedElement : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Deployed_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Deployment_Target_Deployment_Deployment_Location then
            --  DeploymentTarget::deployment : Deployment

            return
              AMF.UML.Deployments.Collections.UML_Deployment_Collections.Internals.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Deployment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Extension_Extension_Metaclass then
            --  Class::extension : Extension

            return
              AMF.UML.Extensions.Collections.UML_Extension_Collections.Internals.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Extension);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Feature_Feature_Featuring_Classifier then
            --  Classifier::feature : Feature

            return
              AMF.UML.Features.Collections.UML_Feature_Collections.Internals.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Feature);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_General_A_Classifier then
            --  Classifier::general : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Generalization_Generalization_Specific then
            --  Classifier::generalization : Generalization

            return
              AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internals.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Inherited_Member_A_Classifier then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Interface_Realization_Interface_Realization_Implementing_Classifier then
            --  BehavioredClassifier::interfaceRealization : InterfaceRealization

            return
              AMF.UML.Interface_Realizations.Collections.UML_Interface_Realization_Collections.Internals.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Interface_Realization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Active);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Nested_Classifier_A_Class then
            --  Class::nestedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Node_Nested_Node_A_Node then
            --  Node::nestedNode : Node

            return
              AMF.UML.Nodes.Collections.UML_Node_Collections.Internals.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Owned_Attribute_Property_Class then
            --  Class::ownedAttribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Owned_Attribute_A_Structured_Classifier then
            --  StructuredClassifier::ownedAttribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Owned_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::ownedBehavior : Behavior

            return
              AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internals.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Behavior);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Owned_Connector_A_Structured_Classifier then
            --  StructuredClassifier::ownedConnector : Connector

            return
              AMF.UML.Connectors.Collections.UML_Connector_Collections.Internals.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Connector);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Owned_Operation_Operation_Class then
            --  Class::ownedOperation : Operation

            return
              AMF.UML.Operations.Collections.UML_Operation_Collections.Internals.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Operation);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Encapsulated_Classifier_Owned_Port_A_Encapsulated_Classifier then
            --  EncapsulatedClassifier::ownedPort : Port

            return
              AMF.UML.Ports.Collections.UML_Port_Collections.Internals.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Port);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Owned_Reception_A_Class then
            --  Class::ownedReception : Reception

            return
              AMF.UML.Receptions.Collections.UML_Reception_Collections.Internals.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Reception);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Use_Case_A_Classifier then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Part_A_Structured_Classifier then
            --  StructuredClassifier::part : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Part);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Powertype_Extent_Generalization_Set_Powertype then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internals.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Redefined_Classifier_A_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Role_A_Structured_Classifier then
            --  StructuredClassifier::role : ConnectableElement

            return
              AMF.UML.Connectable_Elements.Collections.UML_Connectable_Element_Collections.Internals.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Role);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Substitution_Substitution_Substituting_Classifier then
            --  Classifier::substitution : Substitution

            return
              AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internals.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Super_Class_A_Class then
            --  Class::superClass : Class

            return
              AMF.UML.Classes.Collections.UML_Class_Collections.Internals.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Class);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Template_Binding_Template_Binding_Bound_Element then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internals.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Use_Case_Use_Case_Subject then
            --  Classifier::useCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Node_Get;

      -------------------------
      -- UML_Object_Flow_Get --
      -------------------------

      function UML_Object_Flow_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Edge_Activity_Activity_Edge then
            --  ActivityEdge::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Object_Flows.UML_Object_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Object_Flows.UML_Object_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Edge_Guard_A_Activity_Edge then
            --  ActivityEdge::guard : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Object_Flows.UML_Object_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Guard));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Edge_In_Group_Activity_Group_Contained_Edge then
            --  ActivityEdge::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Object_Flows.UML_Object_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Edge_In_Partition_Activity_Partition_Edge then
            --  ActivityEdge::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Object_Flows.UML_Object_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Edge_In_Structured_Node_Structured_Activity_Node_Edge then
            --  ActivityEdge::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Object_Flows.UML_Object_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Edge_Interrupts_Interruptible_Activity_Region_Interrupting_Edge then
            --  ActivityEdge::interrupts : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access'
                 (AMF.UML.Object_Flows.UML_Object_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Interrupts));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Object_Flows.UML_Object_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Flow_Is_Multicast then
            --  ObjectFlow::isMulticast : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Object_Flows.UML_Object_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Multicast);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Flow_Is_Multireceive then
            --  ObjectFlow::isMultireceive : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Object_Flows.UML_Object_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Multireceive);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Object_Flows.UML_Object_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Object_Flows.UML_Object_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Object_Flows.UML_Object_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Object_Flows.UML_Object_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Object_Flows.UML_Object_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Object_Flows.UML_Object_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Object_Flows.UML_Object_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Edge_Redefined_Edge_A_Activity_Edge then
            --  ActivityEdge::redefinedEdge : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Object_Flows.UML_Object_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Edge);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Object_Flows.UML_Object_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Object_Flows.UML_Object_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Flow_Selection_A_Object_Flow then
            --  ObjectFlow::selection : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Object_Flows.UML_Object_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Selection));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Edge_Source_Activity_Node_Outgoing then
            --  ActivityEdge::source : ActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activity_Nodes.UML_Activity_Node_Access'
                 (AMF.UML.Object_Flows.UML_Object_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Source));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Edge_Target_Activity_Node_Incoming then
            --  ActivityEdge::target : ActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activity_Nodes.UML_Activity_Node_Access'
                 (AMF.UML.Object_Flows.UML_Object_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Target));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Flow_Transformation_A_Object_Flow then
            --  ObjectFlow::transformation : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Object_Flows.UML_Object_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Transformation));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Object_Flows.UML_Object_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Edge_Weight_A_Activity_Edge then
            --  ActivityEdge::weight : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Object_Flows.UML_Object_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Weight));

         else
            raise Program_Error;
         end if;
      end UML_Object_Flow_Get;

      --------------------------------------
      -- UML_Occurrence_Specification_Get --
      --------------------------------------

      function UML_Occurrence_Specification_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Covered_Lifeline_Covered_By then
            --  InteractionFragment::covered : Lifeline

            return
              AMF.UML.Lifelines.Collections.UML_Lifeline_Collections.Internals.To_Holder
               (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Covered);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Occurrence_Specification_Covered_A_Events then
            --  OccurrenceSpecification::covered : Lifeline

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Lifelines.UML_Lifeline_Access'
                 (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Covered));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Interaction_Interaction_Fragment then
            --  InteractionFragment::enclosingInteraction : Interaction

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access'
                 (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Interaction));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Operand_Interaction_Operand_Fragment then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access'
                 (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Operand));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_General_Ordering_A_Interaction_Fragment then
            --  InteractionFragment::generalOrdering : GeneralOrdering

            return
              AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internals.To_Holder
               (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General_Ordering);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Occurrence_Specification_To_After_General_Ordering_Before then
            --  OccurrenceSpecification::toAfter : GeneralOrdering

            return
              AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internals.To_Holder
               (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_To_After);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Occurrence_Specification_To_Before_General_Ordering_After then
            --  OccurrenceSpecification::toBefore : GeneralOrdering

            return
              AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internals.To_Holder
               (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_To_Before);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Occurrence_Specification_Get;

      ---------------------------
      -- UML_Opaque_Action_Get --
      ---------------------------

      function UML_Opaque_Action_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Opaque_Action_Body then
            --  OpaqueAction::body : String

            return
              AMF.String_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Body);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Opaque_Action_Input_Value_A_Opaque_Action then
            --  OpaqueAction::inputValue : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input_Value);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Opaque_Action_Language then
            --  OpaqueAction::language : String

            return
              AMF.String_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Language);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Opaque_Action_Output_Value_A_Opaque_Action then
            --  OpaqueAction::outputValue : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output_Value);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Opaque_Action_Get;

      -----------------------------
      -- UML_Opaque_Behavior_Get --
      -----------------------------

      function UML_Opaque_Behavior_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Attribute_A_Classifier then
            --  Classifier::attribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Opaque_Behavior_Body then
            --  OpaqueBehavior::body : String

            return
              AMF.String_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Body);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Classifier_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::classifierBehavior : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier_Behavior));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Collaboration_Use_A_Classifier then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Context_A_Behavior then
            --  Behavior::context : BehavioredClassifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviored_Classifiers.UML_Behaviored_Classifier_Access'
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Extension_Extension_Metaclass then
            --  Class::extension : Extension

            return
              AMF.UML.Extensions.Collections.UML_Extension_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Extension);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Feature_Feature_Featuring_Classifier then
            --  Classifier::feature : Feature

            return
              AMF.UML.Features.Collections.UML_Feature_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Feature);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_General_A_Classifier then
            --  Classifier::general : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Generalization_Generalization_Specific then
            --  Classifier::generalization : Generalization

            return
              AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Inherited_Member_A_Classifier then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Interface_Realization_Interface_Realization_Implementing_Classifier then
            --  BehavioredClassifier::interfaceRealization : InterfaceRealization

            return
              AMF.UML.Interface_Realizations.Collections.UML_Interface_Realization_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Interface_Realization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Active);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Is_Reentrant then
            --  Behavior::isReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Opaque_Behavior_Language then
            --  OpaqueBehavior::language : String

            return
              AMF.String_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Language);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Nested_Classifier_A_Class then
            --  Class::nestedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Owned_Attribute_Property_Class then
            --  Class::ownedAttribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Owned_Attribute_A_Structured_Classifier then
            --  StructuredClassifier::ownedAttribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Owned_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::ownedBehavior : Behavior

            return
              AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Behavior);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Owned_Connector_A_Structured_Classifier then
            --  StructuredClassifier::ownedConnector : Connector

            return
              AMF.UML.Connectors.Collections.UML_Connector_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Connector);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Owned_Operation_Operation_Class then
            --  Class::ownedOperation : Operation

            return
              AMF.UML.Operations.Collections.UML_Operation_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Operation);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Owned_Parameter_A_Behavior then
            --  Behavior::ownedParameter : Parameter

            return
              AMF.UML.Parameters.Collections.UML_Parameter_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parameter);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Owned_Parameter_Set_A_Behavior then
            --  Behavior::ownedParameterSet : ParameterSet

            return
              AMF.UML.Parameter_Sets.Collections.UML_Parameter_Set_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parameter_Set);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Encapsulated_Classifier_Owned_Port_A_Encapsulated_Classifier then
            --  EncapsulatedClassifier::ownedPort : Port

            return
              AMF.UML.Ports.Collections.UML_Port_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Port);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Owned_Reception_A_Class then
            --  Class::ownedReception : Reception

            return
              AMF.UML.Receptions.Collections.UML_Reception_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Reception);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Use_Case_A_Classifier then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Part_A_Structured_Classifier then
            --  StructuredClassifier::part : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Part);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Postcondition_A_Behavior then
            --  Behavior::postcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Powertype_Extent_Generalization_Set_Powertype then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Precondition_A_Behavior then
            --  Behavior::precondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Redefined_Behavior_A_Behavior then
            --  Behavior::redefinedBehavior : Behavior

            return
              AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Behavior);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Redefined_Classifier_A_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Role_A_Structured_Classifier then
            --  StructuredClassifier::role : ConnectableElement

            return
              AMF.UML.Connectable_Elements.Collections.UML_Connectable_Element_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Role);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Specification_Behavioral_Feature_Method then
            --  Behavior::specification : BehavioralFeature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behavioral_Features.UML_Behavioral_Feature_Access'
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Specification));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Substitution_Substitution_Substituting_Classifier then
            --  Classifier::substitution : Substitution

            return
              AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Super_Class_A_Class then
            --  Class::superClass : Class

            return
              AMF.UML.Classes.Collections.UML_Class_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Class);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Template_Binding_Template_Binding_Bound_Element then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Use_Case_Use_Case_Subject then
            --  Classifier::useCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Opaque_Behavior_Get;

      -------------------------------
      -- UML_Opaque_Expression_Get --
      -------------------------------

      function UML_Opaque_Expression_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Opaque_Expression_Behavior_A_Opaque_Expression then
            --  OpaqueExpression::behavior : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Behavior));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Opaque_Expression_Body then
            --  OpaqueExpression::body : String

            return
              AMF.String_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Body);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Opaque_Expression_Language then
            --  OpaqueExpression::language : String

            return
              AMF.String_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Language);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Opaque_Expression_Result_A_Opaque_Expression then
            --  OpaqueExpression::result : Parameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Parameters.UML_Parameter_Access'
                 (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Opaque_Expression_Get;

      -----------------------
      -- UML_Operation_Get --
      -----------------------

      function UML_Operation_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Operation_Body_Condition_A_Body_Context then
            --  Operation::bodyCondition : Constraint

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Constraints.UML_Constraint_Access'
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Body_Condition));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Operation_Class_Class_Owned_Operation then
            --  Operation::class : Class

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classes.UML_Class_Access'
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Class));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavioral_Feature_Concurrency then
            --  BehavioralFeature::concurrency : CallConcurrencyKind

            return
              AMF.UML.Holders.Call_Concurrency_Kinds.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Concurrency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Operation_Datatype_Data_Type_Owned_Operation then
            --  Operation::datatype : DataType

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access'
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Datatype));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Feature_Featuring_Classifier_Classifier_Feature then
            --  Feature::featuringClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Featuring_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Operation_Interface_Interface_Owned_Operation then
            --  Operation::interface : Interface

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access'
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Interface));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavioral_Feature_Is_Abstract then
            --  BehavioralFeature::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Operation_Is_Ordered then
            --  Operation::isOrdered : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Ordered);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Operation_Is_Query then
            --  Operation::isQuery : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Query);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Feature_Is_Static then
            --  Feature::isStatic : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Static);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Operation_Is_Unique then
            --  Operation::isUnique : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Unique);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Operation_Lower then
            --  Operation::lower : Integer

            return
              AMF.Holders.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Lower);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavioral_Feature_Method_Behavior_Specification then
            --  BehavioralFeature::method : Behavior

            return
              AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internals.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Method);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavioral_Feature_Owned_Parameter_A_Owner_Formal_Param then
            --  BehavioralFeature::ownedParameter : Parameter

            return
              AMF.UML.Parameters.Collections.UML_Parameter_Collections.Internals.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parameter);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Operation_Owned_Parameter_Parameter_Operation then
            --  Operation::ownedParameter : Parameter

            return
              AMF.UML.Parameters.Collections.UML_Parameter_Collections.Internals.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parameter);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavioral_Feature_Owned_Parameter_Set_A_Behavioral_Feature then
            --  BehavioralFeature::ownedParameterSet : ParameterSet

            return
              AMF.UML.Parameter_Sets.Collections.UML_Parameter_Set_Collections.Internals.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parameter_Set);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Operation_Postcondition_A_Post_Context then
            --  Operation::postcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Operation_Precondition_A_Pre_Context then
            --  Operation::precondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavioral_Feature_Raised_Exception_A_Behavioral_Feature then
            --  BehavioralFeature::raisedException : Type

            return
              AMF.UML.Types.Collections.UML_Type_Collections.Internals.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Raised_Exception);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Operation_Raised_Exception_A_Operation then
            --  Operation::raisedException : Type

            return
              AMF.UML.Types.Collections.UML_Type_Collections.Internals.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Raised_Exception);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Operation_Redefined_Operation_A_Operation then
            --  Operation::redefinedOperation : Operation

            return
              AMF.UML.Operations.Collections.UML_Operation_Collections.Internals.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Operation);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Template_Binding_Template_Binding_Bound_Element then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internals.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Operation_Template_Parameter_Operation_Template_Parameter_Parametered_Element then
            --  Operation::templateParameter : OperationTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Operation_Template_Parameters.UML_Operation_Template_Parameter_Access'
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Operation_Type_A_Operation then
            --  Operation::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Operation_Upper then
            --  Operation::upper : UnlimitedNatural

            return
              AMF.Holders.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Upper);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Operation_Get;

      ------------------------------------------
      -- UML_Operation_Template_Parameter_Get --
      ------------------------------------------

      function UML_Operation_Template_Parameter_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Default_A_Template_Parameter then
            --  TemplateParameter::default : ParameterableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access'
                 (AMF.UML.Operation_Template_Parameters.UML_Operation_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Default));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Operation_Template_Parameters.UML_Operation_Template_Parameter_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Owned_Default_A_Template_Parameter then
            --  TemplateParameter::ownedDefault : ParameterableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access'
                 (AMF.UML.Operation_Template_Parameters.UML_Operation_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Default));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Operation_Template_Parameters.UML_Operation_Template_Parameter_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Owned_Parametered_Element_Parameterable_Element_Owning_Template_Parameter then
            --  TemplateParameter::ownedParameteredElement : ParameterableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access'
                 (AMF.UML.Operation_Template_Parameters.UML_Operation_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parametered_Element));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Operation_Template_Parameters.UML_Operation_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Operation_Template_Parameter_Parametered_Element_Operation_Template_Parameter then
            --  OperationTemplateParameter::parameteredElement : Operation

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Operations.UML_Operation_Access'
                 (AMF.UML.Operation_Template_Parameters.UML_Operation_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Parametered_Element));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Parametered_Element_Parameterable_Element_Template_Parameter then
            --  TemplateParameter::parameteredElement : ParameterableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access'
                 (AMF.UML.Operation_Template_Parameters.UML_Operation_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Parametered_Element));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Signature_Template_Signature_Owned_Parameter then
            --  TemplateParameter::signature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Operation_Template_Parameters.UML_Operation_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Signature));

         else
            raise Program_Error;
         end if;
      end UML_Operation_Template_Parameter_Get;

      ------------------------
      -- UML_Output_Pin_Get --
      ------------------------

      function UML_Output_Pin_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Output_Pins.UML_Output_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_In_State_A_Object_Node then
            --  ObjectNode::inState : State

            return
              AMF.UML.States.Collections.UML_State_Collections.Internals.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_State);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Output_Pins.UML_Output_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Pin_Is_Control then
            --  Pin::isControl : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Control);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Is_Control_Type then
            --  ObjectNode::isControlType : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Control_Type);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Is_Ordered then
            --  MultiplicityElement::isOrdered : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Ordered);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Is_Unique then
            --  MultiplicityElement::isUnique : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Unique);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Lower then
            --  MultiplicityElement::lower : Integer

            return
              AMF.Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Lower);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Lower_Value_A_Owning_Lower then
            --  MultiplicityElement::lowerValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Output_Pins.UML_Output_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Lower_Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Output_Pins.UML_Output_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Output_Pins.UML_Output_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Ordering then
            --  ObjectNode::ordering : ObjectNodeOrderingKind

            return
              AMF.UML.Holders.Object_Node_Ordering_Kinds.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Ordering);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Output_Pins.UML_Output_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Selection_A_Object_Node then
            --  ObjectNode::selection : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Output_Pins.UML_Output_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Selection));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Output_Pins.UML_Output_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Upper then
            --  MultiplicityElement::upper : UnlimitedNatural

            return
              AMF.Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Upper);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Upper_Bound_A_Object_Node then
            --  ObjectNode::upperBound : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Output_Pins.UML_Output_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Upper_Bound));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Upper_Value_A_Owning_Upper then
            --  MultiplicityElement::upperValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Output_Pins.UML_Output_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Upper_Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Output_Pin_Get;

      ---------------------
      -- UML_Package_Get --
      ---------------------

      function UML_Package_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Package_URI then
            --  Package::URI : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_URI);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Packages.UML_Package_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Packages.UML_Package_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Packages.UML_Package_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Packages.UML_Package_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Packages.UML_Package_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Packages.UML_Package_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Package_Nested_Package_Package_Nesting_Package then
            --  Package::nestedPackage : Package

            return
              AMF.UML.Packages.Collections.UML_Package_Collections.Internals.To_Holder
               (AMF.UML.Packages.UML_Package_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Package);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Package_Nesting_Package_Package_Nested_Package then
            --  Package::nestingPackage : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Packages.UML_Package_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Nesting_Package));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Packages.UML_Package_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Packages.UML_Package_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Packages.UML_Package_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Packages.UML_Package_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Package_Owned_Stereotype_A_Owning_Package then
            --  Package::ownedStereotype : Stereotype

            return
              AMF.UML.Stereotypes.Collections.UML_Stereotype_Collections.Internals.To_Holder
               (AMF.UML.Packages.UML_Package_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Stereotype);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Packages.UML_Package_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Package_Owned_Type_Type_Package then
            --  Package::ownedType : Type

            return
              AMF.UML.Types.Collections.UML_Type_Collections.Internals.To_Holder
               (AMF.UML.Packages.UML_Package_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Type);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Packages.UML_Package_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Packages.UML_Package_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Packages.UML_Package_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Package_Package_Merge_Package_Merge_Receiving_Package then
            --  Package::packageMerge : PackageMerge

            return
              AMF.UML.Package_Merges.Collections.UML_Package_Merge_Collections.Internals.To_Holder
               (AMF.UML.Packages.UML_Package_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Merge);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Package_Packaged_Element_A_Owning_Package then
            --  Package::packagedElement : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Packages.UML_Package_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Packaged_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Package_Profile_Application_Profile_Application_Applying_Package then
            --  Package::profileApplication : ProfileApplication

            return
              AMF.UML.Profile_Applications.Collections.UML_Profile_Application_Collections.Internals.To_Holder
               (AMF.UML.Packages.UML_Package_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Profile_Application);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Template_Binding_Template_Binding_Bound_Element then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internals.To_Holder
               (AMF.UML.Packages.UML_Package_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Packages.UML_Package_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Packages.UML_Package_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Package_Get;

      ----------------------------
      -- UML_Package_Import_Get --
      ----------------------------

      function UML_Package_Import_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Package_Import_Imported_Package_A_Package_Import then
            --  PackageImport::importedPackage : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Package_Imports.UML_Package_Import_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Package));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Package_Import_Importing_Namespace_Namespace_Package_Import then
            --  PackageImport::importingNamespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Package_Imports.UML_Package_Import_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Importing_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Package_Imports.UML_Package_Import_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Package_Imports.UML_Package_Import_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Package_Imports.UML_Package_Import_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Relationship_Related_Element_A_Relationship then
            --  Relationship::relatedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Package_Imports.UML_Package_Import_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Directed_Relationship_Source_A_Directed_Relationship then
            --  DirectedRelationship::source : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Package_Imports.UML_Package_Import_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Source);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Directed_Relationship_Target_A_Directed_Relationship then
            --  DirectedRelationship::target : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Package_Imports.UML_Package_Import_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Target);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Package_Import_Visibility then
            --  PackageImport::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Package_Imports.UML_Package_Import_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Package_Import_Get;

      ---------------------------
      -- UML_Package_Merge_Get --
      ---------------------------

      function UML_Package_Merge_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Package_Merge_Merged_Package_A_Package_Merge then
            --  PackageMerge::mergedPackage : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Package_Merges.UML_Package_Merge_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Merged_Package));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Package_Merges.UML_Package_Merge_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Package_Merges.UML_Package_Merge_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Package_Merges.UML_Package_Merge_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Package_Merge_Receiving_Package_Package_Package_Merge then
            --  PackageMerge::receivingPackage : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Package_Merges.UML_Package_Merge_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Receiving_Package));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Relationship_Related_Element_A_Relationship then
            --  Relationship::relatedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Package_Merges.UML_Package_Merge_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Directed_Relationship_Source_A_Directed_Relationship then
            --  DirectedRelationship::source : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Package_Merges.UML_Package_Merge_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Source);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Directed_Relationship_Target_A_Directed_Relationship then
            --  DirectedRelationship::target : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Package_Merges.UML_Package_Merge_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Target);

         else
            raise Program_Error;
         end if;
      end UML_Package_Merge_Get;

      -----------------------
      -- UML_Parameter_Get --
      -----------------------

      function UML_Parameter_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Parameters.UML_Parameter_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameter_Default then
            --  Parameter::default : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Parameters.UML_Parameter_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Default);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameter_Default_Value_A_Owning_Parameter then
            --  Parameter::defaultValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Parameters.UML_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Default_Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameter_Direction then
            --  Parameter::direction : ParameterDirectionKind

            return
              AMF.UML.Holders.Parameter_Direction_Kinds.To_Holder
               (AMF.UML.Parameters.UML_Parameter_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Direction);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameter_Effect then
            --  Parameter::effect : ParameterEffectKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Parameters.UML_Parameter_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Effect);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Connectable_Element_End_Connector_End_Role then
            --  ConnectableElement::end : ConnectorEnd

            return
              AMF.UML.Connector_Ends.Collections.UML_Connector_End_Collections.Internals.To_Holder
               (AMF.UML.Parameters.UML_Parameter_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_End);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameter_Is_Exception then
            --  Parameter::isException : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Parameters.UML_Parameter_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Exception);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Is_Ordered then
            --  MultiplicityElement::isOrdered : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Parameters.UML_Parameter_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Ordered);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameter_Is_Stream then
            --  Parameter::isStream : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Parameters.UML_Parameter_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Stream);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Is_Unique then
            --  MultiplicityElement::isUnique : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Parameters.UML_Parameter_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Unique);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Lower then
            --  MultiplicityElement::lower : Integer

            return
              AMF.Holders.To_Holder
               (AMF.UML.Parameters.UML_Parameter_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Lower);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Lower_Value_A_Owning_Lower then
            --  MultiplicityElement::lowerValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Parameters.UML_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Lower_Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Parameters.UML_Parameter_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Parameters.UML_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Parameters.UML_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameter_Operation_Operation_Owned_Parameter then
            --  Parameter::operation : Operation

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Operations.UML_Operation_Access'
                 (AMF.UML.Parameters.UML_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Operation));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Parameters.UML_Parameter_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Parameters.UML_Parameter_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Parameters.UML_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Parameters.UML_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameter_Parameter_Set_Parameter_Set_Parameter then
            --  Parameter::parameterSet : ParameterSet

            return
              AMF.UML.Parameter_Sets.Collections.UML_Parameter_Set_Collections.Internals.To_Holder
               (AMF.UML.Parameters.UML_Parameter_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Parameter_Set);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Parameters.UML_Parameter_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Connectable_Element_Template_Parameter_Connectable_Element_Template_Parameter_Parametered_Element then
            --  ConnectableElement::templateParameter : ConnectableElementTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access'
                 (AMF.UML.Parameters.UML_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Parameters.UML_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Parameters.UML_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Upper then
            --  MultiplicityElement::upper : UnlimitedNatural

            return
              AMF.Holders.To_Holder
               (AMF.UML.Parameters.UML_Parameter_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Upper);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Upper_Value_A_Owning_Upper then
            --  MultiplicityElement::upperValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Parameters.UML_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Upper_Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Parameters.UML_Parameter_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Parameter_Get;

      ---------------------------
      -- UML_Parameter_Set_Get --
      ---------------------------

      function UML_Parameter_Set_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Parameter_Sets.UML_Parameter_Set_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameter_Set_Condition_A_Parameter_Set then
            --  ParameterSet::condition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Parameter_Sets.UML_Parameter_Set_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Condition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Parameter_Sets.UML_Parameter_Set_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Parameter_Sets.UML_Parameter_Set_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Parameter_Sets.UML_Parameter_Set_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Parameter_Sets.UML_Parameter_Set_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Parameter_Sets.UML_Parameter_Set_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Parameter_Sets.UML_Parameter_Set_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameter_Set_Parameter_Parameter_Parameter_Set then
            --  ParameterSet::parameter : Parameter

            return
              AMF.UML.Parameters.Collections.UML_Parameter_Collections.Internals.To_Holder
               (AMF.UML.Parameter_Sets.UML_Parameter_Set_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Parameter);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Parameter_Sets.UML_Parameter_Set_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Parameter_Sets.UML_Parameter_Set_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Parameter_Set_Get;

      --------------------------------
      -- UML_Part_Decomposition_Get --
      --------------------------------

      function UML_Part_Decomposition_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Use_Actual_Gate_A_Interaction_Use then
            --  InteractionUse::actualGate : Gate

            return
              AMF.UML.Gates.Collections.UML_Gate_Collections.Internals.To_Holder
               (AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Actual_Gate);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Use_Argument_A_Interaction_Use then
            --  InteractionUse::argument : ValueSpecification

            return
              AMF.UML.Value_Specifications.Collections.UML_Value_Specification_Collections.Internals.To_Holder
               (AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Argument);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Covered_Lifeline_Covered_By then
            --  InteractionFragment::covered : Lifeline

            return
              AMF.UML.Lifelines.Collections.UML_Lifeline_Collections.Internals.To_Holder
               (AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Covered);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Interaction_Interaction_Fragment then
            --  InteractionFragment::enclosingInteraction : Interaction

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access'
                 (AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Interaction));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Operand_Interaction_Operand_Fragment then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access'
                 (AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Operand));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_General_Ordering_A_Interaction_Fragment then
            --  InteractionFragment::generalOrdering : GeneralOrdering

            return
              AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internals.To_Holder
               (AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General_Ordering);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Use_Refers_To_A_Interaction_Use then
            --  InteractionUse::refersTo : Interaction

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access'
                 (AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Refers_To));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Use_Return_Value_A_Interaction_Use then
            --  InteractionUse::returnValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Return_Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Use_Return_Value_Recipient_A_Interaction_Use then
            --  InteractionUse::returnValueRecipient : Property

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access'
                 (AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Return_Value_Recipient));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Part_Decomposition_Get;

      ------------------
      -- UML_Port_Get --
      ------------------

      function UML_Port_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Aggregation then
            --  Property::aggregation : AggregationKind

            return
              AMF.UML.Holders.Aggregation_Kinds.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Aggregation);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Association_Association_Member_End then
            --  Property::association : Association

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Associations.UML_Association_Access'
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Association));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Association_End_Property_Qualifier then
            --  Property::associationEnd : Property

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access'
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Association_End));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Class_Class_Owned_Attribute then
            --  Property::class : Class

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classes.UML_Class_Access'
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Class));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Datatype_Data_Type_Owned_Attribute then
            --  Property::datatype : DataType

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access'
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Datatype));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Default then
            --  Property::default : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Default);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Default_Value_A_Owning_Property then
            --  Property::defaultValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Default_Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Deployment_Target_Deployed_Element_A_Deployment_Target then
            --  DeploymentTarget::deployedElement : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Deployed_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Deployment_Target_Deployment_Deployment_Location then
            --  DeploymentTarget::deployment : Deployment

            return
              AMF.UML.Deployments.Collections.UML_Deployment_Collections.Internals.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Deployment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Connectable_Element_End_Connector_End_Role then
            --  ConnectableElement::end : ConnectorEnd

            return
              AMF.UML.Connector_Ends.Collections.UML_Connector_End_Collections.Internals.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_End);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Feature_Featuring_Classifier_Classifier_Feature then
            --  Feature::featuringClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Featuring_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Interface_Interface_Owned_Attribute then
            --  Property::interface : Interface

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access'
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Interface));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Port_Is_Behavior then
            --  Port::isBehavior : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Behavior);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Is_Composite then
            --  Property::isComposite : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Composite);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Port_Is_Conjugated then
            --  Port::isConjugated : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Conjugated);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Is_Derived then
            --  Property::isDerived : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Derived);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Is_Derived_Union then
            --  Property::isDerivedUnion : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Derived_Union);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Is_ID then
            --  Property::isID : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_ID);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Is_Ordered then
            --  MultiplicityElement::isOrdered : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Ordered);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Is_Read_Only then
            --  Property::isReadOnly : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Read_Only);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structural_Feature_Is_Read_Only then
            --  StructuralFeature::isReadOnly : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Read_Only);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Port_Is_Service then
            --  Port::isService : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Service);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Feature_Is_Static then
            --  Feature::isStatic : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Static);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Is_Unique then
            --  MultiplicityElement::isUnique : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Unique);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Lower then
            --  MultiplicityElement::lower : Integer

            return
              AMF.Holders.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Lower);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Lower_Value_A_Owning_Lower then
            --  MultiplicityElement::lowerValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Lower_Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Opposite_A_Property then
            --  Property::opposite : Property

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access'
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Opposite));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Owning_Association_Association_Owned_End then
            --  Property::owningAssociation : Association

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Associations.UML_Association_Access'
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Association));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Port_Protocol_A_Port then
            --  Port::protocol : ProtocolStateMachine

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access'
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Protocol));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Port_Provided_A_Port then
            --  Port::provided : Interface

            return
              AMF.UML.Interfaces.Collections.UML_Interface_Collections.Internals.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Provided);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Qualifier_Property_Association_End then
            --  Property::qualifier : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Port_Redefined_Port_A_Port then
            --  Port::redefinedPort : Port

            return
              AMF.UML.Ports.Collections.UML_Port_Collections.Internals.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Port);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Redefined_Property_A_Property then
            --  Property::redefinedProperty : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Property);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Port_Required_A_Port then
            --  Port::required : Interface

            return
              AMF.UML.Interfaces.Collections.UML_Interface_Collections.Internals.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Required);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Subsetted_Property_A_Property then
            --  Property::subsettedProperty : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Subsetted_Property);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Connectable_Element_Template_Parameter_Connectable_Element_Template_Parameter_Parametered_Element then
            --  ConnectableElement::templateParameter : ConnectableElementTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access'
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Upper then
            --  MultiplicityElement::upper : UnlimitedNatural

            return
              AMF.Holders.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Upper);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Upper_Value_A_Owning_Upper then
            --  MultiplicityElement::upperValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Upper_Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Port_Get;

      ----------------------------
      -- UML_Primitive_Type_Get --
      ----------------------------

      function UML_Primitive_Type_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Attribute_A_Classifier then
            --  Classifier::attribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Collaboration_Use_A_Classifier then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internals.To_Holder
               (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Feature_Feature_Featuring_Classifier then
            --  Classifier::feature : Feature

            return
              AMF.UML.Features.Collections.UML_Feature_Collections.Internals.To_Holder
               (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Feature);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_General_A_Classifier then
            --  Classifier::general : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Generalization_Generalization_Specific then
            --  Classifier::generalization : Generalization

            return
              AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internals.To_Holder
               (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Inherited_Member_A_Classifier then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Data_Type_Owned_Attribute_Property_Datatype then
            --  DataType::ownedAttribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Data_Type_Owned_Operation_Operation_Datatype then
            --  DataType::ownedOperation : Operation

            return
              AMF.UML.Operations.Collections.UML_Operation_Collections.Internals.To_Holder
               (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Operation);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Use_Case_A_Classifier then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Powertype_Extent_Generalization_Set_Powertype then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internals.To_Holder
               (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Redefined_Classifier_A_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Substitution_Substitution_Substituting_Classifier then
            --  Classifier::substitution : Substitution

            return
              AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internals.To_Holder
               (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Template_Binding_Template_Binding_Bound_Element then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internals.To_Holder
               (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Use_Case_Use_Case_Subject then
            --  Classifier::useCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Primitive_Type_Get;

      ---------------------
      -- UML_Profile_Get --
      ---------------------

      function UML_Profile_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Package_URI then
            --  Package::URI : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Profiles.UML_Profile_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_URI);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Profiles.UML_Profile_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Profiles.UML_Profile_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Profiles.UML_Profile_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Profiles.UML_Profile_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Profile_Metaclass_Reference_A_Profile then
            --  Profile::metaclassReference : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Profiles.UML_Profile_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Metaclass_Reference);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Profile_Metamodel_Reference_A_Profile then
            --  Profile::metamodelReference : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Profiles.UML_Profile_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Metamodel_Reference);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Profiles.UML_Profile_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Profiles.UML_Profile_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Profiles.UML_Profile_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Package_Nested_Package_Package_Nesting_Package then
            --  Package::nestedPackage : Package

            return
              AMF.UML.Packages.Collections.UML_Package_Collections.Internals.To_Holder
               (AMF.UML.Profiles.UML_Profile_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Package);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Package_Nesting_Package_Package_Nested_Package then
            --  Package::nestingPackage : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Profiles.UML_Profile_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Nesting_Package));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Profiles.UML_Profile_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Profiles.UML_Profile_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Profiles.UML_Profile_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Profiles.UML_Profile_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Package_Owned_Stereotype_A_Owning_Package then
            --  Package::ownedStereotype : Stereotype

            return
              AMF.UML.Stereotypes.Collections.UML_Stereotype_Collections.Internals.To_Holder
               (AMF.UML.Profiles.UML_Profile_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Stereotype);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Profiles.UML_Profile_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Package_Owned_Type_Type_Package then
            --  Package::ownedType : Type

            return
              AMF.UML.Types.Collections.UML_Type_Collections.Internals.To_Holder
               (AMF.UML.Profiles.UML_Profile_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Type);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Profiles.UML_Profile_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Profiles.UML_Profile_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Profiles.UML_Profile_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Package_Package_Merge_Package_Merge_Receiving_Package then
            --  Package::packageMerge : PackageMerge

            return
              AMF.UML.Package_Merges.Collections.UML_Package_Merge_Collections.Internals.To_Holder
               (AMF.UML.Profiles.UML_Profile_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Merge);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Package_Packaged_Element_A_Owning_Package then
            --  Package::packagedElement : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Profiles.UML_Profile_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Packaged_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Package_Profile_Application_Profile_Application_Applying_Package then
            --  Package::profileApplication : ProfileApplication

            return
              AMF.UML.Profile_Applications.Collections.UML_Profile_Application_Collections.Internals.To_Holder
               (AMF.UML.Profiles.UML_Profile_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Profile_Application);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Profiles.UML_Profile_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Template_Binding_Template_Binding_Bound_Element then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internals.To_Holder
               (AMF.UML.Profiles.UML_Profile_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Profiles.UML_Profile_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Profiles.UML_Profile_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Profiles.UML_Profile_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Profile_Get;

      ---------------------------------
      -- UML_Profile_Application_Get --
      ---------------------------------

      function UML_Profile_Application_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Profile_Application_Applied_Profile_A_Profile_Application then
            --  ProfileApplication::appliedProfile : Profile

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Profiles.UML_Profile_Access'
                 (AMF.UML.Profile_Applications.UML_Profile_Application_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Applied_Profile));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Profile_Application_Applying_Package_Package_Profile_Application then
            --  ProfileApplication::applyingPackage : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Profile_Applications.UML_Profile_Application_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Applying_Package));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Profile_Application_Is_Strict then
            --  ProfileApplication::isStrict : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Profile_Applications.UML_Profile_Application_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Strict);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Profile_Applications.UML_Profile_Application_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Profile_Applications.UML_Profile_Application_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Profile_Applications.UML_Profile_Application_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Relationship_Related_Element_A_Relationship then
            --  Relationship::relatedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Profile_Applications.UML_Profile_Application_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Directed_Relationship_Source_A_Directed_Relationship then
            --  DirectedRelationship::source : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Profile_Applications.UML_Profile_Application_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Source);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Directed_Relationship_Target_A_Directed_Relationship then
            --  DirectedRelationship::target : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Profile_Applications.UML_Profile_Application_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Target);

         else
            raise Program_Error;
         end if;
      end UML_Profile_Application_Get;

      ----------------------
      -- UML_Property_Get --
      ----------------------

      function UML_Property_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Aggregation then
            --  Property::aggregation : AggregationKind

            return
              AMF.UML.Holders.Aggregation_Kinds.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Aggregation);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Association_Association_Member_End then
            --  Property::association : Association

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Associations.UML_Association_Access'
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Association));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Association_End_Property_Qualifier then
            --  Property::associationEnd : Property

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access'
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Association_End));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Class_Class_Owned_Attribute then
            --  Property::class : Class

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classes.UML_Class_Access'
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Class));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Datatype_Data_Type_Owned_Attribute then
            --  Property::datatype : DataType

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access'
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Datatype));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Default then
            --  Property::default : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Default);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Default_Value_A_Owning_Property then
            --  Property::defaultValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Default_Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Deployment_Target_Deployed_Element_A_Deployment_Target then
            --  DeploymentTarget::deployedElement : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Deployed_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Deployment_Target_Deployment_Deployment_Location then
            --  DeploymentTarget::deployment : Deployment

            return
              AMF.UML.Deployments.Collections.UML_Deployment_Collections.Internals.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Deployment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Connectable_Element_End_Connector_End_Role then
            --  ConnectableElement::end : ConnectorEnd

            return
              AMF.UML.Connector_Ends.Collections.UML_Connector_End_Collections.Internals.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_End);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Feature_Featuring_Classifier_Classifier_Feature then
            --  Feature::featuringClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Featuring_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Interface_Interface_Owned_Attribute then
            --  Property::interface : Interface

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access'
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Interface));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Is_Composite then
            --  Property::isComposite : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Composite);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Is_Derived then
            --  Property::isDerived : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Derived);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Is_Derived_Union then
            --  Property::isDerivedUnion : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Derived_Union);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Is_ID then
            --  Property::isID : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_ID);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Is_Ordered then
            --  MultiplicityElement::isOrdered : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Ordered);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Is_Read_Only then
            --  Property::isReadOnly : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Read_Only);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structural_Feature_Is_Read_Only then
            --  StructuralFeature::isReadOnly : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Read_Only);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Feature_Is_Static then
            --  Feature::isStatic : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Static);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Is_Unique then
            --  MultiplicityElement::isUnique : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Unique);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Lower then
            --  MultiplicityElement::lower : Integer

            return
              AMF.Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Lower);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Lower_Value_A_Owning_Lower then
            --  MultiplicityElement::lowerValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Lower_Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Opposite_A_Property then
            --  Property::opposite : Property

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access'
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Opposite));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Owning_Association_Association_Owned_End then
            --  Property::owningAssociation : Association

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Associations.UML_Association_Access'
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Association));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Qualifier_Property_Association_End then
            --  Property::qualifier : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Redefined_Property_A_Property then
            --  Property::redefinedProperty : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Property);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Subsetted_Property_A_Property then
            --  Property::subsettedProperty : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Subsetted_Property);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Connectable_Element_Template_Parameter_Connectable_Element_Template_Parameter_Parametered_Element then
            --  ConnectableElement::templateParameter : ConnectableElementTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access'
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Upper then
            --  MultiplicityElement::upper : UnlimitedNatural

            return
              AMF.Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Upper);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Upper_Value_A_Owning_Upper then
            --  MultiplicityElement::upperValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Upper_Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Property_Get;

      ----------------------------------
      -- UML_Protocol_Conformance_Get --
      ----------------------------------

      function UML_Protocol_Conformance_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Protocol_Conformance_General_Machine_A_Protocol_Conformance then
            --  ProtocolConformance::generalMachine : ProtocolStateMachine

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access'
                 (AMF.UML.Protocol_Conformances.UML_Protocol_Conformance_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General_Machine));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Protocol_Conformances.UML_Protocol_Conformance_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Protocol_Conformances.UML_Protocol_Conformance_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Protocol_Conformances.UML_Protocol_Conformance_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Relationship_Related_Element_A_Relationship then
            --  Relationship::relatedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Protocol_Conformances.UML_Protocol_Conformance_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Directed_Relationship_Source_A_Directed_Relationship then
            --  DirectedRelationship::source : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Protocol_Conformances.UML_Protocol_Conformance_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Source);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Protocol_Conformance_Specific_Machine_Protocol_State_Machine_Conformance then
            --  ProtocolConformance::specificMachine : ProtocolStateMachine

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access'
                 (AMF.UML.Protocol_Conformances.UML_Protocol_Conformance_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Specific_Machine));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Directed_Relationship_Target_A_Directed_Relationship then
            --  DirectedRelationship::target : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Protocol_Conformances.UML_Protocol_Conformance_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Target);

         else
            raise Program_Error;
         end if;
      end UML_Protocol_Conformance_Get;

      ------------------------------------
      -- UML_Protocol_State_Machine_Get --
      ------------------------------------

      function UML_Protocol_State_Machine_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Attribute_A_Classifier then
            --  Classifier::attribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Classifier_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::classifierBehavior : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier_Behavior));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Collaboration_Use_A_Classifier then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Protocol_State_Machine_Conformance_Protocol_Conformance_Specific_Machine then
            --  ProtocolStateMachine::conformance : ProtocolConformance

            return
              AMF.UML.Protocol_Conformances.Collections.UML_Protocol_Conformance_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Conformance);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Machine_Connection_Point_Pseudostate_State_Machine then
            --  StateMachine::connectionPoint : Pseudostate

            return
              AMF.UML.Pseudostates.Collections.UML_Pseudostate_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Connection_Point);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Context_A_Behavior then
            --  Behavior::context : BehavioredClassifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviored_Classifiers.UML_Behaviored_Classifier_Access'
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Machine_Extended_State_Machine_A_State_Machine then
            --  StateMachine::extendedStateMachine : StateMachine

            return
              AMF.UML.State_Machines.Collections.UML_State_Machine_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Extended_State_Machine);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Extension_Extension_Metaclass then
            --  Class::extension : Extension

            return
              AMF.UML.Extensions.Collections.UML_Extension_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Extension);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Feature_Feature_Featuring_Classifier then
            --  Classifier::feature : Feature

            return
              AMF.UML.Features.Collections.UML_Feature_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Feature);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_General_A_Classifier then
            --  Classifier::general : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Generalization_Generalization_Specific then
            --  Classifier::generalization : Generalization

            return
              AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Inherited_Member_A_Classifier then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Interface_Realization_Interface_Realization_Implementing_Classifier then
            --  BehavioredClassifier::interfaceRealization : InterfaceRealization

            return
              AMF.UML.Interface_Realizations.Collections.UML_Interface_Realization_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Interface_Realization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Active);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Is_Reentrant then
            --  Behavior::isReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Nested_Classifier_A_Class then
            --  Class::nestedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Owned_Attribute_Property_Class then
            --  Class::ownedAttribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Owned_Attribute_A_Structured_Classifier then
            --  StructuredClassifier::ownedAttribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Owned_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::ownedBehavior : Behavior

            return
              AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Behavior);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Owned_Connector_A_Structured_Classifier then
            --  StructuredClassifier::ownedConnector : Connector

            return
              AMF.UML.Connectors.Collections.UML_Connector_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Connector);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Owned_Operation_Operation_Class then
            --  Class::ownedOperation : Operation

            return
              AMF.UML.Operations.Collections.UML_Operation_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Operation);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Owned_Parameter_A_Behavior then
            --  Behavior::ownedParameter : Parameter

            return
              AMF.UML.Parameters.Collections.UML_Parameter_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parameter);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Owned_Parameter_Set_A_Behavior then
            --  Behavior::ownedParameterSet : ParameterSet

            return
              AMF.UML.Parameter_Sets.Collections.UML_Parameter_Set_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parameter_Set);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Encapsulated_Classifier_Owned_Port_A_Encapsulated_Classifier then
            --  EncapsulatedClassifier::ownedPort : Port

            return
              AMF.UML.Ports.Collections.UML_Port_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Port);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Owned_Reception_A_Class then
            --  Class::ownedReception : Reception

            return
              AMF.UML.Receptions.Collections.UML_Reception_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Reception);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Use_Case_A_Classifier then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Part_A_Structured_Classifier then
            --  StructuredClassifier::part : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Part);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Postcondition_A_Behavior then
            --  Behavior::postcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Powertype_Extent_Generalization_Set_Powertype then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Precondition_A_Behavior then
            --  Behavior::precondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Redefined_Behavior_A_Behavior then
            --  Behavior::redefinedBehavior : Behavior

            return
              AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Behavior);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Redefined_Classifier_A_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Machine_Region_Region_State_Machine then
            --  StateMachine::region : Region

            return
              AMF.UML.Regions.Collections.UML_Region_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Role_A_Structured_Classifier then
            --  StructuredClassifier::role : ConnectableElement

            return
              AMF.UML.Connectable_Elements.Collections.UML_Connectable_Element_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Role);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Specification_Behavioral_Feature_Method then
            --  Behavior::specification : BehavioralFeature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behavioral_Features.UML_Behavioral_Feature_Access'
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Specification));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Machine_Submachine_State_State_Submachine then
            --  StateMachine::submachineState : State

            return
              AMF.UML.States.Collections.UML_State_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Submachine_State);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Substitution_Substitution_Substituting_Classifier then
            --  Classifier::substitution : Substitution

            return
              AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Super_Class_A_Class then
            --  Class::superClass : Class

            return
              AMF.UML.Classes.Collections.UML_Class_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Class);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Template_Binding_Template_Binding_Bound_Element then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Use_Case_Use_Case_Subject then
            --  Classifier::useCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Protocol_State_Machine_Get;

      ---------------------------------
      -- UML_Protocol_Transition_Get --
      ---------------------------------

      function UML_Protocol_Transition_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Transition_Container_Region_Transition then
            --  Transition::container : Region

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Regions.UML_Region_Access'
                 (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Container));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Transition_Effect_A_Transition then
            --  Transition::effect : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Effect));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Transition_Guard_A_Transition then
            --  Transition::guard : Constraint

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Constraints.UML_Constraint_Access'
                 (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Guard));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Transition_Kind then
            --  Transition::kind : TransitionKind

            return
              AMF.UML.Holders.Transition_Kinds.To_Holder
               (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Kind);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Protocol_Transition_Post_Condition_A_Owning_Transition then
            --  ProtocolTransition::postCondition : Constraint

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Constraints.UML_Constraint_Access'
                 (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Post_Condition));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Protocol_Transition_Pre_Condition_A_Protocol_Transition then
            --  ProtocolTransition::preCondition : Constraint

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Constraints.UML_Constraint_Access'
                 (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Pre_Condition));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Transition_Redefined_Transition_A_Transition then
            --  Transition::redefinedTransition : Transition

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Transitions.UML_Transition_Access'
                 (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Transition));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Transition_Redefinition_Context_A_Transition then
            --  Transition::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Protocol_Transition_Referred_A_Protocol_Transition then
            --  ProtocolTransition::referred : Operation

            return
              AMF.UML.Operations.Collections.UML_Operation_Collections.Internals.To_Holder
               (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Referred);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Transition_Source_Vertex_Outgoing then
            --  Transition::source : Vertex

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Vertexs.UML_Vertex_Access'
                 (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Source));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Transition_Target_Vertex_Incoming then
            --  Transition::target : Vertex

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Vertexs.UML_Vertex_Access'
                 (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Target));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Transition_Trigger_A_Transition then
            --  Transition::trigger : Trigger

            return
              AMF.UML.Triggers.Collections.UML_Trigger_Collections.Internals.To_Holder
               (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Trigger);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Protocol_Transition_Get;

      -------------------------
      -- UML_Pseudostate_Get --
      -------------------------

      function UML_Pseudostate_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Pseudostates.UML_Pseudostate_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Vertex_Container_Region_Subvertex then
            --  Vertex::container : Region

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Regions.UML_Region_Access'
                 (AMF.UML.Pseudostates.UML_Pseudostate_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Container));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Vertex_Incoming_Transition_Target then
            --  Vertex::incoming : Transition

            return
              AMF.UML.Transitions.Collections.UML_Transition_Collections.Internals.To_Holder
               (AMF.UML.Pseudostates.UML_Pseudostate_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Pseudostate_Kind then
            --  Pseudostate::kind : PseudostateKind

            return
              AMF.UML.Holders.Pseudostate_Kinds.To_Holder
               (AMF.UML.Pseudostates.UML_Pseudostate_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Kind);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Pseudostates.UML_Pseudostate_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Pseudostates.UML_Pseudostate_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Pseudostates.UML_Pseudostate_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Vertex_Outgoing_Transition_Source then
            --  Vertex::outgoing : Transition

            return
              AMF.UML.Transitions.Collections.UML_Transition_Collections.Internals.To_Holder
               (AMF.UML.Pseudostates.UML_Pseudostate_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Pseudostates.UML_Pseudostate_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Pseudostates.UML_Pseudostate_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Pseudostates.UML_Pseudostate_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Pseudostates.UML_Pseudostate_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Pseudostate_State_State_Connection_Point then
            --  Pseudostate::state : State

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.States.UML_State_Access'
                 (AMF.UML.Pseudostates.UML_Pseudostate_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_State));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Pseudostate_State_Machine_State_Machine_Connection_Point then
            --  Pseudostate::stateMachine : StateMachine

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access'
                 (AMF.UML.Pseudostates.UML_Pseudostate_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_State_Machine));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Pseudostates.UML_Pseudostate_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Pseudostate_Get;

      -----------------------------
      -- UML_Qualifier_Value_Get --
      -----------------------------

      function UML_Qualifier_Value_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Qualifier_Values.UML_Qualifier_Value_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Qualifier_Values.UML_Qualifier_Value_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Qualifier_Values.UML_Qualifier_Value_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Qualifier_Value_Qualifier_A_Qualifier_Value then
            --  QualifierValue::qualifier : Property

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access'
                 (AMF.UML.Qualifier_Values.UML_Qualifier_Value_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Qualifier));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Qualifier_Value_Value_A_Qualifier_Value then
            --  QualifierValue::value : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Qualifier_Values.UML_Qualifier_Value_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Value));

         else
            raise Program_Error;
         end if;
      end UML_Qualifier_Value_Get;

      ------------------------------------
      -- UML_Raise_Exception_Action_Get --
      ------------------------------------

      function UML_Raise_Exception_Action_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Raise_Exception_Action_Exception_A_Raise_Exception_Action then
            --  RaiseExceptionAction::exception : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Exception));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Raise_Exception_Action_Get;

      --------------------------------
      -- UML_Read_Extent_Action_Get --
      --------------------------------

      function UML_Read_Extent_Action_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Read_Extent_Action_Classifier_A_Read_Extent_Action then
            --  ReadExtentAction::classifier : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Read_Extent_Action_Result_A_Read_Extent_Action then
            --  ReadExtentAction::result : OutputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access'
                 (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Read_Extent_Action_Get;

      ----------------------------------------------
      -- UML_Read_Is_Classified_Object_Action_Get --
      ----------------------------------------------

      function UML_Read_Is_Classified_Object_Action_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Read_Is_Classified_Object_Action_Classifier_A_Read_Is_Classified_Object_Action then
            --  ReadIsClassifiedObjectAction::classifier : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Read_Is_Classified_Object_Action_Is_Direct then
            --  ReadIsClassifiedObjectAction::isDirect : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Direct);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Read_Is_Classified_Object_Action_Object_A_Read_Is_Classified_Object_Action then
            --  ReadIsClassifiedObjectAction::object : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Object));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Read_Is_Classified_Object_Action_Result_A_Read_Is_Classified_Object_Action then
            --  ReadIsClassifiedObjectAction::result : OutputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access'
                 (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Read_Is_Classified_Object_Action_Get;

      ------------------------------
      -- UML_Read_Link_Action_Get --
      ------------------------------

      function UML_Read_Link_Action_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Link_Action_End_Data_A_Link_Action then
            --  LinkAction::endData : LinkEndData

            return
              AMF.UML.Link_End_Datas.Collections.UML_Link_End_Data_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_End_Data);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Link_Action_Input_Value_A_Link_Action then
            --  LinkAction::inputValue : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input_Value);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Read_Link_Action_Result_A_Read_Link_Action then
            --  ReadLinkAction::result : OutputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access'
                 (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Read_Link_Action_Get;

      -----------------------------------------
      -- UML_Read_Link_Object_End_Action_Get --
      -----------------------------------------

      function UML_Read_Link_Object_End_Action_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Read_Link_Object_End_Action_End_A_Read_Link_Object_End_Action then
            --  ReadLinkObjectEndAction::end : Property

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access'
                 (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_End));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Read_Link_Object_End_Action_Object_A_Read_Link_Object_End_Action then
            --  ReadLinkObjectEndAction::object : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Object));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Read_Link_Object_End_Action_Result_A_Read_Link_Object_End_Action then
            --  ReadLinkObjectEndAction::result : OutputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access'
                 (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Read_Link_Object_End_Action_Get;

      ---------------------------------------------------
      -- UML_Read_Link_Object_End_Qualifier_Action_Get --
      ---------------------------------------------------

      function UML_Read_Link_Object_End_Qualifier_Action_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Read_Link_Object_End_Qualifier_Action_Object_A_Read_Link_Object_End_Qualifier_Action then
            --  ReadLinkObjectEndQualifierAction::object : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Object));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Read_Link_Object_End_Qualifier_Action_Qualifier_A_Read_Link_Object_End_Qualifier_Action then
            --  ReadLinkObjectEndQualifierAction::qualifier : Property

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access'
                 (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Qualifier));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Read_Link_Object_End_Qualifier_Action_Result_A_Read_Link_Object_End_Qualifier_Action then
            --  ReadLinkObjectEndQualifierAction::result : OutputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access'
                 (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Read_Link_Object_End_Qualifier_Action_Get;

      ------------------------------
      -- UML_Read_Self_Action_Get --
      ------------------------------

      function UML_Read_Self_Action_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Read_Self_Action_Result_A_Read_Self_Action then
            --  ReadSelfAction::result : OutputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access'
                 (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Read_Self_Action_Get;

      --------------------------------------------
      -- UML_Read_Structural_Feature_Action_Get --
      --------------------------------------------

      function UML_Read_Structural_Feature_Action_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structural_Feature_Action_Object_A_Structural_Feature_Action then
            --  StructuralFeatureAction::object : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Object));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Read_Structural_Feature_Action_Result_A_Read_Structural_Feature_Action then
            --  ReadStructuralFeatureAction::result : OutputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access'
                 (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structural_Feature_Action_Structural_Feature_A_Structural_Feature_Action then
            --  StructuralFeatureAction::structuralFeature : StructuralFeature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structural_Features.UML_Structural_Feature_Access'
                 (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Structural_Feature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Read_Structural_Feature_Action_Get;

      ----------------------------------
      -- UML_Read_Variable_Action_Get --
      ----------------------------------

      function UML_Read_Variable_Action_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Read_Variable_Action_Result_A_Read_Variable_Action then
            --  ReadVariableAction::result : OutputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access'
                 (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Variable_Action_Variable_A_Variable_Action then
            --  VariableAction::variable : Variable

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Variables.UML_Variable_Access'
                 (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Variable));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Read_Variable_Action_Get;

      -------------------------
      -- UML_Realization_Get --
      -------------------------

      function UML_Realization_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Dependency_Client_Named_Element_Client_Dependency then
            --  Dependency::client : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Realizations.UML_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Realizations.UML_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Abstraction_Mapping_A_Abstraction then
            --  Abstraction::mapping : OpaqueExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access'
                 (AMF.UML.Realizations.UML_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Mapping));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Realizations.UML_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Realizations.UML_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Realizations.UML_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Realizations.UML_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Realizations.UML_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Realizations.UML_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Realizations.UML_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Realizations.UML_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Relationship_Related_Element_A_Relationship then
            --  Relationship::relatedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Realizations.UML_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Directed_Relationship_Source_A_Directed_Relationship then
            --  DirectedRelationship::source : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Realizations.UML_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Source);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Dependency_Supplier_A_Supplier_Dependency then
            --  Dependency::supplier : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Realizations.UML_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Supplier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Directed_Relationship_Target_A_Directed_Relationship then
            --  DirectedRelationship::target : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Realizations.UML_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Target);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Realizations.UML_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Realizations.UML_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Realizations.UML_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Realization_Get;

      -----------------------
      -- UML_Reception_Get --
      -----------------------

      function UML_Reception_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Receptions.UML_Reception_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavioral_Feature_Concurrency then
            --  BehavioralFeature::concurrency : CallConcurrencyKind

            return
              AMF.UML.Holders.Call_Concurrency_Kinds.To_Holder
               (AMF.UML.Receptions.UML_Reception_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Concurrency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Receptions.UML_Reception_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Feature_Featuring_Classifier_Classifier_Feature then
            --  Feature::featuringClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Receptions.UML_Reception_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Featuring_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Receptions.UML_Reception_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavioral_Feature_Is_Abstract then
            --  BehavioralFeature::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Receptions.UML_Reception_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Receptions.UML_Reception_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Feature_Is_Static then
            --  Feature::isStatic : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Receptions.UML_Reception_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Static);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Receptions.UML_Reception_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavioral_Feature_Method_Behavior_Specification then
            --  BehavioralFeature::method : Behavior

            return
              AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internals.To_Holder
               (AMF.UML.Receptions.UML_Reception_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Method);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Receptions.UML_Reception_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Receptions.UML_Reception_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Receptions.UML_Reception_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Receptions.UML_Reception_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Receptions.UML_Reception_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Receptions.UML_Reception_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavioral_Feature_Owned_Parameter_A_Owner_Formal_Param then
            --  BehavioralFeature::ownedParameter : Parameter

            return
              AMF.UML.Parameters.Collections.UML_Parameter_Collections.Internals.To_Holder
               (AMF.UML.Receptions.UML_Reception_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parameter);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavioral_Feature_Owned_Parameter_Set_A_Behavioral_Feature then
            --  BehavioralFeature::ownedParameterSet : ParameterSet

            return
              AMF.UML.Parameter_Sets.Collections.UML_Parameter_Set_Collections.Internals.To_Holder
               (AMF.UML.Receptions.UML_Reception_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parameter_Set);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Receptions.UML_Reception_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Receptions.UML_Reception_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Receptions.UML_Reception_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Receptions.UML_Reception_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavioral_Feature_Raised_Exception_A_Behavioral_Feature then
            --  BehavioralFeature::raisedException : Type

            return
              AMF.UML.Types.Collections.UML_Type_Collections.Internals.To_Holder
               (AMF.UML.Receptions.UML_Reception_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Raised_Exception);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Receptions.UML_Reception_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Receptions.UML_Reception_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Reception_Signal_A_Reception then
            --  Reception::signal : Signal

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Signals.UML_Signal_Access'
                 (AMF.UML.Receptions.UML_Reception_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Signal));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Receptions.UML_Reception_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Reception_Get;

      --------------------------------------
      -- UML_Reclassify_Object_Action_Get --
      --------------------------------------

      function UML_Reclassify_Object_Action_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Reclassify_Object_Action_Is_Replace_All then
            --  ReclassifyObjectAction::isReplaceAll : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Replace_All);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Reclassify_Object_Action_New_Classifier_A_Reclassify_Object_Action then
            --  ReclassifyObjectAction::newClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_New_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Reclassify_Object_Action_Object_A_Reclassify_Object_Action then
            --  ReclassifyObjectAction::object : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Object));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Reclassify_Object_Action_Old_Classifier_A_Reclassify_Object_Action then
            --  ReclassifyObjectAction::oldClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Old_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Reclassify_Object_Action_Get;

      --------------------------------------------
      -- UML_Redefinable_Template_Signature_Get --
      --------------------------------------------

      function UML_Redefinable_Template_Signature_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Template_Signature_Classifier_Classifier_Owned_Template_Signature then
            --  RedefinableTemplateSignature::classifier : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Template_Signature_Extended_Signature_A_Redefinable_Template_Signature then
            --  RedefinableTemplateSignature::extendedSignature : RedefinableTemplateSignature

            return
              AMF.UML.Redefinable_Template_Signatures.Collections.UML_Redefinable_Template_Signature_Collections.Internals.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Extended_Signature);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Template_Signature_Inherited_Parameter_A_Redefinable_Template_Signature then
            --  RedefinableTemplateSignature::inheritedParameter : TemplateParameter

            return
              AMF.UML.Template_Parameters.Collections.UML_Template_Parameter_Collections.Internals.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Parameter);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Signature_Owned_Parameter_Template_Parameter_Signature then
            --  TemplateSignature::ownedParameter : TemplateParameter

            return
              AMF.UML.Template_Parameters.Collections.UML_Template_Parameter_Collections.Internals.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parameter);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Signature_Parameter_A_Template_Signature then
            --  TemplateSignature::parameter : TemplateParameter

            return
              AMF.UML.Template_Parameters.Collections.UML_Template_Parameter_Collections.Internals.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Parameter);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Signature_Template_Templateable_Element_Owned_Template_Signature then
            --  TemplateSignature::template : TemplateableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Templateable_Elements.UML_Templateable_Element_Access'
                 (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Redefinable_Template_Signature_Get;

      ---------------------------
      -- UML_Reduce_Action_Get --
      ---------------------------

      function UML_Reduce_Action_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Reduce_Action_Collection_A_Reduce_Action then
            --  ReduceAction::collection : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Collection));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Reduce_Action_Is_Ordered then
            --  ReduceAction::isOrdered : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Ordered);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Reduce_Action_Reducer_A_Reduce_Action then
            --  ReduceAction::reducer : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Reducer));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Reduce_Action_Result_A_Reduce_Action then
            --  ReduceAction::result : OutputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access'
                 (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Reduce_Action_Get;

      --------------------
      -- UML_Region_Get --
      --------------------

      function UML_Region_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Regions.UML_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Regions.UML_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Region_Extended_Region_A_Region then
            --  Region::extendedRegion : Region

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Regions.UML_Region_Access'
                 (AMF.UML.Regions.UML_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Extended_Region));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Regions.UML_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Regions.UML_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Regions.UML_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Regions.UML_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Regions.UML_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Regions.UML_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Regions.UML_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Regions.UML_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Regions.UML_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Regions.UML_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Regions.UML_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Regions.UML_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Regions.UML_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Regions.UML_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Regions.UML_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Region_Redefinition_Context_A_Region then
            --  Region::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Regions.UML_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Region_State_State_Region then
            --  Region::state : State

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.States.UML_State_Access'
                 (AMF.UML.Regions.UML_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_State));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Region_State_Machine_State_Machine_Region then
            --  Region::stateMachine : StateMachine

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access'
                 (AMF.UML.Regions.UML_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_State_Machine));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Region_Subvertex_Vertex_Container then
            --  Region::subvertex : Vertex

            return
              AMF.UML.Vertexs.Collections.UML_Vertex_Collections.Internals.To_Holder
               (AMF.UML.Regions.UML_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Subvertex);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Region_Transition_Transition_Container then
            --  Region::transition : Transition

            return
              AMF.UML.Transitions.Collections.UML_Transition_Collections.Internals.To_Holder
               (AMF.UML.Regions.UML_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Transition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Regions.UML_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Region_Get;

      ----------------------------------------------------
      -- UML_Remove_Structural_Feature_Value_Action_Get --
      ----------------------------------------------------

      function UML_Remove_Structural_Feature_Value_Action_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Remove_Structural_Feature_Value_Action_Is_Remove_Duplicates then
            --  RemoveStructuralFeatureValueAction::isRemoveDuplicates : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Remove_Duplicates);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structural_Feature_Action_Object_A_Structural_Feature_Action then
            --  StructuralFeatureAction::object : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Object));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Remove_Structural_Feature_Value_Action_Remove_At_A_Remove_Structural_Feature_Value_Action then
            --  RemoveStructuralFeatureValueAction::removeAt : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Remove_At));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Write_Structural_Feature_Action_Result_A_Write_Structural_Feature_Action then
            --  WriteStructuralFeatureAction::result : OutputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access'
                 (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structural_Feature_Action_Structural_Feature_A_Structural_Feature_Action then
            --  StructuralFeatureAction::structuralFeature : StructuralFeature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structural_Features.UML_Structural_Feature_Access'
                 (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Structural_Feature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Write_Structural_Feature_Action_Value_A_Write_Structural_Feature_Action then
            --  WriteStructuralFeatureAction::value : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Remove_Structural_Feature_Value_Action_Get;

      ------------------------------------------
      -- UML_Remove_Variable_Value_Action_Get --
      ------------------------------------------

      function UML_Remove_Variable_Value_Action_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Remove_Variable_Value_Action_Is_Remove_Duplicates then
            --  RemoveVariableValueAction::isRemoveDuplicates : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Remove_Duplicates);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Remove_Variable_Value_Action_Remove_At_A_Remove_Variable_Value_Action then
            --  RemoveVariableValueAction::removeAt : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Remove_At));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Write_Variable_Action_Value_A_Write_Variable_Action then
            --  WriteVariableAction::value : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Variable_Action_Variable_A_Variable_Action then
            --  VariableAction::variable : Variable

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Variables.UML_Variable_Access'
                 (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Variable));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Remove_Variable_Value_Action_Get;

      --------------------------
      -- UML_Reply_Action_Get --
      --------------------------

      function UML_Reply_Action_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Reply_Action_Reply_To_Call_A_Reply_Action then
            --  ReplyAction::replyToCall : Trigger

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Triggers.UML_Trigger_Access'
                 (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Reply_To_Call));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Reply_Action_Reply_Value_A_Reply_Action then
            --  ReplyAction::replyValue : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Reply_Value);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Reply_Action_Return_Information_A_Reply_Action then
            --  ReplyAction::returnInformation : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Return_Information));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Reply_Action_Get;

      --------------------------------
      -- UML_Send_Object_Action_Get --
      --------------------------------

      function UML_Send_Object_Action_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Invocation_Action_Argument_A_Invocation_Action then
            --  InvocationAction::argument : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Argument);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Invocation_Action_On_Port_A_Invocation_Action then
            --  InvocationAction::onPort : Port

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Ports.UML_Port_Access'
                 (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_On_Port));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Send_Object_Action_Request_A_Send_Object_Action then
            --  SendObjectAction::request : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Request));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Send_Object_Action_Target_A_Send_Object_Action then
            --  SendObjectAction::target : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Target));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Send_Object_Action_Get;

      --------------------------------
      -- UML_Send_Signal_Action_Get --
      --------------------------------

      function UML_Send_Signal_Action_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Invocation_Action_Argument_A_Invocation_Action then
            --  InvocationAction::argument : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Argument);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Invocation_Action_On_Port_A_Invocation_Action then
            --  InvocationAction::onPort : Port

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Ports.UML_Port_Access'
                 (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_On_Port));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Send_Signal_Action_Signal_A_Send_Signal_Action then
            --  SendSignalAction::signal : Signal

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Signals.UML_Signal_Access'
                 (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Signal));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Send_Signal_Action_Target_A_Send_Signal_Action then
            --  SendSignalAction::target : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Target));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Send_Signal_Action_Get;

      ---------------------------
      -- UML_Sequence_Node_Get --
      ---------------------------

      function UML_Sequence_Node_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Activity_Activity_Structured_Node then
            --  StructuredActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_Contained_Edge_Activity_Edge_In_Group then
            --  ActivityGroup::containedEdge : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Contained_Edge);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_Contained_Node_Activity_Node_In_Group then
            --  ActivityGroup::containedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Contained_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Edge_Activity_Edge_In_Structured_Node then
            --  StructuredActivityNode::edge : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Edge);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Sequence_Node_Executable_Node_A_Sequence_Node then
            --  SequenceNode::executableNode : ExecutableNode

            return
              AMF.UML.Executable_Nodes.Collections.UML_Executable_Node_Collections.Internals.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Executable_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_In_Activity_Activity_Group then
            --  ActivityGroup::inActivity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Must_Isolate then
            --  StructuredActivityNode::mustIsolate : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Must_Isolate);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Node_Activity_Node_In_Structured_Node then
            --  StructuredActivityNode::node : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Structured_Node_Input_A_Structured_Activity_Node then
            --  StructuredActivityNode::structuredNodeInput : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Structured_Node_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Structured_Node_Output_A_Structured_Activity_Node then
            --  StructuredActivityNode::structuredNodeOutput : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Structured_Node_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_Subgroup_Activity_Group_Super_Group then
            --  ActivityGroup::subgroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Subgroup);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_Super_Group_Activity_Group_Subgroup then
            --  ActivityGroup::superGroup : ActivityGroup

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activity_Groups.UML_Activity_Group_Access'
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Group));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Variable_Variable_Scope then
            --  StructuredActivityNode::variable : Variable

            return
              AMF.UML.Variables.Collections.UML_Variable_Collections.Internals.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Variable);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Sequence_Node_Get;

      --------------------
      -- UML_Signal_Get --
      --------------------

      function UML_Signal_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Attribute_A_Classifier then
            --  Classifier::attribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Signals.UML_Signal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Signals.UML_Signal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Collaboration_Use_A_Classifier then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internals.To_Holder
               (AMF.UML.Signals.UML_Signal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Signals.UML_Signal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Feature_Feature_Featuring_Classifier then
            --  Classifier::feature : Feature

            return
              AMF.UML.Features.Collections.UML_Feature_Collections.Internals.To_Holder
               (AMF.UML.Signals.UML_Signal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Feature);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_General_A_Classifier then
            --  Classifier::general : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Signals.UML_Signal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Generalization_Generalization_Specific then
            --  Classifier::generalization : Generalization

            return
              AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internals.To_Holder
               (AMF.UML.Signals.UML_Signal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Signals.UML_Signal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Inherited_Member_A_Classifier then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Signals.UML_Signal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Signals.UML_Signal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Signals.UML_Signal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Signals.UML_Signal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Signals.UML_Signal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Signals.UML_Signal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Signal_Owned_Attribute_A_Owning_Signal then
            --  Signal::ownedAttribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Signals.UML_Signal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Signals.UML_Signal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Signals.UML_Signal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Signals.UML_Signal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Signals.UML_Signal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Use_Case_A_Classifier then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Signals.UML_Signal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Signals.UML_Signal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Powertype_Extent_Generalization_Set_Powertype then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internals.To_Holder
               (AMF.UML.Signals.UML_Signal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Signals.UML_Signal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Redefined_Classifier_A_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Signals.UML_Signal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Signals.UML_Signal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Signals.UML_Signal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Substitution_Substitution_Substituting_Classifier then
            --  Classifier::substitution : Substitution

            return
              AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internals.To_Holder
               (AMF.UML.Signals.UML_Signal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Template_Binding_Template_Binding_Bound_Element then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internals.To_Holder
               (AMF.UML.Signals.UML_Signal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Use_Case_Use_Case_Subject then
            --  Classifier::useCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Signals.UML_Signal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Signals.UML_Signal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Signals.UML_Signal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Signal_Get;

      --------------------------
      -- UML_Signal_Event_Get --
      --------------------------

      function UML_Signal_Event_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Signal_Events.UML_Signal_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Signal_Events.UML_Signal_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Signal_Events.UML_Signal_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Signal_Events.UML_Signal_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Signal_Events.UML_Signal_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Signal_Events.UML_Signal_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Signal_Events.UML_Signal_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Signal_Events.UML_Signal_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Signal_Events.UML_Signal_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Signal_Event_Signal_A_Signal_Event then
            --  SignalEvent::signal : Signal

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Signals.UML_Signal_Access'
                 (AMF.UML.Signal_Events.UML_Signal_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Signal));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Signal_Events.UML_Signal_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Signal_Events.UML_Signal_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Signal_Events.UML_Signal_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Signal_Event_Get;

      ------------------
      -- UML_Slot_Get --
      ------------------

      function UML_Slot_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Slot_Defining_Feature_A_Slot then
            --  Slot::definingFeature : StructuralFeature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structural_Features.UML_Structural_Feature_Access'
                 (AMF.UML.Slots.UML_Slot_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Defining_Feature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Slots.UML_Slot_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Slots.UML_Slot_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Slots.UML_Slot_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Slot_Owning_Instance_Instance_Specification_Slot then
            --  Slot::owningInstance : InstanceSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access'
                 (AMF.UML.Slots.UML_Slot_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Instance));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Slot_Value_A_Owning_Slot then
            --  Slot::value : ValueSpecification

            return
              AMF.UML.Value_Specifications.Collections.UML_Value_Specification_Collections.Internals.To_Holder
               (AMF.UML.Slots.UML_Slot_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Value);

         else
            raise Program_Error;
         end if;
      end UML_Slot_Get;

      ----------------------------------------------
      -- UML_Start_Classifier_Behavior_Action_Get --
      ----------------------------------------------

      function UML_Start_Classifier_Behavior_Action_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Start_Classifier_Behavior_Action_Object_A_Start_Classifier_Behavior_Action then
            --  StartClassifierBehaviorAction::object : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Object));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Start_Classifier_Behavior_Action_Get;

      ------------------------------------------
      -- UML_Start_Object_Behavior_Action_Get --
      ------------------------------------------

      function UML_Start_Object_Behavior_Action_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Invocation_Action_Argument_A_Invocation_Action then
            --  InvocationAction::argument : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Argument);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Call_Action_Is_Synchronous then
            --  CallAction::isSynchronous : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Synchronous);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Start_Object_Behavior_Action_Object_A_Start_Object_Behavior_Action then
            --  StartObjectBehaviorAction::object : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Object));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Invocation_Action_On_Port_A_Invocation_Action then
            --  InvocationAction::onPort : Port

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Ports.UML_Port_Access'
                 (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_On_Port));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Call_Action_Result_A_Call_Action then
            --  CallAction::result : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Result);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Start_Object_Behavior_Action_Get;

      -------------------
      -- UML_State_Get --
      -------------------

      function UML_State_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.States.UML_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Connection_Connection_Point_Reference_State then
            --  State::connection : ConnectionPointReference

            return
              AMF.UML.Connection_Point_References.Collections.UML_Connection_Point_Reference_Collections.Internals.To_Holder
               (AMF.UML.States.UML_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Connection);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Connection_Point_Pseudostate_State then
            --  State::connectionPoint : Pseudostate

            return
              AMF.UML.Pseudostates.Collections.UML_Pseudostate_Collections.Internals.To_Holder
               (AMF.UML.States.UML_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Connection_Point);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Vertex_Container_Region_Subvertex then
            --  Vertex::container : Region

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Regions.UML_Region_Access'
                 (AMF.UML.States.UML_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Container));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Deferrable_Trigger_A_State then
            --  State::deferrableTrigger : Trigger

            return
              AMF.UML.Triggers.Collections.UML_Trigger_Collections.Internals.To_Holder
               (AMF.UML.States.UML_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Deferrable_Trigger);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Do_Activity_A_State then
            --  State::doActivity : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.States.UML_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Do_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.States.UML_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Entry_A_State then
            --  State::entry : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.States.UML_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Entry));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Exit_A_State then
            --  State::exit : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.States.UML_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Exit));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.States.UML_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Vertex_Incoming_Transition_Target then
            --  Vertex::incoming : Transition

            return
              AMF.UML.Transitions.Collections.UML_Transition_Collections.Internals.To_Holder
               (AMF.UML.States.UML_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Is_Composite then
            --  State::isComposite : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.States.UML_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Composite);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.States.UML_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Is_Orthogonal then
            --  State::isOrthogonal : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.States.UML_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Orthogonal);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Is_Simple then
            --  State::isSimple : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.States.UML_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Simple);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Is_Submachine_State then
            --  State::isSubmachineState : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.States.UML_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Submachine_State);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.States.UML_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.States.UML_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.States.UML_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.States.UML_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Vertex_Outgoing_Transition_Source then
            --  Vertex::outgoing : Transition

            return
              AMF.UML.Transitions.Collections.UML_Transition_Collections.Internals.To_Holder
               (AMF.UML.States.UML_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.States.UML_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.States.UML_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.States.UML_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.States.UML_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.States.UML_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.States.UML_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.States.UML_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.States.UML_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Redefined_State_A_State then
            --  State::redefinedState : State

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.States.UML_State_Access'
                 (AMF.UML.States.UML_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_State));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.States.UML_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Redefinition_Context_A_State then
            --  State::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.States.UML_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Region_Region_State then
            --  State::region : Region

            return
              AMF.UML.Regions.Collections.UML_Region_Collections.Internals.To_Holder
               (AMF.UML.States.UML_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_State_Invariant_A_Owning_State then
            --  State::stateInvariant : Constraint

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Constraints.UML_Constraint_Access'
                 (AMF.UML.States.UML_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_State_Invariant));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Submachine_State_Machine_Submachine_State then
            --  State::submachine : StateMachine

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access'
                 (AMF.UML.States.UML_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Submachine));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.States.UML_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_State_Get;

      -----------------------------
      -- UML_State_Invariant_Get --
      -----------------------------

      function UML_State_Invariant_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.State_Invariants.UML_State_Invariant_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Covered_Lifeline_Covered_By then
            --  InteractionFragment::covered : Lifeline

            return
              AMF.UML.Lifelines.Collections.UML_Lifeline_Collections.Internals.To_Holder
               (AMF.UML.State_Invariants.UML_State_Invariant_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Covered);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Invariant_Covered_A_State_Invariant then
            --  StateInvariant::covered : Lifeline

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Lifelines.UML_Lifeline_Access'
                 (AMF.UML.State_Invariants.UML_State_Invariant_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Covered));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Interaction_Interaction_Fragment then
            --  InteractionFragment::enclosingInteraction : Interaction

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access'
                 (AMF.UML.State_Invariants.UML_State_Invariant_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Interaction));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Operand_Interaction_Operand_Fragment then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access'
                 (AMF.UML.State_Invariants.UML_State_Invariant_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Operand));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_General_Ordering_A_Interaction_Fragment then
            --  InteractionFragment::generalOrdering : GeneralOrdering

            return
              AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internals.To_Holder
               (AMF.UML.State_Invariants.UML_State_Invariant_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General_Ordering);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Invariant_Invariant_A_State_Invariant then
            --  StateInvariant::invariant : Constraint

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Constraints.UML_Constraint_Access'
                 (AMF.UML.State_Invariants.UML_State_Invariant_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Invariant));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.State_Invariants.UML_State_Invariant_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.State_Invariants.UML_State_Invariant_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.State_Invariants.UML_State_Invariant_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.State_Invariants.UML_State_Invariant_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.State_Invariants.UML_State_Invariant_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.State_Invariants.UML_State_Invariant_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.State_Invariants.UML_State_Invariant_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.State_Invariants.UML_State_Invariant_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_State_Invariant_Get;

      ---------------------------
      -- UML_State_Machine_Get --
      ---------------------------

      function UML_State_Machine_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Attribute_A_Classifier then
            --  Classifier::attribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Classifier_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::classifierBehavior : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier_Behavior));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Collaboration_Use_A_Classifier then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Machine_Connection_Point_Pseudostate_State_Machine then
            --  StateMachine::connectionPoint : Pseudostate

            return
              AMF.UML.Pseudostates.Collections.UML_Pseudostate_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Connection_Point);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Context_A_Behavior then
            --  Behavior::context : BehavioredClassifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviored_Classifiers.UML_Behaviored_Classifier_Access'
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Machine_Extended_State_Machine_A_State_Machine then
            --  StateMachine::extendedStateMachine : StateMachine

            return
              AMF.UML.State_Machines.Collections.UML_State_Machine_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Extended_State_Machine);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Extension_Extension_Metaclass then
            --  Class::extension : Extension

            return
              AMF.UML.Extensions.Collections.UML_Extension_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Extension);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Feature_Feature_Featuring_Classifier then
            --  Classifier::feature : Feature

            return
              AMF.UML.Features.Collections.UML_Feature_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Feature);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_General_A_Classifier then
            --  Classifier::general : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Generalization_Generalization_Specific then
            --  Classifier::generalization : Generalization

            return
              AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Inherited_Member_A_Classifier then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Interface_Realization_Interface_Realization_Implementing_Classifier then
            --  BehavioredClassifier::interfaceRealization : InterfaceRealization

            return
              AMF.UML.Interface_Realizations.Collections.UML_Interface_Realization_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Interface_Realization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Active);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Is_Reentrant then
            --  Behavior::isReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Nested_Classifier_A_Class then
            --  Class::nestedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Owned_Attribute_Property_Class then
            --  Class::ownedAttribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Owned_Attribute_A_Structured_Classifier then
            --  StructuredClassifier::ownedAttribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Owned_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::ownedBehavior : Behavior

            return
              AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Behavior);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Owned_Connector_A_Structured_Classifier then
            --  StructuredClassifier::ownedConnector : Connector

            return
              AMF.UML.Connectors.Collections.UML_Connector_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Connector);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Owned_Operation_Operation_Class then
            --  Class::ownedOperation : Operation

            return
              AMF.UML.Operations.Collections.UML_Operation_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Operation);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Owned_Parameter_A_Behavior then
            --  Behavior::ownedParameter : Parameter

            return
              AMF.UML.Parameters.Collections.UML_Parameter_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parameter);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Owned_Parameter_Set_A_Behavior then
            --  Behavior::ownedParameterSet : ParameterSet

            return
              AMF.UML.Parameter_Sets.Collections.UML_Parameter_Set_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parameter_Set);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Encapsulated_Classifier_Owned_Port_A_Encapsulated_Classifier then
            --  EncapsulatedClassifier::ownedPort : Port

            return
              AMF.UML.Ports.Collections.UML_Port_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Port);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Owned_Reception_A_Class then
            --  Class::ownedReception : Reception

            return
              AMF.UML.Receptions.Collections.UML_Reception_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Reception);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Use_Case_A_Classifier then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Part_A_Structured_Classifier then
            --  StructuredClassifier::part : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Part);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Postcondition_A_Behavior then
            --  Behavior::postcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Powertype_Extent_Generalization_Set_Powertype then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Precondition_A_Behavior then
            --  Behavior::precondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Redefined_Behavior_A_Behavior then
            --  Behavior::redefinedBehavior : Behavior

            return
              AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Behavior);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Redefined_Classifier_A_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Machine_Region_Region_State_Machine then
            --  StateMachine::region : Region

            return
              AMF.UML.Regions.Collections.UML_Region_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Role_A_Structured_Classifier then
            --  StructuredClassifier::role : ConnectableElement

            return
              AMF.UML.Connectable_Elements.Collections.UML_Connectable_Element_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Role);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Specification_Behavioral_Feature_Method then
            --  Behavior::specification : BehavioralFeature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behavioral_Features.UML_Behavioral_Feature_Access'
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Specification));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Machine_Submachine_State_State_Submachine then
            --  StateMachine::submachineState : State

            return
              AMF.UML.States.Collections.UML_State_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Submachine_State);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Substitution_Substitution_Substituting_Classifier then
            --  Classifier::substitution : Substitution

            return
              AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Super_Class_A_Class then
            --  Class::superClass : Class

            return
              AMF.UML.Classes.Collections.UML_Class_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Class);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Template_Binding_Template_Binding_Bound_Element then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Use_Case_Use_Case_Subject then
            --  Classifier::useCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_State_Machine_Get;

      ------------------------
      -- UML_Stereotype_Get --
      ------------------------

      function UML_Stereotype_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Attribute_A_Classifier then
            --  Classifier::attribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Classifier_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::classifierBehavior : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier_Behavior));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Collaboration_Use_A_Classifier then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internals.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Extension_Extension_Metaclass then
            --  Class::extension : Extension

            return
              AMF.UML.Extensions.Collections.UML_Extension_Collections.Internals.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Extension);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Feature_Feature_Featuring_Classifier then
            --  Classifier::feature : Feature

            return
              AMF.UML.Features.Collections.UML_Feature_Collections.Internals.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Feature);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_General_A_Classifier then
            --  Classifier::general : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Generalization_Generalization_Specific then
            --  Classifier::generalization : Generalization

            return
              AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internals.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Stereotype_Icon_A_Stereotype then
            --  Stereotype::icon : Image

            return
              AMF.UML.Images.Collections.UML_Image_Collections.Internals.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Icon);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Inherited_Member_A_Classifier then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Interface_Realization_Interface_Realization_Implementing_Classifier then
            --  BehavioredClassifier::interfaceRealization : InterfaceRealization

            return
              AMF.UML.Interface_Realizations.Collections.UML_Interface_Realization_Collections.Internals.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Interface_Realization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Active);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Nested_Classifier_A_Class then
            --  Class::nestedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Owned_Attribute_Property_Class then
            --  Class::ownedAttribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Owned_Attribute_A_Structured_Classifier then
            --  StructuredClassifier::ownedAttribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Owned_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::ownedBehavior : Behavior

            return
              AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internals.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Behavior);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Owned_Connector_A_Structured_Classifier then
            --  StructuredClassifier::ownedConnector : Connector

            return
              AMF.UML.Connectors.Collections.UML_Connector_Collections.Internals.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Connector);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Owned_Operation_Operation_Class then
            --  Class::ownedOperation : Operation

            return
              AMF.UML.Operations.Collections.UML_Operation_Collections.Internals.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Operation);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Encapsulated_Classifier_Owned_Port_A_Encapsulated_Classifier then
            --  EncapsulatedClassifier::ownedPort : Port

            return
              AMF.UML.Ports.Collections.UML_Port_Collections.Internals.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Port);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Owned_Reception_A_Class then
            --  Class::ownedReception : Reception

            return
              AMF.UML.Receptions.Collections.UML_Reception_Collections.Internals.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Reception);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Use_Case_A_Classifier then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Part_A_Structured_Classifier then
            --  StructuredClassifier::part : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Part);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Powertype_Extent_Generalization_Set_Powertype then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internals.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Stereotype_Profile_A_Stereotype then
            --  Stereotype::profile : Profile

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Profiles.UML_Profile_Access'
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Profile));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Redefined_Classifier_A_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Classifier_Role_A_Structured_Classifier then
            --  StructuredClassifier::role : ConnectableElement

            return
              AMF.UML.Connectable_Elements.Collections.UML_Connectable_Element_Collections.Internals.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Role);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Substitution_Substitution_Substituting_Classifier then
            --  Classifier::substitution : Substitution

            return
              AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internals.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Super_Class_A_Class then
            --  Class::superClass : Class

            return
              AMF.UML.Classes.Collections.UML_Class_Collections.Internals.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Class);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Template_Binding_Template_Binding_Bound_Element then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internals.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Use_Case_Use_Case_Subject then
            --  Classifier::useCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Stereotype_Get;

      -------------------------------
      -- UML_String_Expression_Get --
      -------------------------------

      function UML_String_Expression_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.String_Expressions.UML_String_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.String_Expressions.UML_String_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Expression_Operand_A_Expression then
            --  Expression::operand : ValueSpecification

            return
              AMF.UML.Value_Specifications.Collections.UML_Value_Specification_Collections.Internals.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Operand);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.String_Expressions.UML_String_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.String_Expressions.UML_String_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_String_Expression_Owning_Expression_String_Expression_Sub_Expression then
            --  StringExpression::owningExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.String_Expressions.UML_String_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.String_Expressions.UML_String_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_String_Expression_Sub_Expression_String_Expression_Owning_Expression then
            --  StringExpression::subExpression : StringExpression

            return
              AMF.UML.String_Expressions.Collections.UML_String_Expression_Collections.Internals.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Sub_Expression);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Expression_Symbol then
            --  Expression::symbol : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Symbol);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Template_Binding_Template_Binding_Bound_Element then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internals.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.String_Expressions.UML_String_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.String_Expressions.UML_String_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_String_Expression_Get;

      --------------------------------------
      -- UML_Structured_Activity_Node_Get --
      --------------------------------------

      function UML_Structured_Activity_Node_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Activity_Activity_Structured_Node then
            --  StructuredActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_Contained_Edge_Activity_Edge_In_Group then
            --  ActivityGroup::containedEdge : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Contained_Edge);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_Contained_Node_Activity_Node_In_Group then
            --  ActivityGroup::containedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Contained_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Edge_Activity_Edge_In_Structured_Node then
            --  StructuredActivityNode::edge : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Edge);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_In_Activity_Activity_Group then
            --  ActivityGroup::inActivity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Must_Isolate then
            --  StructuredActivityNode::mustIsolate : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Must_Isolate);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Node_Activity_Node_In_Structured_Node then
            --  StructuredActivityNode::node : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Structured_Node_Input_A_Structured_Activity_Node then
            --  StructuredActivityNode::structuredNodeInput : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Structured_Node_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Structured_Node_Output_A_Structured_Activity_Node then
            --  StructuredActivityNode::structuredNodeOutput : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Structured_Node_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_Subgroup_Activity_Group_Super_Group then
            --  ActivityGroup::subgroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Subgroup);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_Super_Group_Activity_Group_Subgroup then
            --  ActivityGroup::superGroup : ActivityGroup

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activity_Groups.UML_Activity_Group_Access'
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Group));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Variable_Variable_Scope then
            --  StructuredActivityNode::variable : Variable

            return
              AMF.UML.Variables.Collections.UML_Variable_Collections.Internals.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Variable);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Structured_Activity_Node_Get;

      --------------------------
      -- UML_Substitution_Get --
      --------------------------

      function UML_Substitution_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Dependency_Client_Named_Element_Client_Dependency then
            --  Dependency::client : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Substitutions.UML_Substitution_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Substitutions.UML_Substitution_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Substitution_Contract_A_Substitution then
            --  Substitution::contract : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Substitutions.UML_Substitution_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Contract));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Abstraction_Mapping_A_Abstraction then
            --  Abstraction::mapping : OpaqueExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access'
                 (AMF.UML.Substitutions.UML_Substitution_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Mapping));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Substitutions.UML_Substitution_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Substitutions.UML_Substitution_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Substitutions.UML_Substitution_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Substitutions.UML_Substitution_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Substitutions.UML_Substitution_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Substitutions.UML_Substitution_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Substitutions.UML_Substitution_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Substitutions.UML_Substitution_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Relationship_Related_Element_A_Relationship then
            --  Relationship::relatedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Substitutions.UML_Substitution_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Directed_Relationship_Source_A_Directed_Relationship then
            --  DirectedRelationship::source : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Substitutions.UML_Substitution_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Source);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Substitution_Substituting_Classifier_Classifier_Substitution then
            --  Substitution::substitutingClassifier : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Substitutions.UML_Substitution_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Substituting_Classifier));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Dependency_Supplier_A_Supplier_Dependency then
            --  Dependency::supplier : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Substitutions.UML_Substitution_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Supplier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Directed_Relationship_Target_A_Directed_Relationship then
            --  DirectedRelationship::target : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Substitutions.UML_Substitution_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Target);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Substitutions.UML_Substitution_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Substitutions.UML_Substitution_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Substitutions.UML_Substitution_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Substitution_Get;

      ------------------------------
      -- UML_Template_Binding_Get --
      ------------------------------

      function UML_Template_Binding_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Binding_Bound_Element_Templateable_Element_Template_Binding then
            --  TemplateBinding::boundElement : TemplateableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Templateable_Elements.UML_Templateable_Element_Access'
                 (AMF.UML.Template_Bindings.UML_Template_Binding_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Bound_Element));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Template_Bindings.UML_Template_Binding_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Template_Bindings.UML_Template_Binding_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Template_Bindings.UML_Template_Binding_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Binding_Parameter_Substitution_Template_Parameter_Substitution_Template_Binding then
            --  TemplateBinding::parameterSubstitution : TemplateParameterSubstitution

            return
              AMF.UML.Template_Parameter_Substitutions.Collections.UML_Template_Parameter_Substitution_Collections.Internals.To_Holder
               (AMF.UML.Template_Bindings.UML_Template_Binding_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Parameter_Substitution);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Relationship_Related_Element_A_Relationship then
            --  Relationship::relatedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Template_Bindings.UML_Template_Binding_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Binding_Signature_A_Template_Binding then
            --  TemplateBinding::signature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Template_Bindings.UML_Template_Binding_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Directed_Relationship_Source_A_Directed_Relationship then
            --  DirectedRelationship::source : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Template_Bindings.UML_Template_Binding_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Source);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Directed_Relationship_Target_A_Directed_Relationship then
            --  DirectedRelationship::target : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Template_Bindings.UML_Template_Binding_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Target);

         else
            raise Program_Error;
         end if;
      end UML_Template_Binding_Get;

      --------------------------------
      -- UML_Template_Parameter_Get --
      --------------------------------

      function UML_Template_Parameter_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Default_A_Template_Parameter then
            --  TemplateParameter::default : ParameterableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access'
                 (AMF.UML.Template_Parameters.UML_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Default));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Owned_Default_A_Template_Parameter then
            --  TemplateParameter::ownedDefault : ParameterableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access'
                 (AMF.UML.Template_Parameters.UML_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Default));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Owned_Parametered_Element_Parameterable_Element_Owning_Template_Parameter then
            --  TemplateParameter::ownedParameteredElement : ParameterableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access'
                 (AMF.UML.Template_Parameters.UML_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parametered_Element));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Template_Parameters.UML_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Parametered_Element_Parameterable_Element_Template_Parameter then
            --  TemplateParameter::parameteredElement : ParameterableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access'
                 (AMF.UML.Template_Parameters.UML_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Parametered_Element));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Signature_Template_Signature_Owned_Parameter then
            --  TemplateParameter::signature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Template_Parameters.UML_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Signature));

         else
            raise Program_Error;
         end if;
      end UML_Template_Parameter_Get;

      ---------------------------------------------
      -- UML_Template_Parameter_Substitution_Get --
      ---------------------------------------------

      function UML_Template_Parameter_Substitution_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Substitution_Actual_A_Template_Parameter_Substitution then
            --  TemplateParameterSubstitution::actual : ParameterableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access'
                 (AMF.UML.Template_Parameter_Substitutions.UML_Template_Parameter_Substitution_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Actual));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Substitution_Formal_A_Template_Parameter_Substitution then
            --  TemplateParameterSubstitution::formal : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Template_Parameter_Substitutions.UML_Template_Parameter_Substitution_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Formal));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Substitution_Owned_Actual_A_Template_Parameter_Substitution then
            --  TemplateParameterSubstitution::ownedActual : ParameterableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access'
                 (AMF.UML.Template_Parameter_Substitutions.UML_Template_Parameter_Substitution_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Actual));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Template_Parameter_Substitutions.UML_Template_Parameter_Substitution_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Template_Parameter_Substitutions.UML_Template_Parameter_Substitution_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Template_Parameter_Substitutions.UML_Template_Parameter_Substitution_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Substitution_Template_Binding_Template_Binding_Parameter_Substitution then
            --  TemplateParameterSubstitution::templateBinding : TemplateBinding

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Bindings.UML_Template_Binding_Access'
                 (AMF.UML.Template_Parameter_Substitutions.UML_Template_Parameter_Substitution_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding));

         else
            raise Program_Error;
         end if;
      end UML_Template_Parameter_Substitution_Get;

      --------------------------------
      -- UML_Template_Signature_Get --
      --------------------------------

      function UML_Template_Signature_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Signature_Owned_Parameter_Template_Parameter_Signature then
            --  TemplateSignature::ownedParameter : TemplateParameter

            return
              AMF.UML.Template_Parameters.Collections.UML_Template_Parameter_Collections.Internals.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parameter);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Template_Signatures.UML_Template_Signature_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Signature_Parameter_A_Template_Signature then
            --  TemplateSignature::parameter : TemplateParameter

            return
              AMF.UML.Template_Parameters.Collections.UML_Template_Parameter_Collections.Internals.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Parameter);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Signature_Template_Templateable_Element_Owned_Template_Signature then
            --  TemplateSignature::template : TemplateableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Templateable_Elements.UML_Templateable_Element_Access'
                 (AMF.UML.Template_Signatures.UML_Template_Signature_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template));

         else
            raise Program_Error;
         end if;
      end UML_Template_Signature_Get;

      ----------------------------------
      -- UML_Test_Identity_Action_Get --
      ----------------------------------

      function UML_Test_Identity_Action_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Test_Identity_Action_First_A_Test_Identity_Action then
            --  TestIdentityAction::first : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_First));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Test_Identity_Action_Result_A_Test_Identity_Action then
            --  TestIdentityAction::result : OutputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access'
                 (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Test_Identity_Action_Second_A_Test_Identity_Action then
            --  TestIdentityAction::second : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Second));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Test_Identity_Action_Get;

      -----------------------------
      -- UML_Time_Constraint_Get --
      -----------------------------

      function UML_Time_Constraint_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Time_Constraints.UML_Time_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Constraint_Constrained_Element_A_Constraint then
            --  Constraint::constrainedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Time_Constraints.UML_Time_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Constrained_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Constraint_Context_Namespace_Owned_Rule then
            --  Constraint::context : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Time_Constraints.UML_Time_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Time_Constraint_First_Event then
            --  TimeConstraint::firstEvent : Boolean

            return
              AMF.Holders.To_Holder
               (AMF.UML.Time_Constraints.UML_Time_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_First_Event);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Time_Constraints.UML_Time_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Time_Constraints.UML_Time_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Time_Constraints.UML_Time_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Time_Constraints.UML_Time_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Time_Constraints.UML_Time_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Time_Constraints.UML_Time_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Time_Constraints.UML_Time_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Time_Constraints.UML_Time_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Constraint_Specification_A_Owning_Constraint then
            --  Constraint::specification : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Time_Constraints.UML_Time_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Specification));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interval_Constraint_Specification_A_Interval_Constraint then
            --  IntervalConstraint::specification : Interval

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Intervals.UML_Interval_Access'
                 (AMF.UML.Time_Constraints.UML_Time_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Specification));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Time_Constraint_Specification_A_Time_Constraint then
            --  TimeConstraint::specification : TimeInterval

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Time_Intervals.UML_Time_Interval_Access'
                 (AMF.UML.Time_Constraints.UML_Time_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Specification));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Time_Constraints.UML_Time_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Time_Constraints.UML_Time_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Time_Constraints.UML_Time_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Time_Constraint_Get;

      ------------------------
      -- UML_Time_Event_Get --
      ------------------------

      function UML_Time_Event_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Time_Events.UML_Time_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Time_Event_Is_Relative then
            --  TimeEvent::isRelative : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Time_Events.UML_Time_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Relative);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Time_Events.UML_Time_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Time_Events.UML_Time_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Time_Events.UML_Time_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Time_Events.UML_Time_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Time_Events.UML_Time_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Time_Events.UML_Time_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Time_Events.UML_Time_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Time_Events.UML_Time_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Time_Events.UML_Time_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Time_Events.UML_Time_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Time_Events.UML_Time_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Time_Event_When_A_Time_Event then
            --  TimeEvent::when : TimeExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Time_Expressions.UML_Time_Expression_Access'
                 (AMF.UML.Time_Events.UML_Time_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_When));

         else
            raise Program_Error;
         end if;
      end UML_Time_Event_Get;

      -----------------------------
      -- UML_Time_Expression_Get --
      -----------------------------

      function UML_Time_Expression_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Time_Expressions.UML_Time_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Time_Expression_Expr_A_Time_Expression then
            --  TimeExpression::expr : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Time_Expressions.UML_Time_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Expr));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Time_Expressions.UML_Time_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Time_Expressions.UML_Time_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Time_Expressions.UML_Time_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Time_Expression_Observation_A_Time_Expression then
            --  TimeExpression::observation : Observation

            return
              AMF.UML.Observations.Collections.UML_Observation_Collections.Internals.To_Holder
               (AMF.UML.Time_Expressions.UML_Time_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Observation);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Time_Expressions.UML_Time_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Time_Expressions.UML_Time_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Time_Expressions.UML_Time_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Time_Expressions.UML_Time_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Time_Expressions.UML_Time_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Time_Expressions.UML_Time_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Time_Expressions.UML_Time_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Time_Expressions.UML_Time_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Time_Expressions.UML_Time_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Time_Expression_Get;

      ---------------------------
      -- UML_Time_Interval_Get --
      ---------------------------

      function UML_Time_Interval_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Time_Intervals.UML_Time_Interval_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interval_Max_A_Interval then
            --  Interval::max : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Time_Intervals.UML_Time_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Max));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Time_Interval_Max_A_Time_Interval then
            --  TimeInterval::max : TimeExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Time_Expressions.UML_Time_Expression_Access'
                 (AMF.UML.Time_Intervals.UML_Time_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Max));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interval_Min_A_Interval then
            --  Interval::min : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Time_Intervals.UML_Time_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Min));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Time_Interval_Min_A_Time_Interval then
            --  TimeInterval::min : TimeExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Time_Expressions.UML_Time_Expression_Access'
                 (AMF.UML.Time_Intervals.UML_Time_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Min));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Time_Intervals.UML_Time_Interval_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Time_Intervals.UML_Time_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Time_Intervals.UML_Time_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Time_Intervals.UML_Time_Interval_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Time_Intervals.UML_Time_Interval_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Time_Intervals.UML_Time_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Time_Intervals.UML_Time_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Time_Intervals.UML_Time_Interval_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Time_Intervals.UML_Time_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Time_Intervals.UML_Time_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Time_Intervals.UML_Time_Interval_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Time_Intervals.UML_Time_Interval_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Time_Interval_Get;

      ------------------------------
      -- UML_Time_Observation_Get --
      ------------------------------

      function UML_Time_Observation_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Time_Observations.UML_Time_Observation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Time_Observation_Event_A_Time_Observation then
            --  TimeObservation::event : NamedElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Named_Elements.UML_Named_Element_Access'
                 (AMF.UML.Time_Observations.UML_Time_Observation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Event));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Time_Observation_First_Event then
            --  TimeObservation::firstEvent : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Time_Observations.UML_Time_Observation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_First_Event);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Time_Observations.UML_Time_Observation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Time_Observations.UML_Time_Observation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Time_Observations.UML_Time_Observation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Time_Observations.UML_Time_Observation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Time_Observations.UML_Time_Observation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Time_Observations.UML_Time_Observation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Time_Observations.UML_Time_Observation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Time_Observations.UML_Time_Observation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Time_Observations.UML_Time_Observation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Time_Observations.UML_Time_Observation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Time_Observations.UML_Time_Observation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Time_Observation_Get;

      ------------------------
      -- UML_Transition_Get --
      ------------------------

      function UML_Transition_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Transitions.UML_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Transition_Container_Region_Transition then
            --  Transition::container : Region

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Regions.UML_Region_Access'
                 (AMF.UML.Transitions.UML_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Container));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Transition_Effect_A_Transition then
            --  Transition::effect : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Transitions.UML_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Effect));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Transitions.UML_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Transition_Guard_A_Transition then
            --  Transition::guard : Constraint

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Constraints.UML_Constraint_Access'
                 (AMF.UML.Transitions.UML_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Guard));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Transitions.UML_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Transitions.UML_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Transition_Kind then
            --  Transition::kind : TransitionKind

            return
              AMF.UML.Holders.Transition_Kinds.To_Holder
               (AMF.UML.Transitions.UML_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Kind);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Transitions.UML_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Transitions.UML_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Transitions.UML_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Transitions.UML_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Transitions.UML_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Transitions.UML_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Transitions.UML_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Transitions.UML_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Transitions.UML_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Transitions.UML_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Transitions.UML_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Transitions.UML_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Transition_Redefined_Transition_A_Transition then
            --  Transition::redefinedTransition : Transition

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Transitions.UML_Transition_Access'
                 (AMF.UML.Transitions.UML_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Transition));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Transitions.UML_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Transition_Redefinition_Context_A_Transition then
            --  Transition::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Transitions.UML_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Transition_Source_Vertex_Outgoing then
            --  Transition::source : Vertex

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Vertexs.UML_Vertex_Access'
                 (AMF.UML.Transitions.UML_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Source));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Transition_Target_Vertex_Incoming then
            --  Transition::target : Vertex

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Vertexs.UML_Vertex_Access'
                 (AMF.UML.Transitions.UML_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Target));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Transition_Trigger_A_Transition then
            --  Transition::trigger : Trigger

            return
              AMF.UML.Triggers.Collections.UML_Trigger_Collections.Internals.To_Holder
               (AMF.UML.Transitions.UML_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Trigger);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Transitions.UML_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Transition_Get;

      ---------------------
      -- UML_Trigger_Get --
      ---------------------

      function UML_Trigger_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Triggers.UML_Trigger_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Trigger_Event_A_Trigger then
            --  Trigger::event : Event

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Events.UML_Event_Access'
                 (AMF.UML.Triggers.UML_Trigger_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Event));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Triggers.UML_Trigger_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Triggers.UML_Trigger_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Triggers.UML_Trigger_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Triggers.UML_Trigger_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Triggers.UML_Trigger_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Triggers.UML_Trigger_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Trigger_Port_A_Trigger then
            --  Trigger::port : Port

            return
              AMF.UML.Ports.Collections.UML_Port_Collections.Internals.To_Holder
               (AMF.UML.Triggers.UML_Trigger_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Port);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Triggers.UML_Trigger_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Triggers.UML_Trigger_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Trigger_Get;

      -------------------------------
      -- UML_Unmarshall_Action_Get --
      -------------------------------

      function UML_Unmarshall_Action_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Unmarshall_Action_Object_A_Unmarshall_Action then
            --  UnmarshallAction::object : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Object));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Unmarshall_Action_Result_A_Unmarshall_Action then
            --  UnmarshallAction::result : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Result);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Unmarshall_Action_Unmarshall_Type_A_Unmarshall_Action then
            --  UnmarshallAction::unmarshallType : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Unmarshall_Type));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Unmarshall_Action_Get;

      -------------------
      -- UML_Usage_Get --
      -------------------

      function UML_Usage_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Dependency_Client_Named_Element_Client_Dependency then
            --  Dependency::client : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Usages.UML_Usage_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Usages.UML_Usage_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Usages.UML_Usage_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Usages.UML_Usage_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Usages.UML_Usage_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Usages.UML_Usage_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Usages.UML_Usage_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Usages.UML_Usage_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Usages.UML_Usage_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Usages.UML_Usage_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Relationship_Related_Element_A_Relationship then
            --  Relationship::relatedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Usages.UML_Usage_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Directed_Relationship_Source_A_Directed_Relationship then
            --  DirectedRelationship::source : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Usages.UML_Usage_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Source);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Dependency_Supplier_A_Supplier_Dependency then
            --  Dependency::supplier : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Usages.UML_Usage_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Supplier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Directed_Relationship_Target_A_Directed_Relationship then
            --  DirectedRelationship::target : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Usages.UML_Usage_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Target);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Usages.UML_Usage_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Usages.UML_Usage_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Usages.UML_Usage_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Usage_Get;

      ----------------------
      -- UML_Use_Case_Get --
      ----------------------

      function UML_Use_Case_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Attribute_A_Classifier then
            --  Classifier::attribute : Property

            return
              AMF.UML.Properties.Collections.UML_Property_Collections.Internals.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Classifier_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::classifierBehavior : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier_Behavior));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Collaboration_Use_A_Classifier then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internals.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Element_Import_Element_Import_Importing_Namespace then
            --  Namespace::elementImport : ElementImport

            return
              AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internals.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Use_Case_Extend_Extend_Extension then
            --  UseCase::extend : Extend

            return
              AMF.UML.Extends.Collections.UML_Extend_Collections.Internals.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Extend);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Use_Case_Extension_Point_Extension_Point_Use_Case then
            --  UseCase::extensionPoint : ExtensionPoint

            return
              AMF.UML.Extension_Points.Collections.UML_Extension_Point_Collections.Internals.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Extension_Point);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Feature_Feature_Featuring_Classifier then
            --  Classifier::feature : Feature

            return
              AMF.UML.Features.Collections.UML_Feature_Collections.Internals.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Feature);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_General_A_Classifier then
            --  Classifier::general : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_General);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Generalization_Generalization_Specific then
            --  Classifier::generalization : Generalization

            return
              AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internals.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Imported_Member_A_Namespace then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internals.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Use_Case_Include_Include_Including_Case then
            --  UseCase::include : Include

            return
              AMF.UML.Includes.Collections.UML_Include_Collections.Internals.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Include);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Inherited_Member_A_Classifier then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Interface_Realization_Interface_Realization_Implementing_Classifier then
            --  BehavioredClassifier::interfaceRealization : InterfaceRealization

            return
              AMF.UML.Interface_Realizations.Collections.UML_Interface_Realization_Collections.Internals.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Interface_Realization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Member_A_Member_Namespace then
            --  Namespace::member : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Owned_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::ownedBehavior : Behavior

            return
              AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internals.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Behavior);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Member_Named_Element_Namespace then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internals.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Owned_Rule_Constraint_Context then
            --  Namespace::ownedRule : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Use_Case_A_Classifier then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Namespace_Package_Import_Package_Import_Importing_Namespace then
            --  Namespace::packageImport : PackageImport

            return
              AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internals.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Powertype_Extent_Generalization_Set_Powertype then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internals.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Redefined_Classifier_A_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Use_Case_Subject_Classifier_Use_Case then
            --  UseCase::subject : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Subject);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Substitution_Substitution_Substituting_Classifier then
            --  Classifier::substitution : Substitution

            return
              AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internals.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Template_Binding_Template_Binding_Bound_Element then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internals.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Use_Case_Use_Case_Subject then
            --  Classifier::useCase : UseCase

            return
              AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internals.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Use_Case_Get;

      -----------------------
      -- UML_Value_Pin_Get --
      -----------------------

      function UML_Value_Pin_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Value_Pins.UML_Value_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Value_Pins.UML_Value_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Value_Pins.UML_Value_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Value_Pins.UML_Value_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Value_Pins.UML_Value_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_In_State_A_Object_Node then
            --  ObjectNode::inState : State

            return
              AMF.UML.States.Collections.UML_State_Collections.Internals.To_Holder
               (AMF.UML.Value_Pins.UML_Value_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_State);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Value_Pins.UML_Value_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Value_Pins.UML_Value_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Pin_Is_Control then
            --  Pin::isControl : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Value_Pins.UML_Value_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Control);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Is_Control_Type then
            --  ObjectNode::isControlType : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Value_Pins.UML_Value_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Control_Type);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Value_Pins.UML_Value_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Is_Ordered then
            --  MultiplicityElement::isOrdered : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Value_Pins.UML_Value_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Ordered);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Is_Unique then
            --  MultiplicityElement::isUnique : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Value_Pins.UML_Value_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Unique);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Lower then
            --  MultiplicityElement::lower : Integer

            return
              AMF.Holders.To_Holder
               (AMF.UML.Value_Pins.UML_Value_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Lower);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Lower_Value_A_Owning_Lower then
            --  MultiplicityElement::lowerValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Value_Pins.UML_Value_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Lower_Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Value_Pins.UML_Value_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Value_Pins.UML_Value_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Value_Pins.UML_Value_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Ordering then
            --  ObjectNode::ordering : ObjectNodeOrderingKind

            return
              AMF.UML.Holders.Object_Node_Ordering_Kinds.To_Holder
               (AMF.UML.Value_Pins.UML_Value_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Ordering);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Value_Pins.UML_Value_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Value_Pins.UML_Value_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Value_Pins.UML_Value_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Value_Pins.UML_Value_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Value_Pins.UML_Value_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Value_Pins.UML_Value_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Value_Pins.UML_Value_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Value_Pins.UML_Value_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Selection_A_Object_Node then
            --  ObjectNode::selection : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Value_Pins.UML_Value_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Selection));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Value_Pins.UML_Value_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Upper then
            --  MultiplicityElement::upper : UnlimitedNatural

            return
              AMF.Holders.To_Holder
               (AMF.UML.Value_Pins.UML_Value_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Upper);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Upper_Bound_A_Object_Node then
            --  ObjectNode::upperBound : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Value_Pins.UML_Value_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Upper_Bound));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Upper_Value_A_Owning_Upper then
            --  MultiplicityElement::upperValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Value_Pins.UML_Value_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Upper_Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Value_Pin_Value_A_Value_Pin then
            --  ValuePin::value : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Value_Pins.UML_Value_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Value_Pins.UML_Value_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Value_Pin_Get;

      ----------------------------------------
      -- UML_Value_Specification_Action_Get --
      ----------------------------------------

      function UML_Value_Specification_Action_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Context_A_Action then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Executable_Node_Handler_Exception_Handler_Protected_Node then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internals.To_Holder
               (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Handler);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Group_Activity_Group_Contained_Node then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internals.To_Holder
               (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Interruptible_Region_Interruptible_Activity_Region_Node then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internals.To_Holder
               (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Partition_Activity_Partition_Node then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internals.To_Holder
               (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Incoming_Activity_Edge_Target then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_A_Action then
            --  Action::input : InputPin

            return
              AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internals.To_Holder
               (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Input);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Postcondition_A_Action then
            --  Action::localPostcondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Local_Precondition_A_Action then
            --  Action::localPrecondition : Constraint

            return
              AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internals.To_Holder
               (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Outgoing_Activity_Edge_Source then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internals.To_Holder
               (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Output_A_Action then
            --  Action::output : OutputPin

            return
              AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internals.To_Holder
               (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Output);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefined_Element_A_Redefinable_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internals.To_Holder
               (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Redefined_Node_A_Activity_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internals.To_Holder
               (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Redefinition_Context_A_Redefinable_Element then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internals.To_Holder
               (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Value_Specification_Action_Result_A_Value_Specification_Action then
            --  ValueSpecificationAction::result : OutputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access'
                 (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Value_Specification_Action_Value_A_Value_Specification_Action then
            --  ValueSpecificationAction::value : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Value_Specification_Action_Get;

      ----------------------
      -- UML_Variable_Get --
      ----------------------

      function UML_Variable_Get return League.Holders.Holder is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Variable_Activity_Scope_Activity_Variable then
            --  Variable::activityScope : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Variables.UML_Variable_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity_Scope));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Client_Dependency_Dependency_Client then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internals.To_Holder
               (AMF.UML.Variables.UML_Variable_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Connectable_Element_End_Connector_End_Role then
            --  ConnectableElement::end : ConnectorEnd

            return
              AMF.UML.Connector_Ends.Collections.UML_Connector_End_Collections.Internals.To_Holder
               (AMF.UML.Variables.UML_Variable_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_End);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Is_Ordered then
            --  MultiplicityElement::isOrdered : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Variables.UML_Variable_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Ordered);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Is_Unique then
            --  MultiplicityElement::isUnique : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Variables.UML_Variable_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Unique);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Lower then
            --  MultiplicityElement::lower : Integer

            return
              AMF.Holders.To_Holder
               (AMF.UML.Variables.UML_Variable_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Lower);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Lower_Value_A_Owning_Lower then
            --  MultiplicityElement::lowerValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Variables.UML_Variable_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Lower_Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Variables.UML_Variable_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Variables.UML_Variable_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Namespace_Namespace_Owned_Member then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Variables.UML_Variable_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Comment_A_Owning_Element then
            --  Element::ownedComment : Comment

            return
              AMF.UML.Comments.Collections.UML_Comment_Collections.Internals.To_Holder
               (AMF.UML.Variables.UML_Variable_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owned_Element_Element_Owner then
            --  Element::ownedElement : Element

            return
              AMF.UML.Elements.Collections.UML_Element_Collections.Internals.To_Holder
               (AMF.UML.Variables.UML_Variable_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Owner_Element_Owned_Element then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Variables.UML_Variable_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Variables.UML_Variable_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Variables.UML_Variable_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Variable_Scope_Structured_Activity_Node_Variable then
            --  Variable::scope : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Variables.UML_Variable_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Scope));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Connectable_Element_Template_Parameter_Connectable_Element_Template_Parameter_Parametered_Element then
            --  ConnectableElement::templateParameter : ConnectableElementTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access'
                 (AMF.UML.Variables.UML_Variable_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Variables.UML_Variable_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Variables.UML_Variable_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Upper then
            --  MultiplicityElement::upper : UnlimitedNatural

            return
              AMF.Holders.To_Holder
               (AMF.UML.Variables.UML_Variable_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Upper);

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Upper_Value_A_Owning_Upper then
            --  MultiplicityElement::upperValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Variables.UML_Variable_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Upper_Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Variables.UML_Variable_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end UML_Variable_Get;

   begin
      case AMF.Internals.Tables.UML_Element_Table.Table (Self).Kind is
         when AMF.Internals.Tables.UML_Types.E_None =>
            raise Program_Error;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Auxiliary =>
            return Standard_Profile_L2_Auxiliary_Get;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Call =>
            return Standard_Profile_L2_Call_Get;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Create =>
            return Standard_Profile_L2_Create_Get;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Derive =>
            return Standard_Profile_L2_Derive_Get;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Destroy =>
            return Standard_Profile_L2_Destroy_Get;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Document =>
            return Standard_Profile_L2_Document_Get;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Entity =>
            return Standard_Profile_L2_Entity_Get;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Executable =>
            return Standard_Profile_L2_Executable_Get;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Focus =>
            return Standard_Profile_L2_Focus_Get;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Framework =>
            return Standard_Profile_L2_Framework_Get;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Implement =>
            return Standard_Profile_L2_Implement_Get;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Implementation_Class =>
            return Standard_Profile_L2_Implementation_Class_Get;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Instantiate =>
            return Standard_Profile_L2_Instantiate_Get;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Library =>
            return Standard_Profile_L2_Library_Get;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Metaclass =>
            return Standard_Profile_L2_Metaclass_Get;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Model_Library =>
            return Standard_Profile_L2_Model_Library_Get;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Process =>
            return Standard_Profile_L2_Process_Get;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Realization =>
            return Standard_Profile_L2_Realization_Get;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Refine =>
            return Standard_Profile_L2_Refine_Get;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Responsibility =>
            return Standard_Profile_L2_Responsibility_Get;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Script =>
            return Standard_Profile_L2_Script_Get;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Send =>
            return Standard_Profile_L2_Send_Get;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Service =>
            return Standard_Profile_L2_Service_Get;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Source =>
            return Standard_Profile_L2_Source_Get;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Specification =>
            return Standard_Profile_L2_Specification_Get;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Subsystem =>
            return Standard_Profile_L2_Subsystem_Get;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Trace =>
            return Standard_Profile_L2_Trace_Get;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Type =>
            return Standard_Profile_L2_Type_Get;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Utility =>
            return Standard_Profile_L2_Utility_Get;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L3_Build_Component =>
            return Standard_Profile_L3_Build_Component_Get;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L3_Metamodel =>
            return Standard_Profile_L3_Metamodel_Get;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L3_System_Model =>
            return Standard_Profile_L3_System_Model_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Abstraction =>
            return UML_Abstraction_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Accept_Call_Action =>
            return UML_Accept_Call_Action_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Accept_Event_Action =>
            return UML_Accept_Event_Action_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Action_Execution_Specification =>
            return UML_Action_Execution_Specification_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Action_Input_Pin =>
            return UML_Action_Input_Pin_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Activity =>
            return UML_Activity_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Activity_Final_Node =>
            return UML_Activity_Final_Node_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Activity_Parameter_Node =>
            return UML_Activity_Parameter_Node_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Activity_Partition =>
            return UML_Activity_Partition_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Actor =>
            return UML_Actor_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Add_Structural_Feature_Value_Action =>
            return UML_Add_Structural_Feature_Value_Action_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Add_Variable_Value_Action =>
            return UML_Add_Variable_Value_Action_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Any_Receive_Event =>
            return UML_Any_Receive_Event_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Artifact =>
            return UML_Artifact_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Association =>
            return UML_Association_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Association_Class =>
            return UML_Association_Class_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Behavior_Execution_Specification =>
            return UML_Behavior_Execution_Specification_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Broadcast_Signal_Action =>
            return UML_Broadcast_Signal_Action_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Call_Behavior_Action =>
            return UML_Call_Behavior_Action_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Call_Event =>
            return UML_Call_Event_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Call_Operation_Action =>
            return UML_Call_Operation_Action_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Central_Buffer_Node =>
            return UML_Central_Buffer_Node_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Change_Event =>
            return UML_Change_Event_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Class =>
            return UML_Class_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Classifier_Template_Parameter =>
            return UML_Classifier_Template_Parameter_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Clause =>
            return UML_Clause_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Clear_Association_Action =>
            return UML_Clear_Association_Action_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Clear_Structural_Feature_Action =>
            return UML_Clear_Structural_Feature_Action_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Clear_Variable_Action =>
            return UML_Clear_Variable_Action_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Collaboration =>
            return UML_Collaboration_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Collaboration_Use =>
            return UML_Collaboration_Use_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Combined_Fragment =>
            return UML_Combined_Fragment_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Comment =>
            return UML_Comment_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Communication_Path =>
            return UML_Communication_Path_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Component =>
            return UML_Component_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Component_Realization =>
            return UML_Component_Realization_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Conditional_Node =>
            return UML_Conditional_Node_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Connectable_Element_Template_Parameter =>
            return UML_Connectable_Element_Template_Parameter_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Connection_Point_Reference =>
            return UML_Connection_Point_Reference_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Connector =>
            return UML_Connector_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Connector_End =>
            return UML_Connector_End_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Consider_Ignore_Fragment =>
            return UML_Consider_Ignore_Fragment_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Constraint =>
            return UML_Constraint_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Continuation =>
            return UML_Continuation_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Control_Flow =>
            return UML_Control_Flow_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Create_Link_Action =>
            return UML_Create_Link_Action_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Create_Link_Object_Action =>
            return UML_Create_Link_Object_Action_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Create_Object_Action =>
            return UML_Create_Object_Action_Get;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Activity_Diagram =>
            return UMLDI_UML_Activity_Diagram_Get;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Association_End_Label =>
            return UMLDI_UML_Association_End_Label_Get;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Association_Or_Connector_Or_Link_Shape =>
            return UMLDI_UML_Association_Or_Connector_Or_Link_Shape_Get;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Class_Diagram =>
            return UMLDI_UML_Class_Diagram_Get;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Classifier_Shape =>
            return UMLDI_UML_Classifier_Shape_Get;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Compartment =>
            return UMLDI_UML_Compartment_Get;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Compartmentable_Shape =>
            return UMLDI_UML_Compartmentable_Shape_Get;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Component_Diagram =>
            return UMLDI_UML_Component_Diagram_Get;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Composite_Structure_Diagram =>
            return UMLDI_UML_Composite_Structure_Diagram_Get;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Deployment_Diagram =>
            return UMLDI_UML_Deployment_Diagram_Get;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Edge =>
            return UMLDI_UML_Edge_Get;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Interaction_Diagram =>
            return UMLDI_UML_Interaction_Diagram_Get;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Interaction_Table_Label =>
            return UMLDI_UML_Interaction_Table_Label_Get;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Keyword_Label =>
            return UMLDI_UML_Keyword_Label_Get;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Label =>
            return UMLDI_UML_Label_Get;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Multiplicity_Label =>
            return UMLDI_UML_Multiplicity_Label_Get;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Name_Label =>
            return UMLDI_UML_Name_Label_Get;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Object_Diagram =>
            return UMLDI_UML_Object_Diagram_Get;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Package_Diagram =>
            return UMLDI_UML_Package_Diagram_Get;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Profile_Diagram =>
            return UMLDI_UML_Profile_Diagram_Get;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Redefines_Label =>
            return UMLDI_UML_Redefines_Label_Get;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Shape =>
            return UMLDI_UML_Shape_Get;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_State_Machine_Diagram =>
            return UMLDI_UML_State_Machine_Diagram_Get;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_State_Shape =>
            return UMLDI_UML_State_Shape_Get;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Stereotype_Property_Value_Label =>
            return UMLDI_UML_Stereotype_Property_Value_Label_Get;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Style =>
            return UMLDI_UML_Style_Get;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Typed_Element_Label =>
            return UMLDI_UML_Typed_Element_Label_Get;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Use_Case_Diagram =>
            return UMLDI_UML_Use_Case_Diagram_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Data_Store_Node =>
            return UML_Data_Store_Node_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Data_Type =>
            return UML_Data_Type_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Decision_Node =>
            return UML_Decision_Node_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Dependency =>
            return UML_Dependency_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Deployment =>
            return UML_Deployment_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Deployment_Specification =>
            return UML_Deployment_Specification_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Destroy_Link_Action =>
            return UML_Destroy_Link_Action_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Destroy_Object_Action =>
            return UML_Destroy_Object_Action_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Destruction_Occurrence_Specification =>
            return UML_Destruction_Occurrence_Specification_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Device =>
            return UML_Device_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Duration =>
            return UML_Duration_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Duration_Constraint =>
            return UML_Duration_Constraint_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Duration_Interval =>
            return UML_Duration_Interval_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Duration_Observation =>
            return UML_Duration_Observation_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Element_Import =>
            return UML_Element_Import_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Enumeration =>
            return UML_Enumeration_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Enumeration_Literal =>
            return UML_Enumeration_Literal_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Exception_Handler =>
            return UML_Exception_Handler_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Execution_Environment =>
            return UML_Execution_Environment_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Execution_Occurrence_Specification =>
            return UML_Execution_Occurrence_Specification_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Expansion_Node =>
            return UML_Expansion_Node_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Expansion_Region =>
            return UML_Expansion_Region_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Expression =>
            return UML_Expression_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Extend =>
            return UML_Extend_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Extension =>
            return UML_Extension_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Extension_End =>
            return UML_Extension_End_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Extension_Point =>
            return UML_Extension_Point_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Final_State =>
            return UML_Final_State_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Flow_Final_Node =>
            return UML_Flow_Final_Node_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Fork_Node =>
            return UML_Fork_Node_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Function_Behavior =>
            return UML_Function_Behavior_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Gate =>
            return UML_Gate_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_General_Ordering =>
            return UML_General_Ordering_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Generalization =>
            return UML_Generalization_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Generalization_Set =>
            return UML_Generalization_Set_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Image =>
            return UML_Image_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Include =>
            return UML_Include_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Information_Flow =>
            return UML_Information_Flow_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Information_Item =>
            return UML_Information_Item_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Initial_Node =>
            return UML_Initial_Node_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Input_Pin =>
            return UML_Input_Pin_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Instance_Specification =>
            return UML_Instance_Specification_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Instance_Value =>
            return UML_Instance_Value_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Interaction =>
            return UML_Interaction_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Interaction_Constraint =>
            return UML_Interaction_Constraint_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Interaction_Operand =>
            return UML_Interaction_Operand_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Interaction_Use =>
            return UML_Interaction_Use_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Interface =>
            return UML_Interface_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Interface_Realization =>
            return UML_Interface_Realization_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Interruptible_Activity_Region =>
            return UML_Interruptible_Activity_Region_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Interval =>
            return UML_Interval_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Interval_Constraint =>
            return UML_Interval_Constraint_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Join_Node =>
            return UML_Join_Node_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Lifeline =>
            return UML_Lifeline_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Link_End_Creation_Data =>
            return UML_Link_End_Creation_Data_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Link_End_Data =>
            return UML_Link_End_Data_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Link_End_Destruction_Data =>
            return UML_Link_End_Destruction_Data_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Literal_Boolean =>
            return UML_Literal_Boolean_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Literal_Integer =>
            return UML_Literal_Integer_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Literal_Null =>
            return UML_Literal_Null_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Literal_Real =>
            return UML_Literal_Real_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Literal_String =>
            return UML_Literal_String_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Literal_Unlimited_Natural =>
            return UML_Literal_Unlimited_Natural_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Loop_Node =>
            return UML_Loop_Node_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Manifestation =>
            return UML_Manifestation_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Merge_Node =>
            return UML_Merge_Node_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Message =>
            return UML_Message_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Message_Occurrence_Specification =>
            return UML_Message_Occurrence_Specification_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Model =>
            return UML_Model_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Node =>
            return UML_Node_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Object_Flow =>
            return UML_Object_Flow_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Occurrence_Specification =>
            return UML_Occurrence_Specification_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Opaque_Action =>
            return UML_Opaque_Action_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Opaque_Behavior =>
            return UML_Opaque_Behavior_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Opaque_Expression =>
            return UML_Opaque_Expression_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Operation =>
            return UML_Operation_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Operation_Template_Parameter =>
            return UML_Operation_Template_Parameter_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Output_Pin =>
            return UML_Output_Pin_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Package =>
            return UML_Package_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Package_Import =>
            return UML_Package_Import_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Package_Merge =>
            return UML_Package_Merge_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Parameter =>
            return UML_Parameter_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Parameter_Set =>
            return UML_Parameter_Set_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Part_Decomposition =>
            return UML_Part_Decomposition_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Port =>
            return UML_Port_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Primitive_Type =>
            return UML_Primitive_Type_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Profile =>
            return UML_Profile_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Profile_Application =>
            return UML_Profile_Application_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Property =>
            return UML_Property_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Protocol_Conformance =>
            return UML_Protocol_Conformance_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Protocol_State_Machine =>
            return UML_Protocol_State_Machine_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Protocol_Transition =>
            return UML_Protocol_Transition_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Pseudostate =>
            return UML_Pseudostate_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Qualifier_Value =>
            return UML_Qualifier_Value_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Raise_Exception_Action =>
            return UML_Raise_Exception_Action_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Read_Extent_Action =>
            return UML_Read_Extent_Action_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Read_Is_Classified_Object_Action =>
            return UML_Read_Is_Classified_Object_Action_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Read_Link_Action =>
            return UML_Read_Link_Action_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Read_Link_Object_End_Action =>
            return UML_Read_Link_Object_End_Action_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Read_Link_Object_End_Qualifier_Action =>
            return UML_Read_Link_Object_End_Qualifier_Action_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Read_Self_Action =>
            return UML_Read_Self_Action_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Read_Structural_Feature_Action =>
            return UML_Read_Structural_Feature_Action_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Read_Variable_Action =>
            return UML_Read_Variable_Action_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Realization =>
            return UML_Realization_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Reception =>
            return UML_Reception_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Reclassify_Object_Action =>
            return UML_Reclassify_Object_Action_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Redefinable_Template_Signature =>
            return UML_Redefinable_Template_Signature_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Reduce_Action =>
            return UML_Reduce_Action_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Region =>
            return UML_Region_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Remove_Structural_Feature_Value_Action =>
            return UML_Remove_Structural_Feature_Value_Action_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Remove_Variable_Value_Action =>
            return UML_Remove_Variable_Value_Action_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Reply_Action =>
            return UML_Reply_Action_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Send_Object_Action =>
            return UML_Send_Object_Action_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Send_Signal_Action =>
            return UML_Send_Signal_Action_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Sequence_Node =>
            return UML_Sequence_Node_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Signal =>
            return UML_Signal_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Signal_Event =>
            return UML_Signal_Event_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Slot =>
            return UML_Slot_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Start_Classifier_Behavior_Action =>
            return UML_Start_Classifier_Behavior_Action_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Start_Object_Behavior_Action =>
            return UML_Start_Object_Behavior_Action_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_State =>
            return UML_State_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_State_Invariant =>
            return UML_State_Invariant_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_State_Machine =>
            return UML_State_Machine_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Stereotype =>
            return UML_Stereotype_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_String_Expression =>
            return UML_String_Expression_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Structured_Activity_Node =>
            return UML_Structured_Activity_Node_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Substitution =>
            return UML_Substitution_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Template_Binding =>
            return UML_Template_Binding_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Template_Parameter =>
            return UML_Template_Parameter_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Template_Parameter_Substitution =>
            return UML_Template_Parameter_Substitution_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Template_Signature =>
            return UML_Template_Signature_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Test_Identity_Action =>
            return UML_Test_Identity_Action_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Time_Constraint =>
            return UML_Time_Constraint_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Time_Event =>
            return UML_Time_Event_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Time_Expression =>
            return UML_Time_Expression_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Time_Interval =>
            return UML_Time_Interval_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Time_Observation =>
            return UML_Time_Observation_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Transition =>
            return UML_Transition_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Trigger =>
            return UML_Trigger_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Unmarshall_Action =>
            return UML_Unmarshall_Action_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Usage =>
            return UML_Usage_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Use_Case =>
            return UML_Use_Case_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Value_Pin =>
            return UML_Value_Pin_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Value_Specification_Action =>
            return UML_Value_Specification_Action_Get;

         when AMF.Internals.Tables.UML_Types.E_UML_Variable =>
            return UML_Variable_Get;
      end case;
   end Get;

   --------------------
   -- Get_Meta_Class --
   --------------------

   function Get_Meta_Class
    (Self : AMF.Internals.AMF_Element) return CMOF_Element is
   begin
      case UML_Element_Table.Table (Self).Kind is
         when AMF.Internals.Tables.UML_Types.E_None =>
            return 0;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Auxiliary =>
            return AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MC_Standard_Profile_L2_Auxiliary;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Call =>
            return AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MC_Standard_Profile_L2_Call;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Create =>
            return AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MC_Standard_Profile_L2_Create;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Derive =>
            return AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MC_Standard_Profile_L2_Derive;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Destroy =>
            return AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MC_Standard_Profile_L2_Destroy;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Document =>
            return AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MC_Standard_Profile_L2_Document;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Entity =>
            return AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MC_Standard_Profile_L2_Entity;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Executable =>
            return AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MC_Standard_Profile_L2_Executable;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Focus =>
            return AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MC_Standard_Profile_L2_Focus;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Framework =>
            return AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MC_Standard_Profile_L2_Framework;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Implement =>
            return AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MC_Standard_Profile_L2_Implement;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Implementation_Class =>
            return AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MC_Standard_Profile_L2_Implementation_Class;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Instantiate =>
            return AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MC_Standard_Profile_L2_Instantiate;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Library =>
            return AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MC_Standard_Profile_L2_Library;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Metaclass =>
            return AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MC_Standard_Profile_L2_Metaclass;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Model_Library =>
            return AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MC_Standard_Profile_L2_Model_Library;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Process =>
            return AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MC_Standard_Profile_L2_Process;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Realization =>
            return AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MC_Standard_Profile_L2_Realization;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Refine =>
            return AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MC_Standard_Profile_L2_Refine;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Responsibility =>
            return AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MC_Standard_Profile_L2_Responsibility;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Script =>
            return AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MC_Standard_Profile_L2_Script;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Send =>
            return AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MC_Standard_Profile_L2_Send;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Service =>
            return AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MC_Standard_Profile_L2_Service;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Source =>
            return AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MC_Standard_Profile_L2_Source;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Specification =>
            return AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MC_Standard_Profile_L2_Specification;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Subsystem =>
            return AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MC_Standard_Profile_L2_Subsystem;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Trace =>
            return AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MC_Standard_Profile_L2_Trace;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Type =>
            return AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MC_Standard_Profile_L2_Type;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Utility =>
            return AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MC_Standard_Profile_L2_Utility;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L3_Build_Component =>
            return AMF.Internals.Tables.Standard_Profile_L3_Metamodel.MC_Standard_Profile_L3_Build_Component;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L3_Metamodel =>
            return AMF.Internals.Tables.Standard_Profile_L3_Metamodel.MC_Standard_Profile_L3_Metamodel;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L3_System_Model =>
            return AMF.Internals.Tables.Standard_Profile_L3_Metamodel.MC_Standard_Profile_L3_System_Model;

         when AMF.Internals.Tables.UML_Types.E_UML_Abstraction =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Abstraction;

         when AMF.Internals.Tables.UML_Types.E_UML_Accept_Call_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Accept_Call_Action;

         when AMF.Internals.Tables.UML_Types.E_UML_Accept_Event_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Accept_Event_Action;

         when AMF.Internals.Tables.UML_Types.E_UML_Action_Execution_Specification =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Action_Execution_Specification;

         when AMF.Internals.Tables.UML_Types.E_UML_Action_Input_Pin =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Action_Input_Pin;

         when AMF.Internals.Tables.UML_Types.E_UML_Activity =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Activity;

         when AMF.Internals.Tables.UML_Types.E_UML_Activity_Final_Node =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Activity_Final_Node;

         when AMF.Internals.Tables.UML_Types.E_UML_Activity_Parameter_Node =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Activity_Parameter_Node;

         when AMF.Internals.Tables.UML_Types.E_UML_Activity_Partition =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Activity_Partition;

         when AMF.Internals.Tables.UML_Types.E_UML_Actor =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Actor;

         when AMF.Internals.Tables.UML_Types.E_UML_Add_Structural_Feature_Value_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Add_Structural_Feature_Value_Action;

         when AMF.Internals.Tables.UML_Types.E_UML_Add_Variable_Value_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Add_Variable_Value_Action;

         when AMF.Internals.Tables.UML_Types.E_UML_Any_Receive_Event =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Any_Receive_Event;

         when AMF.Internals.Tables.UML_Types.E_UML_Artifact =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Artifact;

         when AMF.Internals.Tables.UML_Types.E_UML_Association =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Association;

         when AMF.Internals.Tables.UML_Types.E_UML_Association_Class =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Association_Class;

         when AMF.Internals.Tables.UML_Types.E_UML_Behavior_Execution_Specification =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Behavior_Execution_Specification;

         when AMF.Internals.Tables.UML_Types.E_UML_Broadcast_Signal_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Broadcast_Signal_Action;

         when AMF.Internals.Tables.UML_Types.E_UML_Call_Behavior_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Call_Behavior_Action;

         when AMF.Internals.Tables.UML_Types.E_UML_Call_Event =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Call_Event;

         when AMF.Internals.Tables.UML_Types.E_UML_Call_Operation_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Call_Operation_Action;

         when AMF.Internals.Tables.UML_Types.E_UML_Central_Buffer_Node =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Central_Buffer_Node;

         when AMF.Internals.Tables.UML_Types.E_UML_Change_Event =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Change_Event;

         when AMF.Internals.Tables.UML_Types.E_UML_Class =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Class;

         when AMF.Internals.Tables.UML_Types.E_UML_Classifier_Template_Parameter =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Classifier_Template_Parameter;

         when AMF.Internals.Tables.UML_Types.E_UML_Clause =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Clause;

         when AMF.Internals.Tables.UML_Types.E_UML_Clear_Association_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Clear_Association_Action;

         when AMF.Internals.Tables.UML_Types.E_UML_Clear_Structural_Feature_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Clear_Structural_Feature_Action;

         when AMF.Internals.Tables.UML_Types.E_UML_Clear_Variable_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Clear_Variable_Action;

         when AMF.Internals.Tables.UML_Types.E_UML_Collaboration =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Collaboration;

         when AMF.Internals.Tables.UML_Types.E_UML_Collaboration_Use =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Collaboration_Use;

         when AMF.Internals.Tables.UML_Types.E_UML_Combined_Fragment =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Combined_Fragment;

         when AMF.Internals.Tables.UML_Types.E_UML_Comment =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Comment;

         when AMF.Internals.Tables.UML_Types.E_UML_Communication_Path =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Communication_Path;

         when AMF.Internals.Tables.UML_Types.E_UML_Component =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Component;

         when AMF.Internals.Tables.UML_Types.E_UML_Component_Realization =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Component_Realization;

         when AMF.Internals.Tables.UML_Types.E_UML_Conditional_Node =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Conditional_Node;

         when AMF.Internals.Tables.UML_Types.E_UML_Connectable_Element_Template_Parameter =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Connectable_Element_Template_Parameter;

         when AMF.Internals.Tables.UML_Types.E_UML_Connection_Point_Reference =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Connection_Point_Reference;

         when AMF.Internals.Tables.UML_Types.E_UML_Connector =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Connector;

         when AMF.Internals.Tables.UML_Types.E_UML_Connector_End =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Connector_End;

         when AMF.Internals.Tables.UML_Types.E_UML_Consider_Ignore_Fragment =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Consider_Ignore_Fragment;

         when AMF.Internals.Tables.UML_Types.E_UML_Constraint =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Constraint;

         when AMF.Internals.Tables.UML_Types.E_UML_Continuation =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Continuation;

         when AMF.Internals.Tables.UML_Types.E_UML_Control_Flow =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Control_Flow;

         when AMF.Internals.Tables.UML_Types.E_UML_Create_Link_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Create_Link_Action;

         when AMF.Internals.Tables.UML_Types.E_UML_Create_Link_Object_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Create_Link_Object_Action;

         when AMF.Internals.Tables.UML_Types.E_UML_Create_Object_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Create_Object_Action;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Activity_Diagram =>
            return AMF.Internals.Tables.UMLDI_Metamodel.MC_UMLDI_UML_Activity_Diagram;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Association_End_Label =>
            return AMF.Internals.Tables.UMLDI_Metamodel.MC_UMLDI_UML_Association_End_Label;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Association_Or_Connector_Or_Link_Shape =>
            return AMF.Internals.Tables.UMLDI_Metamodel.MC_UMLDI_UML_Association_Or_Connector_Or_Link_Shape;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Class_Diagram =>
            return AMF.Internals.Tables.UMLDI_Metamodel.MC_UMLDI_UML_Class_Diagram;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Classifier_Shape =>
            return AMF.Internals.Tables.UMLDI_Metamodel.MC_UMLDI_UML_Classifier_Shape;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Compartment =>
            return AMF.Internals.Tables.UMLDI_Metamodel.MC_UMLDI_UML_Compartment;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Compartmentable_Shape =>
            return AMF.Internals.Tables.UMLDI_Metamodel.MC_UMLDI_UML_Compartmentable_Shape;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Component_Diagram =>
            return AMF.Internals.Tables.UMLDI_Metamodel.MC_UMLDI_UML_Component_Diagram;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Composite_Structure_Diagram =>
            return AMF.Internals.Tables.UMLDI_Metamodel.MC_UMLDI_UML_Composite_Structure_Diagram;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Deployment_Diagram =>
            return AMF.Internals.Tables.UMLDI_Metamodel.MC_UMLDI_UML_Deployment_Diagram;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Edge =>
            return AMF.Internals.Tables.UMLDI_Metamodel.MC_UMLDI_UML_Edge;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Interaction_Diagram =>
            return AMF.Internals.Tables.UMLDI_Metamodel.MC_UMLDI_UML_Interaction_Diagram;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Interaction_Table_Label =>
            return AMF.Internals.Tables.UMLDI_Metamodel.MC_UMLDI_UML_Interaction_Table_Label;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Keyword_Label =>
            return AMF.Internals.Tables.UMLDI_Metamodel.MC_UMLDI_UML_Keyword_Label;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Label =>
            return AMF.Internals.Tables.UMLDI_Metamodel.MC_UMLDI_UML_Label;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Multiplicity_Label =>
            return AMF.Internals.Tables.UMLDI_Metamodel.MC_UMLDI_UML_Multiplicity_Label;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Name_Label =>
            return AMF.Internals.Tables.UMLDI_Metamodel.MC_UMLDI_UML_Name_Label;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Object_Diagram =>
            return AMF.Internals.Tables.UMLDI_Metamodel.MC_UMLDI_UML_Object_Diagram;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Package_Diagram =>
            return AMF.Internals.Tables.UMLDI_Metamodel.MC_UMLDI_UML_Package_Diagram;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Profile_Diagram =>
            return AMF.Internals.Tables.UMLDI_Metamodel.MC_UMLDI_UML_Profile_Diagram;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Redefines_Label =>
            return AMF.Internals.Tables.UMLDI_Metamodel.MC_UMLDI_UML_Redefines_Label;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Shape =>
            return AMF.Internals.Tables.UMLDI_Metamodel.MC_UMLDI_UML_Shape;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_State_Machine_Diagram =>
            return AMF.Internals.Tables.UMLDI_Metamodel.MC_UMLDI_UML_State_Machine_Diagram;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_State_Shape =>
            return AMF.Internals.Tables.UMLDI_Metamodel.MC_UMLDI_UML_State_Shape;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Stereotype_Property_Value_Label =>
            return AMF.Internals.Tables.UMLDI_Metamodel.MC_UMLDI_UML_Stereotype_Property_Value_Label;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Style =>
            return AMF.Internals.Tables.UMLDI_Metamodel.MC_UMLDI_UML_Style;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Typed_Element_Label =>
            return AMF.Internals.Tables.UMLDI_Metamodel.MC_UMLDI_UML_Typed_Element_Label;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Use_Case_Diagram =>
            return AMF.Internals.Tables.UMLDI_Metamodel.MC_UMLDI_UML_Use_Case_Diagram;

         when AMF.Internals.Tables.UML_Types.E_UML_Data_Store_Node =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Data_Store_Node;

         when AMF.Internals.Tables.UML_Types.E_UML_Data_Type =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Data_Type;

         when AMF.Internals.Tables.UML_Types.E_UML_Decision_Node =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Decision_Node;

         when AMF.Internals.Tables.UML_Types.E_UML_Dependency =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Dependency;

         when AMF.Internals.Tables.UML_Types.E_UML_Deployment =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Deployment;

         when AMF.Internals.Tables.UML_Types.E_UML_Deployment_Specification =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Deployment_Specification;

         when AMF.Internals.Tables.UML_Types.E_UML_Destroy_Link_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Destroy_Link_Action;

         when AMF.Internals.Tables.UML_Types.E_UML_Destroy_Object_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Destroy_Object_Action;

         when AMF.Internals.Tables.UML_Types.E_UML_Destruction_Occurrence_Specification =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Destruction_Occurrence_Specification;

         when AMF.Internals.Tables.UML_Types.E_UML_Device =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Device;

         when AMF.Internals.Tables.UML_Types.E_UML_Duration =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Duration;

         when AMF.Internals.Tables.UML_Types.E_UML_Duration_Constraint =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Duration_Constraint;

         when AMF.Internals.Tables.UML_Types.E_UML_Duration_Interval =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Duration_Interval;

         when AMF.Internals.Tables.UML_Types.E_UML_Duration_Observation =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Duration_Observation;

         when AMF.Internals.Tables.UML_Types.E_UML_Element_Import =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Element_Import;

         when AMF.Internals.Tables.UML_Types.E_UML_Enumeration =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Enumeration;

         when AMF.Internals.Tables.UML_Types.E_UML_Enumeration_Literal =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Enumeration_Literal;

         when AMF.Internals.Tables.UML_Types.E_UML_Exception_Handler =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Exception_Handler;

         when AMF.Internals.Tables.UML_Types.E_UML_Execution_Environment =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Execution_Environment;

         when AMF.Internals.Tables.UML_Types.E_UML_Execution_Occurrence_Specification =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Execution_Occurrence_Specification;

         when AMF.Internals.Tables.UML_Types.E_UML_Expansion_Node =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Expansion_Node;

         when AMF.Internals.Tables.UML_Types.E_UML_Expansion_Region =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Expansion_Region;

         when AMF.Internals.Tables.UML_Types.E_UML_Expression =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Expression;

         when AMF.Internals.Tables.UML_Types.E_UML_Extend =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Extend;

         when AMF.Internals.Tables.UML_Types.E_UML_Extension =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Extension;

         when AMF.Internals.Tables.UML_Types.E_UML_Extension_End =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Extension_End;

         when AMF.Internals.Tables.UML_Types.E_UML_Extension_Point =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Extension_Point;

         when AMF.Internals.Tables.UML_Types.E_UML_Final_State =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Final_State;

         when AMF.Internals.Tables.UML_Types.E_UML_Flow_Final_Node =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Flow_Final_Node;

         when AMF.Internals.Tables.UML_Types.E_UML_Fork_Node =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Fork_Node;

         when AMF.Internals.Tables.UML_Types.E_UML_Function_Behavior =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Function_Behavior;

         when AMF.Internals.Tables.UML_Types.E_UML_Gate =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Gate;

         when AMF.Internals.Tables.UML_Types.E_UML_General_Ordering =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_General_Ordering;

         when AMF.Internals.Tables.UML_Types.E_UML_Generalization =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Generalization;

         when AMF.Internals.Tables.UML_Types.E_UML_Generalization_Set =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Generalization_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Image =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Image;

         when AMF.Internals.Tables.UML_Types.E_UML_Include =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Include;

         when AMF.Internals.Tables.UML_Types.E_UML_Information_Flow =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Information_Flow;

         when AMF.Internals.Tables.UML_Types.E_UML_Information_Item =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Information_Item;

         when AMF.Internals.Tables.UML_Types.E_UML_Initial_Node =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Initial_Node;

         when AMF.Internals.Tables.UML_Types.E_UML_Input_Pin =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Input_Pin;

         when AMF.Internals.Tables.UML_Types.E_UML_Instance_Specification =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Instance_Specification;

         when AMF.Internals.Tables.UML_Types.E_UML_Instance_Value =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Instance_Value;

         when AMF.Internals.Tables.UML_Types.E_UML_Interaction =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Interaction;

         when AMF.Internals.Tables.UML_Types.E_UML_Interaction_Constraint =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Interaction_Constraint;

         when AMF.Internals.Tables.UML_Types.E_UML_Interaction_Operand =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Interaction_Operand;

         when AMF.Internals.Tables.UML_Types.E_UML_Interaction_Use =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Interaction_Use;

         when AMF.Internals.Tables.UML_Types.E_UML_Interface =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Interface;

         when AMF.Internals.Tables.UML_Types.E_UML_Interface_Realization =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Interface_Realization;

         when AMF.Internals.Tables.UML_Types.E_UML_Interruptible_Activity_Region =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Interruptible_Activity_Region;

         when AMF.Internals.Tables.UML_Types.E_UML_Interval =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Interval;

         when AMF.Internals.Tables.UML_Types.E_UML_Interval_Constraint =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Interval_Constraint;

         when AMF.Internals.Tables.UML_Types.E_UML_Join_Node =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Join_Node;

         when AMF.Internals.Tables.UML_Types.E_UML_Lifeline =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Lifeline;

         when AMF.Internals.Tables.UML_Types.E_UML_Link_End_Creation_Data =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Link_End_Creation_Data;

         when AMF.Internals.Tables.UML_Types.E_UML_Link_End_Data =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Link_End_Data;

         when AMF.Internals.Tables.UML_Types.E_UML_Link_End_Destruction_Data =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Link_End_Destruction_Data;

         when AMF.Internals.Tables.UML_Types.E_UML_Literal_Boolean =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Literal_Boolean;

         when AMF.Internals.Tables.UML_Types.E_UML_Literal_Integer =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Literal_Integer;

         when AMF.Internals.Tables.UML_Types.E_UML_Literal_Null =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Literal_Null;

         when AMF.Internals.Tables.UML_Types.E_UML_Literal_Real =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Literal_Real;

         when AMF.Internals.Tables.UML_Types.E_UML_Literal_String =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Literal_String;

         when AMF.Internals.Tables.UML_Types.E_UML_Literal_Unlimited_Natural =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Literal_Unlimited_Natural;

         when AMF.Internals.Tables.UML_Types.E_UML_Loop_Node =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Loop_Node;

         when AMF.Internals.Tables.UML_Types.E_UML_Manifestation =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Manifestation;

         when AMF.Internals.Tables.UML_Types.E_UML_Merge_Node =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Merge_Node;

         when AMF.Internals.Tables.UML_Types.E_UML_Message =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Message;

         when AMF.Internals.Tables.UML_Types.E_UML_Message_Occurrence_Specification =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Message_Occurrence_Specification;

         when AMF.Internals.Tables.UML_Types.E_UML_Model =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Model;

         when AMF.Internals.Tables.UML_Types.E_UML_Node =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Node;

         when AMF.Internals.Tables.UML_Types.E_UML_Object_Flow =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Object_Flow;

         when AMF.Internals.Tables.UML_Types.E_UML_Occurrence_Specification =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Occurrence_Specification;

         when AMF.Internals.Tables.UML_Types.E_UML_Opaque_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Opaque_Action;

         when AMF.Internals.Tables.UML_Types.E_UML_Opaque_Behavior =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Opaque_Behavior;

         when AMF.Internals.Tables.UML_Types.E_UML_Opaque_Expression =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Opaque_Expression;

         when AMF.Internals.Tables.UML_Types.E_UML_Operation =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Operation;

         when AMF.Internals.Tables.UML_Types.E_UML_Operation_Template_Parameter =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Operation_Template_Parameter;

         when AMF.Internals.Tables.UML_Types.E_UML_Output_Pin =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Output_Pin;

         when AMF.Internals.Tables.UML_Types.E_UML_Package =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Package;

         when AMF.Internals.Tables.UML_Types.E_UML_Package_Import =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Package_Import;

         when AMF.Internals.Tables.UML_Types.E_UML_Package_Merge =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Package_Merge;

         when AMF.Internals.Tables.UML_Types.E_UML_Parameter =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Parameter;

         when AMF.Internals.Tables.UML_Types.E_UML_Parameter_Set =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Parameter_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Part_Decomposition =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Part_Decomposition;

         when AMF.Internals.Tables.UML_Types.E_UML_Port =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Port;

         when AMF.Internals.Tables.UML_Types.E_UML_Primitive_Type =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Primitive_Type;

         when AMF.Internals.Tables.UML_Types.E_UML_Profile =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Profile;

         when AMF.Internals.Tables.UML_Types.E_UML_Profile_Application =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Profile_Application;

         when AMF.Internals.Tables.UML_Types.E_UML_Property =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Property;

         when AMF.Internals.Tables.UML_Types.E_UML_Protocol_Conformance =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Protocol_Conformance;

         when AMF.Internals.Tables.UML_Types.E_UML_Protocol_State_Machine =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Protocol_State_Machine;

         when AMF.Internals.Tables.UML_Types.E_UML_Protocol_Transition =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Protocol_Transition;

         when AMF.Internals.Tables.UML_Types.E_UML_Pseudostate =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Pseudostate;

         when AMF.Internals.Tables.UML_Types.E_UML_Qualifier_Value =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Qualifier_Value;

         when AMF.Internals.Tables.UML_Types.E_UML_Raise_Exception_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Raise_Exception_Action;

         when AMF.Internals.Tables.UML_Types.E_UML_Read_Extent_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Read_Extent_Action;

         when AMF.Internals.Tables.UML_Types.E_UML_Read_Is_Classified_Object_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Read_Is_Classified_Object_Action;

         when AMF.Internals.Tables.UML_Types.E_UML_Read_Link_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Read_Link_Action;

         when AMF.Internals.Tables.UML_Types.E_UML_Read_Link_Object_End_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Read_Link_Object_End_Action;

         when AMF.Internals.Tables.UML_Types.E_UML_Read_Link_Object_End_Qualifier_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Read_Link_Object_End_Qualifier_Action;

         when AMF.Internals.Tables.UML_Types.E_UML_Read_Self_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Read_Self_Action;

         when AMF.Internals.Tables.UML_Types.E_UML_Read_Structural_Feature_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Read_Structural_Feature_Action;

         when AMF.Internals.Tables.UML_Types.E_UML_Read_Variable_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Read_Variable_Action;

         when AMF.Internals.Tables.UML_Types.E_UML_Realization =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Realization;

         when AMF.Internals.Tables.UML_Types.E_UML_Reception =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Reception;

         when AMF.Internals.Tables.UML_Types.E_UML_Reclassify_Object_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Reclassify_Object_Action;

         when AMF.Internals.Tables.UML_Types.E_UML_Redefinable_Template_Signature =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Redefinable_Template_Signature;

         when AMF.Internals.Tables.UML_Types.E_UML_Reduce_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Reduce_Action;

         when AMF.Internals.Tables.UML_Types.E_UML_Region =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Region;

         when AMF.Internals.Tables.UML_Types.E_UML_Remove_Structural_Feature_Value_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Remove_Structural_Feature_Value_Action;

         when AMF.Internals.Tables.UML_Types.E_UML_Remove_Variable_Value_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Remove_Variable_Value_Action;

         when AMF.Internals.Tables.UML_Types.E_UML_Reply_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Reply_Action;

         when AMF.Internals.Tables.UML_Types.E_UML_Send_Object_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Send_Object_Action;

         when AMF.Internals.Tables.UML_Types.E_UML_Send_Signal_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Send_Signal_Action;

         when AMF.Internals.Tables.UML_Types.E_UML_Sequence_Node =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Sequence_Node;

         when AMF.Internals.Tables.UML_Types.E_UML_Signal =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Signal;

         when AMF.Internals.Tables.UML_Types.E_UML_Signal_Event =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Signal_Event;

         when AMF.Internals.Tables.UML_Types.E_UML_Slot =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Slot;

         when AMF.Internals.Tables.UML_Types.E_UML_Start_Classifier_Behavior_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Start_Classifier_Behavior_Action;

         when AMF.Internals.Tables.UML_Types.E_UML_Start_Object_Behavior_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Start_Object_Behavior_Action;

         when AMF.Internals.Tables.UML_Types.E_UML_State =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_State;

         when AMF.Internals.Tables.UML_Types.E_UML_State_Invariant =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_State_Invariant;

         when AMF.Internals.Tables.UML_Types.E_UML_State_Machine =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_State_Machine;

         when AMF.Internals.Tables.UML_Types.E_UML_Stereotype =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Stereotype;

         when AMF.Internals.Tables.UML_Types.E_UML_String_Expression =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_String_Expression;

         when AMF.Internals.Tables.UML_Types.E_UML_Structured_Activity_Node =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Structured_Activity_Node;

         when AMF.Internals.Tables.UML_Types.E_UML_Substitution =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Substitution;

         when AMF.Internals.Tables.UML_Types.E_UML_Template_Binding =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Template_Binding;

         when AMF.Internals.Tables.UML_Types.E_UML_Template_Parameter =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Template_Parameter;

         when AMF.Internals.Tables.UML_Types.E_UML_Template_Parameter_Substitution =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Template_Parameter_Substitution;

         when AMF.Internals.Tables.UML_Types.E_UML_Template_Signature =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Template_Signature;

         when AMF.Internals.Tables.UML_Types.E_UML_Test_Identity_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Test_Identity_Action;

         when AMF.Internals.Tables.UML_Types.E_UML_Time_Constraint =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Time_Constraint;

         when AMF.Internals.Tables.UML_Types.E_UML_Time_Event =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Time_Event;

         when AMF.Internals.Tables.UML_Types.E_UML_Time_Expression =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Time_Expression;

         when AMF.Internals.Tables.UML_Types.E_UML_Time_Interval =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Time_Interval;

         when AMF.Internals.Tables.UML_Types.E_UML_Time_Observation =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Time_Observation;

         when AMF.Internals.Tables.UML_Types.E_UML_Transition =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Transition;

         when AMF.Internals.Tables.UML_Types.E_UML_Trigger =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Trigger;

         when AMF.Internals.Tables.UML_Types.E_UML_Unmarshall_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Unmarshall_Action;

         when AMF.Internals.Tables.UML_Types.E_UML_Usage =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Usage;

         when AMF.Internals.Tables.UML_Types.E_UML_Use_Case =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Use_Case;

         when AMF.Internals.Tables.UML_Types.E_UML_Value_Pin =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Value_Pin;

         when AMF.Internals.Tables.UML_Types.E_UML_Value_Specification_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Value_Specification_Action;

         when AMF.Internals.Tables.UML_Types.E_UML_Variable =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Variable;
      end case;
   end Get_Meta_Class;

   ---------
   -- Set --
   ---------

   procedure Set
    (Self     : AMF.Internals.AMF_Element;
     Property : CMOF_Element;
     Value    : League.Holders.Holder)
   is

      procedure Standard_Profile_L2_Auxiliary_Set;
      --  Sets attribute's value of instance of Auxiliary class.

      procedure Standard_Profile_L2_Call_Set;
      --  Sets attribute's value of instance of Call class.

      procedure Standard_Profile_L2_Create_Set;
      --  Sets attribute's value of instance of Create class.

      procedure Standard_Profile_L2_Derive_Set;
      --  Sets attribute's value of instance of Derive class.

      procedure Standard_Profile_L2_Destroy_Set;
      --  Sets attribute's value of instance of Destroy class.

      procedure Standard_Profile_L2_Document_Set;
      --  Sets attribute's value of instance of Document class.

      procedure Standard_Profile_L2_Entity_Set;
      --  Sets attribute's value of instance of Entity class.

      procedure Standard_Profile_L2_Executable_Set;
      --  Sets attribute's value of instance of Executable class.

      procedure Standard_Profile_L2_Focus_Set;
      --  Sets attribute's value of instance of Focus class.

      procedure Standard_Profile_L2_Framework_Set;
      --  Sets attribute's value of instance of Framework class.

      procedure Standard_Profile_L2_Implement_Set;
      --  Sets attribute's value of instance of Implement class.

      procedure Standard_Profile_L2_Implementation_Class_Set;
      --  Sets attribute's value of instance of ImplementationClass class.

      procedure Standard_Profile_L2_Instantiate_Set;
      --  Sets attribute's value of instance of Instantiate class.

      procedure Standard_Profile_L2_Library_Set;
      --  Sets attribute's value of instance of Library class.

      procedure Standard_Profile_L2_Metaclass_Set;
      --  Sets attribute's value of instance of Metaclass class.

      procedure Standard_Profile_L2_Model_Library_Set;
      --  Sets attribute's value of instance of ModelLibrary class.

      procedure Standard_Profile_L2_Process_Set;
      --  Sets attribute's value of instance of Process class.

      procedure Standard_Profile_L2_Realization_Set;
      --  Sets attribute's value of instance of Realization class.

      procedure Standard_Profile_L2_Refine_Set;
      --  Sets attribute's value of instance of Refine class.

      procedure Standard_Profile_L2_Responsibility_Set;
      --  Sets attribute's value of instance of Responsibility class.

      procedure Standard_Profile_L2_Script_Set;
      --  Sets attribute's value of instance of Script class.

      procedure Standard_Profile_L2_Send_Set;
      --  Sets attribute's value of instance of Send class.

      procedure Standard_Profile_L2_Service_Set;
      --  Sets attribute's value of instance of Service class.

      procedure Standard_Profile_L2_Source_Set;
      --  Sets attribute's value of instance of Source class.

      procedure Standard_Profile_L2_Specification_Set;
      --  Sets attribute's value of instance of Specification class.

      procedure Standard_Profile_L2_Subsystem_Set;
      --  Sets attribute's value of instance of Subsystem class.

      procedure Standard_Profile_L2_Trace_Set;
      --  Sets attribute's value of instance of Trace class.

      procedure Standard_Profile_L2_Type_Set;
      --  Sets attribute's value of instance of Type class.

      procedure Standard_Profile_L2_Utility_Set;
      --  Sets attribute's value of instance of Utility class.

      procedure Standard_Profile_L3_Build_Component_Set;
      --  Sets attribute's value of instance of BuildComponent class.

      procedure Standard_Profile_L3_Metamodel_Set;
      --  Sets attribute's value of instance of Metamodel class.

      procedure Standard_Profile_L3_System_Model_Set;
      --  Sets attribute's value of instance of SystemModel class.

      procedure UML_Abstraction_Set;
      --  Sets attribute's value of instance of Abstraction class.

      procedure UML_Accept_Call_Action_Set;
      --  Sets attribute's value of instance of AcceptCallAction class.

      procedure UML_Accept_Event_Action_Set;
      --  Sets attribute's value of instance of AcceptEventAction class.

      procedure UML_Action_Execution_Specification_Set;
      --  Sets attribute's value of instance of ActionExecutionSpecification class.

      procedure UML_Action_Input_Pin_Set;
      --  Sets attribute's value of instance of ActionInputPin class.

      procedure UML_Activity_Set;
      --  Sets attribute's value of instance of Activity class.

      procedure UML_Activity_Final_Node_Set;
      --  Sets attribute's value of instance of ActivityFinalNode class.

      procedure UML_Activity_Parameter_Node_Set;
      --  Sets attribute's value of instance of ActivityParameterNode class.

      procedure UML_Activity_Partition_Set;
      --  Sets attribute's value of instance of ActivityPartition class.

      procedure UML_Actor_Set;
      --  Sets attribute's value of instance of Actor class.

      procedure UML_Add_Structural_Feature_Value_Action_Set;
      --  Sets attribute's value of instance of AddStructuralFeatureValueAction class.

      procedure UML_Add_Variable_Value_Action_Set;
      --  Sets attribute's value of instance of AddVariableValueAction class.

      procedure UML_Any_Receive_Event_Set;
      --  Sets attribute's value of instance of AnyReceiveEvent class.

      procedure UML_Artifact_Set;
      --  Sets attribute's value of instance of Artifact class.

      procedure UML_Association_Set;
      --  Sets attribute's value of instance of Association class.

      procedure UML_Association_Class_Set;
      --  Sets attribute's value of instance of AssociationClass class.

      procedure UML_Behavior_Execution_Specification_Set;
      --  Sets attribute's value of instance of BehaviorExecutionSpecification class.

      procedure UML_Broadcast_Signal_Action_Set;
      --  Sets attribute's value of instance of BroadcastSignalAction class.

      procedure UML_Call_Behavior_Action_Set;
      --  Sets attribute's value of instance of CallBehaviorAction class.

      procedure UML_Call_Event_Set;
      --  Sets attribute's value of instance of CallEvent class.

      procedure UML_Call_Operation_Action_Set;
      --  Sets attribute's value of instance of CallOperationAction class.

      procedure UML_Central_Buffer_Node_Set;
      --  Sets attribute's value of instance of CentralBufferNode class.

      procedure UML_Change_Event_Set;
      --  Sets attribute's value of instance of ChangeEvent class.

      procedure UML_Class_Set;
      --  Sets attribute's value of instance of Class class.

      procedure UML_Classifier_Template_Parameter_Set;
      --  Sets attribute's value of instance of ClassifierTemplateParameter class.

      procedure UML_Clause_Set;
      --  Sets attribute's value of instance of Clause class.

      procedure UML_Clear_Association_Action_Set;
      --  Sets attribute's value of instance of ClearAssociationAction class.

      procedure UML_Clear_Structural_Feature_Action_Set;
      --  Sets attribute's value of instance of ClearStructuralFeatureAction class.

      procedure UML_Clear_Variable_Action_Set;
      --  Sets attribute's value of instance of ClearVariableAction class.

      procedure UML_Collaboration_Set;
      --  Sets attribute's value of instance of Collaboration class.

      procedure UML_Collaboration_Use_Set;
      --  Sets attribute's value of instance of CollaborationUse class.

      procedure UML_Combined_Fragment_Set;
      --  Sets attribute's value of instance of CombinedFragment class.

      procedure UML_Comment_Set;
      --  Sets attribute's value of instance of Comment class.

      procedure UML_Communication_Path_Set;
      --  Sets attribute's value of instance of CommunicationPath class.

      procedure UML_Component_Set;
      --  Sets attribute's value of instance of Component class.

      procedure UML_Component_Realization_Set;
      --  Sets attribute's value of instance of ComponentRealization class.

      procedure UML_Conditional_Node_Set;
      --  Sets attribute's value of instance of ConditionalNode class.

      procedure UML_Connectable_Element_Template_Parameter_Set;
      --  Sets attribute's value of instance of ConnectableElementTemplateParameter class.

      procedure UML_Connection_Point_Reference_Set;
      --  Sets attribute's value of instance of ConnectionPointReference class.

      procedure UML_Connector_Set;
      --  Sets attribute's value of instance of Connector class.

      procedure UML_Connector_End_Set;
      --  Sets attribute's value of instance of ConnectorEnd class.

      procedure UML_Consider_Ignore_Fragment_Set;
      --  Sets attribute's value of instance of ConsiderIgnoreFragment class.

      procedure UML_Constraint_Set;
      --  Sets attribute's value of instance of Constraint class.

      procedure UML_Continuation_Set;
      --  Sets attribute's value of instance of Continuation class.

      procedure UML_Control_Flow_Set;
      --  Sets attribute's value of instance of ControlFlow class.

      procedure UML_Create_Link_Action_Set;
      --  Sets attribute's value of instance of CreateLinkAction class.

      procedure UML_Create_Link_Object_Action_Set;
      --  Sets attribute's value of instance of CreateLinkObjectAction class.

      procedure UML_Create_Object_Action_Set;
      --  Sets attribute's value of instance of CreateObjectAction class.

      procedure UMLDI_UML_Activity_Diagram_Set;
      --  Sets attribute's value of instance of UMLActivityDiagram class.

      procedure UMLDI_UML_Association_End_Label_Set;
      --  Sets attribute's value of instance of UMLAssociationEndLabel class.

      procedure UMLDI_UML_Association_Or_Connector_Or_Link_Shape_Set;
      --  Sets attribute's value of instance of UMLAssociationOrConnectorOrLinkShape class.

      procedure UMLDI_UML_Class_Diagram_Set;
      --  Sets attribute's value of instance of UMLClassDiagram class.

      procedure UMLDI_UML_Classifier_Shape_Set;
      --  Sets attribute's value of instance of UMLClassifierShape class.

      procedure UMLDI_UML_Compartment_Set;
      --  Sets attribute's value of instance of UMLCompartment class.

      procedure UMLDI_UML_Compartmentable_Shape_Set;
      --  Sets attribute's value of instance of UMLCompartmentableShape class.

      procedure UMLDI_UML_Component_Diagram_Set;
      --  Sets attribute's value of instance of UMLComponentDiagram class.

      procedure UMLDI_UML_Composite_Structure_Diagram_Set;
      --  Sets attribute's value of instance of UMLCompositeStructureDiagram class.

      procedure UMLDI_UML_Deployment_Diagram_Set;
      --  Sets attribute's value of instance of UMLDeploymentDiagram class.

      procedure UMLDI_UML_Edge_Set;
      --  Sets attribute's value of instance of UMLEdge class.

      procedure UMLDI_UML_Interaction_Diagram_Set;
      --  Sets attribute's value of instance of UMLInteractionDiagram class.

      procedure UMLDI_UML_Interaction_Table_Label_Set;
      --  Sets attribute's value of instance of UMLInteractionTableLabel class.

      procedure UMLDI_UML_Keyword_Label_Set;
      --  Sets attribute's value of instance of UMLKeywordLabel class.

      procedure UMLDI_UML_Label_Set;
      --  Sets attribute's value of instance of UMLLabel class.

      procedure UMLDI_UML_Multiplicity_Label_Set;
      --  Sets attribute's value of instance of UMLMultiplicityLabel class.

      procedure UMLDI_UML_Name_Label_Set;
      --  Sets attribute's value of instance of UMLNameLabel class.

      procedure UMLDI_UML_Object_Diagram_Set;
      --  Sets attribute's value of instance of UMLObjectDiagram class.

      procedure UMLDI_UML_Package_Diagram_Set;
      --  Sets attribute's value of instance of UMLPackageDiagram class.

      procedure UMLDI_UML_Profile_Diagram_Set;
      --  Sets attribute's value of instance of UMLProfileDiagram class.

      procedure UMLDI_UML_Redefines_Label_Set;
      --  Sets attribute's value of instance of UMLRedefinesLabel class.

      procedure UMLDI_UML_Shape_Set;
      --  Sets attribute's value of instance of UMLShape class.

      procedure UMLDI_UML_State_Machine_Diagram_Set;
      --  Sets attribute's value of instance of UMLStateMachineDiagram class.

      procedure UMLDI_UML_State_Shape_Set;
      --  Sets attribute's value of instance of UMLStateShape class.

      procedure UMLDI_UML_Stereotype_Property_Value_Label_Set;
      --  Sets attribute's value of instance of UMLStereotypePropertyValueLabel class.

      procedure UMLDI_UML_Style_Set;
      --  Sets attribute's value of instance of UMLStyle class.

      procedure UMLDI_UML_Typed_Element_Label_Set;
      --  Sets attribute's value of instance of UMLTypedElementLabel class.

      procedure UMLDI_UML_Use_Case_Diagram_Set;
      --  Sets attribute's value of instance of UMLUseCaseDiagram class.

      procedure UML_Data_Store_Node_Set;
      --  Sets attribute's value of instance of DataStoreNode class.

      procedure UML_Data_Type_Set;
      --  Sets attribute's value of instance of DataType class.

      procedure UML_Decision_Node_Set;
      --  Sets attribute's value of instance of DecisionNode class.

      procedure UML_Dependency_Set;
      --  Sets attribute's value of instance of Dependency class.

      procedure UML_Deployment_Set;
      --  Sets attribute's value of instance of Deployment class.

      procedure UML_Deployment_Specification_Set;
      --  Sets attribute's value of instance of DeploymentSpecification class.

      procedure UML_Destroy_Link_Action_Set;
      --  Sets attribute's value of instance of DestroyLinkAction class.

      procedure UML_Destroy_Object_Action_Set;
      --  Sets attribute's value of instance of DestroyObjectAction class.

      procedure UML_Destruction_Occurrence_Specification_Set;
      --  Sets attribute's value of instance of DestructionOccurrenceSpecification class.

      procedure UML_Device_Set;
      --  Sets attribute's value of instance of Device class.

      procedure UML_Duration_Set;
      --  Sets attribute's value of instance of Duration class.

      procedure UML_Duration_Constraint_Set;
      --  Sets attribute's value of instance of DurationConstraint class.

      procedure UML_Duration_Interval_Set;
      --  Sets attribute's value of instance of DurationInterval class.

      procedure UML_Duration_Observation_Set;
      --  Sets attribute's value of instance of DurationObservation class.

      procedure UML_Element_Import_Set;
      --  Sets attribute's value of instance of ElementImport class.

      procedure UML_Enumeration_Set;
      --  Sets attribute's value of instance of Enumeration class.

      procedure UML_Enumeration_Literal_Set;
      --  Sets attribute's value of instance of EnumerationLiteral class.

      procedure UML_Exception_Handler_Set;
      --  Sets attribute's value of instance of ExceptionHandler class.

      procedure UML_Execution_Environment_Set;
      --  Sets attribute's value of instance of ExecutionEnvironment class.

      procedure UML_Execution_Occurrence_Specification_Set;
      --  Sets attribute's value of instance of ExecutionOccurrenceSpecification class.

      procedure UML_Expansion_Node_Set;
      --  Sets attribute's value of instance of ExpansionNode class.

      procedure UML_Expansion_Region_Set;
      --  Sets attribute's value of instance of ExpansionRegion class.

      procedure UML_Expression_Set;
      --  Sets attribute's value of instance of Expression class.

      procedure UML_Extend_Set;
      --  Sets attribute's value of instance of Extend class.

      procedure UML_Extension_Set;
      --  Sets attribute's value of instance of Extension class.

      procedure UML_Extension_End_Set;
      --  Sets attribute's value of instance of ExtensionEnd class.

      procedure UML_Extension_Point_Set;
      --  Sets attribute's value of instance of ExtensionPoint class.

      procedure UML_Final_State_Set;
      --  Sets attribute's value of instance of FinalState class.

      procedure UML_Flow_Final_Node_Set;
      --  Sets attribute's value of instance of FlowFinalNode class.

      procedure UML_Fork_Node_Set;
      --  Sets attribute's value of instance of ForkNode class.

      procedure UML_Function_Behavior_Set;
      --  Sets attribute's value of instance of FunctionBehavior class.

      procedure UML_Gate_Set;
      --  Sets attribute's value of instance of Gate class.

      procedure UML_General_Ordering_Set;
      --  Sets attribute's value of instance of GeneralOrdering class.

      procedure UML_Generalization_Set;
      --  Sets attribute's value of instance of Generalization class.

      procedure UML_Generalization_Set_Set;
      --  Sets attribute's value of instance of GeneralizationSet class.

      procedure UML_Image_Set;
      --  Sets attribute's value of instance of Image class.

      procedure UML_Include_Set;
      --  Sets attribute's value of instance of Include class.

      procedure UML_Information_Flow_Set;
      --  Sets attribute's value of instance of InformationFlow class.

      procedure UML_Information_Item_Set;
      --  Sets attribute's value of instance of InformationItem class.

      procedure UML_Initial_Node_Set;
      --  Sets attribute's value of instance of InitialNode class.

      procedure UML_Input_Pin_Set;
      --  Sets attribute's value of instance of InputPin class.

      procedure UML_Instance_Specification_Set;
      --  Sets attribute's value of instance of InstanceSpecification class.

      procedure UML_Instance_Value_Set;
      --  Sets attribute's value of instance of InstanceValue class.

      procedure UML_Interaction_Set;
      --  Sets attribute's value of instance of Interaction class.

      procedure UML_Interaction_Constraint_Set;
      --  Sets attribute's value of instance of InteractionConstraint class.

      procedure UML_Interaction_Operand_Set;
      --  Sets attribute's value of instance of InteractionOperand class.

      procedure UML_Interaction_Use_Set;
      --  Sets attribute's value of instance of InteractionUse class.

      procedure UML_Interface_Set;
      --  Sets attribute's value of instance of Interface class.

      procedure UML_Interface_Realization_Set;
      --  Sets attribute's value of instance of InterfaceRealization class.

      procedure UML_Interruptible_Activity_Region_Set;
      --  Sets attribute's value of instance of InterruptibleActivityRegion class.

      procedure UML_Interval_Set;
      --  Sets attribute's value of instance of Interval class.

      procedure UML_Interval_Constraint_Set;
      --  Sets attribute's value of instance of IntervalConstraint class.

      procedure UML_Join_Node_Set;
      --  Sets attribute's value of instance of JoinNode class.

      procedure UML_Lifeline_Set;
      --  Sets attribute's value of instance of Lifeline class.

      procedure UML_Link_End_Creation_Data_Set;
      --  Sets attribute's value of instance of LinkEndCreationData class.

      procedure UML_Link_End_Data_Set;
      --  Sets attribute's value of instance of LinkEndData class.

      procedure UML_Link_End_Destruction_Data_Set;
      --  Sets attribute's value of instance of LinkEndDestructionData class.

      procedure UML_Literal_Boolean_Set;
      --  Sets attribute's value of instance of LiteralBoolean class.

      procedure UML_Literal_Integer_Set;
      --  Sets attribute's value of instance of LiteralInteger class.

      procedure UML_Literal_Null_Set;
      --  Sets attribute's value of instance of LiteralNull class.

      procedure UML_Literal_Real_Set;
      --  Sets attribute's value of instance of LiteralReal class.

      procedure UML_Literal_String_Set;
      --  Sets attribute's value of instance of LiteralString class.

      procedure UML_Literal_Unlimited_Natural_Set;
      --  Sets attribute's value of instance of LiteralUnlimitedNatural class.

      procedure UML_Loop_Node_Set;
      --  Sets attribute's value of instance of LoopNode class.

      procedure UML_Manifestation_Set;
      --  Sets attribute's value of instance of Manifestation class.

      procedure UML_Merge_Node_Set;
      --  Sets attribute's value of instance of MergeNode class.

      procedure UML_Message_Set;
      --  Sets attribute's value of instance of Message class.

      procedure UML_Message_Occurrence_Specification_Set;
      --  Sets attribute's value of instance of MessageOccurrenceSpecification class.

      procedure UML_Model_Set;
      --  Sets attribute's value of instance of Model class.

      procedure UML_Node_Set;
      --  Sets attribute's value of instance of Node class.

      procedure UML_Object_Flow_Set;
      --  Sets attribute's value of instance of ObjectFlow class.

      procedure UML_Occurrence_Specification_Set;
      --  Sets attribute's value of instance of OccurrenceSpecification class.

      procedure UML_Opaque_Action_Set;
      --  Sets attribute's value of instance of OpaqueAction class.

      procedure UML_Opaque_Behavior_Set;
      --  Sets attribute's value of instance of OpaqueBehavior class.

      procedure UML_Opaque_Expression_Set;
      --  Sets attribute's value of instance of OpaqueExpression class.

      procedure UML_Operation_Set;
      --  Sets attribute's value of instance of Operation class.

      procedure UML_Operation_Template_Parameter_Set;
      --  Sets attribute's value of instance of OperationTemplateParameter class.

      procedure UML_Output_Pin_Set;
      --  Sets attribute's value of instance of OutputPin class.

      procedure UML_Package_Set;
      --  Sets attribute's value of instance of Package class.

      procedure UML_Package_Import_Set;
      --  Sets attribute's value of instance of PackageImport class.

      procedure UML_Package_Merge_Set;
      --  Sets attribute's value of instance of PackageMerge class.

      procedure UML_Parameter_Set;
      --  Sets attribute's value of instance of Parameter class.

      procedure UML_Parameter_Set_Set;
      --  Sets attribute's value of instance of ParameterSet class.

      procedure UML_Part_Decomposition_Set;
      --  Sets attribute's value of instance of PartDecomposition class.

      procedure UML_Port_Set;
      --  Sets attribute's value of instance of Port class.

      procedure UML_Primitive_Type_Set;
      --  Sets attribute's value of instance of PrimitiveType class.

      procedure UML_Profile_Set;
      --  Sets attribute's value of instance of Profile class.

      procedure UML_Profile_Application_Set;
      --  Sets attribute's value of instance of ProfileApplication class.

      procedure UML_Property_Set;
      --  Sets attribute's value of instance of Property class.

      procedure UML_Protocol_Conformance_Set;
      --  Sets attribute's value of instance of ProtocolConformance class.

      procedure UML_Protocol_State_Machine_Set;
      --  Sets attribute's value of instance of ProtocolStateMachine class.

      procedure UML_Protocol_Transition_Set;
      --  Sets attribute's value of instance of ProtocolTransition class.

      procedure UML_Pseudostate_Set;
      --  Sets attribute's value of instance of Pseudostate class.

      procedure UML_Qualifier_Value_Set;
      --  Sets attribute's value of instance of QualifierValue class.

      procedure UML_Raise_Exception_Action_Set;
      --  Sets attribute's value of instance of RaiseExceptionAction class.

      procedure UML_Read_Extent_Action_Set;
      --  Sets attribute's value of instance of ReadExtentAction class.

      procedure UML_Read_Is_Classified_Object_Action_Set;
      --  Sets attribute's value of instance of ReadIsClassifiedObjectAction class.

      procedure UML_Read_Link_Action_Set;
      --  Sets attribute's value of instance of ReadLinkAction class.

      procedure UML_Read_Link_Object_End_Action_Set;
      --  Sets attribute's value of instance of ReadLinkObjectEndAction class.

      procedure UML_Read_Link_Object_End_Qualifier_Action_Set;
      --  Sets attribute's value of instance of ReadLinkObjectEndQualifierAction class.

      procedure UML_Read_Self_Action_Set;
      --  Sets attribute's value of instance of ReadSelfAction class.

      procedure UML_Read_Structural_Feature_Action_Set;
      --  Sets attribute's value of instance of ReadStructuralFeatureAction class.

      procedure UML_Read_Variable_Action_Set;
      --  Sets attribute's value of instance of ReadVariableAction class.

      procedure UML_Realization_Set;
      --  Sets attribute's value of instance of Realization class.

      procedure UML_Reception_Set;
      --  Sets attribute's value of instance of Reception class.

      procedure UML_Reclassify_Object_Action_Set;
      --  Sets attribute's value of instance of ReclassifyObjectAction class.

      procedure UML_Redefinable_Template_Signature_Set;
      --  Sets attribute's value of instance of RedefinableTemplateSignature class.

      procedure UML_Reduce_Action_Set;
      --  Sets attribute's value of instance of ReduceAction class.

      procedure UML_Region_Set;
      --  Sets attribute's value of instance of Region class.

      procedure UML_Remove_Structural_Feature_Value_Action_Set;
      --  Sets attribute's value of instance of RemoveStructuralFeatureValueAction class.

      procedure UML_Remove_Variable_Value_Action_Set;
      --  Sets attribute's value of instance of RemoveVariableValueAction class.

      procedure UML_Reply_Action_Set;
      --  Sets attribute's value of instance of ReplyAction class.

      procedure UML_Send_Object_Action_Set;
      --  Sets attribute's value of instance of SendObjectAction class.

      procedure UML_Send_Signal_Action_Set;
      --  Sets attribute's value of instance of SendSignalAction class.

      procedure UML_Sequence_Node_Set;
      --  Sets attribute's value of instance of SequenceNode class.

      procedure UML_Signal_Set;
      --  Sets attribute's value of instance of Signal class.

      procedure UML_Signal_Event_Set;
      --  Sets attribute's value of instance of SignalEvent class.

      procedure UML_Slot_Set;
      --  Sets attribute's value of instance of Slot class.

      procedure UML_Start_Classifier_Behavior_Action_Set;
      --  Sets attribute's value of instance of StartClassifierBehaviorAction class.

      procedure UML_Start_Object_Behavior_Action_Set;
      --  Sets attribute's value of instance of StartObjectBehaviorAction class.

      procedure UML_State_Set;
      --  Sets attribute's value of instance of State class.

      procedure UML_State_Invariant_Set;
      --  Sets attribute's value of instance of StateInvariant class.

      procedure UML_State_Machine_Set;
      --  Sets attribute's value of instance of StateMachine class.

      procedure UML_Stereotype_Set;
      --  Sets attribute's value of instance of Stereotype class.

      procedure UML_String_Expression_Set;
      --  Sets attribute's value of instance of StringExpression class.

      procedure UML_Structured_Activity_Node_Set;
      --  Sets attribute's value of instance of StructuredActivityNode class.

      procedure UML_Substitution_Set;
      --  Sets attribute's value of instance of Substitution class.

      procedure UML_Template_Binding_Set;
      --  Sets attribute's value of instance of TemplateBinding class.

      procedure UML_Template_Parameter_Set;
      --  Sets attribute's value of instance of TemplateParameter class.

      procedure UML_Template_Parameter_Substitution_Set;
      --  Sets attribute's value of instance of TemplateParameterSubstitution class.

      procedure UML_Template_Signature_Set;
      --  Sets attribute's value of instance of TemplateSignature class.

      procedure UML_Test_Identity_Action_Set;
      --  Sets attribute's value of instance of TestIdentityAction class.

      procedure UML_Time_Constraint_Set;
      --  Sets attribute's value of instance of TimeConstraint class.

      procedure UML_Time_Event_Set;
      --  Sets attribute's value of instance of TimeEvent class.

      procedure UML_Time_Expression_Set;
      --  Sets attribute's value of instance of TimeExpression class.

      procedure UML_Time_Interval_Set;
      --  Sets attribute's value of instance of TimeInterval class.

      procedure UML_Time_Observation_Set;
      --  Sets attribute's value of instance of TimeObservation class.

      procedure UML_Transition_Set;
      --  Sets attribute's value of instance of Transition class.

      procedure UML_Trigger_Set;
      --  Sets attribute's value of instance of Trigger class.

      procedure UML_Unmarshall_Action_Set;
      --  Sets attribute's value of instance of UnmarshallAction class.

      procedure UML_Usage_Set;
      --  Sets attribute's value of instance of Usage class.

      procedure UML_Use_Case_Set;
      --  Sets attribute's value of instance of UseCase class.

      procedure UML_Value_Pin_Set;
      --  Sets attribute's value of instance of ValuePin class.

      procedure UML_Value_Specification_Action_Set;
      --  Sets attribute's value of instance of ValueSpecificationAction class.

      procedure UML_Variable_Set;
      --  Sets attribute's value of instance of Variable class.

      ---------------------------------------
      -- Standard_Profile_L2_Auxiliary_Set --
      ---------------------------------------

      procedure Standard_Profile_L2_Auxiliary_Set is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Auxiliary_Base_Class_A_Extension_Auxiliary then
            --  Auxiliary::base_Class : Class

            AMF.Standard_Profile_L2.Auxiliaries.Standard_Profile_L2_Auxiliary_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Base_Class
               (AMF.UML.Classes.UML_Class_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Auxiliary_Set;

      ----------------------------------
      -- Standard_Profile_L2_Call_Set --
      ----------------------------------

      procedure Standard_Profile_L2_Call_Set is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Call_Base_Usage_A_Extension_Call then
            --  Call::base_Usage : Usage

            AMF.Standard_Profile_L2.Calls.Standard_Profile_L2_Call_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Base_Usage
               (AMF.UML.Usages.UML_Usage_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Call_Set;

      ------------------------------------
      -- Standard_Profile_L2_Create_Set --
      ------------------------------------

      procedure Standard_Profile_L2_Create_Set is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Create_Base_Behavioral_Feature_A_Extension_Create then
            --  Create::base_BehavioralFeature : BehavioralFeature

            AMF.Standard_Profile_L2.Creates.Standard_Profile_L2_Create_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Base_Behavioral_Feature
               (AMF.UML.Behavioral_Features.UML_Behavioral_Feature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Create_Base_Usage_A_Extension_Create then
            --  Create::base_Usage : Usage

            AMF.Standard_Profile_L2.Creates.Standard_Profile_L2_Create_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Base_Usage
               (AMF.UML.Usages.UML_Usage_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Create_Set;

      ------------------------------------
      -- Standard_Profile_L2_Derive_Set --
      ------------------------------------

      procedure Standard_Profile_L2_Derive_Set is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Derive_Base_Abstraction_A_Extension_Derive then
            --  Derive::base_Abstraction : Abstraction

            AMF.Standard_Profile_L2.Derives.Standard_Profile_L2_Derive_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Base_Abstraction
               (AMF.UML.Abstractions.UML_Abstraction_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Derive_Computation_A_Extension_Derive then
            --  Derive::computation : ValueSpecification

            AMF.Standard_Profile_L2.Derives.Standard_Profile_L2_Derive_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Computation
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Derive_Set;

      -------------------------------------
      -- Standard_Profile_L2_Destroy_Set --
      -------------------------------------

      procedure Standard_Profile_L2_Destroy_Set is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Destroy_Base_Behavioral_Feature_A_Extension_Destroy then
            --  Destroy::base_BehavioralFeature : BehavioralFeature

            AMF.Standard_Profile_L2.Destroies.Standard_Profile_L2_Destroy_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Base_Behavioral_Feature
               (AMF.UML.Behavioral_Features.UML_Behavioral_Feature_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Destroy_Set;

      --------------------------------------
      -- Standard_Profile_L2_Document_Set --
      --------------------------------------

      procedure Standard_Profile_L2_Document_Set is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Document_Base_Artifact_A_Extension_Document then
            --  Document::base_Artifact : Artifact

            AMF.Standard_Profile_L2.Documents.Standard_Profile_L2_Document_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Base_Artifact
               (AMF.UML.Artifacts.UML_Artifact_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_File_Base_Artifact_A_Extension_File then
            --  File::base_Artifact : Artifact

            AMF.Standard_Profile_L2.Documents.Standard_Profile_L2_Document_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Base_Artifact
               (AMF.UML.Artifacts.UML_Artifact_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Document_Set;

      ------------------------------------
      -- Standard_Profile_L2_Entity_Set --
      ------------------------------------

      procedure Standard_Profile_L2_Entity_Set is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Entity_Base_Component_A_Extension_Entity then
            --  Entity::base_Component : Component

            AMF.Standard_Profile_L2.Entities.Standard_Profile_L2_Entity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Base_Component
               (AMF.UML.Components.UML_Component_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Entity_Set;

      ----------------------------------------
      -- Standard_Profile_L2_Executable_Set --
      ----------------------------------------

      procedure Standard_Profile_L2_Executable_Set is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Executable_Base_Artifact_A_Extension_Executable then
            --  Executable::base_Artifact : Artifact

            AMF.Standard_Profile_L2.Executables.Standard_Profile_L2_Executable_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Base_Artifact
               (AMF.UML.Artifacts.UML_Artifact_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_File_Base_Artifact_A_Extension_File then
            --  File::base_Artifact : Artifact

            AMF.Standard_Profile_L2.Executables.Standard_Profile_L2_Executable_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Base_Artifact
               (AMF.UML.Artifacts.UML_Artifact_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Executable_Set;

      -----------------------------------
      -- Standard_Profile_L2_Focus_Set --
      -----------------------------------

      procedure Standard_Profile_L2_Focus_Set is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Focus_Base_Class_A_Extension_Focus then
            --  Focus::base_Class : Class

            AMF.Standard_Profile_L2.Focuses.Standard_Profile_L2_Focus_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Base_Class
               (AMF.UML.Classes.UML_Class_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Focus_Set;

      ---------------------------------------
      -- Standard_Profile_L2_Framework_Set --
      ---------------------------------------

      procedure Standard_Profile_L2_Framework_Set is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Framework_Base_Package_A_Extension_Framework then
            --  Framework::base_Package : Package

            AMF.Standard_Profile_L2.Frameworks.Standard_Profile_L2_Framework_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Base_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Framework_Set;

      ---------------------------------------
      -- Standard_Profile_L2_Implement_Set --
      ---------------------------------------

      procedure Standard_Profile_L2_Implement_Set is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Implement_Base_Component_A_Extension_Implement then
            --  Implement::base_Component : Component

            AMF.Standard_Profile_L2.Implements.Standard_Profile_L2_Implement_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Base_Component
               (AMF.UML.Components.UML_Component_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Implement_Set;

      --------------------------------------------------
      -- Standard_Profile_L2_Implementation_Class_Set --
      --------------------------------------------------

      procedure Standard_Profile_L2_Implementation_Class_Set is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Implementation_Class_Base_Class_A_Extension_Implementation_Class then
            --  ImplementationClass::base_Class : Class

            AMF.Standard_Profile_L2.Implementation_Classes.Standard_Profile_L2_Implementation_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Base_Class
               (AMF.UML.Classes.UML_Class_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Implementation_Class_Set;

      -----------------------------------------
      -- Standard_Profile_L2_Instantiate_Set --
      -----------------------------------------

      procedure Standard_Profile_L2_Instantiate_Set is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Instantiate_Base_Usage_A_Extension_Instantiate then
            --  Instantiate::base_Usage : Usage

            AMF.Standard_Profile_L2.Instantiates.Standard_Profile_L2_Instantiate_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Base_Usage
               (AMF.UML.Usages.UML_Usage_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Instantiate_Set;

      -------------------------------------
      -- Standard_Profile_L2_Library_Set --
      -------------------------------------

      procedure Standard_Profile_L2_Library_Set is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_File_Base_Artifact_A_Extension_File then
            --  File::base_Artifact : Artifact

            AMF.Standard_Profile_L2.Libraries.Standard_Profile_L2_Library_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Base_Artifact
               (AMF.UML.Artifacts.UML_Artifact_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Library_Base_Artifact_A_Extension_Library then
            --  Library::base_Artifact : Artifact

            AMF.Standard_Profile_L2.Libraries.Standard_Profile_L2_Library_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Base_Artifact
               (AMF.UML.Artifacts.UML_Artifact_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Library_Set;

      ---------------------------------------
      -- Standard_Profile_L2_Metaclass_Set --
      ---------------------------------------

      procedure Standard_Profile_L2_Metaclass_Set is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Metaclass_Base_Class_A_Extension_Metaclass then
            --  Metaclass::base_Class : Class

            AMF.Standard_Profile_L2.Metaclasses.Standard_Profile_L2_Metaclass_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Base_Class
               (AMF.UML.Classes.UML_Class_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Metaclass_Set;

      -------------------------------------------
      -- Standard_Profile_L2_Model_Library_Set --
      -------------------------------------------

      procedure Standard_Profile_L2_Model_Library_Set is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Model_Library_Base_Package_A_Extension_Model_Library then
            --  ModelLibrary::base_Package : Package

            AMF.Standard_Profile_L2.Model_Libraries.Standard_Profile_L2_Model_Library_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Base_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Model_Library_Set;

      -------------------------------------
      -- Standard_Profile_L2_Process_Set --
      -------------------------------------

      procedure Standard_Profile_L2_Process_Set is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Process_Base_Component_A_Extension_Process then
            --  Process::base_Component : Component

            AMF.Standard_Profile_L2.Processes.Standard_Profile_L2_Process_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Base_Component
               (AMF.UML.Components.UML_Component_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Process_Set;

      -----------------------------------------
      -- Standard_Profile_L2_Realization_Set --
      -----------------------------------------

      procedure Standard_Profile_L2_Realization_Set is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Realization_Base_Classifier_A_Extension_Realization then
            --  Realization::base_Classifier : Classifier

            AMF.Standard_Profile_L2.Realizations.Standard_Profile_L2_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Base_Classifier
               (AMF.UML.Classifiers.UML_Classifier_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Realization_Set;

      ------------------------------------
      -- Standard_Profile_L2_Refine_Set --
      ------------------------------------

      procedure Standard_Profile_L2_Refine_Set is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Refine_Base_Abstraction_A_Extension_Refine then
            --  Refine::base_Abstraction : Abstraction

            AMF.Standard_Profile_L2.Refines.Standard_Profile_L2_Refine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Base_Abstraction
               (AMF.UML.Abstractions.UML_Abstraction_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Refine_Set;

      --------------------------------------------
      -- Standard_Profile_L2_Responsibility_Set --
      --------------------------------------------

      procedure Standard_Profile_L2_Responsibility_Set is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Responsibility_Base_Usage_A_Extension_Responsibility then
            --  Responsibility::base_Usage : Usage

            AMF.Standard_Profile_L2.Responsibilities.Standard_Profile_L2_Responsibility_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Base_Usage
               (AMF.UML.Usages.UML_Usage_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Responsibility_Set;

      ------------------------------------
      -- Standard_Profile_L2_Script_Set --
      ------------------------------------

      procedure Standard_Profile_L2_Script_Set is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_File_Base_Artifact_A_Extension_File then
            --  File::base_Artifact : Artifact

            AMF.Standard_Profile_L2.Scripts.Standard_Profile_L2_Script_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Base_Artifact
               (AMF.UML.Artifacts.UML_Artifact_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Script_Base_Artifact_A_Extension_Script then
            --  Script::base_Artifact : Artifact

            AMF.Standard_Profile_L2.Scripts.Standard_Profile_L2_Script_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Base_Artifact
               (AMF.UML.Artifacts.UML_Artifact_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Script_Set;

      ----------------------------------
      -- Standard_Profile_L2_Send_Set --
      ----------------------------------

      procedure Standard_Profile_L2_Send_Set is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Send_Base_Usage_A_Extension_Send then
            --  Send::base_Usage : Usage

            AMF.Standard_Profile_L2.Sends.Standard_Profile_L2_Send_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Base_Usage
               (AMF.UML.Usages.UML_Usage_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Send_Set;

      -------------------------------------
      -- Standard_Profile_L2_Service_Set --
      -------------------------------------

      procedure Standard_Profile_L2_Service_Set is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Service_Base_Component_A_Extension_Service then
            --  Service::base_Component : Component

            AMF.Standard_Profile_L2.Services.Standard_Profile_L2_Service_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Base_Component
               (AMF.UML.Components.UML_Component_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Service_Set;

      ------------------------------------
      -- Standard_Profile_L2_Source_Set --
      ------------------------------------

      procedure Standard_Profile_L2_Source_Set is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_File_Base_Artifact_A_Extension_File then
            --  File::base_Artifact : Artifact

            AMF.Standard_Profile_L2.Sources.Standard_Profile_L2_Source_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Base_Artifact
               (AMF.UML.Artifacts.UML_Artifact_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Source_Base_Artifact_A_Extension_Source then
            --  Source::base_Artifact : Artifact

            AMF.Standard_Profile_L2.Sources.Standard_Profile_L2_Source_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Base_Artifact
               (AMF.UML.Artifacts.UML_Artifact_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Source_Set;

      -------------------------------------------
      -- Standard_Profile_L2_Specification_Set --
      -------------------------------------------

      procedure Standard_Profile_L2_Specification_Set is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Specification_Base_Classifier_A_Extension_Specification then
            --  Specification::base_Classifier : Classifier

            AMF.Standard_Profile_L2.Specifications.Standard_Profile_L2_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Base_Classifier
               (AMF.UML.Classifiers.UML_Classifier_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Specification_Set;

      ---------------------------------------
      -- Standard_Profile_L2_Subsystem_Set --
      ---------------------------------------

      procedure Standard_Profile_L2_Subsystem_Set is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Subsystem_Base_Component_A_Extension_Subsystem then
            --  Subsystem::base_Component : Component

            AMF.Standard_Profile_L2.Subsystems.Standard_Profile_L2_Subsystem_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Base_Component
               (AMF.UML.Components.UML_Component_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Subsystem_Set;

      -----------------------------------
      -- Standard_Profile_L2_Trace_Set --
      -----------------------------------

      procedure Standard_Profile_L2_Trace_Set is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Trace_Base_Abstraction_A_Extension_Trace then
            --  Trace::base_Abstraction : Abstraction

            AMF.Standard_Profile_L2.Traces.Standard_Profile_L2_Trace_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Base_Abstraction
               (AMF.UML.Abstractions.UML_Abstraction_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Trace_Set;

      ----------------------------------
      -- Standard_Profile_L2_Type_Set --
      ----------------------------------

      procedure Standard_Profile_L2_Type_Set is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Type_Base_Class_A_Extension_Type then
            --  Type::base_Class : Class

            AMF.Standard_Profile_L2.Types.Standard_Profile_L2_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Base_Class
               (AMF.UML.Classes.UML_Class_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Type_Set;

      -------------------------------------
      -- Standard_Profile_L2_Utility_Set --
      -------------------------------------

      procedure Standard_Profile_L2_Utility_Set is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L2_Metamodel.MP_Standard_Profile_L2_Utility_Base_Class_A_Extension_Utility then
            --  Utility::base_Class : Class

            AMF.Standard_Profile_L2.Utilities.Standard_Profile_L2_Utility_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Base_Class
               (AMF.UML.Classes.UML_Class_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L2_Utility_Set;

      ---------------------------------------------
      -- Standard_Profile_L3_Build_Component_Set --
      ---------------------------------------------

      procedure Standard_Profile_L3_Build_Component_Set is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L3_Metamodel.MP_Standard_Profile_L3_Build_Component_Base_Component_A_Extension_Build_Component then
            --  BuildComponent::base_Component : Component

            AMF.Standard_Profile_L3.Build_Components.Standard_Profile_L3_Build_Component_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Base_Component
               (AMF.UML.Components.UML_Component_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L3_Build_Component_Set;

      ---------------------------------------
      -- Standard_Profile_L3_Metamodel_Set --
      ---------------------------------------

      procedure Standard_Profile_L3_Metamodel_Set is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L3_Metamodel.MP_Standard_Profile_L3_Metamodel_Base_Model_A_Extension_Metamodel then
            --  Metamodel::base_Model : Model

            AMF.Standard_Profile_L3.Metamodels.Standard_Profile_L3_Metamodel_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Base_Model
               (AMF.UML.Models.UML_Model_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L3_Metamodel_Set;

      ------------------------------------------
      -- Standard_Profile_L3_System_Model_Set --
      ------------------------------------------

      procedure Standard_Profile_L3_System_Model_Set is
      begin
         if Property = AMF.Internals.Tables.Standard_Profile_L3_Metamodel.MP_Standard_Profile_L3_System_Model_Base_Model_A_Extension_System_Model then
            --  SystemModel::base_Model : Model

            AMF.Standard_Profile_L3.System_Models.Standard_Profile_L3_System_Model_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Base_Model
               (AMF.UML.Models.UML_Model_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Standard_Profile_L3_System_Model_Set;

      -------------------------
      -- UML_Abstraction_Set --
      -------------------------

      procedure UML_Abstraction_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Abstraction_Mapping_A_Abstraction then
            --  Abstraction::mapping : OpaqueExpression

            AMF.UML.Abstractions.UML_Abstraction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Mapping
               (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Abstractions.UML_Abstraction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Abstractions.UML_Abstraction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Abstractions.UML_Abstraction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Abstractions.UML_Abstraction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Abstractions.UML_Abstraction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Abstractions.UML_Abstraction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Abstraction_Set;

      --------------------------------
      -- UML_Accept_Call_Action_Set --
      --------------------------------

      procedure UML_Accept_Call_Action_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Accept_Event_Action_Is_Unmarshall then
            --  AcceptEventAction::isUnmarshall : Boolean

            AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Unmarshall
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Accept_Call_Action_Return_Information_A_Accept_Call_Action then
            --  AcceptCallAction::returnInformation : OutputPin

            AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Return_Information
               (AMF.UML.Output_Pins.UML_Output_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Accept_Call_Action_Set;

      ---------------------------------
      -- UML_Accept_Event_Action_Set --
      ---------------------------------

      procedure UML_Accept_Event_Action_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Accept_Event_Action_Is_Unmarshall then
            --  AcceptEventAction::isUnmarshall : Boolean

            AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Unmarshall
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Accept_Event_Action_Set;

      --------------------------------------------
      -- UML_Action_Execution_Specification_Set --
      --------------------------------------------

      procedure UML_Action_Execution_Specification_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Execution_Specification_Action_A_Action_Execution_Specification then
            --  ActionExecutionSpecification::action : Action

            AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Action
               (AMF.UML.Actions.UML_Action_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Interaction_Interaction_Fragment then
            --  InteractionFragment::enclosingInteraction : Interaction

            AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Interaction
               (AMF.UML.Interactions.UML_Interaction_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Operand_Interaction_Operand_Fragment then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Operand
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Execution_Specification_Finish_A_Execution_Specification then
            --  ExecutionSpecification::finish : OccurrenceSpecification

            AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Finish
               (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Execution_Specification_Start_A_Execution_Specification then
            --  ExecutionSpecification::start : OccurrenceSpecification

            AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Start
               (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Action_Execution_Specification_Set;

      ------------------------------
      -- UML_Action_Input_Pin_Set --
      ------------------------------

      procedure UML_Action_Input_Pin_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Input_Pin_From_Action_A_Action_Input_Pin then
            --  ActionInputPin::fromAction : Action

            AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_From_Action
               (AMF.UML.Actions.UML_Action_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Pin_Is_Control then
            --  Pin::isControl : Boolean

            AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Control
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Is_Control_Type then
            --  ObjectNode::isControlType : Boolean

            AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Control_Type
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Is_Ordered then
            --  MultiplicityElement::isOrdered : Boolean

            AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Ordered
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Is_Unique then
            --  MultiplicityElement::isUnique : Boolean

            AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Unique
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Lower_Value_A_Owning_Lower then
            --  MultiplicityElement::lowerValue : ValueSpecification

            AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Lower_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Ordering then
            --  ObjectNode::ordering : ObjectNodeOrderingKind

            AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Ordering
               (AMF.UML.Holders.Object_Node_Ordering_Kinds.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Selection_A_Object_Node then
            --  ObjectNode::selection : Behavior

            AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Selection
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Upper_Bound_A_Object_Node then
            --  ObjectNode::upperBound : ValueSpecification

            AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Upper_Bound
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Upper_Value_A_Owning_Upper then
            --  MultiplicityElement::upperValue : ValueSpecification

            AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Upper_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Action_Input_Pin_Set;

      ----------------------
      -- UML_Activity_Set --
      ----------------------

      procedure UML_Activity_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Classifier_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::classifierBehavior : Behavior

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Classifier_Behavior
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Active
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Is_Read_Only then
            --  Activity::isReadOnly : Boolean

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Read_Only
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Is_Reentrant then
            --  Behavior::isReentrant : Boolean

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Is_Single_Execution then
            --  Activity::isSingleExecution : Boolean

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Single_Execution
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Specification_Behavioral_Feature_Method then
            --  Behavior::specification : BehavioralFeature

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Specification
               (AMF.UML.Behavioral_Features.UML_Behavioral_Feature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Activity_Set;

      ---------------------------------
      -- UML_Activity_Final_Node_Set --
      ---------------------------------

      procedure UML_Activity_Final_Node_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Activity_Final_Node_Set;

      -------------------------------------
      -- UML_Activity_Parameter_Node_Set --
      -------------------------------------

      procedure UML_Activity_Parameter_Node_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Is_Control_Type then
            --  ObjectNode::isControlType : Boolean

            AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Control_Type
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Ordering then
            --  ObjectNode::ordering : ObjectNodeOrderingKind

            AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Ordering
               (AMF.UML.Holders.Object_Node_Ordering_Kinds.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Parameter_Node_Parameter_A_Activity_Parameter_Node then
            --  ActivityParameterNode::parameter : Parameter

            AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Parameter
               (AMF.UML.Parameters.UML_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Selection_A_Object_Node then
            --  ObjectNode::selection : Behavior

            AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Selection
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Upper_Bound_A_Object_Node then
            --  ObjectNode::upperBound : ValueSpecification

            AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Upper_Bound
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Activity_Parameter_Node_Set;

      --------------------------------
      -- UML_Activity_Partition_Set --
      --------------------------------

      procedure UML_Activity_Partition_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_In_Activity_Activity_Group then
            --  ActivityGroup::inActivity : Activity

            AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Partition_Is_Dimension then
            --  ActivityPartition::isDimension : Boolean

            AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Dimension
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Partition_Is_External then
            --  ActivityPartition::isExternal : Boolean

            AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_External
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Partition_Represents_A_Activity_Partition then
            --  ActivityPartition::represents : Element

            AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Represents
               (AMF.UML.Elements.UML_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Partition_Super_Partition_Activity_Partition_Subpartition then
            --  ActivityPartition::superPartition : ActivityPartition

            AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Super_Partition
               (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Activity_Partition_Set;

      -------------------
      -- UML_Actor_Set --
      -------------------

      procedure UML_Actor_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Classifier_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::classifierBehavior : Behavior

            AMF.UML.Actors.UML_Actor_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Classifier_Behavior
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Actors.UML_Actor_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Actors.UML_Actor_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Actors.UML_Actor_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Actors.UML_Actor_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Actors.UML_Actor_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Actors.UML_Actor_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Actors.UML_Actor_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Actors.UML_Actor_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            AMF.UML.Actors.UML_Actor_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Actors.UML_Actor_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Actors.UML_Actor_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Actors.UML_Actor_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Actors.UML_Actor_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Actors.UML_Actor_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Actor_Set;

      -------------------------------------------------
      -- UML_Add_Structural_Feature_Value_Action_Set --
      -------------------------------------------------

      procedure UML_Add_Structural_Feature_Value_Action_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Add_Structural_Feature_Value_Action_Insert_At_A_Add_Structural_Feature_Value_Action then
            --  AddStructuralFeatureValueAction::insertAt : InputPin

            AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Insert_At
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Add_Structural_Feature_Value_Action_Is_Replace_All then
            --  AddStructuralFeatureValueAction::isReplaceAll : Boolean

            AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Replace_All
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structural_Feature_Action_Object_A_Structural_Feature_Action then
            --  StructuralFeatureAction::object : InputPin

            AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Object
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Write_Structural_Feature_Action_Result_A_Write_Structural_Feature_Action then
            --  WriteStructuralFeatureAction::result : OutputPin

            AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Result
               (AMF.UML.Output_Pins.UML_Output_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structural_Feature_Action_Structural_Feature_A_Structural_Feature_Action then
            --  StructuralFeatureAction::structuralFeature : StructuralFeature

            AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Structural_Feature
               (AMF.UML.Structural_Features.UML_Structural_Feature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Write_Structural_Feature_Action_Value_A_Write_Structural_Feature_Action then
            --  WriteStructuralFeatureAction::value : InputPin

            AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Value
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Add_Structural_Feature_Value_Action_Set;

      ---------------------------------------
      -- UML_Add_Variable_Value_Action_Set --
      ---------------------------------------

      procedure UML_Add_Variable_Value_Action_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Add_Variable_Value_Action_Insert_At_A_Add_Variable_Value_Action then
            --  AddVariableValueAction::insertAt : InputPin

            AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Insert_At
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Add_Variable_Value_Action_Is_Replace_All then
            --  AddVariableValueAction::isReplaceAll : Boolean

            AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Replace_All
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Write_Variable_Action_Value_A_Write_Variable_Action then
            --  WriteVariableAction::value : InputPin

            AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Value
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Variable_Action_Variable_A_Variable_Action then
            --  VariableAction::variable : Variable

            AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Variable
               (AMF.UML.Variables.UML_Variable_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Add_Variable_Value_Action_Set;

      -------------------------------
      -- UML_Any_Receive_Event_Set --
      -------------------------------

      procedure UML_Any_Receive_Event_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Any_Receive_Events.UML_Any_Receive_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Any_Receive_Events.UML_Any_Receive_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Any_Receive_Events.UML_Any_Receive_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Any_Receive_Events.UML_Any_Receive_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Any_Receive_Events.UML_Any_Receive_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Any_Receive_Events.UML_Any_Receive_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Any_Receive_Event_Set;

      ----------------------
      -- UML_Artifact_Set --
      ----------------------

      procedure UML_Artifact_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Artifact_File_Name then
            --  Artifact::fileName : String

            AMF.UML.Artifacts.UML_Artifact_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_File_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Artifacts.UML_Artifact_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Artifacts.UML_Artifact_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Artifacts.UML_Artifact_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Artifacts.UML_Artifact_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Artifacts.UML_Artifact_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Artifacts.UML_Artifact_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Artifacts.UML_Artifact_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Artifacts.UML_Artifact_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            AMF.UML.Artifacts.UML_Artifact_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Artifacts.UML_Artifact_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Artifacts.UML_Artifact_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Artifacts.UML_Artifact_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Artifacts.UML_Artifact_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Artifacts.UML_Artifact_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Artifact_Set;

      -------------------------
      -- UML_Association_Set --
      -------------------------

      procedure UML_Association_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Associations.UML_Association_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Association_Is_Derived then
            --  Association::isDerived : Boolean

            AMF.UML.Associations.UML_Association_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Derived
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Associations.UML_Association_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Associations.UML_Association_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Associations.UML_Association_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Associations.UML_Association_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Associations.UML_Association_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Associations.UML_Association_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Associations.UML_Association_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            AMF.UML.Associations.UML_Association_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Associations.UML_Association_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Associations.UML_Association_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Associations.UML_Association_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Associations.UML_Association_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Associations.UML_Association_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Association_Set;

      -------------------------------
      -- UML_Association_Class_Set --
      -------------------------------

      procedure UML_Association_Class_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Classifier_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::classifierBehavior : Behavior

            AMF.UML.Association_Classes.UML_Association_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Classifier_Behavior
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            AMF.UML.Association_Classes.UML_Association_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Association_Classes.UML_Association_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            AMF.UML.Association_Classes.UML_Association_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Active
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Association_Is_Derived then
            --  Association::isDerived : Boolean

            AMF.UML.Association_Classes.UML_Association_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Derived
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Association_Classes.UML_Association_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Association_Classes.UML_Association_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Association_Classes.UML_Association_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Association_Classes.UML_Association_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Association_Classes.UML_Association_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Association_Classes.UML_Association_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Association_Classes.UML_Association_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            AMF.UML.Association_Classes.UML_Association_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Association_Classes.UML_Association_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Association_Classes.UML_Association_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Association_Classes.UML_Association_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Association_Classes.UML_Association_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Association_Classes.UML_Association_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Association_Class_Set;

      ----------------------------------------------
      -- UML_Behavior_Execution_Specification_Set --
      ----------------------------------------------

      procedure UML_Behavior_Execution_Specification_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Execution_Specification_Behavior_A_Behavior_Execution_Specification then
            --  BehaviorExecutionSpecification::behavior : Behavior

            AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Behavior
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Interaction_Interaction_Fragment then
            --  InteractionFragment::enclosingInteraction : Interaction

            AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Interaction
               (AMF.UML.Interactions.UML_Interaction_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Operand_Interaction_Operand_Fragment then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Operand
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Execution_Specification_Finish_A_Execution_Specification then
            --  ExecutionSpecification::finish : OccurrenceSpecification

            AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Finish
               (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Execution_Specification_Start_A_Execution_Specification then
            --  ExecutionSpecification::start : OccurrenceSpecification

            AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Start
               (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Behavior_Execution_Specification_Set;

      -------------------------------------
      -- UML_Broadcast_Signal_Action_Set --
      -------------------------------------

      procedure UML_Broadcast_Signal_Action_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Invocation_Action_On_Port_A_Invocation_Action then
            --  InvocationAction::onPort : Port

            AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_On_Port
               (AMF.UML.Ports.UML_Port_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Broadcast_Signal_Action_Signal_A_Broadcast_Signal_Action then
            --  BroadcastSignalAction::signal : Signal

            AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Signal
               (AMF.UML.Signals.UML_Signal_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Broadcast_Signal_Action_Set;

      ----------------------------------
      -- UML_Call_Behavior_Action_Set --
      ----------------------------------

      procedure UML_Call_Behavior_Action_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Call_Behavior_Action_Behavior_A_Call_Behavior_Action then
            --  CallBehaviorAction::behavior : Behavior

            AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Behavior
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Call_Action_Is_Synchronous then
            --  CallAction::isSynchronous : Boolean

            AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Synchronous
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Invocation_Action_On_Port_A_Invocation_Action then
            --  InvocationAction::onPort : Port

            AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_On_Port
               (AMF.UML.Ports.UML_Port_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Call_Behavior_Action_Set;

      ------------------------
      -- UML_Call_Event_Set --
      ------------------------

      procedure UML_Call_Event_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Call_Events.UML_Call_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Call_Events.UML_Call_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Call_Event_Operation_A_Call_Event then
            --  CallEvent::operation : Operation

            AMF.UML.Call_Events.UML_Call_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Operation
               (AMF.UML.Operations.UML_Operation_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Call_Events.UML_Call_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Call_Events.UML_Call_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Call_Events.UML_Call_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Call_Events.UML_Call_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Call_Event_Set;

      -----------------------------------
      -- UML_Call_Operation_Action_Set --
      -----------------------------------

      procedure UML_Call_Operation_Action_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Call_Action_Is_Synchronous then
            --  CallAction::isSynchronous : Boolean

            AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Synchronous
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Invocation_Action_On_Port_A_Invocation_Action then
            --  InvocationAction::onPort : Port

            AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_On_Port
               (AMF.UML.Ports.UML_Port_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Call_Operation_Action_Operation_A_Call_Operation_Action then
            --  CallOperationAction::operation : Operation

            AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Operation
               (AMF.UML.Operations.UML_Operation_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Call_Operation_Action_Target_A_Call_Operation_Action then
            --  CallOperationAction::target : InputPin

            AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Target
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Call_Operation_Action_Set;

      ---------------------------------
      -- UML_Central_Buffer_Node_Set --
      ---------------------------------

      procedure UML_Central_Buffer_Node_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Is_Control_Type then
            --  ObjectNode::isControlType : Boolean

            AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Control_Type
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Ordering then
            --  ObjectNode::ordering : ObjectNodeOrderingKind

            AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Ordering
               (AMF.UML.Holders.Object_Node_Ordering_Kinds.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Selection_A_Object_Node then
            --  ObjectNode::selection : Behavior

            AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Selection
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Upper_Bound_A_Object_Node then
            --  ObjectNode::upperBound : ValueSpecification

            AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Upper_Bound
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Central_Buffer_Node_Set;

      --------------------------
      -- UML_Change_Event_Set --
      --------------------------

      procedure UML_Change_Event_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Change_Event_Change_Expression_A_Change_Event then
            --  ChangeEvent::changeExpression : ValueSpecification

            AMF.UML.Change_Events.UML_Change_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Change_Expression
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Change_Events.UML_Change_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Change_Events.UML_Change_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Change_Events.UML_Change_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Change_Events.UML_Change_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Change_Events.UML_Change_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Change_Events.UML_Change_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Change_Event_Set;

      -------------------
      -- UML_Class_Set --
      -------------------

      procedure UML_Class_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Classifier_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::classifierBehavior : Behavior

            AMF.UML.Classes.UML_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Classifier_Behavior
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            AMF.UML.Classes.UML_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Classes.UML_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            AMF.UML.Classes.UML_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Active
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Classes.UML_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Classes.UML_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Classes.UML_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Classes.UML_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Classes.UML_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Classes.UML_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Classes.UML_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            AMF.UML.Classes.UML_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Classes.UML_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Classes.UML_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Classes.UML_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Classes.UML_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Classes.UML_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Class_Set;

      -------------------------------------------
      -- UML_Classifier_Template_Parameter_Set --
      -------------------------------------------

      procedure UML_Classifier_Template_Parameter_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Allow_Substitutable then
            --  ClassifierTemplateParameter::allowSubstitutable : Boolean

            AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Allow_Substitutable
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Default_A_Template_Parameter then
            --  TemplateParameter::default : ParameterableElement

            AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Default
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Owned_Default_A_Template_Parameter then
            --  TemplateParameter::ownedDefault : ParameterableElement

            AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Default
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Owned_Parametered_Element_Parameterable_Element_Owning_Template_Parameter then
            --  TemplateParameter::ownedParameteredElement : ParameterableElement

            AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Parametered_Element
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Parametered_Element_Classifier_Template_Parameter then
            --  ClassifierTemplateParameter::parameteredElement : Classifier

            AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Parametered_Element
               (AMF.UML.Classifiers.UML_Classifier_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Parametered_Element_Parameterable_Element_Template_Parameter then
            --  TemplateParameter::parameteredElement : ParameterableElement

            AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Parametered_Element
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Signature_Template_Signature_Owned_Parameter then
            --  TemplateParameter::signature : TemplateSignature

            AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end UML_Classifier_Template_Parameter_Set;

      --------------------
      -- UML_Clause_Set --
      --------------------

      procedure UML_Clause_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Clause_Decider_A_Clause then
            --  Clause::decider : OutputPin

            AMF.UML.Clauses.UML_Clause_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Decider
               (AMF.UML.Output_Pins.UML_Output_Pin_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end UML_Clause_Set;

      --------------------------------------
      -- UML_Clear_Association_Action_Set --
      --------------------------------------

      procedure UML_Clear_Association_Action_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Clear_Association_Action_Association_A_Clear_Association_Action then
            --  ClearAssociationAction::association : Association

            AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Association
               (AMF.UML.Associations.UML_Association_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Clear_Association_Action_Object_A_Clear_Association_Action then
            --  ClearAssociationAction::object : InputPin

            AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Object
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Clear_Association_Action_Set;

      ---------------------------------------------
      -- UML_Clear_Structural_Feature_Action_Set --
      ---------------------------------------------

      procedure UML_Clear_Structural_Feature_Action_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structural_Feature_Action_Object_A_Structural_Feature_Action then
            --  StructuralFeatureAction::object : InputPin

            AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Object
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Clear_Structural_Feature_Action_Result_A_Clear_Structural_Feature_Action then
            --  ClearStructuralFeatureAction::result : OutputPin

            AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Result
               (AMF.UML.Output_Pins.UML_Output_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structural_Feature_Action_Structural_Feature_A_Structural_Feature_Action then
            --  StructuralFeatureAction::structuralFeature : StructuralFeature

            AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Structural_Feature
               (AMF.UML.Structural_Features.UML_Structural_Feature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Clear_Structural_Feature_Action_Set;

      -----------------------------------
      -- UML_Clear_Variable_Action_Set --
      -----------------------------------

      procedure UML_Clear_Variable_Action_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Variable_Action_Variable_A_Variable_Action then
            --  VariableAction::variable : Variable

            AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Variable
               (AMF.UML.Variables.UML_Variable_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Clear_Variable_Action_Set;

      ---------------------------
      -- UML_Collaboration_Set --
      ---------------------------

      procedure UML_Collaboration_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Classifier_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::classifierBehavior : Behavior

            AMF.UML.Collaborations.UML_Collaboration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Classifier_Behavior
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Collaborations.UML_Collaboration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Collaborations.UML_Collaboration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Collaborations.UML_Collaboration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Collaborations.UML_Collaboration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Collaborations.UML_Collaboration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Collaborations.UML_Collaboration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Collaborations.UML_Collaboration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Collaborations.UML_Collaboration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            AMF.UML.Collaborations.UML_Collaboration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Collaborations.UML_Collaboration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Collaborations.UML_Collaboration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Collaborations.UML_Collaboration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Collaborations.UML_Collaboration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Collaborations.UML_Collaboration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Collaboration_Set;

      -------------------------------
      -- UML_Collaboration_Use_Set --
      -------------------------------

      procedure UML_Collaboration_Use_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Collaboration_Use_Type_A_Collaboration_Use then
            --  CollaborationUse::type : Collaboration

            AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Collaborations.UML_Collaboration_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Collaboration_Use_Set;

      -------------------------------
      -- UML_Combined_Fragment_Set --
      -------------------------------

      procedure UML_Combined_Fragment_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Interaction_Interaction_Fragment then
            --  InteractionFragment::enclosingInteraction : Interaction

            AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Interaction
               (AMF.UML.Interactions.UML_Interaction_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Operand_Interaction_Operand_Fragment then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Operand
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Combined_Fragment_Interaction_Operator then
            --  CombinedFragment::interactionOperator : InteractionOperatorKind

            AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Interaction_Operator
               (AMF.UML.Holders.Interaction_Operator_Kinds.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Combined_Fragment_Set;

      ---------------------
      -- UML_Comment_Set --
      ---------------------

      procedure UML_Comment_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Comment_Body then
            --  Comment::body : String

            AMF.UML.Comments.UML_Comment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Body
               (AMF.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Comment_Set;

      --------------------------------
      -- UML_Communication_Path_Set --
      --------------------------------

      procedure UML_Communication_Path_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Communication_Paths.UML_Communication_Path_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Association_Is_Derived then
            --  Association::isDerived : Boolean

            AMF.UML.Communication_Paths.UML_Communication_Path_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Derived
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Communication_Paths.UML_Communication_Path_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Communication_Paths.UML_Communication_Path_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Communication_Paths.UML_Communication_Path_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Communication_Paths.UML_Communication_Path_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Communication_Paths.UML_Communication_Path_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Communication_Paths.UML_Communication_Path_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Communication_Paths.UML_Communication_Path_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            AMF.UML.Communication_Paths.UML_Communication_Path_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Communication_Paths.UML_Communication_Path_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Communication_Paths.UML_Communication_Path_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Communication_Paths.UML_Communication_Path_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Communication_Paths.UML_Communication_Path_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Communication_Paths.UML_Communication_Path_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Communication_Path_Set;

      -----------------------
      -- UML_Component_Set --
      -----------------------

      procedure UML_Component_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Classifier_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::classifierBehavior : Behavior

            AMF.UML.Components.UML_Component_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Classifier_Behavior
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            AMF.UML.Components.UML_Component_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Components.UML_Component_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            AMF.UML.Components.UML_Component_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Active
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Components.UML_Component_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Component_Is_Indirectly_Instantiated then
            --  Component::isIndirectlyInstantiated : Boolean

            AMF.UML.Components.UML_Component_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Indirectly_Instantiated
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Components.UML_Component_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Components.UML_Component_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Components.UML_Component_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Components.UML_Component_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Components.UML_Component_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Components.UML_Component_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            AMF.UML.Components.UML_Component_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Components.UML_Component_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Components.UML_Component_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Components.UML_Component_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Components.UML_Component_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Components.UML_Component_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Component_Set;

      -----------------------------------
      -- UML_Component_Realization_Set --
      -----------------------------------

      procedure UML_Component_Realization_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Component_Realization_Abstraction_Component_Realization then
            --  ComponentRealization::abstraction : Component

            AMF.UML.Component_Realizations.UML_Component_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Abstraction
               (AMF.UML.Components.UML_Component_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Abstraction_Mapping_A_Abstraction then
            --  Abstraction::mapping : OpaqueExpression

            AMF.UML.Component_Realizations.UML_Component_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Mapping
               (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Component_Realizations.UML_Component_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Component_Realizations.UML_Component_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Component_Realizations.UML_Component_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Component_Realizations.UML_Component_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Component_Realizations.UML_Component_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Component_Realizations.UML_Component_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Component_Realization_Set;

      ------------------------------
      -- UML_Conditional_Node_Set --
      ------------------------------

      procedure UML_Conditional_Node_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Activity_Activity_Structured_Node then
            --  StructuredActivityNode::activity : Activity

            AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_In_Activity_Activity_Group then
            --  ActivityGroup::inActivity : Activity

            AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Conditional_Node_Is_Assured then
            --  ConditionalNode::isAssured : Boolean

            AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Assured
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Conditional_Node_Is_Determinate then
            --  ConditionalNode::isDeterminate : Boolean

            AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Determinate
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Must_Isolate then
            --  StructuredActivityNode::mustIsolate : Boolean

            AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Must_Isolate
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Conditional_Node_Set;

      ----------------------------------------------------
      -- UML_Connectable_Element_Template_Parameter_Set --
      ----------------------------------------------------

      procedure UML_Connectable_Element_Template_Parameter_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Default_A_Template_Parameter then
            --  TemplateParameter::default : ParameterableElement

            AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Default
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Owned_Default_A_Template_Parameter then
            --  TemplateParameter::ownedDefault : ParameterableElement

            AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Default
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Owned_Parametered_Element_Parameterable_Element_Owning_Template_Parameter then
            --  TemplateParameter::ownedParameteredElement : ParameterableElement

            AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Parametered_Element
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Connectable_Element_Template_Parameter_Parametered_Element_Connectable_Element_Template_Parameter then
            --  ConnectableElementTemplateParameter::parameteredElement : ConnectableElement

            AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Parametered_Element
               (AMF.UML.Connectable_Elements.UML_Connectable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Parametered_Element_Parameterable_Element_Template_Parameter then
            --  TemplateParameter::parameteredElement : ParameterableElement

            AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Parametered_Element
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Signature_Template_Signature_Owned_Parameter then
            --  TemplateParameter::signature : TemplateSignature

            AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end UML_Connectable_Element_Template_Parameter_Set;

      ----------------------------------------
      -- UML_Connection_Point_Reference_Set --
      ----------------------------------------

      procedure UML_Connection_Point_Reference_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Vertex_Container_Region_Subvertex then
            --  Vertex::container : Region

            AMF.UML.Connection_Point_References.UML_Connection_Point_Reference_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Container
               (AMF.UML.Regions.UML_Region_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Connection_Point_References.UML_Connection_Point_Reference_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Connection_Point_References.UML_Connection_Point_Reference_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Connection_Point_Reference_State_State_Connection then
            --  ConnectionPointReference::state : State

            AMF.UML.Connection_Point_References.UML_Connection_Point_Reference_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_State
               (AMF.UML.States.UML_State_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Connection_Point_References.UML_Connection_Point_Reference_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Connection_Point_Reference_Set;

      -----------------------
      -- UML_Connector_Set --
      -----------------------

      procedure UML_Connector_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Connectors.UML_Connector_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Feature_Is_Static then
            --  Feature::isStatic : Boolean

            AMF.UML.Connectors.UML_Connector_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Static
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Connectors.UML_Connector_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Connectors.UML_Connector_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Connector_Type_A_Connector then
            --  Connector::type : Association

            AMF.UML.Connectors.UML_Connector_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Associations.UML_Association_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Connectors.UML_Connector_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Connector_Set;

      ---------------------------
      -- UML_Connector_End_Set --
      ---------------------------

      procedure UML_Connector_End_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Is_Ordered then
            --  MultiplicityElement::isOrdered : Boolean

            AMF.UML.Connector_Ends.UML_Connector_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Ordered
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Is_Unique then
            --  MultiplicityElement::isUnique : Boolean

            AMF.UML.Connector_Ends.UML_Connector_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Unique
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Lower_Value_A_Owning_Lower then
            --  MultiplicityElement::lowerValue : ValueSpecification

            AMF.UML.Connector_Ends.UML_Connector_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Lower_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Connector_End_Part_With_Port_A_Connector_End then
            --  ConnectorEnd::partWithPort : Property

            AMF.UML.Connector_Ends.UML_Connector_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Part_With_Port
               (AMF.UML.Properties.UML_Property_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Connector_End_Role_Connectable_Element_End then
            --  ConnectorEnd::role : ConnectableElement

            AMF.UML.Connector_Ends.UML_Connector_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Role
               (AMF.UML.Connectable_Elements.UML_Connectable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Upper_Value_A_Owning_Upper then
            --  MultiplicityElement::upperValue : ValueSpecification

            AMF.UML.Connector_Ends.UML_Connector_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Upper_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end UML_Connector_End_Set;

      --------------------------------------
      -- UML_Consider_Ignore_Fragment_Set --
      --------------------------------------

      procedure UML_Consider_Ignore_Fragment_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Interaction_Interaction_Fragment then
            --  InteractionFragment::enclosingInteraction : Interaction

            AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Interaction
               (AMF.UML.Interactions.UML_Interaction_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Operand_Interaction_Operand_Fragment then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Operand
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Combined_Fragment_Interaction_Operator then
            --  CombinedFragment::interactionOperator : InteractionOperatorKind

            AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Interaction_Operator
               (AMF.UML.Holders.Interaction_Operator_Kinds.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Consider_Ignore_Fragment_Set;

      ------------------------
      -- UML_Constraint_Set --
      ------------------------

      procedure UML_Constraint_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Constraint_Context_Namespace_Owned_Rule then
            --  Constraint::context : Namespace

            AMF.UML.Constraints.UML_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Context
               (AMF.UML.Namespaces.UML_Namespace_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Constraints.UML_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Constraints.UML_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Constraints.UML_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Constraint_Specification_A_Owning_Constraint then
            --  Constraint::specification : ValueSpecification

            AMF.UML.Constraints.UML_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Specification
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Constraints.UML_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Constraints.UML_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Constraints.UML_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Constraint_Set;

      --------------------------
      -- UML_Continuation_Set --
      --------------------------

      procedure UML_Continuation_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Interaction_Interaction_Fragment then
            --  InteractionFragment::enclosingInteraction : Interaction

            AMF.UML.Continuations.UML_Continuation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Interaction
               (AMF.UML.Interactions.UML_Interaction_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Operand_Interaction_Operand_Fragment then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            AMF.UML.Continuations.UML_Continuation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Operand
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Continuations.UML_Continuation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Continuations.UML_Continuation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Continuation_Setting then
            --  Continuation::setting : Boolean

            AMF.UML.Continuations.UML_Continuation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Setting
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Continuations.UML_Continuation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Continuation_Set;

      --------------------------
      -- UML_Control_Flow_Set --
      --------------------------

      procedure UML_Control_Flow_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Edge_Activity_Activity_Edge then
            --  ActivityEdge::activity : Activity

            AMF.UML.Control_Flows.UML_Control_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Edge_Guard_A_Activity_Edge then
            --  ActivityEdge::guard : ValueSpecification

            AMF.UML.Control_Flows.UML_Control_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Guard
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Edge_In_Structured_Node_Structured_Activity_Node_Edge then
            --  ActivityEdge::inStructuredNode : StructuredActivityNode

            AMF.UML.Control_Flows.UML_Control_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Edge_Interrupts_Interruptible_Activity_Region_Interrupting_Edge then
            --  ActivityEdge::interrupts : InterruptibleActivityRegion

            AMF.UML.Control_Flows.UML_Control_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Interrupts
               (AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Control_Flows.UML_Control_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Control_Flows.UML_Control_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Control_Flows.UML_Control_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Edge_Source_Activity_Node_Outgoing then
            --  ActivityEdge::source : ActivityNode

            AMF.UML.Control_Flows.UML_Control_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Source
               (AMF.UML.Activity_Nodes.UML_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Edge_Target_Activity_Node_Incoming then
            --  ActivityEdge::target : ActivityNode

            AMF.UML.Control_Flows.UML_Control_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Target
               (AMF.UML.Activity_Nodes.UML_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Control_Flows.UML_Control_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Edge_Weight_A_Activity_Edge then
            --  ActivityEdge::weight : ValueSpecification

            AMF.UML.Control_Flows.UML_Control_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Weight
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end UML_Control_Flow_Set;

      --------------------------------
      -- UML_Create_Link_Action_Set --
      --------------------------------

      procedure UML_Create_Link_Action_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Create_Link_Action_Set;

      ---------------------------------------
      -- UML_Create_Link_Object_Action_Set --
      ---------------------------------------

      procedure UML_Create_Link_Object_Action_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Create_Link_Object_Action_Result_A_Create_Link_Object_Action then
            --  CreateLinkObjectAction::result : OutputPin

            AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Result
               (AMF.UML.Output_Pins.UML_Output_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Create_Link_Object_Action_Set;

      ----------------------------------
      -- UML_Create_Object_Action_Set --
      ----------------------------------

      procedure UML_Create_Object_Action_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Create_Object_Action_Classifier_A_Create_Object_Action then
            --  CreateObjectAction::classifier : Classifier

            AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Classifier
               (AMF.UML.Classifiers.UML_Classifier_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Create_Object_Action_Result_A_Create_Object_Action then
            --  CreateObjectAction::result : OutputPin

            AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Result
               (AMF.UML.Output_Pins.UML_Output_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Create_Object_Action_Set;

      ------------------------------------
      -- UMLDI_UML_Activity_Diagram_Set --
      ------------------------------------

      procedure UMLDI_UML_Activity_Diagram_Set is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Bounds
               (AMF.DC.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Documentation then
            --  Diagram::documentation : String

            AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Documentation
               (League.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Heading_A_Headed_Diagram then
            --  UMLDiagram::heading : UMLLabel

            AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Heading
               (AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Activity_Diagram_Is_Activity_Frame then
            --  UMLActivityDiagram::isActivityFrame : Boolean

            AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Activity_Frame
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Frame then
            --  UMLDiagram::isFrame : Boolean

            AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Frame
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Icon
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Iso then
            --  UMLDiagram::isIso : Boolean

            AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Iso
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Activity_Diagram_Model_Element_A_Uml_Diagram_Element then
            --  UMLActivityDiagram::modelElement : Activity

            AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Model_Element
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Behavior_Diagram_Model_Element_A_Uml_Diagram_Element then
            --  UMLBehaviorDiagram::modelElement : Behavior

            AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Model_Element
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Name then
            --  Diagram::name : String

            AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (League.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Element
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Resolution then
            --  Diagram::resolution : Real

            AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Resolution
               (AMF.Holders.Reals.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UMLDI.UML_Activity_Diagrams.UMLDI_UML_Activity_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Activity_Diagram_Set;

      -----------------------------------------
      -- UMLDI_UML_Association_End_Label_Set --
      -----------------------------------------

      procedure UMLDI_UML_Association_End_Label_Set is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            AMF.UMLDI.UML_Association_End_Labels.UMLDI_UML_Association_End_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Bounds
               (AMF.DC.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            AMF.UMLDI.UML_Association_End_Labels.UMLDI_UML_Association_End_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Icon
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            AMF.UMLDI.UML_Association_End_Labels.UMLDI_UML_Association_End_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            AMF.UMLDI.UML_Association_End_Labels.UMLDI_UML_Association_End_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Association_End_Label_Model_Element_A_Uml_Diagram_Element then
            --  UMLAssociationEndLabel::modelElement : Property

            AMF.UMLDI.UML_Association_End_Labels.UMLDI_UML_Association_End_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Model_Element
               (AMF.UML.Properties.UML_Property_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            AMF.UMLDI.UML_Association_End_Labels.UMLDI_UML_Association_End_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Element
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            AMF.UMLDI.UML_Association_End_Labels.UMLDI_UML_Association_End_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            AMF.UMLDI.UML_Association_End_Labels.UMLDI_UML_Association_End_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Label_Text then
            --  UMLLabel::text : String

            AMF.UMLDI.UML_Association_End_Labels.UMLDI_UML_Association_End_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Text
               (League.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Association_End_Label_Set;

      ----------------------------------------------------------
      -- UMLDI_UML_Association_Or_Connector_Or_Link_Shape_Set --
      ----------------------------------------------------------

      procedure UMLDI_UML_Association_Or_Connector_Or_Link_Shape_Set is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            AMF.UMLDI.UML_Association_Or_Connector_Or_Link_Shapes.UMLDI_UML_Association_Or_Connector_Or_Link_Shape_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Bounds
               (AMF.DC.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            AMF.UMLDI.UML_Association_Or_Connector_Or_Link_Shapes.UMLDI_UML_Association_Or_Connector_Or_Link_Shape_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Icon
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Association_Or_Connector_Or_Link_Shape_Kind then
            --  UMLAssociationOrConnectorOrLinkShape::kind : UMLAssociationOrConnectorOrLinkShapeKind

            AMF.UMLDI.UML_Association_Or_Connector_Or_Link_Shapes.UMLDI_UML_Association_Or_Connector_Or_Link_Shape_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Kind
               (AMF.UMLDI.Holders.UML_Association_Or_Connector_Or_Link_Shape_Kinds.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            AMF.UMLDI.UML_Association_Or_Connector_Or_Link_Shapes.UMLDI_UML_Association_Or_Connector_Or_Link_Shape_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            AMF.UMLDI.UML_Association_Or_Connector_Or_Link_Shapes.UMLDI_UML_Association_Or_Connector_Or_Link_Shape_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            AMF.UMLDI.UML_Association_Or_Connector_Or_Link_Shapes.UMLDI_UML_Association_Or_Connector_Or_Link_Shape_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Element
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            AMF.UMLDI.UML_Association_Or_Connector_Or_Link_Shapes.UMLDI_UML_Association_Or_Connector_Or_Link_Shape_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            AMF.UMLDI.UML_Association_Or_Connector_Or_Link_Shapes.UMLDI_UML_Association_Or_Connector_Or_Link_Shape_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Association_Or_Connector_Or_Link_Shape_Set;

      ---------------------------------
      -- UMLDI_UML_Class_Diagram_Set --
      ---------------------------------

      procedure UMLDI_UML_Class_Diagram_Set is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Bounds
               (AMF.DC.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Documentation then
            --  Diagram::documentation : String

            AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Documentation
               (League.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Heading_A_Headed_Diagram then
            --  UMLDiagram::heading : UMLLabel

            AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Heading
               (AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Class_Or_Composite_Structure_Diagram_Is_Association_Dot_Shown then
            --  UMLClassOrCompositeStructureDiagram::isAssociationDotShown : Boolean

            AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Association_Dot_Shown
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Frame then
            --  UMLDiagram::isFrame : Boolean

            AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Frame
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Icon
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Iso then
            --  UMLDiagram::isIso : Boolean

            AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Iso
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Name then
            --  Diagram::name : String

            AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (League.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Class_Or_Composite_Structure_Diagram_Navigability_Notation then
            --  UMLClassOrCompositeStructureDiagram::navigabilityNotation : UMLNavigabilityNotationKind

            AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Navigability_Notation
               (AMF.UMLDI.Holders.UML_Navigability_Notation_Kinds.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Class_Or_Composite_Structure_Diagram_Non_Navigability_Notation then
            --  UMLClassOrCompositeStructureDiagram::nonNavigabilityNotation : UMLNavigabilityNotationKind

            AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Non_Navigability_Notation
               (AMF.UMLDI.Holders.UML_Navigability_Notation_Kinds.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Element
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Resolution then
            --  Diagram::resolution : Real

            AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Resolution
               (AMF.Holders.Reals.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UMLDI.UML_Class_Diagrams.UMLDI_UML_Class_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Class_Diagram_Set;

      ------------------------------------
      -- UMLDI_UML_Classifier_Shape_Set --
      ------------------------------------

      procedure UMLDI_UML_Classifier_Shape_Set is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            AMF.UMLDI.UML_Classifier_Shapes.UMLDI_UML_Classifier_Shape_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Bounds
               (AMF.DC.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Classifier_Shape_Is_Double_Sided then
            --  UMLClassifierShape::isDoubleSided : Boolean

            AMF.UMLDI.UML_Classifier_Shapes.UMLDI_UML_Classifier_Shape_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Double_Sided
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            AMF.UMLDI.UML_Classifier_Shapes.UMLDI_UML_Classifier_Shape_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Icon
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Classifier_Shape_Is_Indent_For_Visibility then
            --  UMLClassifierShape::isIndentForVisibility : Boolean

            AMF.UMLDI.UML_Classifier_Shapes.UMLDI_UML_Classifier_Shape_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Indent_For_Visibility
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            AMF.UMLDI.UML_Classifier_Shapes.UMLDI_UML_Classifier_Shape_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            AMF.UMLDI.UML_Classifier_Shapes.UMLDI_UML_Classifier_Shape_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Classifier_Shape_Model_Element_A_Uml_Diagram_Element then
            --  UMLClassifierShape::modelElement : Classifier

            AMF.UMLDI.UML_Classifier_Shapes.UMLDI_UML_Classifier_Shape_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Model_Element
               (AMF.UML.Classifiers.UML_Classifier_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            AMF.UMLDI.UML_Classifier_Shapes.UMLDI_UML_Classifier_Shape_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Element
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            AMF.UMLDI.UML_Classifier_Shapes.UMLDI_UML_Classifier_Shape_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            AMF.UMLDI.UML_Classifier_Shapes.UMLDI_UML_Classifier_Shape_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Classifier_Shape_Set;

      -------------------------------
      -- UMLDI_UML_Compartment_Set --
      -------------------------------

      procedure UMLDI_UML_Compartment_Set is
      begin
         if Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            AMF.UMLDI.UML_Compartments.UMLDI_UML_Compartment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Icon
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            AMF.UMLDI.UML_Compartments.UMLDI_UML_Compartment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            AMF.UMLDI.UML_Compartments.UMLDI_UML_Compartment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            AMF.UMLDI.UML_Compartments.UMLDI_UML_Compartment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Element
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            AMF.UMLDI.UML_Compartments.UMLDI_UML_Compartment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            AMF.UMLDI.UML_Compartments.UMLDI_UML_Compartment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Compartment_Set;

      -----------------------------------------
      -- UMLDI_UML_Compartmentable_Shape_Set --
      -----------------------------------------

      procedure UMLDI_UML_Compartmentable_Shape_Set is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            AMF.UMLDI.UML_Compartmentable_Shapes.UMLDI_UML_Compartmentable_Shape_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Bounds
               (AMF.DC.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            AMF.UMLDI.UML_Compartmentable_Shapes.UMLDI_UML_Compartmentable_Shape_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Icon
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            AMF.UMLDI.UML_Compartmentable_Shapes.UMLDI_UML_Compartmentable_Shape_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            AMF.UMLDI.UML_Compartmentable_Shapes.UMLDI_UML_Compartmentable_Shape_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            AMF.UMLDI.UML_Compartmentable_Shapes.UMLDI_UML_Compartmentable_Shape_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Element
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            AMF.UMLDI.UML_Compartmentable_Shapes.UMLDI_UML_Compartmentable_Shape_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            AMF.UMLDI.UML_Compartmentable_Shapes.UMLDI_UML_Compartmentable_Shape_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Compartmentable_Shape_Set;

      -------------------------------------
      -- UMLDI_UML_Component_Diagram_Set --
      -------------------------------------

      procedure UMLDI_UML_Component_Diagram_Set is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Bounds
               (AMF.DC.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Documentation then
            --  Diagram::documentation : String

            AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Documentation
               (League.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Heading_A_Headed_Diagram then
            --  UMLDiagram::heading : UMLLabel

            AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Heading
               (AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Frame then
            --  UMLDiagram::isFrame : Boolean

            AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Frame
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Icon
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Iso then
            --  UMLDiagram::isIso : Boolean

            AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Iso
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Name then
            --  Diagram::name : String

            AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (League.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Element
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Resolution then
            --  Diagram::resolution : Real

            AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Resolution
               (AMF.Holders.Reals.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UMLDI.UML_Component_Diagrams.UMLDI_UML_Component_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Component_Diagram_Set;

      -----------------------------------------------
      -- UMLDI_UML_Composite_Structure_Diagram_Set --
      -----------------------------------------------

      procedure UMLDI_UML_Composite_Structure_Diagram_Set is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Bounds
               (AMF.DC.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Documentation then
            --  Diagram::documentation : String

            AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Documentation
               (League.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Heading_A_Headed_Diagram then
            --  UMLDiagram::heading : UMLLabel

            AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Heading
               (AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Class_Or_Composite_Structure_Diagram_Is_Association_Dot_Shown then
            --  UMLClassOrCompositeStructureDiagram::isAssociationDotShown : Boolean

            AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Association_Dot_Shown
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Frame then
            --  UMLDiagram::isFrame : Boolean

            AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Frame
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Icon
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Iso then
            --  UMLDiagram::isIso : Boolean

            AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Iso
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Name then
            --  Diagram::name : String

            AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (League.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Class_Or_Composite_Structure_Diagram_Navigability_Notation then
            --  UMLClassOrCompositeStructureDiagram::navigabilityNotation : UMLNavigabilityNotationKind

            AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Navigability_Notation
               (AMF.UMLDI.Holders.UML_Navigability_Notation_Kinds.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Class_Or_Composite_Structure_Diagram_Non_Navigability_Notation then
            --  UMLClassOrCompositeStructureDiagram::nonNavigabilityNotation : UMLNavigabilityNotationKind

            AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Non_Navigability_Notation
               (AMF.UMLDI.Holders.UML_Navigability_Notation_Kinds.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Element
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Resolution then
            --  Diagram::resolution : Real

            AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Resolution
               (AMF.Holders.Reals.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UMLDI.UML_Composite_Structure_Diagrams.UMLDI_UML_Composite_Structure_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Composite_Structure_Diagram_Set;

      --------------------------------------
      -- UMLDI_UML_Deployment_Diagram_Set --
      --------------------------------------

      procedure UMLDI_UML_Deployment_Diagram_Set is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Bounds
               (AMF.DC.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Documentation then
            --  Diagram::documentation : String

            AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Documentation
               (League.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Heading_A_Headed_Diagram then
            --  UMLDiagram::heading : UMLLabel

            AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Heading
               (AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Frame then
            --  UMLDiagram::isFrame : Boolean

            AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Frame
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Icon
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Iso then
            --  UMLDiagram::isIso : Boolean

            AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Iso
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Name then
            --  Diagram::name : String

            AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (League.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Element
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Resolution then
            --  Diagram::resolution : Real

            AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Resolution
               (AMF.Holders.Reals.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UMLDI.UML_Deployment_Diagrams.UMLDI_UML_Deployment_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Deployment_Diagram_Set;

      ------------------------
      -- UMLDI_UML_Edge_Set --
      ------------------------

      procedure UMLDI_UML_Edge_Set is
      begin
         if Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            AMF.UMLDI.UML_Edges.UMLDI_UML_Edge_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Icon
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            AMF.UMLDI.UML_Edges.UMLDI_UML_Edge_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            AMF.UMLDI.UML_Edges.UMLDI_UML_Edge_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            AMF.UMLDI.UML_Edges.UMLDI_UML_Edge_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Element
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            AMF.UMLDI.UML_Edges.UMLDI_UML_Edge_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            AMF.UMLDI.UML_Edges.UMLDI_UML_Edge_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Edge_Source_A_Source_Edge then
            --  UMLEdge::source : UMLDiagramElement

            AMF.UMLDI.UML_Edges.UMLDI_UML_Edge_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Source
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Edge_Target_A_Target_Edge then
            --  UMLEdge::target : UMLDiagramElement

            AMF.UMLDI.UML_Edges.UMLDI_UML_Edge_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Target
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Edge_Set;

      ---------------------------------------
      -- UMLDI_UML_Interaction_Diagram_Set --
      ---------------------------------------

      procedure UMLDI_UML_Interaction_Diagram_Set is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Bounds
               (AMF.DC.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Documentation then
            --  Diagram::documentation : String

            AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Documentation
               (League.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Heading_A_Headed_Diagram then
            --  UMLDiagram::heading : UMLLabel

            AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Heading
               (AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Frame then
            --  UMLDiagram::isFrame : Boolean

            AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Frame
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Icon
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Iso then
            --  UMLDiagram::isIso : Boolean

            AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Iso
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Interaction_Diagram_Kind then
            --  UMLInteractionDiagram::kind : UMLInteractionDiagramKind

            AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Kind
               (AMF.UMLDI.Holders.UML_Interaction_Diagram_Kinds.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Behavior_Diagram_Model_Element_A_Uml_Diagram_Element then
            --  UMLBehaviorDiagram::modelElement : Behavior

            AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Model_Element
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Interaction_Diagram_Model_Element_A_Uml_Diagram_Element then
            --  UMLInteractionDiagram::modelElement : Interaction

            AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Model_Element
               (AMF.UML.Interactions.UML_Interaction_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Name then
            --  Diagram::name : String

            AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (League.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Element
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Resolution then
            --  Diagram::resolution : Real

            AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Resolution
               (AMF.Holders.Reals.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UMLDI.UML_Interaction_Diagrams.UMLDI_UML_Interaction_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Interaction_Diagram_Set;

      -------------------------------------------
      -- UMLDI_UML_Interaction_Table_Label_Set --
      -------------------------------------------

      procedure UMLDI_UML_Interaction_Table_Label_Set is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            AMF.UMLDI.UML_Interaction_Table_Labels.UMLDI_UML_Interaction_Table_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Bounds
               (AMF.DC.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            AMF.UMLDI.UML_Interaction_Table_Labels.UMLDI_UML_Interaction_Table_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Icon
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Interaction_Table_Label_Kind then
            --  UMLInteractionTableLabel::kind : UMLInteractionTableLabelKind

            AMF.UMLDI.UML_Interaction_Table_Labels.UMLDI_UML_Interaction_Table_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Kind
               (AMF.UMLDI.Holders.UML_Interaction_Table_Label_Kinds.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            AMF.UMLDI.UML_Interaction_Table_Labels.UMLDI_UML_Interaction_Table_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            AMF.UMLDI.UML_Interaction_Table_Labels.UMLDI_UML_Interaction_Table_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            AMF.UMLDI.UML_Interaction_Table_Labels.UMLDI_UML_Interaction_Table_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Element
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            AMF.UMLDI.UML_Interaction_Table_Labels.UMLDI_UML_Interaction_Table_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            AMF.UMLDI.UML_Interaction_Table_Labels.UMLDI_UML_Interaction_Table_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Label_Text then
            --  UMLLabel::text : String

            AMF.UMLDI.UML_Interaction_Table_Labels.UMLDI_UML_Interaction_Table_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Text
               (League.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Interaction_Table_Label_Set;

      ---------------------------------
      -- UMLDI_UML_Keyword_Label_Set --
      ---------------------------------

      procedure UMLDI_UML_Keyword_Label_Set is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            AMF.UMLDI.UML_Keyword_Labels.UMLDI_UML_Keyword_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Bounds
               (AMF.DC.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            AMF.UMLDI.UML_Keyword_Labels.UMLDI_UML_Keyword_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Icon
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            AMF.UMLDI.UML_Keyword_Labels.UMLDI_UML_Keyword_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            AMF.UMLDI.UML_Keyword_Labels.UMLDI_UML_Keyword_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            AMF.UMLDI.UML_Keyword_Labels.UMLDI_UML_Keyword_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Element
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            AMF.UMLDI.UML_Keyword_Labels.UMLDI_UML_Keyword_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            AMF.UMLDI.UML_Keyword_Labels.UMLDI_UML_Keyword_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Label_Text then
            --  UMLLabel::text : String

            AMF.UMLDI.UML_Keyword_Labels.UMLDI_UML_Keyword_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Text
               (League.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Keyword_Label_Set;

      -------------------------
      -- UMLDI_UML_Label_Set --
      -------------------------

      procedure UMLDI_UML_Label_Set is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Bounds
               (AMF.DC.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Icon
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Element
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Label_Text then
            --  UMLLabel::text : String

            AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Text
               (League.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Label_Set;

      --------------------------------------
      -- UMLDI_UML_Multiplicity_Label_Set --
      --------------------------------------

      procedure UMLDI_UML_Multiplicity_Label_Set is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            AMF.UMLDI.UML_Multiplicity_Labels.UMLDI_UML_Multiplicity_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Bounds
               (AMF.DC.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            AMF.UMLDI.UML_Multiplicity_Labels.UMLDI_UML_Multiplicity_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Icon
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            AMF.UMLDI.UML_Multiplicity_Labels.UMLDI_UML_Multiplicity_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            AMF.UMLDI.UML_Multiplicity_Labels.UMLDI_UML_Multiplicity_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Multiplicity_Label_Model_Element_A_Uml_Diagram_Element then
            --  UMLMultiplicityLabel::modelElement : MultiplicityElement

            AMF.UMLDI.UML_Multiplicity_Labels.UMLDI_UML_Multiplicity_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Model_Element
               (AMF.UML.Multiplicity_Elements.UML_Multiplicity_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            AMF.UMLDI.UML_Multiplicity_Labels.UMLDI_UML_Multiplicity_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Element
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            AMF.UMLDI.UML_Multiplicity_Labels.UMLDI_UML_Multiplicity_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            AMF.UMLDI.UML_Multiplicity_Labels.UMLDI_UML_Multiplicity_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Label_Text then
            --  UMLLabel::text : String

            AMF.UMLDI.UML_Multiplicity_Labels.UMLDI_UML_Multiplicity_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Text
               (League.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Multiplicity_Label_Set;

      ------------------------------
      -- UMLDI_UML_Name_Label_Set --
      ------------------------------

      procedure UMLDI_UML_Name_Label_Set is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            AMF.UMLDI.UML_Name_Labels.UMLDI_UML_Name_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Bounds
               (AMF.DC.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            AMF.UMLDI.UML_Name_Labels.UMLDI_UML_Name_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Icon
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            AMF.UMLDI.UML_Name_Labels.UMLDI_UML_Name_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            AMF.UMLDI.UML_Name_Labels.UMLDI_UML_Name_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Name_Label_Mode_Element_A_Uml_Diagram_Element then
            --  UMLNameLabel::modeElement : NamedElement

            AMF.UMLDI.UML_Name_Labels.UMLDI_UML_Name_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Mode_Element
               (AMF.UML.Named_Elements.UML_Named_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            AMF.UMLDI.UML_Name_Labels.UMLDI_UML_Name_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Element
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            AMF.UMLDI.UML_Name_Labels.UMLDI_UML_Name_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            AMF.UMLDI.UML_Name_Labels.UMLDI_UML_Name_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Label_Text then
            --  UMLLabel::text : String

            AMF.UMLDI.UML_Name_Labels.UMLDI_UML_Name_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Text
               (League.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Name_Label_Set;

      ----------------------------------
      -- UMLDI_UML_Object_Diagram_Set --
      ----------------------------------

      procedure UMLDI_UML_Object_Diagram_Set is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Bounds
               (AMF.DC.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Documentation then
            --  Diagram::documentation : String

            AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Documentation
               (League.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Heading_A_Headed_Diagram then
            --  UMLDiagram::heading : UMLLabel

            AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Heading
               (AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Frame then
            --  UMLDiagram::isFrame : Boolean

            AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Frame
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Icon
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Iso then
            --  UMLDiagram::isIso : Boolean

            AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Iso
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Name then
            --  Diagram::name : String

            AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (League.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Element
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Resolution then
            --  Diagram::resolution : Real

            AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Resolution
               (AMF.Holders.Reals.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UMLDI.UML_Object_Diagrams.UMLDI_UML_Object_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Object_Diagram_Set;

      -----------------------------------
      -- UMLDI_UML_Package_Diagram_Set --
      -----------------------------------

      procedure UMLDI_UML_Package_Diagram_Set is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Bounds
               (AMF.DC.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Documentation then
            --  Diagram::documentation : String

            AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Documentation
               (League.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Heading_A_Headed_Diagram then
            --  UMLDiagram::heading : UMLLabel

            AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Heading
               (AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Frame then
            --  UMLDiagram::isFrame : Boolean

            AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Frame
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Icon
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Iso then
            --  UMLDiagram::isIso : Boolean

            AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Iso
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Name then
            --  Diagram::name : String

            AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (League.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Element
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Resolution then
            --  Diagram::resolution : Real

            AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Resolution
               (AMF.Holders.Reals.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UMLDI.UML_Package_Diagrams.UMLDI_UML_Package_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Package_Diagram_Set;

      -----------------------------------
      -- UMLDI_UML_Profile_Diagram_Set --
      -----------------------------------

      procedure UMLDI_UML_Profile_Diagram_Set is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Bounds
               (AMF.DC.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Documentation then
            --  Diagram::documentation : String

            AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Documentation
               (League.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Heading_A_Headed_Diagram then
            --  UMLDiagram::heading : UMLLabel

            AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Heading
               (AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Frame then
            --  UMLDiagram::isFrame : Boolean

            AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Frame
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Icon
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Iso then
            --  UMLDiagram::isIso : Boolean

            AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Iso
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Name then
            --  Diagram::name : String

            AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (League.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Element
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Resolution then
            --  Diagram::resolution : Real

            AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Resolution
               (AMF.Holders.Reals.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UMLDI.UML_Profile_Diagrams.UMLDI_UML_Profile_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Profile_Diagram_Set;

      -----------------------------------
      -- UMLDI_UML_Redefines_Label_Set --
      -----------------------------------

      procedure UMLDI_UML_Redefines_Label_Set is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            AMF.UMLDI.UML_Redefines_Labels.UMLDI_UML_Redefines_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Bounds
               (AMF.DC.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            AMF.UMLDI.UML_Redefines_Labels.UMLDI_UML_Redefines_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Icon
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            AMF.UMLDI.UML_Redefines_Labels.UMLDI_UML_Redefines_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            AMF.UMLDI.UML_Redefines_Labels.UMLDI_UML_Redefines_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Redefines_Label_Model_Element_A_Uml_Diagram_Element then
            --  UMLRedefinesLabel::modelElement : RedefinableElement

            AMF.UMLDI.UML_Redefines_Labels.UMLDI_UML_Redefines_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Model_Element
               (AMF.UML.Redefinable_Elements.UML_Redefinable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            AMF.UMLDI.UML_Redefines_Labels.UMLDI_UML_Redefines_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Element
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            AMF.UMLDI.UML_Redefines_Labels.UMLDI_UML_Redefines_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            AMF.UMLDI.UML_Redefines_Labels.UMLDI_UML_Redefines_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Label_Text then
            --  UMLLabel::text : String

            AMF.UMLDI.UML_Redefines_Labels.UMLDI_UML_Redefines_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Text
               (League.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Redefines_Label_Set;

      -------------------------
      -- UMLDI_UML_Shape_Set --
      -------------------------

      procedure UMLDI_UML_Shape_Set is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            AMF.UMLDI.UML_Shapes.UMLDI_UML_Shape_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Bounds
               (AMF.DC.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            AMF.UMLDI.UML_Shapes.UMLDI_UML_Shape_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Icon
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            AMF.UMLDI.UML_Shapes.UMLDI_UML_Shape_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            AMF.UMLDI.UML_Shapes.UMLDI_UML_Shape_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            AMF.UMLDI.UML_Shapes.UMLDI_UML_Shape_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Element
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            AMF.UMLDI.UML_Shapes.UMLDI_UML_Shape_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            AMF.UMLDI.UML_Shapes.UMLDI_UML_Shape_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Shape_Set;

      -----------------------------------------
      -- UMLDI_UML_State_Machine_Diagram_Set --
      -----------------------------------------

      procedure UMLDI_UML_State_Machine_Diagram_Set is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Bounds
               (AMF.DC.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Documentation then
            --  Diagram::documentation : String

            AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Documentation
               (League.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Heading_A_Headed_Diagram then
            --  UMLDiagram::heading : UMLLabel

            AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Heading
               (AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_State_Machine_Diagram_Inherited_State_Border then
            --  UMLStateMachineDiagram::inheritedStateBorder : UMLInheritedStateBorderKind

            AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Inherited_State_Border
               (AMF.UMLDI.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_State_Machine_Diagram_Is_Collapse_State_Icon then
            --  UMLStateMachineDiagram::isCollapseStateIcon : Boolean

            AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Collapse_State_Icon
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Frame then
            --  UMLDiagram::isFrame : Boolean

            AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Frame
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Icon
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Iso then
            --  UMLDiagram::isIso : Boolean

            AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Iso
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_State_Machine_Diagram_Is_Transition_Oriented then
            --  UMLStateMachineDiagram::isTransitionOriented : Boolean

            AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Transition_Oriented
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Behavior_Diagram_Model_Element_A_Uml_Diagram_Element then
            --  UMLBehaviorDiagram::modelElement : Behavior

            AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Model_Element
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_State_Machine_Diagram_Model_Element_A_Uml_Diagram_Element then
            --  UMLStateMachineDiagram::modelElement : StateMachine

            AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Model_Element
               (AMF.UML.State_Machines.UML_State_Machine_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Name then
            --  Diagram::name : String

            AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (League.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Element
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Resolution then
            --  Diagram::resolution : Real

            AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Resolution
               (AMF.Holders.Reals.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UMLDI.UML_State_Machine_Diagrams.UMLDI_UML_State_Machine_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_State_Machine_Diagram_Set;

      -------------------------------
      -- UMLDI_UML_State_Shape_Set --
      -------------------------------

      procedure UMLDI_UML_State_Shape_Set is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            AMF.UMLDI.UML_State_Shapes.UMLDI_UML_State_Shape_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Bounds
               (AMF.DC.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            AMF.UMLDI.UML_State_Shapes.UMLDI_UML_State_Shape_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Icon
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_State_Shape_Is_Tabbed then
            --  UMLStateShape::isTabbed : Boolean

            AMF.UMLDI.UML_State_Shapes.UMLDI_UML_State_Shape_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Tabbed
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            AMF.UMLDI.UML_State_Shapes.UMLDI_UML_State_Shape_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            AMF.UMLDI.UML_State_Shapes.UMLDI_UML_State_Shape_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            AMF.UMLDI.UML_State_Shapes.UMLDI_UML_State_Shape_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Element
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            AMF.UMLDI.UML_State_Shapes.UMLDI_UML_State_Shape_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            AMF.UMLDI.UML_State_Shapes.UMLDI_UML_State_Shape_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_State_Shape_Set;

      ---------------------------------------------------
      -- UMLDI_UML_Stereotype_Property_Value_Label_Set --
      ---------------------------------------------------

      procedure UMLDI_UML_Stereotype_Property_Value_Label_Set is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            AMF.UMLDI.UML_Stereotype_Property_Value_Labels.UMLDI_UML_Stereotype_Property_Value_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Bounds
               (AMF.DC.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            AMF.UMLDI.UML_Stereotype_Property_Value_Labels.UMLDI_UML_Stereotype_Property_Value_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Icon
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            AMF.UMLDI.UML_Stereotype_Property_Value_Labels.UMLDI_UML_Stereotype_Property_Value_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            AMF.UMLDI.UML_Stereotype_Property_Value_Labels.UMLDI_UML_Stereotype_Property_Value_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Stereotype_Property_Value_Label_Model_Element_A_Uml_Diagram_Element then
            --  UMLStereotypePropertyValueLabel::modelElement : Property

            AMF.UMLDI.UML_Stereotype_Property_Value_Labels.UMLDI_UML_Stereotype_Property_Value_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Model_Element
               (AMF.UML.Properties.UML_Property_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            AMF.UMLDI.UML_Stereotype_Property_Value_Labels.UMLDI_UML_Stereotype_Property_Value_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Element
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            AMF.UMLDI.UML_Stereotype_Property_Value_Labels.UMLDI_UML_Stereotype_Property_Value_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            AMF.UMLDI.UML_Stereotype_Property_Value_Labels.UMLDI_UML_Stereotype_Property_Value_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Stereotype_Property_Value_Label_Stereotyped_Element_A_Label_Showing_Stereotype_Value then
            --  UMLStereotypePropertyValueLabel::stereotypedElement : Element

            AMF.UMLDI.UML_Stereotype_Property_Value_Labels.UMLDI_UML_Stereotype_Property_Value_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Stereotyped_Element
               (AMF.UML.Elements.UML_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Label_Text then
            --  UMLLabel::text : String

            AMF.UMLDI.UML_Stereotype_Property_Value_Labels.UMLDI_UML_Stereotype_Property_Value_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Text
               (League.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Stereotype_Property_Value_Label_Set;

      -------------------------
      -- UMLDI_UML_Style_Set --
      -------------------------

      procedure UMLDI_UML_Style_Set is
      begin
         if Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Style_Font_Name then
            --  UMLStyle::fontName : String

            AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Font_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Style_Font_Size then
            --  UMLStyle::fontSize : Real

            AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Font_Size
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Style_Set;

      ---------------------------------------
      -- UMLDI_UML_Typed_Element_Label_Set --
      ---------------------------------------

      procedure UMLDI_UML_Typed_Element_Label_Set is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            AMF.UMLDI.UML_Typed_Element_Labels.UMLDI_UML_Typed_Element_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Bounds
               (AMF.DC.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            AMF.UMLDI.UML_Typed_Element_Labels.UMLDI_UML_Typed_Element_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Icon
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            AMF.UMLDI.UML_Typed_Element_Labels.UMLDI_UML_Typed_Element_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            AMF.UMLDI.UML_Typed_Element_Labels.UMLDI_UML_Typed_Element_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            AMF.UMLDI.UML_Typed_Element_Labels.UMLDI_UML_Typed_Element_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Element
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            AMF.UMLDI.UML_Typed_Element_Labels.UMLDI_UML_Typed_Element_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            AMF.UMLDI.UML_Typed_Element_Labels.UMLDI_UML_Typed_Element_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Label_Text then
            --  UMLLabel::text : String

            AMF.UMLDI.UML_Typed_Element_Labels.UMLDI_UML_Typed_Element_Label_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Text
               (League.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Typed_Element_Label_Set;

      ------------------------------------
      -- UMLDI_UML_Use_Case_Diagram_Set --
      ------------------------------------

      procedure UMLDI_UML_Use_Case_Diagram_Set is
      begin
         if Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Shape_Bounds then
            --  Shape::bounds : Bounds

            AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Bounds
               (AMF.DC.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Documentation then
            --  Diagram::documentation : String

            AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Documentation
               (League.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Heading_A_Headed_Diagram then
            --  UMLDiagram::heading : UMLLabel

            AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Heading
               (AMF.UMLDI.UML_Labels.UMLDI_UML_Label_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Frame then
            --  UMLDiagram::isFrame : Boolean

            AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Frame
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Is_Icon then
            --  UMLDiagramElement::isIcon : Boolean

            AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Icon
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Is_Iso then
            --  UMLDiagram::isIso : Boolean

            AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Iso
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Local_Style_A_Styled_Element then
            --  UMLDiagramElement::localStyle : UMLStyle

            AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Local_Style_A_Styled_Element then
            --  DiagramElement::localStyle : Style

            AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Local_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Behavior_Diagram_Model_Element_A_Uml_Diagram_Element then
            --  UMLBehaviorDiagram::modelElement : Behavior

            AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Model_Element
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Name then
            --  Diagram::name : String

            AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (League.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Owning_Element_UML_Diagram_Element_Owned_Element then
            --  UMLDiagramElement::owningElement : UMLDiagramElement

            AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Element
               (AMF.UMLDI.UML_Diagram_Elements.UMLDI_UML_Diagram_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Resolution then
            --  Diagram::resolution : Real

            AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Resolution
               (AMF.Holders.Reals.Element (Value));

         elsif Property = AMF.Internals.Tables.UMLDI_Metamodel.MP_UMLDI_UML_Diagram_Element_Shared_Style_A_Styled_Element then
            --  UMLDiagramElement::sharedStyle : UMLStyle

            AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.UMLDI.UML_Styles.UMLDI_UML_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.DI_Metamodel.MP_DI_Diagram_Element_Shared_Style_A_Styled_Element then
            --  DiagramElement::sharedStyle : Style

            AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Shared_Style
               (AMF.DI.Styles.DI_Style_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UMLDI.UML_Use_Case_Diagrams.UMLDI_UML_Use_Case_Diagram_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UMLDI_UML_Use_Case_Diagram_Set;

      -----------------------------
      -- UML_Data_Store_Node_Set --
      -----------------------------

      procedure UML_Data_Store_Node_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Is_Control_Type then
            --  ObjectNode::isControlType : Boolean

            AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Control_Type
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Ordering then
            --  ObjectNode::ordering : ObjectNodeOrderingKind

            AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Ordering
               (AMF.UML.Holders.Object_Node_Ordering_Kinds.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Selection_A_Object_Node then
            --  ObjectNode::selection : Behavior

            AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Selection
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Upper_Bound_A_Object_Node then
            --  ObjectNode::upperBound : ValueSpecification

            AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Upper_Bound
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Data_Store_Node_Set;

      -----------------------
      -- UML_Data_Type_Set --
      -----------------------

      procedure UML_Data_Type_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Data_Types.UML_Data_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Data_Types.UML_Data_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Data_Types.UML_Data_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Data_Types.UML_Data_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Data_Types.UML_Data_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Data_Types.UML_Data_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Data_Types.UML_Data_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Data_Types.UML_Data_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            AMF.UML.Data_Types.UML_Data_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Data_Types.UML_Data_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Data_Types.UML_Data_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Data_Types.UML_Data_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Data_Types.UML_Data_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Data_Types.UML_Data_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Data_Type_Set;

      ---------------------------
      -- UML_Decision_Node_Set --
      ---------------------------

      procedure UML_Decision_Node_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Decision_Nodes.UML_Decision_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Decision_Node_Decision_Input_A_Decision_Node then
            --  DecisionNode::decisionInput : Behavior

            AMF.UML.Decision_Nodes.UML_Decision_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Decision_Input
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Decision_Node_Decision_Input_Flow_A_Decision_Node then
            --  DecisionNode::decisionInputFlow : ObjectFlow

            AMF.UML.Decision_Nodes.UML_Decision_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Decision_Input_Flow
               (AMF.UML.Object_Flows.UML_Object_Flow_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Decision_Nodes.UML_Decision_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Decision_Nodes.UML_Decision_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Decision_Nodes.UML_Decision_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Decision_Nodes.UML_Decision_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Decision_Nodes.UML_Decision_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Decision_Node_Set;

      ------------------------
      -- UML_Dependency_Set --
      ------------------------

      procedure UML_Dependency_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Dependencies.UML_Dependency_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Dependencies.UML_Dependency_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Dependencies.UML_Dependency_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Dependencies.UML_Dependency_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Dependencies.UML_Dependency_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Dependencies.UML_Dependency_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Dependency_Set;

      ------------------------
      -- UML_Deployment_Set --
      ------------------------

      procedure UML_Deployment_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Deployment_Location_Deployment_Target_Deployment then
            --  Deployment::location : DeploymentTarget

            AMF.UML.Deployments.UML_Deployment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Location
               (AMF.UML.Deployment_Targets.UML_Deployment_Target_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Deployments.UML_Deployment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Deployments.UML_Deployment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Deployments.UML_Deployment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Deployments.UML_Deployment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Deployments.UML_Deployment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Deployments.UML_Deployment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Deployment_Set;

      --------------------------------------
      -- UML_Deployment_Specification_Set --
      --------------------------------------

      procedure UML_Deployment_Specification_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Deployment_Specification_Deployment_Deployment_Configuration then
            --  DeploymentSpecification::deployment : Deployment

            AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Deployment
               (AMF.UML.Deployments.UML_Deployment_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Deployment_Specification_Deployment_Location then
            --  DeploymentSpecification::deploymentLocation : String

            AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Deployment_Location
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Deployment_Specification_Execution_Location then
            --  DeploymentSpecification::executionLocation : String

            AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Execution_Location
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Artifact_File_Name then
            --  Artifact::fileName : String

            AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_File_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Deployment_Specification_Set;

      ---------------------------------
      -- UML_Destroy_Link_Action_Set --
      ---------------------------------

      procedure UML_Destroy_Link_Action_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Destroy_Link_Action_Set;

      -----------------------------------
      -- UML_Destroy_Object_Action_Set --
      -----------------------------------

      procedure UML_Destroy_Object_Action_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Destroy_Object_Action_Is_Destroy_Links then
            --  DestroyObjectAction::isDestroyLinks : Boolean

            AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Destroy_Links
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Destroy_Object_Action_Is_Destroy_Owned_Objects then
            --  DestroyObjectAction::isDestroyOwnedObjects : Boolean

            AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Destroy_Owned_Objects
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Destroy_Object_Action_Target_A_Destroy_Object_Action then
            --  DestroyObjectAction::target : InputPin

            AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Target
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Destroy_Object_Action_Set;

      --------------------------------------------------
      -- UML_Destruction_Occurrence_Specification_Set --
      --------------------------------------------------

      procedure UML_Destruction_Occurrence_Specification_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Occurrence_Specification_Covered_A_Events then
            --  OccurrenceSpecification::covered : Lifeline

            AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Covered
               (AMF.UML.Lifelines.UML_Lifeline_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Interaction_Interaction_Fragment then
            --  InteractionFragment::enclosingInteraction : Interaction

            AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Interaction
               (AMF.UML.Interactions.UML_Interaction_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Operand_Interaction_Operand_Fragment then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Operand
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Message_End_Message_A_Message_End then
            --  MessageEnd::message : Message

            AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Message
               (AMF.UML.Messages.UML_Message_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Destruction_Occurrence_Specification_Set;

      --------------------
      -- UML_Device_Set --
      --------------------

      procedure UML_Device_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Classifier_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::classifierBehavior : Behavior

            AMF.UML.Devices.UML_Device_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Classifier_Behavior
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            AMF.UML.Devices.UML_Device_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Devices.UML_Device_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            AMF.UML.Devices.UML_Device_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Active
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Devices.UML_Device_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Devices.UML_Device_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Devices.UML_Device_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Devices.UML_Device_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Devices.UML_Device_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Devices.UML_Device_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Devices.UML_Device_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            AMF.UML.Devices.UML_Device_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Devices.UML_Device_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Devices.UML_Device_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Devices.UML_Device_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Devices.UML_Device_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Devices.UML_Device_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Device_Set;

      ----------------------
      -- UML_Duration_Set --
      ----------------------

      procedure UML_Duration_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Duration_Expr_A_Duration then
            --  Duration::expr : ValueSpecification

            AMF.UML.Durations.UML_Duration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Expr
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Durations.UML_Duration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Durations.UML_Duration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Durations.UML_Duration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Durations.UML_Duration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            AMF.UML.Durations.UML_Duration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Durations.UML_Duration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Durations.UML_Duration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Duration_Set;

      ---------------------------------
      -- UML_Duration_Constraint_Set --
      ---------------------------------

      procedure UML_Duration_Constraint_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Constraint_Context_Namespace_Owned_Rule then
            --  Constraint::context : Namespace

            AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Context
               (AMF.UML.Namespaces.UML_Namespace_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Constraint_Specification_A_Owning_Constraint then
            --  Constraint::specification : ValueSpecification

            AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Specification
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Duration_Constraint_Specification_A_Duration_Constraint then
            --  DurationConstraint::specification : DurationInterval

            AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Specification
               (AMF.UML.Duration_Intervals.UML_Duration_Interval_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interval_Constraint_Specification_A_Interval_Constraint then
            --  IntervalConstraint::specification : Interval

            AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Specification
               (AMF.UML.Intervals.UML_Interval_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Duration_Constraint_Set;

      -------------------------------
      -- UML_Duration_Interval_Set --
      -------------------------------

      procedure UML_Duration_Interval_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Duration_Interval_Max_A_Duration_Interval then
            --  DurationInterval::max : Duration

            AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Max
               (AMF.UML.Durations.UML_Duration_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interval_Max_A_Interval then
            --  Interval::max : ValueSpecification

            AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Max
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Duration_Interval_Min_A_Duration_Interval then
            --  DurationInterval::min : Duration

            AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Min
               (AMF.UML.Durations.UML_Duration_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interval_Min_A_Interval then
            --  Interval::min : ValueSpecification

            AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Min
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Duration_Interval_Set;

      ----------------------------------
      -- UML_Duration_Observation_Set --
      ----------------------------------

      procedure UML_Duration_Observation_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Duration_Observations.UML_Duration_Observation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Duration_Observations.UML_Duration_Observation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Duration_Observations.UML_Duration_Observation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Duration_Observations.UML_Duration_Observation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Duration_Observations.UML_Duration_Observation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Duration_Observations.UML_Duration_Observation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Duration_Observation_Set;

      ----------------------------
      -- UML_Element_Import_Set --
      ----------------------------

      procedure UML_Element_Import_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Import_Alias then
            --  ElementImport::alias : String

            AMF.UML.Element_Imports.UML_Element_Import_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Alias
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Import_Imported_Element_A_Element_Import then
            --  ElementImport::importedElement : PackageableElement

            AMF.UML.Element_Imports.UML_Element_Import_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Imported_Element
               (AMF.UML.Packageable_Elements.UML_Packageable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Import_Importing_Namespace_Namespace_Element_Import then
            --  ElementImport::importingNamespace : Namespace

            AMF.UML.Element_Imports.UML_Element_Import_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Importing_Namespace
               (AMF.UML.Namespaces.UML_Namespace_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Element_Import_Visibility then
            --  ElementImport::visibility : VisibilityKind

            AMF.UML.Element_Imports.UML_Element_Import_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Element_Import_Set;

      -------------------------
      -- UML_Enumeration_Set --
      -------------------------

      procedure UML_Enumeration_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Enumerations.UML_Enumeration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Enumerations.UML_Enumeration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Enumerations.UML_Enumeration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Enumerations.UML_Enumeration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Enumerations.UML_Enumeration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Enumerations.UML_Enumeration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Enumerations.UML_Enumeration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Enumerations.UML_Enumeration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            AMF.UML.Enumerations.UML_Enumeration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Enumerations.UML_Enumeration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Enumerations.UML_Enumeration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Enumerations.UML_Enumeration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Enumerations.UML_Enumeration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Enumerations.UML_Enumeration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Enumeration_Set;

      ---------------------------------
      -- UML_Enumeration_Literal_Set --
      ---------------------------------

      procedure UML_Enumeration_Literal_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Enumeration_Literal_Enumeration_Enumeration_Owned_Literal then
            --  EnumerationLiteral::enumeration : Enumeration

            AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enumeration
               (AMF.UML.Enumerations.UML_Enumeration_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Instance_Specification_Specification_A_Owning_Instance_Spec then
            --  InstanceSpecification::specification : ValueSpecification

            AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Specification
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Enumeration_Literal_Set;

      -------------------------------
      -- UML_Exception_Handler_Set --
      -------------------------------

      procedure UML_Exception_Handler_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Exception_Handler_Exception_Input_A_Exception_Handler then
            --  ExceptionHandler::exceptionInput : ObjectNode

            AMF.UML.Exception_Handlers.UML_Exception_Handler_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Exception_Input
               (AMF.UML.Object_Nodes.UML_Object_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Exception_Handler_Handler_Body_A_Exception_Handler then
            --  ExceptionHandler::handlerBody : ExecutableNode

            AMF.UML.Exception_Handlers.UML_Exception_Handler_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Handler_Body
               (AMF.UML.Executable_Nodes.UML_Executable_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Exception_Handler_Protected_Node_Executable_Node_Handler then
            --  ExceptionHandler::protectedNode : ExecutableNode

            AMF.UML.Exception_Handlers.UML_Exception_Handler_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Protected_Node
               (AMF.UML.Executable_Nodes.UML_Executable_Node_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end UML_Exception_Handler_Set;

      -----------------------------------
      -- UML_Execution_Environment_Set --
      -----------------------------------

      procedure UML_Execution_Environment_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Classifier_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::classifierBehavior : Behavior

            AMF.UML.Execution_Environments.UML_Execution_Environment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Classifier_Behavior
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            AMF.UML.Execution_Environments.UML_Execution_Environment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Execution_Environments.UML_Execution_Environment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            AMF.UML.Execution_Environments.UML_Execution_Environment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Active
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Execution_Environments.UML_Execution_Environment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Execution_Environments.UML_Execution_Environment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Execution_Environments.UML_Execution_Environment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Execution_Environments.UML_Execution_Environment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Execution_Environments.UML_Execution_Environment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Execution_Environments.UML_Execution_Environment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Execution_Environments.UML_Execution_Environment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            AMF.UML.Execution_Environments.UML_Execution_Environment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Execution_Environments.UML_Execution_Environment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Execution_Environments.UML_Execution_Environment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Execution_Environments.UML_Execution_Environment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Execution_Environments.UML_Execution_Environment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Execution_Environments.UML_Execution_Environment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Execution_Environment_Set;

      ------------------------------------------------
      -- UML_Execution_Occurrence_Specification_Set --
      ------------------------------------------------

      procedure UML_Execution_Occurrence_Specification_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Occurrence_Specification_Covered_A_Events then
            --  OccurrenceSpecification::covered : Lifeline

            AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Covered
               (AMF.UML.Lifelines.UML_Lifeline_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Interaction_Interaction_Fragment then
            --  InteractionFragment::enclosingInteraction : Interaction

            AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Interaction
               (AMF.UML.Interactions.UML_Interaction_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Operand_Interaction_Operand_Fragment then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Operand
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Execution_Occurrence_Specification_Execution_A_Execution_Occurrence_Specification then
            --  ExecutionOccurrenceSpecification::execution : ExecutionSpecification

            AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Execution
               (AMF.UML.Execution_Specifications.UML_Execution_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Execution_Occurrence_Specification_Set;

      ----------------------------
      -- UML_Expansion_Node_Set --
      ----------------------------

      procedure UML_Expansion_Node_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Is_Control_Type then
            --  ObjectNode::isControlType : Boolean

            AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Control_Type
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Ordering then
            --  ObjectNode::ordering : ObjectNodeOrderingKind

            AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Ordering
               (AMF.UML.Holders.Object_Node_Ordering_Kinds.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Expansion_Node_Region_As_Input_Expansion_Region_Input_Element then
            --  ExpansionNode::regionAsInput : ExpansionRegion

            AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Region_As_Input
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Expansion_Node_Region_As_Output_Expansion_Region_Output_Element then
            --  ExpansionNode::regionAsOutput : ExpansionRegion

            AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Region_As_Output
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Selection_A_Object_Node then
            --  ObjectNode::selection : Behavior

            AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Selection
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Upper_Bound_A_Object_Node then
            --  ObjectNode::upperBound : ValueSpecification

            AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Upper_Bound
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Expansion_Node_Set;

      ------------------------------
      -- UML_Expansion_Region_Set --
      ------------------------------

      procedure UML_Expansion_Region_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Activity_Activity_Structured_Node then
            --  StructuredActivityNode::activity : Activity

            AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_In_Activity_Activity_Group then
            --  ActivityGroup::inActivity : Activity

            AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Expansion_Region_Mode then
            --  ExpansionRegion::mode : ExpansionKind

            AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Mode
               (AMF.UML.Holders.Expansion_Kinds.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Must_Isolate then
            --  StructuredActivityNode::mustIsolate : Boolean

            AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Must_Isolate
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Expansion_Region_Set;

      ------------------------
      -- UML_Expression_Set --
      ------------------------

      procedure UML_Expression_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Expressions.UML_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Expressions.UML_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Expressions.UML_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Expression_Symbol then
            --  Expression::symbol : String

            AMF.UML.Expressions.UML_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Symbol
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Expressions.UML_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            AMF.UML.Expressions.UML_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Expressions.UML_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Expressions.UML_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Expression_Set;

      --------------------
      -- UML_Extend_Set --
      --------------------

      procedure UML_Extend_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Extend_Condition_A_Extend then
            --  Extend::condition : Constraint

            AMF.UML.Extends.UML_Extend_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Condition
               (AMF.UML.Constraints.UML_Constraint_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Extend_Extended_Case_A_Extend then
            --  Extend::extendedCase : UseCase

            AMF.UML.Extends.UML_Extend_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Extended_Case
               (AMF.UML.Use_Cases.UML_Use_Case_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Extend_Extension_Use_Case_Extend then
            --  Extend::extension : UseCase

            AMF.UML.Extends.UML_Extend_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Extension
               (AMF.UML.Use_Cases.UML_Use_Case_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Extends.UML_Extend_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Extends.UML_Extend_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Extends.UML_Extend_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Extend_Set;

      -----------------------
      -- UML_Extension_Set --
      -----------------------

      procedure UML_Extension_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Extensions.UML_Extension_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Association_Is_Derived then
            --  Association::isDerived : Boolean

            AMF.UML.Extensions.UML_Extension_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Derived
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Extensions.UML_Extension_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Extensions.UML_Extension_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Extensions.UML_Extension_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Extensions.UML_Extension_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Extension_Owned_End_A_Extension then
            --  Extension::ownedEnd : ExtensionEnd

            AMF.UML.Extensions.UML_Extension_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_End
               (AMF.UML.Extension_Ends.UML_Extension_End_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Extensions.UML_Extension_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Extensions.UML_Extension_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Extensions.UML_Extension_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            AMF.UML.Extensions.UML_Extension_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Extensions.UML_Extension_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Extensions.UML_Extension_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Extensions.UML_Extension_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Extensions.UML_Extension_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Extensions.UML_Extension_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Extension_Set;

      ---------------------------
      -- UML_Extension_End_Set --
      ---------------------------

      procedure UML_Extension_End_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Aggregation then
            --  Property::aggregation : AggregationKind

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Aggregation
               (AMF.UML.Holders.Aggregation_Kinds.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Association_Association_Member_End then
            --  Property::association : Association

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Association
               (AMF.UML.Associations.UML_Association_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Association_End_Property_Qualifier then
            --  Property::associationEnd : Property

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Association_End
               (AMF.UML.Properties.UML_Property_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Class_Class_Owned_Attribute then
            --  Property::class : Class

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Class
               (AMF.UML.Classes.UML_Class_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Datatype_Data_Type_Owned_Attribute then
            --  Property::datatype : DataType

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Datatype
               (AMF.UML.Data_Types.UML_Data_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Default_Value_A_Owning_Property then
            --  Property::defaultValue : ValueSpecification

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Default_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Interface_Interface_Owned_Attribute then
            --  Property::interface : Interface

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Interface
               (AMF.UML.Interfaces.UML_Interface_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Is_Derived then
            --  Property::isDerived : Boolean

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Derived
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Is_Derived_Union then
            --  Property::isDerivedUnion : Boolean

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Derived_Union
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Is_ID then
            --  Property::isID : Boolean

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_ID
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Is_Ordered then
            --  MultiplicityElement::isOrdered : Boolean

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Ordered
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Is_Read_Only then
            --  Property::isReadOnly : Boolean

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Read_Only
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structural_Feature_Is_Read_Only then
            --  StructuralFeature::isReadOnly : Boolean

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Read_Only
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Feature_Is_Static then
            --  Feature::isStatic : Boolean

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Static
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Is_Unique then
            --  MultiplicityElement::isUnique : Boolean

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Unique
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Lower_Value_A_Owning_Lower then
            --  MultiplicityElement::lowerValue : ValueSpecification

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Lower_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Owning_Association_Association_Owned_End then
            --  Property::owningAssociation : Association

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Association
               (AMF.UML.Associations.UML_Association_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Connectable_Element_Template_Parameter_Connectable_Element_Template_Parameter_Parametered_Element then
            --  ConnectableElement::templateParameter : ConnectableElementTemplateParameter

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Extension_End_Type_A_Extension_End then
            --  ExtensionEnd::type : Stereotype

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Stereotypes.UML_Stereotype_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Upper_Value_A_Owning_Upper then
            --  MultiplicityElement::upperValue : ValueSpecification

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Upper_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Extension_End_Set;

      -----------------------------
      -- UML_Extension_Point_Set --
      -----------------------------

      procedure UML_Extension_Point_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Extension_Points.UML_Extension_Point_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Extension_Points.UML_Extension_Point_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Extension_Points.UML_Extension_Point_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Extension_Point_Use_Case_Use_Case_Extension_Point then
            --  ExtensionPoint::useCase : UseCase

            AMF.UML.Extension_Points.UML_Extension_Point_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Use_Case
               (AMF.UML.Use_Cases.UML_Use_Case_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Extension_Points.UML_Extension_Point_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Extension_Point_Set;

      -------------------------
      -- UML_Final_State_Set --
      -------------------------

      procedure UML_Final_State_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Vertex_Container_Region_Subvertex then
            --  Vertex::container : Region

            AMF.UML.Final_States.UML_Final_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Container
               (AMF.UML.Regions.UML_Region_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Do_Activity_A_State then
            --  State::doActivity : Behavior

            AMF.UML.Final_States.UML_Final_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Do_Activity
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Entry_A_State then
            --  State::entry : Behavior

            AMF.UML.Final_States.UML_Final_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Entry
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Exit_A_State then
            --  State::exit : Behavior

            AMF.UML.Final_States.UML_Final_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Exit
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Final_States.UML_Final_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Final_States.UML_Final_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Final_States.UML_Final_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Redefined_State_A_State then
            --  State::redefinedState : State

            AMF.UML.Final_States.UML_Final_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Redefined_State
               (AMF.UML.States.UML_State_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_State_Invariant_A_Owning_State then
            --  State::stateInvariant : Constraint

            AMF.UML.Final_States.UML_Final_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_State_Invariant
               (AMF.UML.Constraints.UML_Constraint_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Submachine_State_Machine_Submachine_State then
            --  State::submachine : StateMachine

            AMF.UML.Final_States.UML_Final_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Submachine
               (AMF.UML.State_Machines.UML_State_Machine_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Final_States.UML_Final_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Final_State_Set;

      -----------------------------
      -- UML_Flow_Final_Node_Set --
      -----------------------------

      procedure UML_Flow_Final_Node_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Flow_Final_Node_Set;

      -----------------------
      -- UML_Fork_Node_Set --
      -----------------------

      procedure UML_Fork_Node_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Fork_Nodes.UML_Fork_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Fork_Nodes.UML_Fork_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Fork_Nodes.UML_Fork_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Fork_Nodes.UML_Fork_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Fork_Nodes.UML_Fork_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Fork_Nodes.UML_Fork_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Fork_Node_Set;

      -------------------------------
      -- UML_Function_Behavior_Set --
      -------------------------------

      procedure UML_Function_Behavior_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Classifier_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::classifierBehavior : Behavior

            AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Classifier_Behavior
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Active
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Is_Reentrant then
            --  Behavior::isReentrant : Boolean

            AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Specification_Behavioral_Feature_Method then
            --  Behavior::specification : BehavioralFeature

            AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Specification
               (AMF.UML.Behavioral_Features.UML_Behavioral_Feature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Function_Behavior_Set;

      ------------------
      -- UML_Gate_Set --
      ------------------

      procedure UML_Gate_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Message_End_Message_A_Message_End then
            --  MessageEnd::message : Message

            AMF.UML.Gates.UML_Gate_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Message
               (AMF.UML.Messages.UML_Message_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Gates.UML_Gate_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Gates.UML_Gate_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Gates.UML_Gate_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Gate_Set;

      ------------------------------
      -- UML_General_Ordering_Set --
      ------------------------------

      procedure UML_General_Ordering_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_General_Ordering_After_Occurrence_Specification_To_Before then
            --  GeneralOrdering::after : OccurrenceSpecification

            AMF.UML.General_Orderings.UML_General_Ordering_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_After
               (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_General_Ordering_Before_Occurrence_Specification_To_After then
            --  GeneralOrdering::before : OccurrenceSpecification

            AMF.UML.General_Orderings.UML_General_Ordering_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Before
               (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.General_Orderings.UML_General_Ordering_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.General_Orderings.UML_General_Ordering_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.General_Orderings.UML_General_Ordering_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_General_Ordering_Set;

      ----------------------------
      -- UML_Generalization_Set --
      ----------------------------

      procedure UML_Generalization_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Generalization_General_A_Generalization then
            --  Generalization::general : Classifier

            AMF.UML.Generalizations.UML_Generalization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_General
               (AMF.UML.Classifiers.UML_Classifier_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Generalization_Is_Substitutable then
            --  Generalization::isSubstitutable : Boolean

            AMF.UML.Generalizations.UML_Generalization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Substitutable
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Generalization_Specific_Classifier_Generalization then
            --  Generalization::specific : Classifier

            AMF.UML.Generalizations.UML_Generalization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Specific
               (AMF.UML.Classifiers.UML_Classifier_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end UML_Generalization_Set;

      --------------------------------
      -- UML_Generalization_Set_Set --
      --------------------------------

      procedure UML_Generalization_Set_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Generalization_Set_Is_Covering then
            --  GeneralizationSet::isCovering : Boolean

            AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Covering
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Generalization_Set_Is_Disjoint then
            --  GeneralizationSet::isDisjoint : Boolean

            AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Disjoint
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Generalization_Set_Powertype_Classifier_Powertype_Extent then
            --  GeneralizationSet::powertype : Classifier

            AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Powertype
               (AMF.UML.Classifiers.UML_Classifier_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Generalization_Set_Set;

      -------------------
      -- UML_Image_Set --
      -------------------

      procedure UML_Image_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Image_Content then
            --  Image::content : String

            AMF.UML.Images.UML_Image_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Content
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Image_Format then
            --  Image::format : String

            AMF.UML.Images.UML_Image_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Format
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Image_Location then
            --  Image::location : String

            AMF.UML.Images.UML_Image_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Location
               (AMF.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Image_Set;

      ---------------------
      -- UML_Include_Set --
      ---------------------

      procedure UML_Include_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Include_Addition_A_Include then
            --  Include::addition : UseCase

            AMF.UML.Includes.UML_Include_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Addition
               (AMF.UML.Use_Cases.UML_Use_Case_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Include_Including_Case_Use_Case_Include then
            --  Include::includingCase : UseCase

            AMF.UML.Includes.UML_Include_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Including_Case
               (AMF.UML.Use_Cases.UML_Use_Case_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Includes.UML_Include_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Includes.UML_Include_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Includes.UML_Include_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Include_Set;

      ------------------------------
      -- UML_Information_Flow_Set --
      ------------------------------

      procedure UML_Information_Flow_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Information_Flows.UML_Information_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Information_Flows.UML_Information_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Information_Flows.UML_Information_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Information_Flows.UML_Information_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Information_Flows.UML_Information_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Information_Flows.UML_Information_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Information_Flow_Set;

      ------------------------------
      -- UML_Information_Item_Set --
      ------------------------------

      procedure UML_Information_Item_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Information_Items.UML_Information_Item_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Information_Items.UML_Information_Item_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Information_Items.UML_Information_Item_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Information_Items.UML_Information_Item_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Information_Items.UML_Information_Item_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Information_Items.UML_Information_Item_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Information_Items.UML_Information_Item_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Information_Items.UML_Information_Item_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            AMF.UML.Information_Items.UML_Information_Item_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Information_Items.UML_Information_Item_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Information_Items.UML_Information_Item_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Information_Items.UML_Information_Item_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Information_Items.UML_Information_Item_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Information_Items.UML_Information_Item_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Information_Item_Set;

      --------------------------
      -- UML_Initial_Node_Set --
      --------------------------

      procedure UML_Initial_Node_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Initial_Nodes.UML_Initial_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Initial_Nodes.UML_Initial_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Initial_Nodes.UML_Initial_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Initial_Nodes.UML_Initial_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Initial_Nodes.UML_Initial_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Initial_Nodes.UML_Initial_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Initial_Node_Set;

      -----------------------
      -- UML_Input_Pin_Set --
      -----------------------

      procedure UML_Input_Pin_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Input_Pins.UML_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Input_Pins.UML_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Pin_Is_Control then
            --  Pin::isControl : Boolean

            AMF.UML.Input_Pins.UML_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Control
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Is_Control_Type then
            --  ObjectNode::isControlType : Boolean

            AMF.UML.Input_Pins.UML_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Control_Type
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Input_Pins.UML_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Is_Ordered then
            --  MultiplicityElement::isOrdered : Boolean

            AMF.UML.Input_Pins.UML_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Ordered
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Is_Unique then
            --  MultiplicityElement::isUnique : Boolean

            AMF.UML.Input_Pins.UML_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Unique
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Lower_Value_A_Owning_Lower then
            --  MultiplicityElement::lowerValue : ValueSpecification

            AMF.UML.Input_Pins.UML_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Lower_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Input_Pins.UML_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Input_Pins.UML_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Ordering then
            --  ObjectNode::ordering : ObjectNodeOrderingKind

            AMF.UML.Input_Pins.UML_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Ordering
               (AMF.UML.Holders.Object_Node_Ordering_Kinds.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Selection_A_Object_Node then
            --  ObjectNode::selection : Behavior

            AMF.UML.Input_Pins.UML_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Selection
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            AMF.UML.Input_Pins.UML_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Upper_Bound_A_Object_Node then
            --  ObjectNode::upperBound : ValueSpecification

            AMF.UML.Input_Pins.UML_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Upper_Bound
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Upper_Value_A_Owning_Upper then
            --  MultiplicityElement::upperValue : ValueSpecification

            AMF.UML.Input_Pins.UML_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Upper_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Input_Pins.UML_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Input_Pin_Set;

      ------------------------------------
      -- UML_Instance_Specification_Set --
      ------------------------------------

      procedure UML_Instance_Specification_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Instance_Specification_Specification_A_Owning_Instance_Spec then
            --  InstanceSpecification::specification : ValueSpecification

            AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Specification
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Instance_Specification_Set;

      ----------------------------
      -- UML_Instance_Value_Set --
      ----------------------------

      procedure UML_Instance_Value_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Instance_Value_Instance_A_Instance_Value then
            --  InstanceValue::instance : InstanceSpecification

            AMF.UML.Instance_Values.UML_Instance_Value_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Instance
               (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Instance_Values.UML_Instance_Value_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Instance_Values.UML_Instance_Value_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Instance_Values.UML_Instance_Value_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Instance_Values.UML_Instance_Value_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            AMF.UML.Instance_Values.UML_Instance_Value_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Instance_Values.UML_Instance_Value_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Instance_Values.UML_Instance_Value_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Instance_Value_Set;

      -------------------------
      -- UML_Interaction_Set --
      -------------------------

      procedure UML_Interaction_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Classifier_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::classifierBehavior : Behavior

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Classifier_Behavior
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Interaction_Interaction_Fragment then
            --  InteractionFragment::enclosingInteraction : Interaction

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Interaction
               (AMF.UML.Interactions.UML_Interaction_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Operand_Interaction_Operand_Fragment then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Operand
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Active
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Is_Reentrant then
            --  Behavior::isReentrant : Boolean

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Specification_Behavioral_Feature_Method then
            --  Behavior::specification : BehavioralFeature

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Specification
               (AMF.UML.Behavioral_Features.UML_Behavioral_Feature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Interaction_Set;

      ------------------------------------
      -- UML_Interaction_Constraint_Set --
      ------------------------------------

      procedure UML_Interaction_Constraint_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Constraint_Context_Namespace_Owned_Rule then
            --  Constraint::context : Namespace

            AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Context
               (AMF.UML.Namespaces.UML_Namespace_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Constraint_Maxint_A_Interaction_Constraint then
            --  InteractionConstraint::maxint : ValueSpecification

            AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Maxint
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Constraint_Minint_A_Interaction_Constraint then
            --  InteractionConstraint::minint : ValueSpecification

            AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Minint
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Constraint_Specification_A_Owning_Constraint then
            --  Constraint::specification : ValueSpecification

            AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Specification
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Interaction_Constraint_Set;

      ---------------------------------
      -- UML_Interaction_Operand_Set --
      ---------------------------------

      procedure UML_Interaction_Operand_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Interaction_Interaction_Fragment then
            --  InteractionFragment::enclosingInteraction : Interaction

            AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Interaction
               (AMF.UML.Interactions.UML_Interaction_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Operand_Interaction_Operand_Fragment then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Operand
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Operand_Guard_A_Interaction_Operand then
            --  InteractionOperand::guard : InteractionConstraint

            AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Guard
               (AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Interaction_Operand_Set;

      -----------------------------
      -- UML_Interaction_Use_Set --
      -----------------------------

      procedure UML_Interaction_Use_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Interaction_Interaction_Fragment then
            --  InteractionFragment::enclosingInteraction : Interaction

            AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Interaction
               (AMF.UML.Interactions.UML_Interaction_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Operand_Interaction_Operand_Fragment then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Operand
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Use_Refers_To_A_Interaction_Use then
            --  InteractionUse::refersTo : Interaction

            AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Refers_To
               (AMF.UML.Interactions.UML_Interaction_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Use_Return_Value_A_Interaction_Use then
            --  InteractionUse::returnValue : ValueSpecification

            AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Return_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Use_Return_Value_Recipient_A_Interaction_Use then
            --  InteractionUse::returnValueRecipient : Property

            AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Return_Value_Recipient
               (AMF.UML.Properties.UML_Property_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Interaction_Use_Set;

      -----------------------
      -- UML_Interface_Set --
      -----------------------

      procedure UML_Interface_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Interfaces.UML_Interface_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Interfaces.UML_Interface_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Interfaces.UML_Interface_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Interfaces.UML_Interface_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Interfaces.UML_Interface_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Interfaces.UML_Interface_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Interfaces.UML_Interface_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Interfaces.UML_Interface_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            AMF.UML.Interfaces.UML_Interface_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interface_Protocol_A_Interface then
            --  Interface::protocol : ProtocolStateMachine

            AMF.UML.Interfaces.UML_Interface_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Protocol
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Interfaces.UML_Interface_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Interfaces.UML_Interface_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Interfaces.UML_Interface_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Interfaces.UML_Interface_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Interfaces.UML_Interface_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Interface_Set;

      -----------------------------------
      -- UML_Interface_Realization_Set --
      -----------------------------------

      procedure UML_Interface_Realization_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interface_Realization_Contract_A_Interface_Realization then
            --  InterfaceRealization::contract : Interface

            AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Contract
               (AMF.UML.Interfaces.UML_Interface_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interface_Realization_Implementing_Classifier_Behaviored_Classifier_Interface_Realization then
            --  InterfaceRealization::implementingClassifier : BehavioredClassifier

            AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Implementing_Classifier
               (AMF.UML.Behaviored_Classifiers.UML_Behaviored_Classifier_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Abstraction_Mapping_A_Abstraction then
            --  Abstraction::mapping : OpaqueExpression

            AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Mapping
               (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Interface_Realization_Set;

      -------------------------------------------
      -- UML_Interruptible_Activity_Region_Set --
      -------------------------------------------

      procedure UML_Interruptible_Activity_Region_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_In_Activity_Activity_Group then
            --  ActivityGroup::inActivity : Activity

            AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Interruptible_Activity_Region_Set;

      ----------------------
      -- UML_Interval_Set --
      ----------------------

      procedure UML_Interval_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interval_Max_A_Interval then
            --  Interval::max : ValueSpecification

            AMF.UML.Intervals.UML_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Max
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interval_Min_A_Interval then
            --  Interval::min : ValueSpecification

            AMF.UML.Intervals.UML_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Min
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Intervals.UML_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Intervals.UML_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Intervals.UML_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Intervals.UML_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            AMF.UML.Intervals.UML_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Intervals.UML_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Intervals.UML_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Interval_Set;

      ---------------------------------
      -- UML_Interval_Constraint_Set --
      ---------------------------------

      procedure UML_Interval_Constraint_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Constraint_Context_Namespace_Owned_Rule then
            --  Constraint::context : Namespace

            AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Context
               (AMF.UML.Namespaces.UML_Namespace_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Constraint_Specification_A_Owning_Constraint then
            --  Constraint::specification : ValueSpecification

            AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Specification
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interval_Constraint_Specification_A_Interval_Constraint then
            --  IntervalConstraint::specification : Interval

            AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Specification
               (AMF.UML.Intervals.UML_Interval_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Interval_Constraint_Set;

      -----------------------
      -- UML_Join_Node_Set --
      -----------------------

      procedure UML_Join_Node_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Join_Nodes.UML_Join_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Join_Nodes.UML_Join_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Join_Node_Is_Combine_Duplicate then
            --  JoinNode::isCombineDuplicate : Boolean

            AMF.UML.Join_Nodes.UML_Join_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Combine_Duplicate
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Join_Nodes.UML_Join_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Join_Node_Join_Spec_A_Join_Node then
            --  JoinNode::joinSpec : ValueSpecification

            AMF.UML.Join_Nodes.UML_Join_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Join_Spec
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Join_Nodes.UML_Join_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Join_Nodes.UML_Join_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Join_Nodes.UML_Join_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Join_Node_Set;

      ----------------------
      -- UML_Lifeline_Set --
      ----------------------

      procedure UML_Lifeline_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Lifeline_Decomposed_As_A_Lifeline then
            --  Lifeline::decomposedAs : PartDecomposition

            AMF.UML.Lifelines.UML_Lifeline_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Decomposed_As
               (AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Lifeline_Interaction_Interaction_Lifeline then
            --  Lifeline::interaction : Interaction

            AMF.UML.Lifelines.UML_Lifeline_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Interaction
               (AMF.UML.Interactions.UML_Interaction_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Lifelines.UML_Lifeline_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Lifelines.UML_Lifeline_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Lifeline_Represents_A_Lifeline then
            --  Lifeline::represents : ConnectableElement

            AMF.UML.Lifelines.UML_Lifeline_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Represents
               (AMF.UML.Connectable_Elements.UML_Connectable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Lifeline_Selector_A_Lifeline then
            --  Lifeline::selector : ValueSpecification

            AMF.UML.Lifelines.UML_Lifeline_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Selector
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Lifelines.UML_Lifeline_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Lifeline_Set;

      ------------------------------------
      -- UML_Link_End_Creation_Data_Set --
      ------------------------------------

      procedure UML_Link_End_Creation_Data_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Link_End_Data_End_A_Link_End_Data then
            --  LinkEndData::end : Property

            AMF.UML.Link_End_Creation_Datas.UML_Link_End_Creation_Data_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_End
               (AMF.UML.Properties.UML_Property_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Link_End_Creation_Data_Insert_At_A_Link_End_Creation_Data then
            --  LinkEndCreationData::insertAt : InputPin

            AMF.UML.Link_End_Creation_Datas.UML_Link_End_Creation_Data_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Insert_At
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Link_End_Creation_Data_Is_Replace_All then
            --  LinkEndCreationData::isReplaceAll : Boolean

            AMF.UML.Link_End_Creation_Datas.UML_Link_End_Creation_Data_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Replace_All
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Link_End_Data_Value_A_Link_End_Data then
            --  LinkEndData::value : InputPin

            AMF.UML.Link_End_Creation_Datas.UML_Link_End_Creation_Data_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Value
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end UML_Link_End_Creation_Data_Set;

      ---------------------------
      -- UML_Link_End_Data_Set --
      ---------------------------

      procedure UML_Link_End_Data_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Link_End_Data_End_A_Link_End_Data then
            --  LinkEndData::end : Property

            AMF.UML.Link_End_Datas.UML_Link_End_Data_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_End
               (AMF.UML.Properties.UML_Property_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Link_End_Data_Value_A_Link_End_Data then
            --  LinkEndData::value : InputPin

            AMF.UML.Link_End_Datas.UML_Link_End_Data_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Value
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end UML_Link_End_Data_Set;

      ---------------------------------------
      -- UML_Link_End_Destruction_Data_Set --
      ---------------------------------------

      procedure UML_Link_End_Destruction_Data_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Link_End_Destruction_Data_Destroy_At_A_Link_End_Destruction_Data then
            --  LinkEndDestructionData::destroyAt : InputPin

            AMF.UML.Link_End_Destruction_Datas.UML_Link_End_Destruction_Data_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Destroy_At
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Link_End_Data_End_A_Link_End_Data then
            --  LinkEndData::end : Property

            AMF.UML.Link_End_Destruction_Datas.UML_Link_End_Destruction_Data_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_End
               (AMF.UML.Properties.UML_Property_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Link_End_Destruction_Data_Is_Destroy_Duplicates then
            --  LinkEndDestructionData::isDestroyDuplicates : Boolean

            AMF.UML.Link_End_Destruction_Datas.UML_Link_End_Destruction_Data_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Destroy_Duplicates
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Link_End_Data_Value_A_Link_End_Data then
            --  LinkEndData::value : InputPin

            AMF.UML.Link_End_Destruction_Datas.UML_Link_End_Destruction_Data_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Value
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end UML_Link_End_Destruction_Data_Set;

      -----------------------------
      -- UML_Literal_Boolean_Set --
      -----------------------------

      procedure UML_Literal_Boolean_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Literal_Boolean_Value then
            --  LiteralBoolean::value : Boolean

            AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Value
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Literal_Boolean_Set;

      -----------------------------
      -- UML_Literal_Integer_Set --
      -----------------------------

      procedure UML_Literal_Integer_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Literal_Integers.UML_Literal_Integer_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Literal_Integers.UML_Literal_Integer_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Literal_Integers.UML_Literal_Integer_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Literal_Integers.UML_Literal_Integer_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            AMF.UML.Literal_Integers.UML_Literal_Integer_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Literal_Integer_Value then
            --  LiteralInteger::value : Integer

            AMF.UML.Literal_Integers.UML_Literal_Integer_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Value
               (League.Holders.Integers.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Literal_Integers.UML_Literal_Integer_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Literal_Integers.UML_Literal_Integer_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Literal_Integer_Set;

      --------------------------
      -- UML_Literal_Null_Set --
      --------------------------

      procedure UML_Literal_Null_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Literal_Nulls.UML_Literal_Null_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Literal_Nulls.UML_Literal_Null_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Literal_Nulls.UML_Literal_Null_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Literal_Nulls.UML_Literal_Null_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            AMF.UML.Literal_Nulls.UML_Literal_Null_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Literal_Nulls.UML_Literal_Null_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Literal_Nulls.UML_Literal_Null_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Literal_Null_Set;

      --------------------------
      -- UML_Literal_Real_Set --
      --------------------------

      procedure UML_Literal_Real_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Literal_Reals.UML_Literal_Real_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Literal_Reals.UML_Literal_Real_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Literal_Reals.UML_Literal_Real_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Literal_Reals.UML_Literal_Real_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            AMF.UML.Literal_Reals.UML_Literal_Real_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Literal_Real_Value then
            --  LiteralReal::value : Real

            AMF.UML.Literal_Reals.UML_Literal_Real_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Value
               (AMF.Holders.Reals.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Literal_Reals.UML_Literal_Real_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Literal_Reals.UML_Literal_Real_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Literal_Real_Set;

      ----------------------------
      -- UML_Literal_String_Set --
      ----------------------------

      procedure UML_Literal_String_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Literal_Strings.UML_Literal_String_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Literal_Strings.UML_Literal_String_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Literal_Strings.UML_Literal_String_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Literal_Strings.UML_Literal_String_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            AMF.UML.Literal_Strings.UML_Literal_String_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Literal_String_Value then
            --  LiteralString::value : String

            AMF.UML.Literal_Strings.UML_Literal_String_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Value
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Literal_Strings.UML_Literal_String_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Literal_Strings.UML_Literal_String_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Literal_String_Set;

      ---------------------------------------
      -- UML_Literal_Unlimited_Natural_Set --
      ---------------------------------------

      procedure UML_Literal_Unlimited_Natural_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Literal_Unlimited_Natural_Value then
            --  LiteralUnlimitedNatural::value : UnlimitedNatural

            AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Value
               (AMF.Holders.Unlimited_Naturals.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Literal_Unlimited_Natural_Set;

      -----------------------
      -- UML_Loop_Node_Set --
      -----------------------

      procedure UML_Loop_Node_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Loop_Nodes.UML_Loop_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Activity_Activity_Structured_Node then
            --  StructuredActivityNode::activity : Activity

            AMF.UML.Loop_Nodes.UML_Loop_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Loop_Node_Decider_A_Loop_Node then
            --  LoopNode::decider : OutputPin

            AMF.UML.Loop_Nodes.UML_Loop_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Decider
               (AMF.UML.Output_Pins.UML_Output_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_In_Activity_Activity_Group then
            --  ActivityGroup::inActivity : Activity

            AMF.UML.Loop_Nodes.UML_Loop_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Loop_Nodes.UML_Loop_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Loop_Nodes.UML_Loop_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Loop_Nodes.UML_Loop_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Loop_Node_Is_Tested_First then
            --  LoopNode::isTestedFirst : Boolean

            AMF.UML.Loop_Nodes.UML_Loop_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Tested_First
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Must_Isolate then
            --  StructuredActivityNode::mustIsolate : Boolean

            AMF.UML.Loop_Nodes.UML_Loop_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Must_Isolate
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Loop_Nodes.UML_Loop_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Loop_Nodes.UML_Loop_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Loop_Nodes.UML_Loop_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Loop_Node_Set;

      ---------------------------
      -- UML_Manifestation_Set --
      ---------------------------

      procedure UML_Manifestation_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Abstraction_Mapping_A_Abstraction then
            --  Abstraction::mapping : OpaqueExpression

            AMF.UML.Manifestations.UML_Manifestation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Mapping
               (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Manifestations.UML_Manifestation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Manifestations.UML_Manifestation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Manifestations.UML_Manifestation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Manifestations.UML_Manifestation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Manifestation_Utilized_Element_A_Manifestation then
            --  Manifestation::utilizedElement : PackageableElement

            AMF.UML.Manifestations.UML_Manifestation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Utilized_Element
               (AMF.UML.Packageable_Elements.UML_Packageable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Manifestations.UML_Manifestation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Manifestations.UML_Manifestation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Manifestation_Set;

      ------------------------
      -- UML_Merge_Node_Set --
      ------------------------

      procedure UML_Merge_Node_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Merge_Nodes.UML_Merge_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Merge_Nodes.UML_Merge_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Merge_Nodes.UML_Merge_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Merge_Nodes.UML_Merge_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Merge_Nodes.UML_Merge_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Merge_Nodes.UML_Merge_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Merge_Node_Set;

      ---------------------
      -- UML_Message_Set --
      ---------------------

      procedure UML_Message_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Message_Connector_A_Message then
            --  Message::connector : Connector

            AMF.UML.Messages.UML_Message_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Connector
               (AMF.UML.Connectors.UML_Connector_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Message_Interaction_Interaction_Message then
            --  Message::interaction : Interaction

            AMF.UML.Messages.UML_Message_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Interaction
               (AMF.UML.Interactions.UML_Interaction_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Message_Message_Sort then
            --  Message::messageSort : MessageSort

            AMF.UML.Messages.UML_Message_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Message_Sort
               (AMF.UML.Holders.Message_Sorts.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Messages.UML_Message_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Messages.UML_Message_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Message_Receive_Event_A_End_Message then
            --  Message::receiveEvent : MessageEnd

            AMF.UML.Messages.UML_Message_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Receive_Event
               (AMF.UML.Message_Ends.UML_Message_End_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Message_Send_Event_A_End_Message then
            --  Message::sendEvent : MessageEnd

            AMF.UML.Messages.UML_Message_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Send_Event
               (AMF.UML.Message_Ends.UML_Message_End_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Message_Signature_A_Message then
            --  Message::signature : NamedElement

            AMF.UML.Messages.UML_Message_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Signature
               (AMF.UML.Named_Elements.UML_Named_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Messages.UML_Message_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Message_Set;

      ----------------------------------------------
      -- UML_Message_Occurrence_Specification_Set --
      ----------------------------------------------

      procedure UML_Message_Occurrence_Specification_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Occurrence_Specification_Covered_A_Events then
            --  OccurrenceSpecification::covered : Lifeline

            AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Covered
               (AMF.UML.Lifelines.UML_Lifeline_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Interaction_Interaction_Fragment then
            --  InteractionFragment::enclosingInteraction : Interaction

            AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Interaction
               (AMF.UML.Interactions.UML_Interaction_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Operand_Interaction_Operand_Fragment then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Operand
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Message_End_Message_A_Message_End then
            --  MessageEnd::message : Message

            AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Message
               (AMF.UML.Messages.UML_Message_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Message_Occurrence_Specification_Set;

      -------------------
      -- UML_Model_Set --
      -------------------

      procedure UML_Model_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Package_URI then
            --  Package::URI : String

            AMF.UML.Models.UML_Model_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_URI
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Models.UML_Model_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Models.UML_Model_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Package_Nesting_Package_Package_Nested_Package then
            --  Package::nestingPackage : Package

            AMF.UML.Models.UML_Model_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Nesting_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Models.UML_Model_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Models.UML_Model_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Models.UML_Model_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Model_Viewpoint then
            --  Model::viewpoint : String

            AMF.UML.Models.UML_Model_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Viewpoint
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Models.UML_Model_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Models.UML_Model_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Model_Set;

      ------------------
      -- UML_Node_Set --
      ------------------

      procedure UML_Node_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Classifier_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::classifierBehavior : Behavior

            AMF.UML.Nodes.UML_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Classifier_Behavior
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            AMF.UML.Nodes.UML_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Nodes.UML_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            AMF.UML.Nodes.UML_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Active
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Nodes.UML_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Nodes.UML_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Nodes.UML_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Nodes.UML_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Nodes.UML_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Nodes.UML_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Nodes.UML_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            AMF.UML.Nodes.UML_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Nodes.UML_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Nodes.UML_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Nodes.UML_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Nodes.UML_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Nodes.UML_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Node_Set;

      -------------------------
      -- UML_Object_Flow_Set --
      -------------------------

      procedure UML_Object_Flow_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Edge_Activity_Activity_Edge then
            --  ActivityEdge::activity : Activity

            AMF.UML.Object_Flows.UML_Object_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Edge_Guard_A_Activity_Edge then
            --  ActivityEdge::guard : ValueSpecification

            AMF.UML.Object_Flows.UML_Object_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Guard
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Edge_In_Structured_Node_Structured_Activity_Node_Edge then
            --  ActivityEdge::inStructuredNode : StructuredActivityNode

            AMF.UML.Object_Flows.UML_Object_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Edge_Interrupts_Interruptible_Activity_Region_Interrupting_Edge then
            --  ActivityEdge::interrupts : InterruptibleActivityRegion

            AMF.UML.Object_Flows.UML_Object_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Interrupts
               (AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Object_Flows.UML_Object_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Flow_Is_Multicast then
            --  ObjectFlow::isMulticast : Boolean

            AMF.UML.Object_Flows.UML_Object_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Multicast
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Flow_Is_Multireceive then
            --  ObjectFlow::isMultireceive : Boolean

            AMF.UML.Object_Flows.UML_Object_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Multireceive
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Object_Flows.UML_Object_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Object_Flows.UML_Object_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Flow_Selection_A_Object_Flow then
            --  ObjectFlow::selection : Behavior

            AMF.UML.Object_Flows.UML_Object_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Selection
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Edge_Source_Activity_Node_Outgoing then
            --  ActivityEdge::source : ActivityNode

            AMF.UML.Object_Flows.UML_Object_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Source
               (AMF.UML.Activity_Nodes.UML_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Edge_Target_Activity_Node_Incoming then
            --  ActivityEdge::target : ActivityNode

            AMF.UML.Object_Flows.UML_Object_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Target
               (AMF.UML.Activity_Nodes.UML_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Flow_Transformation_A_Object_Flow then
            --  ObjectFlow::transformation : Behavior

            AMF.UML.Object_Flows.UML_Object_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Transformation
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Object_Flows.UML_Object_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Edge_Weight_A_Activity_Edge then
            --  ActivityEdge::weight : ValueSpecification

            AMF.UML.Object_Flows.UML_Object_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Weight
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end UML_Object_Flow_Set;

      --------------------------------------
      -- UML_Occurrence_Specification_Set --
      --------------------------------------

      procedure UML_Occurrence_Specification_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Occurrence_Specification_Covered_A_Events then
            --  OccurrenceSpecification::covered : Lifeline

            AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Covered
               (AMF.UML.Lifelines.UML_Lifeline_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Interaction_Interaction_Fragment then
            --  InteractionFragment::enclosingInteraction : Interaction

            AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Interaction
               (AMF.UML.Interactions.UML_Interaction_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Operand_Interaction_Operand_Fragment then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Operand
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Occurrence_Specification_Set;

      ---------------------------
      -- UML_Opaque_Action_Set --
      ---------------------------

      procedure UML_Opaque_Action_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Opaque_Action_Set;

      -----------------------------
      -- UML_Opaque_Behavior_Set --
      -----------------------------

      procedure UML_Opaque_Behavior_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Classifier_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::classifierBehavior : Behavior

            AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Classifier_Behavior
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Active
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Is_Reentrant then
            --  Behavior::isReentrant : Boolean

            AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Specification_Behavioral_Feature_Method then
            --  Behavior::specification : BehavioralFeature

            AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Specification
               (AMF.UML.Behavioral_Features.UML_Behavioral_Feature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Opaque_Behavior_Set;

      -------------------------------
      -- UML_Opaque_Expression_Set --
      -------------------------------

      procedure UML_Opaque_Expression_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Opaque_Expression_Behavior_A_Opaque_Expression then
            --  OpaqueExpression::behavior : Behavior

            AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Behavior
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Opaque_Expression_Set;

      -----------------------
      -- UML_Operation_Set --
      -----------------------

      procedure UML_Operation_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Operation_Body_Condition_A_Body_Context then
            --  Operation::bodyCondition : Constraint

            AMF.UML.Operations.UML_Operation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Body_Condition
               (AMF.UML.Constraints.UML_Constraint_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Operation_Class_Class_Owned_Operation then
            --  Operation::class : Class

            AMF.UML.Operations.UML_Operation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Class
               (AMF.UML.Classes.UML_Class_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavioral_Feature_Concurrency then
            --  BehavioralFeature::concurrency : CallConcurrencyKind

            AMF.UML.Operations.UML_Operation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Concurrency
               (AMF.UML.Holders.Call_Concurrency_Kinds.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Operation_Datatype_Data_Type_Owned_Operation then
            --  Operation::datatype : DataType

            AMF.UML.Operations.UML_Operation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Datatype
               (AMF.UML.Data_Types.UML_Data_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Operation_Interface_Interface_Owned_Operation then
            --  Operation::interface : Interface

            AMF.UML.Operations.UML_Operation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Interface
               (AMF.UML.Interfaces.UML_Interface_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavioral_Feature_Is_Abstract then
            --  BehavioralFeature::isAbstract : Boolean

            AMF.UML.Operations.UML_Operation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Operations.UML_Operation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Operation_Is_Query then
            --  Operation::isQuery : Boolean

            AMF.UML.Operations.UML_Operation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Query
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Feature_Is_Static then
            --  Feature::isStatic : Boolean

            AMF.UML.Operations.UML_Operation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Static
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Operations.UML_Operation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Operations.UML_Operation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Operations.UML_Operation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Operations.UML_Operation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Operation_Template_Parameter_Operation_Template_Parameter_Parametered_Element then
            --  Operation::templateParameter : OperationTemplateParameter

            AMF.UML.Operations.UML_Operation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Operation_Template_Parameters.UML_Operation_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Operations.UML_Operation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Operations.UML_Operation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Operation_Set;

      ------------------------------------------
      -- UML_Operation_Template_Parameter_Set --
      ------------------------------------------

      procedure UML_Operation_Template_Parameter_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Default_A_Template_Parameter then
            --  TemplateParameter::default : ParameterableElement

            AMF.UML.Operation_Template_Parameters.UML_Operation_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Default
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Owned_Default_A_Template_Parameter then
            --  TemplateParameter::ownedDefault : ParameterableElement

            AMF.UML.Operation_Template_Parameters.UML_Operation_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Default
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Owned_Parametered_Element_Parameterable_Element_Owning_Template_Parameter then
            --  TemplateParameter::ownedParameteredElement : ParameterableElement

            AMF.UML.Operation_Template_Parameters.UML_Operation_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Parametered_Element
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Operation_Template_Parameter_Parametered_Element_Operation_Template_Parameter then
            --  OperationTemplateParameter::parameteredElement : Operation

            AMF.UML.Operation_Template_Parameters.UML_Operation_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Parametered_Element
               (AMF.UML.Operations.UML_Operation_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Parametered_Element_Parameterable_Element_Template_Parameter then
            --  TemplateParameter::parameteredElement : ParameterableElement

            AMF.UML.Operation_Template_Parameters.UML_Operation_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Parametered_Element
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Signature_Template_Signature_Owned_Parameter then
            --  TemplateParameter::signature : TemplateSignature

            AMF.UML.Operation_Template_Parameters.UML_Operation_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end UML_Operation_Template_Parameter_Set;

      ------------------------
      -- UML_Output_Pin_Set --
      ------------------------

      procedure UML_Output_Pin_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Output_Pins.UML_Output_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Output_Pins.UML_Output_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Pin_Is_Control then
            --  Pin::isControl : Boolean

            AMF.UML.Output_Pins.UML_Output_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Control
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Is_Control_Type then
            --  ObjectNode::isControlType : Boolean

            AMF.UML.Output_Pins.UML_Output_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Control_Type
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Output_Pins.UML_Output_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Is_Ordered then
            --  MultiplicityElement::isOrdered : Boolean

            AMF.UML.Output_Pins.UML_Output_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Ordered
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Is_Unique then
            --  MultiplicityElement::isUnique : Boolean

            AMF.UML.Output_Pins.UML_Output_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Unique
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Lower_Value_A_Owning_Lower then
            --  MultiplicityElement::lowerValue : ValueSpecification

            AMF.UML.Output_Pins.UML_Output_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Lower_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Output_Pins.UML_Output_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Output_Pins.UML_Output_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Ordering then
            --  ObjectNode::ordering : ObjectNodeOrderingKind

            AMF.UML.Output_Pins.UML_Output_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Ordering
               (AMF.UML.Holders.Object_Node_Ordering_Kinds.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Selection_A_Object_Node then
            --  ObjectNode::selection : Behavior

            AMF.UML.Output_Pins.UML_Output_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Selection
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            AMF.UML.Output_Pins.UML_Output_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Upper_Bound_A_Object_Node then
            --  ObjectNode::upperBound : ValueSpecification

            AMF.UML.Output_Pins.UML_Output_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Upper_Bound
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Upper_Value_A_Owning_Upper then
            --  MultiplicityElement::upperValue : ValueSpecification

            AMF.UML.Output_Pins.UML_Output_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Upper_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Output_Pins.UML_Output_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Output_Pin_Set;

      ---------------------
      -- UML_Package_Set --
      ---------------------

      procedure UML_Package_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Package_URI then
            --  Package::URI : String

            AMF.UML.Packages.UML_Package_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_URI
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Packages.UML_Package_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Packages.UML_Package_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Package_Nesting_Package_Package_Nested_Package then
            --  Package::nestingPackage : Package

            AMF.UML.Packages.UML_Package_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Nesting_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Packages.UML_Package_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Packages.UML_Package_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Packages.UML_Package_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Packages.UML_Package_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Packages.UML_Package_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Package_Set;

      ----------------------------
      -- UML_Package_Import_Set --
      ----------------------------

      procedure UML_Package_Import_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Package_Import_Imported_Package_A_Package_Import then
            --  PackageImport::importedPackage : Package

            AMF.UML.Package_Imports.UML_Package_Import_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Imported_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Package_Import_Importing_Namespace_Namespace_Package_Import then
            --  PackageImport::importingNamespace : Namespace

            AMF.UML.Package_Imports.UML_Package_Import_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Importing_Namespace
               (AMF.UML.Namespaces.UML_Namespace_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Package_Import_Visibility then
            --  PackageImport::visibility : VisibilityKind

            AMF.UML.Package_Imports.UML_Package_Import_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Package_Import_Set;

      ---------------------------
      -- UML_Package_Merge_Set --
      ---------------------------

      procedure UML_Package_Merge_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Package_Merge_Merged_Package_A_Package_Merge then
            --  PackageMerge::mergedPackage : Package

            AMF.UML.Package_Merges.UML_Package_Merge_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Merged_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Package_Merge_Receiving_Package_Package_Package_Merge then
            --  PackageMerge::receivingPackage : Package

            AMF.UML.Package_Merges.UML_Package_Merge_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Receiving_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end UML_Package_Merge_Set;

      -----------------------
      -- UML_Parameter_Set --
      -----------------------

      procedure UML_Parameter_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameter_Default_Value_A_Owning_Parameter then
            --  Parameter::defaultValue : ValueSpecification

            AMF.UML.Parameters.UML_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Default_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameter_Direction then
            --  Parameter::direction : ParameterDirectionKind

            AMF.UML.Parameters.UML_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Direction
               (AMF.UML.Holders.Parameter_Direction_Kinds.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameter_Effect then
            --  Parameter::effect : ParameterEffectKind

            AMF.UML.Parameters.UML_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Effect
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameter_Is_Exception then
            --  Parameter::isException : Boolean

            AMF.UML.Parameters.UML_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Exception
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Is_Ordered then
            --  MultiplicityElement::isOrdered : Boolean

            AMF.UML.Parameters.UML_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Ordered
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameter_Is_Stream then
            --  Parameter::isStream : Boolean

            AMF.UML.Parameters.UML_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Stream
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Is_Unique then
            --  MultiplicityElement::isUnique : Boolean

            AMF.UML.Parameters.UML_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Unique
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Lower_Value_A_Owning_Lower then
            --  MultiplicityElement::lowerValue : ValueSpecification

            AMF.UML.Parameters.UML_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Lower_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Parameters.UML_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Parameters.UML_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameter_Operation_Operation_Owned_Parameter then
            --  Parameter::operation : Operation

            AMF.UML.Parameters.UML_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Operation
               (AMF.UML.Operations.UML_Operation_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Parameters.UML_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Connectable_Element_Template_Parameter_Connectable_Element_Template_Parameter_Parametered_Element then
            --  ConnectableElement::templateParameter : ConnectableElementTemplateParameter

            AMF.UML.Parameters.UML_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Parameters.UML_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            AMF.UML.Parameters.UML_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Upper_Value_A_Owning_Upper then
            --  MultiplicityElement::upperValue : ValueSpecification

            AMF.UML.Parameters.UML_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Upper_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Parameters.UML_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Parameter_Set;

      ---------------------------
      -- UML_Parameter_Set_Set --
      ---------------------------

      procedure UML_Parameter_Set_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Parameter_Sets.UML_Parameter_Set_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Parameter_Sets.UML_Parameter_Set_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Parameter_Sets.UML_Parameter_Set_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Parameter_Set_Set;

      --------------------------------
      -- UML_Part_Decomposition_Set --
      --------------------------------

      procedure UML_Part_Decomposition_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Interaction_Interaction_Fragment then
            --  InteractionFragment::enclosingInteraction : Interaction

            AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Interaction
               (AMF.UML.Interactions.UML_Interaction_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Operand_Interaction_Operand_Fragment then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Operand
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Use_Refers_To_A_Interaction_Use then
            --  InteractionUse::refersTo : Interaction

            AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Refers_To
               (AMF.UML.Interactions.UML_Interaction_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Use_Return_Value_A_Interaction_Use then
            --  InteractionUse::returnValue : ValueSpecification

            AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Return_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Use_Return_Value_Recipient_A_Interaction_Use then
            --  InteractionUse::returnValueRecipient : Property

            AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Return_Value_Recipient
               (AMF.UML.Properties.UML_Property_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Part_Decomposition_Set;

      ------------------
      -- UML_Port_Set --
      ------------------

      procedure UML_Port_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Aggregation then
            --  Property::aggregation : AggregationKind

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Aggregation
               (AMF.UML.Holders.Aggregation_Kinds.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Association_Association_Member_End then
            --  Property::association : Association

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Association
               (AMF.UML.Associations.UML_Association_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Association_End_Property_Qualifier then
            --  Property::associationEnd : Property

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Association_End
               (AMF.UML.Properties.UML_Property_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Class_Class_Owned_Attribute then
            --  Property::class : Class

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Class
               (AMF.UML.Classes.UML_Class_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Datatype_Data_Type_Owned_Attribute then
            --  Property::datatype : DataType

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Datatype
               (AMF.UML.Data_Types.UML_Data_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Default_Value_A_Owning_Property then
            --  Property::defaultValue : ValueSpecification

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Default_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Interface_Interface_Owned_Attribute then
            --  Property::interface : Interface

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Interface
               (AMF.UML.Interfaces.UML_Interface_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Port_Is_Behavior then
            --  Port::isBehavior : Boolean

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Behavior
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Port_Is_Conjugated then
            --  Port::isConjugated : Boolean

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Conjugated
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Is_Derived then
            --  Property::isDerived : Boolean

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Derived
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Is_Derived_Union then
            --  Property::isDerivedUnion : Boolean

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Derived_Union
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Is_ID then
            --  Property::isID : Boolean

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_ID
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Is_Ordered then
            --  MultiplicityElement::isOrdered : Boolean

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Ordered
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Is_Read_Only then
            --  Property::isReadOnly : Boolean

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Read_Only
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structural_Feature_Is_Read_Only then
            --  StructuralFeature::isReadOnly : Boolean

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Read_Only
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Port_Is_Service then
            --  Port::isService : Boolean

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Service
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Feature_Is_Static then
            --  Feature::isStatic : Boolean

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Static
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Is_Unique then
            --  MultiplicityElement::isUnique : Boolean

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Unique
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Lower_Value_A_Owning_Lower then
            --  MultiplicityElement::lowerValue : ValueSpecification

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Lower_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Owning_Association_Association_Owned_End then
            --  Property::owningAssociation : Association

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Association
               (AMF.UML.Associations.UML_Association_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Port_Protocol_A_Port then
            --  Port::protocol : ProtocolStateMachine

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Protocol
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Connectable_Element_Template_Parameter_Connectable_Element_Template_Parameter_Parametered_Element then
            --  ConnectableElement::templateParameter : ConnectableElementTemplateParameter

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Upper_Value_A_Owning_Upper then
            --  MultiplicityElement::upperValue : ValueSpecification

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Upper_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Port_Set;

      ----------------------------
      -- UML_Primitive_Type_Set --
      ----------------------------

      procedure UML_Primitive_Type_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Primitive_Types.UML_Primitive_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Primitive_Types.UML_Primitive_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Primitive_Types.UML_Primitive_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Primitive_Types.UML_Primitive_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Primitive_Types.UML_Primitive_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Primitive_Types.UML_Primitive_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Primitive_Types.UML_Primitive_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Primitive_Types.UML_Primitive_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            AMF.UML.Primitive_Types.UML_Primitive_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Primitive_Types.UML_Primitive_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Primitive_Types.UML_Primitive_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Primitive_Types.UML_Primitive_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Primitive_Types.UML_Primitive_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Primitive_Types.UML_Primitive_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Primitive_Type_Set;

      ---------------------
      -- UML_Profile_Set --
      ---------------------

      procedure UML_Profile_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Package_URI then
            --  Package::URI : String

            AMF.UML.Profiles.UML_Profile_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_URI
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Profiles.UML_Profile_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Profiles.UML_Profile_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Package_Nesting_Package_Package_Nested_Package then
            --  Package::nestingPackage : Package

            AMF.UML.Profiles.UML_Profile_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Nesting_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Profiles.UML_Profile_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Profiles.UML_Profile_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Profiles.UML_Profile_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Profiles.UML_Profile_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Profiles.UML_Profile_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Profile_Set;

      ---------------------------------
      -- UML_Profile_Application_Set --
      ---------------------------------

      procedure UML_Profile_Application_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Profile_Application_Applied_Profile_A_Profile_Application then
            --  ProfileApplication::appliedProfile : Profile

            AMF.UML.Profile_Applications.UML_Profile_Application_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Applied_Profile
               (AMF.UML.Profiles.UML_Profile_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Profile_Application_Applying_Package_Package_Profile_Application then
            --  ProfileApplication::applyingPackage : Package

            AMF.UML.Profile_Applications.UML_Profile_Application_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Applying_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Profile_Application_Is_Strict then
            --  ProfileApplication::isStrict : Boolean

            AMF.UML.Profile_Applications.UML_Profile_Application_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Strict
               (League.Holders.Booleans.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Profile_Application_Set;

      ----------------------
      -- UML_Property_Set --
      ----------------------

      procedure UML_Property_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Aggregation then
            --  Property::aggregation : AggregationKind

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Aggregation
               (AMF.UML.Holders.Aggregation_Kinds.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Association_Association_Member_End then
            --  Property::association : Association

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Association
               (AMF.UML.Associations.UML_Association_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Association_End_Property_Qualifier then
            --  Property::associationEnd : Property

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Association_End
               (AMF.UML.Properties.UML_Property_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Class_Class_Owned_Attribute then
            --  Property::class : Class

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Class
               (AMF.UML.Classes.UML_Class_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Datatype_Data_Type_Owned_Attribute then
            --  Property::datatype : DataType

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Datatype
               (AMF.UML.Data_Types.UML_Data_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Default_Value_A_Owning_Property then
            --  Property::defaultValue : ValueSpecification

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Default_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Interface_Interface_Owned_Attribute then
            --  Property::interface : Interface

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Interface
               (AMF.UML.Interfaces.UML_Interface_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Is_Derived then
            --  Property::isDerived : Boolean

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Derived
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Is_Derived_Union then
            --  Property::isDerivedUnion : Boolean

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Derived_Union
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Is_ID then
            --  Property::isID : Boolean

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_ID
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Is_Ordered then
            --  MultiplicityElement::isOrdered : Boolean

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Ordered
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Is_Read_Only then
            --  Property::isReadOnly : Boolean

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Read_Only
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structural_Feature_Is_Read_Only then
            --  StructuralFeature::isReadOnly : Boolean

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Read_Only
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Feature_Is_Static then
            --  Feature::isStatic : Boolean

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Static
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Is_Unique then
            --  MultiplicityElement::isUnique : Boolean

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Unique
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Lower_Value_A_Owning_Lower then
            --  MultiplicityElement::lowerValue : ValueSpecification

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Lower_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Property_Owning_Association_Association_Owned_End then
            --  Property::owningAssociation : Association

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Association
               (AMF.UML.Associations.UML_Association_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Connectable_Element_Template_Parameter_Connectable_Element_Template_Parameter_Parametered_Element then
            --  ConnectableElement::templateParameter : ConnectableElementTemplateParameter

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Upper_Value_A_Owning_Upper then
            --  MultiplicityElement::upperValue : ValueSpecification

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Upper_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Property_Set;

      ----------------------------------
      -- UML_Protocol_Conformance_Set --
      ----------------------------------

      procedure UML_Protocol_Conformance_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Protocol_Conformance_General_Machine_A_Protocol_Conformance then
            --  ProtocolConformance::generalMachine : ProtocolStateMachine

            AMF.UML.Protocol_Conformances.UML_Protocol_Conformance_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_General_Machine
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Protocol_Conformance_Specific_Machine_Protocol_State_Machine_Conformance then
            --  ProtocolConformance::specificMachine : ProtocolStateMachine

            AMF.UML.Protocol_Conformances.UML_Protocol_Conformance_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Specific_Machine
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end UML_Protocol_Conformance_Set;

      ------------------------------------
      -- UML_Protocol_State_Machine_Set --
      ------------------------------------

      procedure UML_Protocol_State_Machine_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Classifier_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::classifierBehavior : Behavior

            AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Classifier_Behavior
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Active
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Is_Reentrant then
            --  Behavior::isReentrant : Boolean

            AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Specification_Behavioral_Feature_Method then
            --  Behavior::specification : BehavioralFeature

            AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Specification
               (AMF.UML.Behavioral_Features.UML_Behavioral_Feature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Protocol_State_Machine_Set;

      ---------------------------------
      -- UML_Protocol_Transition_Set --
      ---------------------------------

      procedure UML_Protocol_Transition_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Transition_Container_Region_Transition then
            --  Transition::container : Region

            AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Container
               (AMF.UML.Regions.UML_Region_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Transition_Effect_A_Transition then
            --  Transition::effect : Behavior

            AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Effect
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Transition_Guard_A_Transition then
            --  Transition::guard : Constraint

            AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Guard
               (AMF.UML.Constraints.UML_Constraint_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Transition_Kind then
            --  Transition::kind : TransitionKind

            AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Kind
               (AMF.UML.Holders.Transition_Kinds.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Protocol_Transition_Post_Condition_A_Owning_Transition then
            --  ProtocolTransition::postCondition : Constraint

            AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Post_Condition
               (AMF.UML.Constraints.UML_Constraint_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Protocol_Transition_Pre_Condition_A_Protocol_Transition then
            --  ProtocolTransition::preCondition : Constraint

            AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Pre_Condition
               (AMF.UML.Constraints.UML_Constraint_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Transition_Redefined_Transition_A_Transition then
            --  Transition::redefinedTransition : Transition

            AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Redefined_Transition
               (AMF.UML.Transitions.UML_Transition_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Transition_Source_Vertex_Outgoing then
            --  Transition::source : Vertex

            AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Source
               (AMF.UML.Vertexs.UML_Vertex_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Transition_Target_Vertex_Incoming then
            --  Transition::target : Vertex

            AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Target
               (AMF.UML.Vertexs.UML_Vertex_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Protocol_Transition_Set;

      -------------------------
      -- UML_Pseudostate_Set --
      -------------------------

      procedure UML_Pseudostate_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Vertex_Container_Region_Subvertex then
            --  Vertex::container : Region

            AMF.UML.Pseudostates.UML_Pseudostate_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Container
               (AMF.UML.Regions.UML_Region_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Pseudostate_Kind then
            --  Pseudostate::kind : PseudostateKind

            AMF.UML.Pseudostates.UML_Pseudostate_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Kind
               (AMF.UML.Holders.Pseudostate_Kinds.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Pseudostates.UML_Pseudostate_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Pseudostates.UML_Pseudostate_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Pseudostate_State_State_Connection_Point then
            --  Pseudostate::state : State

            AMF.UML.Pseudostates.UML_Pseudostate_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_State
               (AMF.UML.States.UML_State_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Pseudostate_State_Machine_State_Machine_Connection_Point then
            --  Pseudostate::stateMachine : StateMachine

            AMF.UML.Pseudostates.UML_Pseudostate_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_State_Machine
               (AMF.UML.State_Machines.UML_State_Machine_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Pseudostates.UML_Pseudostate_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Pseudostate_Set;

      -----------------------------
      -- UML_Qualifier_Value_Set --
      -----------------------------

      procedure UML_Qualifier_Value_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Qualifier_Value_Qualifier_A_Qualifier_Value then
            --  QualifierValue::qualifier : Property

            AMF.UML.Qualifier_Values.UML_Qualifier_Value_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Qualifier
               (AMF.UML.Properties.UML_Property_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Qualifier_Value_Value_A_Qualifier_Value then
            --  QualifierValue::value : InputPin

            AMF.UML.Qualifier_Values.UML_Qualifier_Value_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Value
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end UML_Qualifier_Value_Set;

      ------------------------------------
      -- UML_Raise_Exception_Action_Set --
      ------------------------------------

      procedure UML_Raise_Exception_Action_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Raise_Exception_Action_Exception_A_Raise_Exception_Action then
            --  RaiseExceptionAction::exception : InputPin

            AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Exception
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Raise_Exception_Action_Set;

      --------------------------------
      -- UML_Read_Extent_Action_Set --
      --------------------------------

      procedure UML_Read_Extent_Action_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Read_Extent_Action_Classifier_A_Read_Extent_Action then
            --  ReadExtentAction::classifier : Classifier

            AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Classifier
               (AMF.UML.Classifiers.UML_Classifier_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Read_Extent_Action_Result_A_Read_Extent_Action then
            --  ReadExtentAction::result : OutputPin

            AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Result
               (AMF.UML.Output_Pins.UML_Output_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Read_Extent_Action_Set;

      ----------------------------------------------
      -- UML_Read_Is_Classified_Object_Action_Set --
      ----------------------------------------------

      procedure UML_Read_Is_Classified_Object_Action_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Read_Is_Classified_Object_Action_Classifier_A_Read_Is_Classified_Object_Action then
            --  ReadIsClassifiedObjectAction::classifier : Classifier

            AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Classifier
               (AMF.UML.Classifiers.UML_Classifier_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Read_Is_Classified_Object_Action_Is_Direct then
            --  ReadIsClassifiedObjectAction::isDirect : Boolean

            AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Direct
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Read_Is_Classified_Object_Action_Object_A_Read_Is_Classified_Object_Action then
            --  ReadIsClassifiedObjectAction::object : InputPin

            AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Object
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Read_Is_Classified_Object_Action_Result_A_Read_Is_Classified_Object_Action then
            --  ReadIsClassifiedObjectAction::result : OutputPin

            AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Result
               (AMF.UML.Output_Pins.UML_Output_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Read_Is_Classified_Object_Action_Set;

      ------------------------------
      -- UML_Read_Link_Action_Set --
      ------------------------------

      procedure UML_Read_Link_Action_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Read_Link_Action_Result_A_Read_Link_Action then
            --  ReadLinkAction::result : OutputPin

            AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Result
               (AMF.UML.Output_Pins.UML_Output_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Read_Link_Action_Set;

      -----------------------------------------
      -- UML_Read_Link_Object_End_Action_Set --
      -----------------------------------------

      procedure UML_Read_Link_Object_End_Action_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Read_Link_Object_End_Action_End_A_Read_Link_Object_End_Action then
            --  ReadLinkObjectEndAction::end : Property

            AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_End
               (AMF.UML.Properties.UML_Property_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Read_Link_Object_End_Action_Object_A_Read_Link_Object_End_Action then
            --  ReadLinkObjectEndAction::object : InputPin

            AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Object
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Read_Link_Object_End_Action_Result_A_Read_Link_Object_End_Action then
            --  ReadLinkObjectEndAction::result : OutputPin

            AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Result
               (AMF.UML.Output_Pins.UML_Output_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Read_Link_Object_End_Action_Set;

      ---------------------------------------------------
      -- UML_Read_Link_Object_End_Qualifier_Action_Set --
      ---------------------------------------------------

      procedure UML_Read_Link_Object_End_Qualifier_Action_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Read_Link_Object_End_Qualifier_Action_Object_A_Read_Link_Object_End_Qualifier_Action then
            --  ReadLinkObjectEndQualifierAction::object : InputPin

            AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Object
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Read_Link_Object_End_Qualifier_Action_Qualifier_A_Read_Link_Object_End_Qualifier_Action then
            --  ReadLinkObjectEndQualifierAction::qualifier : Property

            AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Qualifier
               (AMF.UML.Properties.UML_Property_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Read_Link_Object_End_Qualifier_Action_Result_A_Read_Link_Object_End_Qualifier_Action then
            --  ReadLinkObjectEndQualifierAction::result : OutputPin

            AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Result
               (AMF.UML.Output_Pins.UML_Output_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Read_Link_Object_End_Qualifier_Action_Set;

      ------------------------------
      -- UML_Read_Self_Action_Set --
      ------------------------------

      procedure UML_Read_Self_Action_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Read_Self_Action_Result_A_Read_Self_Action then
            --  ReadSelfAction::result : OutputPin

            AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Result
               (AMF.UML.Output_Pins.UML_Output_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Read_Self_Action_Set;

      --------------------------------------------
      -- UML_Read_Structural_Feature_Action_Set --
      --------------------------------------------

      procedure UML_Read_Structural_Feature_Action_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structural_Feature_Action_Object_A_Structural_Feature_Action then
            --  StructuralFeatureAction::object : InputPin

            AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Object
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Read_Structural_Feature_Action_Result_A_Read_Structural_Feature_Action then
            --  ReadStructuralFeatureAction::result : OutputPin

            AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Result
               (AMF.UML.Output_Pins.UML_Output_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structural_Feature_Action_Structural_Feature_A_Structural_Feature_Action then
            --  StructuralFeatureAction::structuralFeature : StructuralFeature

            AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Structural_Feature
               (AMF.UML.Structural_Features.UML_Structural_Feature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Read_Structural_Feature_Action_Set;

      ----------------------------------
      -- UML_Read_Variable_Action_Set --
      ----------------------------------

      procedure UML_Read_Variable_Action_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Read_Variable_Action_Result_A_Read_Variable_Action then
            --  ReadVariableAction::result : OutputPin

            AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Result
               (AMF.UML.Output_Pins.UML_Output_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Variable_Action_Variable_A_Variable_Action then
            --  VariableAction::variable : Variable

            AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Variable
               (AMF.UML.Variables.UML_Variable_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Read_Variable_Action_Set;

      -------------------------
      -- UML_Realization_Set --
      -------------------------

      procedure UML_Realization_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Abstraction_Mapping_A_Abstraction then
            --  Abstraction::mapping : OpaqueExpression

            AMF.UML.Realizations.UML_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Mapping
               (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Realizations.UML_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Realizations.UML_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Realizations.UML_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Realizations.UML_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Realizations.UML_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Realizations.UML_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Realization_Set;

      -----------------------
      -- UML_Reception_Set --
      -----------------------

      procedure UML_Reception_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavioral_Feature_Concurrency then
            --  BehavioralFeature::concurrency : CallConcurrencyKind

            AMF.UML.Receptions.UML_Reception_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Concurrency
               (AMF.UML.Holders.Call_Concurrency_Kinds.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavioral_Feature_Is_Abstract then
            --  BehavioralFeature::isAbstract : Boolean

            AMF.UML.Receptions.UML_Reception_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Receptions.UML_Reception_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Feature_Is_Static then
            --  Feature::isStatic : Boolean

            AMF.UML.Receptions.UML_Reception_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Static
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Receptions.UML_Reception_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Receptions.UML_Reception_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Reception_Signal_A_Reception then
            --  Reception::signal : Signal

            AMF.UML.Receptions.UML_Reception_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Signal
               (AMF.UML.Signals.UML_Signal_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Receptions.UML_Reception_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Reception_Set;

      --------------------------------------
      -- UML_Reclassify_Object_Action_Set --
      --------------------------------------

      procedure UML_Reclassify_Object_Action_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Reclassify_Object_Action_Is_Replace_All then
            --  ReclassifyObjectAction::isReplaceAll : Boolean

            AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Replace_All
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Reclassify_Object_Action_Object_A_Reclassify_Object_Action then
            --  ReclassifyObjectAction::object : InputPin

            AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Object
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Reclassify_Object_Action_Set;

      --------------------------------------------
      -- UML_Redefinable_Template_Signature_Set --
      --------------------------------------------

      procedure UML_Redefinable_Template_Signature_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Template_Signature_Classifier_Classifier_Owned_Template_Signature then
            --  RedefinableTemplateSignature::classifier : Classifier

            AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Classifier
               (AMF.UML.Classifiers.UML_Classifier_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Signature_Template_Templateable_Element_Owned_Template_Signature then
            --  TemplateSignature::template : TemplateableElement

            AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template
               (AMF.UML.Templateable_Elements.UML_Templateable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Redefinable_Template_Signature_Set;

      ---------------------------
      -- UML_Reduce_Action_Set --
      ---------------------------

      procedure UML_Reduce_Action_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Reduce_Action_Collection_A_Reduce_Action then
            --  ReduceAction::collection : InputPin

            AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Collection
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Reduce_Action_Is_Ordered then
            --  ReduceAction::isOrdered : Boolean

            AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Ordered
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Reduce_Action_Reducer_A_Reduce_Action then
            --  ReduceAction::reducer : Behavior

            AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Reducer
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Reduce_Action_Result_A_Reduce_Action then
            --  ReduceAction::result : OutputPin

            AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Result
               (AMF.UML.Output_Pins.UML_Output_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Reduce_Action_Set;

      --------------------
      -- UML_Region_Set --
      --------------------

      procedure UML_Region_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Region_Extended_Region_A_Region then
            --  Region::extendedRegion : Region

            AMF.UML.Regions.UML_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Extended_Region
               (AMF.UML.Regions.UML_Region_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Regions.UML_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Regions.UML_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Regions.UML_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Region_State_State_Region then
            --  Region::state : State

            AMF.UML.Regions.UML_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_State
               (AMF.UML.States.UML_State_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Region_State_Machine_State_Machine_Region then
            --  Region::stateMachine : StateMachine

            AMF.UML.Regions.UML_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_State_Machine
               (AMF.UML.State_Machines.UML_State_Machine_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Regions.UML_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Region_Set;

      ----------------------------------------------------
      -- UML_Remove_Structural_Feature_Value_Action_Set --
      ----------------------------------------------------

      procedure UML_Remove_Structural_Feature_Value_Action_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Remove_Structural_Feature_Value_Action_Is_Remove_Duplicates then
            --  RemoveStructuralFeatureValueAction::isRemoveDuplicates : Boolean

            AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Remove_Duplicates
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structural_Feature_Action_Object_A_Structural_Feature_Action then
            --  StructuralFeatureAction::object : InputPin

            AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Object
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Remove_Structural_Feature_Value_Action_Remove_At_A_Remove_Structural_Feature_Value_Action then
            --  RemoveStructuralFeatureValueAction::removeAt : InputPin

            AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Remove_At
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Write_Structural_Feature_Action_Result_A_Write_Structural_Feature_Action then
            --  WriteStructuralFeatureAction::result : OutputPin

            AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Result
               (AMF.UML.Output_Pins.UML_Output_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structural_Feature_Action_Structural_Feature_A_Structural_Feature_Action then
            --  StructuralFeatureAction::structuralFeature : StructuralFeature

            AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Structural_Feature
               (AMF.UML.Structural_Features.UML_Structural_Feature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Write_Structural_Feature_Action_Value_A_Write_Structural_Feature_Action then
            --  WriteStructuralFeatureAction::value : InputPin

            AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Value
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Remove_Structural_Feature_Value_Action_Set;

      ------------------------------------------
      -- UML_Remove_Variable_Value_Action_Set --
      ------------------------------------------

      procedure UML_Remove_Variable_Value_Action_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Remove_Variable_Value_Action_Is_Remove_Duplicates then
            --  RemoveVariableValueAction::isRemoveDuplicates : Boolean

            AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Remove_Duplicates
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Remove_Variable_Value_Action_Remove_At_A_Remove_Variable_Value_Action then
            --  RemoveVariableValueAction::removeAt : InputPin

            AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Remove_At
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Write_Variable_Action_Value_A_Write_Variable_Action then
            --  WriteVariableAction::value : InputPin

            AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Value
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Variable_Action_Variable_A_Variable_Action then
            --  VariableAction::variable : Variable

            AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Variable
               (AMF.UML.Variables.UML_Variable_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Remove_Variable_Value_Action_Set;

      --------------------------
      -- UML_Reply_Action_Set --
      --------------------------

      procedure UML_Reply_Action_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Reply_Actions.UML_Reply_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Reply_Actions.UML_Reply_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Reply_Actions.UML_Reply_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Reply_Actions.UML_Reply_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Reply_Actions.UML_Reply_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Reply_Actions.UML_Reply_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Reply_Action_Reply_To_Call_A_Reply_Action then
            --  ReplyAction::replyToCall : Trigger

            AMF.UML.Reply_Actions.UML_Reply_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Reply_To_Call
               (AMF.UML.Triggers.UML_Trigger_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Reply_Action_Return_Information_A_Reply_Action then
            --  ReplyAction::returnInformation : InputPin

            AMF.UML.Reply_Actions.UML_Reply_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Return_Information
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Reply_Actions.UML_Reply_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Reply_Action_Set;

      --------------------------------
      -- UML_Send_Object_Action_Set --
      --------------------------------

      procedure UML_Send_Object_Action_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Invocation_Action_On_Port_A_Invocation_Action then
            --  InvocationAction::onPort : Port

            AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_On_Port
               (AMF.UML.Ports.UML_Port_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Send_Object_Action_Request_A_Send_Object_Action then
            --  SendObjectAction::request : InputPin

            AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Request
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Send_Object_Action_Target_A_Send_Object_Action then
            --  SendObjectAction::target : InputPin

            AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Target
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Send_Object_Action_Set;

      --------------------------------
      -- UML_Send_Signal_Action_Set --
      --------------------------------

      procedure UML_Send_Signal_Action_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Invocation_Action_On_Port_A_Invocation_Action then
            --  InvocationAction::onPort : Port

            AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_On_Port
               (AMF.UML.Ports.UML_Port_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Send_Signal_Action_Signal_A_Send_Signal_Action then
            --  SendSignalAction::signal : Signal

            AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Signal
               (AMF.UML.Signals.UML_Signal_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Send_Signal_Action_Target_A_Send_Signal_Action then
            --  SendSignalAction::target : InputPin

            AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Target
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Send_Signal_Action_Set;

      ---------------------------
      -- UML_Sequence_Node_Set --
      ---------------------------

      procedure UML_Sequence_Node_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Activity_Activity_Structured_Node then
            --  StructuredActivityNode::activity : Activity

            AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_In_Activity_Activity_Group then
            --  ActivityGroup::inActivity : Activity

            AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Must_Isolate then
            --  StructuredActivityNode::mustIsolate : Boolean

            AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Must_Isolate
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Sequence_Node_Set;

      --------------------
      -- UML_Signal_Set --
      --------------------

      procedure UML_Signal_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Signals.UML_Signal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Signals.UML_Signal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Signals.UML_Signal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Signals.UML_Signal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Signals.UML_Signal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Signals.UML_Signal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Signals.UML_Signal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Signals.UML_Signal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            AMF.UML.Signals.UML_Signal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Signals.UML_Signal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Signals.UML_Signal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Signals.UML_Signal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Signals.UML_Signal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Signals.UML_Signal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Signal_Set;

      --------------------------
      -- UML_Signal_Event_Set --
      --------------------------

      procedure UML_Signal_Event_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Signal_Events.UML_Signal_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Signal_Events.UML_Signal_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Signal_Events.UML_Signal_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Signal_Event_Signal_A_Signal_Event then
            --  SignalEvent::signal : Signal

            AMF.UML.Signal_Events.UML_Signal_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Signal
               (AMF.UML.Signals.UML_Signal_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Signal_Events.UML_Signal_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Signal_Events.UML_Signal_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Signal_Events.UML_Signal_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Signal_Event_Set;

      ------------------
      -- UML_Slot_Set --
      ------------------

      procedure UML_Slot_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Slot_Defining_Feature_A_Slot then
            --  Slot::definingFeature : StructuralFeature

            AMF.UML.Slots.UML_Slot_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Defining_Feature
               (AMF.UML.Structural_Features.UML_Structural_Feature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Slot_Owning_Instance_Instance_Specification_Slot then
            --  Slot::owningInstance : InstanceSpecification

            AMF.UML.Slots.UML_Slot_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Instance
               (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end UML_Slot_Set;

      ----------------------------------------------
      -- UML_Start_Classifier_Behavior_Action_Set --
      ----------------------------------------------

      procedure UML_Start_Classifier_Behavior_Action_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Start_Classifier_Behavior_Action_Object_A_Start_Classifier_Behavior_Action then
            --  StartClassifierBehaviorAction::object : InputPin

            AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Object
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Start_Classifier_Behavior_Action_Set;

      ------------------------------------------
      -- UML_Start_Object_Behavior_Action_Set --
      ------------------------------------------

      procedure UML_Start_Object_Behavior_Action_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Call_Action_Is_Synchronous then
            --  CallAction::isSynchronous : Boolean

            AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Synchronous
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Start_Object_Behavior_Action_Object_A_Start_Object_Behavior_Action then
            --  StartObjectBehaviorAction::object : InputPin

            AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Object
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Invocation_Action_On_Port_A_Invocation_Action then
            --  InvocationAction::onPort : Port

            AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_On_Port
               (AMF.UML.Ports.UML_Port_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Start_Object_Behavior_Action_Set;

      -------------------
      -- UML_State_Set --
      -------------------

      procedure UML_State_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Vertex_Container_Region_Subvertex then
            --  Vertex::container : Region

            AMF.UML.States.UML_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Container
               (AMF.UML.Regions.UML_Region_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Do_Activity_A_State then
            --  State::doActivity : Behavior

            AMF.UML.States.UML_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Do_Activity
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Entry_A_State then
            --  State::entry : Behavior

            AMF.UML.States.UML_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Entry
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Exit_A_State then
            --  State::exit : Behavior

            AMF.UML.States.UML_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Exit
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.States.UML_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.States.UML_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.States.UML_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Redefined_State_A_State then
            --  State::redefinedState : State

            AMF.UML.States.UML_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Redefined_State
               (AMF.UML.States.UML_State_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_State_Invariant_A_Owning_State then
            --  State::stateInvariant : Constraint

            AMF.UML.States.UML_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_State_Invariant
               (AMF.UML.Constraints.UML_Constraint_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Submachine_State_Machine_Submachine_State then
            --  State::submachine : StateMachine

            AMF.UML.States.UML_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Submachine
               (AMF.UML.State_Machines.UML_State_Machine_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.States.UML_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_State_Set;

      -----------------------------
      -- UML_State_Invariant_Set --
      -----------------------------

      procedure UML_State_Invariant_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Invariant_Covered_A_State_Invariant then
            --  StateInvariant::covered : Lifeline

            AMF.UML.State_Invariants.UML_State_Invariant_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Covered
               (AMF.UML.Lifelines.UML_Lifeline_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Interaction_Interaction_Fragment then
            --  InteractionFragment::enclosingInteraction : Interaction

            AMF.UML.State_Invariants.UML_State_Invariant_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Interaction
               (AMF.UML.Interactions.UML_Interaction_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interaction_Fragment_Enclosing_Operand_Interaction_Operand_Fragment then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            AMF.UML.State_Invariants.UML_State_Invariant_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Operand
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_State_Invariant_Invariant_A_State_Invariant then
            --  StateInvariant::invariant : Constraint

            AMF.UML.State_Invariants.UML_State_Invariant_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Invariant
               (AMF.UML.Constraints.UML_Constraint_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.State_Invariants.UML_State_Invariant_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.State_Invariants.UML_State_Invariant_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.State_Invariants.UML_State_Invariant_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_State_Invariant_Set;

      ---------------------------
      -- UML_State_Machine_Set --
      ---------------------------

      procedure UML_State_Machine_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Classifier_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::classifierBehavior : Behavior

            AMF.UML.State_Machines.UML_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Classifier_Behavior
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            AMF.UML.State_Machines.UML_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.State_Machines.UML_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            AMF.UML.State_Machines.UML_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Active
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.State_Machines.UML_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.State_Machines.UML_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Is_Reentrant then
            --  Behavior::isReentrant : Boolean

            AMF.UML.State_Machines.UML_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.State_Machines.UML_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.State_Machines.UML_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.State_Machines.UML_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.State_Machines.UML_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.State_Machines.UML_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            AMF.UML.State_Machines.UML_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            AMF.UML.State_Machines.UML_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behavior_Specification_Behavioral_Feature_Method then
            --  Behavior::specification : BehavioralFeature

            AMF.UML.State_Machines.UML_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Specification
               (AMF.UML.Behavioral_Features.UML_Behavioral_Feature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.State_Machines.UML_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.State_Machines.UML_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.State_Machines.UML_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.State_Machines.UML_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_State_Machine_Set;

      ------------------------
      -- UML_Stereotype_Set --
      ------------------------

      procedure UML_Stereotype_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Classifier_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::classifierBehavior : Behavior

            AMF.UML.Stereotypes.UML_Stereotype_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Classifier_Behavior
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            AMF.UML.Stereotypes.UML_Stereotype_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Stereotypes.UML_Stereotype_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            AMF.UML.Stereotypes.UML_Stereotype_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Active
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Stereotypes.UML_Stereotype_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Stereotypes.UML_Stereotype_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Stereotypes.UML_Stereotype_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Stereotypes.UML_Stereotype_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Stereotypes.UML_Stereotype_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Stereotypes.UML_Stereotype_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Stereotypes.UML_Stereotype_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            AMF.UML.Stereotypes.UML_Stereotype_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Stereotypes.UML_Stereotype_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Stereotypes.UML_Stereotype_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Stereotypes.UML_Stereotype_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Stereotypes.UML_Stereotype_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Stereotypes.UML_Stereotype_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Stereotype_Set;

      -------------------------------
      -- UML_String_Expression_Set --
      -------------------------------

      procedure UML_String_Expression_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.String_Expressions.UML_String_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.String_Expressions.UML_String_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.String_Expressions.UML_String_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_String_Expression_Owning_Expression_String_Expression_Sub_Expression then
            --  StringExpression::owningExpression : StringExpression

            AMF.UML.String_Expressions.UML_String_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.String_Expressions.UML_String_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Expression_Symbol then
            --  Expression::symbol : String

            AMF.UML.String_Expressions.UML_String_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Symbol
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.String_Expressions.UML_String_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            AMF.UML.String_Expressions.UML_String_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.String_Expressions.UML_String_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.String_Expressions.UML_String_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_String_Expression_Set;

      --------------------------------------
      -- UML_Structured_Activity_Node_Set --
      --------------------------------------

      procedure UML_Structured_Activity_Node_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Activity_Activity_Structured_Node then
            --  StructuredActivityNode::activity : Activity

            AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Group_In_Activity_Activity_Group then
            --  ActivityGroup::inActivity : Activity

            AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Structured_Activity_Node_Must_Isolate then
            --  StructuredActivityNode::mustIsolate : Boolean

            AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Must_Isolate
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Structured_Activity_Node_Set;

      --------------------------
      -- UML_Substitution_Set --
      --------------------------

      procedure UML_Substitution_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Substitution_Contract_A_Substitution then
            --  Substitution::contract : Classifier

            AMF.UML.Substitutions.UML_Substitution_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Contract
               (AMF.UML.Classifiers.UML_Classifier_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Abstraction_Mapping_A_Abstraction then
            --  Abstraction::mapping : OpaqueExpression

            AMF.UML.Substitutions.UML_Substitution_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Mapping
               (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Substitutions.UML_Substitution_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Substitutions.UML_Substitution_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Substitutions.UML_Substitution_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Substitution_Substituting_Classifier_Classifier_Substitution then
            --  Substitution::substitutingClassifier : Classifier

            AMF.UML.Substitutions.UML_Substitution_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Substituting_Classifier
               (AMF.UML.Classifiers.UML_Classifier_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Substitutions.UML_Substitution_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Substitutions.UML_Substitution_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Substitutions.UML_Substitution_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Substitution_Set;

      ------------------------------
      -- UML_Template_Binding_Set --
      ------------------------------

      procedure UML_Template_Binding_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Binding_Bound_Element_Templateable_Element_Template_Binding then
            --  TemplateBinding::boundElement : TemplateableElement

            AMF.UML.Template_Bindings.UML_Template_Binding_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Bound_Element
               (AMF.UML.Templateable_Elements.UML_Templateable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Binding_Signature_A_Template_Binding then
            --  TemplateBinding::signature : TemplateSignature

            AMF.UML.Template_Bindings.UML_Template_Binding_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end UML_Template_Binding_Set;

      --------------------------------
      -- UML_Template_Parameter_Set --
      --------------------------------

      procedure UML_Template_Parameter_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Default_A_Template_Parameter then
            --  TemplateParameter::default : ParameterableElement

            AMF.UML.Template_Parameters.UML_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Default
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Owned_Default_A_Template_Parameter then
            --  TemplateParameter::ownedDefault : ParameterableElement

            AMF.UML.Template_Parameters.UML_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Default
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Owned_Parametered_Element_Parameterable_Element_Owning_Template_Parameter then
            --  TemplateParameter::ownedParameteredElement : ParameterableElement

            AMF.UML.Template_Parameters.UML_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Parametered_Element
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Parametered_Element_Parameterable_Element_Template_Parameter then
            --  TemplateParameter::parameteredElement : ParameterableElement

            AMF.UML.Template_Parameters.UML_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Parametered_Element
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Signature_Template_Signature_Owned_Parameter then
            --  TemplateParameter::signature : TemplateSignature

            AMF.UML.Template_Parameters.UML_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end UML_Template_Parameter_Set;

      ---------------------------------------------
      -- UML_Template_Parameter_Substitution_Set --
      ---------------------------------------------

      procedure UML_Template_Parameter_Substitution_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Substitution_Actual_A_Template_Parameter_Substitution then
            --  TemplateParameterSubstitution::actual : ParameterableElement

            AMF.UML.Template_Parameter_Substitutions.UML_Template_Parameter_Substitution_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Actual
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Substitution_Formal_A_Template_Parameter_Substitution then
            --  TemplateParameterSubstitution::formal : TemplateParameter

            AMF.UML.Template_Parameter_Substitutions.UML_Template_Parameter_Substitution_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Formal
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Substitution_Owned_Actual_A_Template_Parameter_Substitution then
            --  TemplateParameterSubstitution::ownedActual : ParameterableElement

            AMF.UML.Template_Parameter_Substitutions.UML_Template_Parameter_Substitution_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Actual
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Parameter_Substitution_Template_Binding_Template_Binding_Parameter_Substitution then
            --  TemplateParameterSubstitution::templateBinding : TemplateBinding

            AMF.UML.Template_Parameter_Substitutions.UML_Template_Parameter_Substitution_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Binding
               (AMF.UML.Template_Bindings.UML_Template_Binding_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end UML_Template_Parameter_Substitution_Set;

      --------------------------------
      -- UML_Template_Signature_Set --
      --------------------------------

      procedure UML_Template_Signature_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Template_Signature_Template_Templateable_Element_Owned_Template_Signature then
            --  TemplateSignature::template : TemplateableElement

            AMF.UML.Template_Signatures.UML_Template_Signature_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template
               (AMF.UML.Templateable_Elements.UML_Templateable_Element_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end UML_Template_Signature_Set;

      ----------------------------------
      -- UML_Test_Identity_Action_Set --
      ----------------------------------

      procedure UML_Test_Identity_Action_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Test_Identity_Action_First_A_Test_Identity_Action then
            --  TestIdentityAction::first : InputPin

            AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_First
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Test_Identity_Action_Result_A_Test_Identity_Action then
            --  TestIdentityAction::result : OutputPin

            AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Result
               (AMF.UML.Output_Pins.UML_Output_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Test_Identity_Action_Second_A_Test_Identity_Action then
            --  TestIdentityAction::second : InputPin

            AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Second
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Test_Identity_Action_Set;

      -----------------------------
      -- UML_Time_Constraint_Set --
      -----------------------------

      procedure UML_Time_Constraint_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Constraint_Context_Namespace_Owned_Rule then
            --  Constraint::context : Namespace

            AMF.UML.Time_Constraints.UML_Time_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Context
               (AMF.UML.Namespaces.UML_Namespace_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Time_Constraint_First_Event then
            --  TimeConstraint::firstEvent : Boolean

            AMF.UML.Time_Constraints.UML_Time_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_First_Event
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Time_Constraints.UML_Time_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Time_Constraints.UML_Time_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Time_Constraints.UML_Time_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Constraint_Specification_A_Owning_Constraint then
            --  Constraint::specification : ValueSpecification

            AMF.UML.Time_Constraints.UML_Time_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Specification
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interval_Constraint_Specification_A_Interval_Constraint then
            --  IntervalConstraint::specification : Interval

            AMF.UML.Time_Constraints.UML_Time_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Specification
               (AMF.UML.Intervals.UML_Interval_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Time_Constraint_Specification_A_Time_Constraint then
            --  TimeConstraint::specification : TimeInterval

            AMF.UML.Time_Constraints.UML_Time_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Specification
               (AMF.UML.Time_Intervals.UML_Time_Interval_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Time_Constraints.UML_Time_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Time_Constraints.UML_Time_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Time_Constraints.UML_Time_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Time_Constraint_Set;

      ------------------------
      -- UML_Time_Event_Set --
      ------------------------

      procedure UML_Time_Event_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Time_Event_Is_Relative then
            --  TimeEvent::isRelative : Boolean

            AMF.UML.Time_Events.UML_Time_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Relative
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Time_Events.UML_Time_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Time_Events.UML_Time_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Time_Events.UML_Time_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Time_Events.UML_Time_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Time_Events.UML_Time_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Time_Events.UML_Time_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Time_Event_When_A_Time_Event then
            --  TimeEvent::when : TimeExpression

            AMF.UML.Time_Events.UML_Time_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_When
               (AMF.UML.Time_Expressions.UML_Time_Expression_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end UML_Time_Event_Set;

      -----------------------------
      -- UML_Time_Expression_Set --
      -----------------------------

      procedure UML_Time_Expression_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Time_Expression_Expr_A_Time_Expression then
            --  TimeExpression::expr : ValueSpecification

            AMF.UML.Time_Expressions.UML_Time_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Expr
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Time_Expressions.UML_Time_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Time_Expressions.UML_Time_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Time_Expressions.UML_Time_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Time_Expressions.UML_Time_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            AMF.UML.Time_Expressions.UML_Time_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Time_Expressions.UML_Time_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Time_Expressions.UML_Time_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Time_Expression_Set;

      ---------------------------
      -- UML_Time_Interval_Set --
      ---------------------------

      procedure UML_Time_Interval_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interval_Max_A_Interval then
            --  Interval::max : ValueSpecification

            AMF.UML.Time_Intervals.UML_Time_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Max
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Time_Interval_Max_A_Time_Interval then
            --  TimeInterval::max : TimeExpression

            AMF.UML.Time_Intervals.UML_Time_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Max
               (AMF.UML.Time_Expressions.UML_Time_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Interval_Min_A_Interval then
            --  Interval::min : ValueSpecification

            AMF.UML.Time_Intervals.UML_Time_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Min
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Time_Interval_Min_A_Time_Interval then
            --  TimeInterval::min : TimeExpression

            AMF.UML.Time_Intervals.UML_Time_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Min
               (AMF.UML.Time_Expressions.UML_Time_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Time_Intervals.UML_Time_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Time_Intervals.UML_Time_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Time_Intervals.UML_Time_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Time_Intervals.UML_Time_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            AMF.UML.Time_Intervals.UML_Time_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Time_Intervals.UML_Time_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Time_Intervals.UML_Time_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Time_Interval_Set;

      ------------------------------
      -- UML_Time_Observation_Set --
      ------------------------------

      procedure UML_Time_Observation_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Time_Observation_Event_A_Time_Observation then
            --  TimeObservation::event : NamedElement

            AMF.UML.Time_Observations.UML_Time_Observation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Event
               (AMF.UML.Named_Elements.UML_Named_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Time_Observation_First_Event then
            --  TimeObservation::firstEvent : Boolean

            AMF.UML.Time_Observations.UML_Time_Observation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_First_Event
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Time_Observations.UML_Time_Observation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Time_Observations.UML_Time_Observation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Time_Observations.UML_Time_Observation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Time_Observations.UML_Time_Observation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Time_Observations.UML_Time_Observation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Time_Observations.UML_Time_Observation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Time_Observation_Set;

      ------------------------
      -- UML_Transition_Set --
      ------------------------

      procedure UML_Transition_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Transition_Container_Region_Transition then
            --  Transition::container : Region

            AMF.UML.Transitions.UML_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Container
               (AMF.UML.Regions.UML_Region_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Transition_Effect_A_Transition then
            --  Transition::effect : Behavior

            AMF.UML.Transitions.UML_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Effect
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Transition_Guard_A_Transition then
            --  Transition::guard : Constraint

            AMF.UML.Transitions.UML_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Guard
               (AMF.UML.Constraints.UML_Constraint_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Transitions.UML_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Transition_Kind then
            --  Transition::kind : TransitionKind

            AMF.UML.Transitions.UML_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Kind
               (AMF.UML.Holders.Transition_Kinds.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Transitions.UML_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Transitions.UML_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Transition_Redefined_Transition_A_Transition then
            --  Transition::redefinedTransition : Transition

            AMF.UML.Transitions.UML_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Redefined_Transition
               (AMF.UML.Transitions.UML_Transition_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Transition_Source_Vertex_Outgoing then
            --  Transition::source : Vertex

            AMF.UML.Transitions.UML_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Source
               (AMF.UML.Vertexs.UML_Vertex_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Transition_Target_Vertex_Incoming then
            --  Transition::target : Vertex

            AMF.UML.Transitions.UML_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Target
               (AMF.UML.Vertexs.UML_Vertex_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Transitions.UML_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Transition_Set;

      ---------------------
      -- UML_Trigger_Set --
      ---------------------

      procedure UML_Trigger_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Trigger_Event_A_Trigger then
            --  Trigger::event : Event

            AMF.UML.Triggers.UML_Trigger_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Event
               (AMF.UML.Events.UML_Event_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Triggers.UML_Trigger_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Triggers.UML_Trigger_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Triggers.UML_Trigger_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Trigger_Set;

      -------------------------------
      -- UML_Unmarshall_Action_Set --
      -------------------------------

      procedure UML_Unmarshall_Action_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Unmarshall_Action_Object_A_Unmarshall_Action then
            --  UnmarshallAction::object : InputPin

            AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Object
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Unmarshall_Action_Unmarshall_Type_A_Unmarshall_Action then
            --  UnmarshallAction::unmarshallType : Classifier

            AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Unmarshall_Type
               (AMF.UML.Classifiers.UML_Classifier_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Unmarshall_Action_Set;

      -------------------
      -- UML_Usage_Set --
      -------------------

      procedure UML_Usage_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Usages.UML_Usage_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Usages.UML_Usage_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Usages.UML_Usage_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Usages.UML_Usage_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Usages.UML_Usage_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Usages.UML_Usage_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Usage_Set;

      ----------------------
      -- UML_Use_Case_Set --
      ----------------------

      procedure UML_Use_Case_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Behaviored_Classifier_Classifier_Behavior_A_Behaviored_Classifier then
            --  BehavioredClassifier::classifierBehavior : Behavior

            AMF.UML.Use_Cases.UML_Use_Case_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Classifier_Behavior
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Use_Cases.UML_Use_Case_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Use_Cases.UML_Use_Case_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Use_Cases.UML_Use_Case_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Use_Cases.UML_Use_Case_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Use_Cases.UML_Use_Case_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Owned_Template_Signature_Redefinable_Template_Signature_Classifier then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Use_Cases.UML_Use_Case_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Templateable_Element_Owned_Template_Signature_Template_Signature_Template then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Use_Cases.UML_Use_Case_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Use_Cases.UML_Use_Case_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Type_Package_Package_Owned_Type then
            --  Type::package : Package

            AMF.UML.Use_Cases.UML_Use_Case_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Representation_A_Classifier then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Use_Cases.UML_Use_Case_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Classifier_Template_Parameter_Classifier_Template_Parameter_Parametered_Element then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Use_Cases.UML_Use_Case_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Use_Cases.UML_Use_Case_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Use_Cases.UML_Use_Case_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Use_Cases.UML_Use_Case_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Use_Case_Set;

      -----------------------
      -- UML_Value_Pin_Set --
      -----------------------

      procedure UML_Value_Pin_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Value_Pins.UML_Value_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Value_Pins.UML_Value_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Pin_Is_Control then
            --  Pin::isControl : Boolean

            AMF.UML.Value_Pins.UML_Value_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Control
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Is_Control_Type then
            --  ObjectNode::isControlType : Boolean

            AMF.UML.Value_Pins.UML_Value_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Control_Type
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Value_Pins.UML_Value_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Is_Ordered then
            --  MultiplicityElement::isOrdered : Boolean

            AMF.UML.Value_Pins.UML_Value_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Ordered
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Is_Unique then
            --  MultiplicityElement::isUnique : Boolean

            AMF.UML.Value_Pins.UML_Value_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Unique
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Lower_Value_A_Owning_Lower then
            --  MultiplicityElement::lowerValue : ValueSpecification

            AMF.UML.Value_Pins.UML_Value_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Lower_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Value_Pins.UML_Value_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Value_Pins.UML_Value_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Ordering then
            --  ObjectNode::ordering : ObjectNodeOrderingKind

            AMF.UML.Value_Pins.UML_Value_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Ordering
               (AMF.UML.Holders.Object_Node_Ordering_Kinds.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Selection_A_Object_Node then
            --  ObjectNode::selection : Behavior

            AMF.UML.Value_Pins.UML_Value_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Selection
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            AMF.UML.Value_Pins.UML_Value_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Object_Node_Upper_Bound_A_Object_Node then
            --  ObjectNode::upperBound : ValueSpecification

            AMF.UML.Value_Pins.UML_Value_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Upper_Bound
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Upper_Value_A_Owning_Upper then
            --  MultiplicityElement::upperValue : ValueSpecification

            AMF.UML.Value_Pins.UML_Value_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Upper_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Value_Pin_Value_A_Value_Pin then
            --  ValuePin::value : ValueSpecification

            AMF.UML.Value_Pins.UML_Value_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Value_Pins.UML_Value_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Value_Pin_Set;

      ----------------------------------------
      -- UML_Value_Specification_Action_Set --
      ----------------------------------------

      procedure UML_Value_Specification_Action_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_Activity_Activity_Node then
            --  ActivityNode::activity : Activity

            AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Activity_Node_In_Structured_Node_Structured_Activity_Node_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Value_Specification_Action_Result_A_Value_Specification_Action then
            --  ValueSpecificationAction::result : OutputPin

            AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Result
               (AMF.UML.Output_Pins.UML_Output_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Value_Specification_Action_Value_A_Value_Specification_Action then
            --  ValueSpecificationAction::value : ValueSpecification

            AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Value_Specification_Action_Set;

      ----------------------
      -- UML_Variable_Set --
      ----------------------

      procedure UML_Variable_Set is
      begin
         if Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Variable_Activity_Scope_Activity_Variable then
            --  Variable::activityScope : Activity

            AMF.UML.Variables.UML_Variable_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity_Scope
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Is_Ordered then
            --  MultiplicityElement::isOrdered : Boolean

            AMF.UML.Variables.UML_Variable_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Ordered
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Is_Unique then
            --  MultiplicityElement::isUnique : Boolean

            AMF.UML.Variables.UML_Variable_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Unique
               (League.Holders.Booleans.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Lower_Value_A_Owning_Lower then
            --  MultiplicityElement::lowerValue : ValueSpecification

            AMF.UML.Variables.UML_Variable_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Lower_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Variables.UML_Variable_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Name_Expression_A_Named_Element then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Variables.UML_Variable_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Owning_Template_Parameter_Template_Parameter_Owned_Parametered_Element then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Variables.UML_Variable_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Variable_Scope_Structured_Activity_Node_Variable then
            --  Variable::scope : StructuredActivityNode

            AMF.UML.Variables.UML_Variable_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Scope
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Connectable_Element_Template_Parameter_Connectable_Element_Template_Parameter_Parametered_Element then
            --  ConnectableElement::templateParameter : ConnectableElementTemplateParameter

            AMF.UML.Variables.UML_Variable_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Parameterable_Element_Template_Parameter_Template_Parameter_Parametered_Element then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Variables.UML_Variable_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Typed_Element_Type_A_Typed_Element then
            --  TypedElement::type : Type

            AMF.UML.Variables.UML_Variable_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Multiplicity_Element_Upper_Value_A_Owning_Upper then
            --  MultiplicityElement::upperValue : ValueSpecification

            AMF.UML.Variables.UML_Variable_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Upper_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = AMF.Internals.Tables.UML_Metamodel.MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Variables.UML_Variable_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end UML_Variable_Set;
   begin
      case UML_Element_Table.Table (Self).Kind is
         when AMF.Internals.Tables.UML_Types.E_None =>
            raise Program_Error;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Auxiliary =>
            Standard_Profile_L2_Auxiliary_Set;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Call =>
            Standard_Profile_L2_Call_Set;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Create =>
            Standard_Profile_L2_Create_Set;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Derive =>
            Standard_Profile_L2_Derive_Set;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Destroy =>
            Standard_Profile_L2_Destroy_Set;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Document =>
            Standard_Profile_L2_Document_Set;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Entity =>
            Standard_Profile_L2_Entity_Set;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Executable =>
            Standard_Profile_L2_Executable_Set;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Focus =>
            Standard_Profile_L2_Focus_Set;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Framework =>
            Standard_Profile_L2_Framework_Set;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Implement =>
            Standard_Profile_L2_Implement_Set;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Implementation_Class =>
            Standard_Profile_L2_Implementation_Class_Set;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Instantiate =>
            Standard_Profile_L2_Instantiate_Set;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Library =>
            Standard_Profile_L2_Library_Set;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Metaclass =>
            Standard_Profile_L2_Metaclass_Set;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Model_Library =>
            Standard_Profile_L2_Model_Library_Set;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Process =>
            Standard_Profile_L2_Process_Set;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Realization =>
            Standard_Profile_L2_Realization_Set;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Refine =>
            Standard_Profile_L2_Refine_Set;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Responsibility =>
            Standard_Profile_L2_Responsibility_Set;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Script =>
            Standard_Profile_L2_Script_Set;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Send =>
            Standard_Profile_L2_Send_Set;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Service =>
            Standard_Profile_L2_Service_Set;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Source =>
            Standard_Profile_L2_Source_Set;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Specification =>
            Standard_Profile_L2_Specification_Set;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Subsystem =>
            Standard_Profile_L2_Subsystem_Set;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Trace =>
            Standard_Profile_L2_Trace_Set;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Type =>
            Standard_Profile_L2_Type_Set;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L2_Utility =>
            Standard_Profile_L2_Utility_Set;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L3_Build_Component =>
            Standard_Profile_L3_Build_Component_Set;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L3_Metamodel =>
            Standard_Profile_L3_Metamodel_Set;

         when AMF.Internals.Tables.UML_Types.E_Standard_Profile_L3_System_Model =>
            Standard_Profile_L3_System_Model_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Abstraction =>
            UML_Abstraction_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Accept_Call_Action =>
            UML_Accept_Call_Action_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Accept_Event_Action =>
            UML_Accept_Event_Action_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Action_Execution_Specification =>
            UML_Action_Execution_Specification_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Action_Input_Pin =>
            UML_Action_Input_Pin_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Activity =>
            UML_Activity_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Activity_Final_Node =>
            UML_Activity_Final_Node_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Activity_Parameter_Node =>
            UML_Activity_Parameter_Node_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Activity_Partition =>
            UML_Activity_Partition_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Actor =>
            UML_Actor_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Add_Structural_Feature_Value_Action =>
            UML_Add_Structural_Feature_Value_Action_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Add_Variable_Value_Action =>
            UML_Add_Variable_Value_Action_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Any_Receive_Event =>
            UML_Any_Receive_Event_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Artifact =>
            UML_Artifact_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Association =>
            UML_Association_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Association_Class =>
            UML_Association_Class_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Behavior_Execution_Specification =>
            UML_Behavior_Execution_Specification_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Broadcast_Signal_Action =>
            UML_Broadcast_Signal_Action_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Call_Behavior_Action =>
            UML_Call_Behavior_Action_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Call_Event =>
            UML_Call_Event_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Call_Operation_Action =>
            UML_Call_Operation_Action_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Central_Buffer_Node =>
            UML_Central_Buffer_Node_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Change_Event =>
            UML_Change_Event_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Class =>
            UML_Class_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Classifier_Template_Parameter =>
            UML_Classifier_Template_Parameter_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Clause =>
            UML_Clause_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Clear_Association_Action =>
            UML_Clear_Association_Action_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Clear_Structural_Feature_Action =>
            UML_Clear_Structural_Feature_Action_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Clear_Variable_Action =>
            UML_Clear_Variable_Action_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Collaboration =>
            UML_Collaboration_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Collaboration_Use =>
            UML_Collaboration_Use_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Combined_Fragment =>
            UML_Combined_Fragment_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Comment =>
            UML_Comment_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Communication_Path =>
            UML_Communication_Path_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Component =>
            UML_Component_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Component_Realization =>
            UML_Component_Realization_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Conditional_Node =>
            UML_Conditional_Node_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Connectable_Element_Template_Parameter =>
            UML_Connectable_Element_Template_Parameter_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Connection_Point_Reference =>
            UML_Connection_Point_Reference_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Connector =>
            UML_Connector_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Connector_End =>
            UML_Connector_End_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Consider_Ignore_Fragment =>
            UML_Consider_Ignore_Fragment_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Constraint =>
            UML_Constraint_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Continuation =>
            UML_Continuation_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Control_Flow =>
            UML_Control_Flow_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Create_Link_Action =>
            UML_Create_Link_Action_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Create_Link_Object_Action =>
            UML_Create_Link_Object_Action_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Create_Object_Action =>
            UML_Create_Object_Action_Set;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Activity_Diagram =>
            UMLDI_UML_Activity_Diagram_Set;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Association_End_Label =>
            UMLDI_UML_Association_End_Label_Set;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Association_Or_Connector_Or_Link_Shape =>
            UMLDI_UML_Association_Or_Connector_Or_Link_Shape_Set;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Class_Diagram =>
            UMLDI_UML_Class_Diagram_Set;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Classifier_Shape =>
            UMLDI_UML_Classifier_Shape_Set;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Compartment =>
            UMLDI_UML_Compartment_Set;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Compartmentable_Shape =>
            UMLDI_UML_Compartmentable_Shape_Set;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Component_Diagram =>
            UMLDI_UML_Component_Diagram_Set;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Composite_Structure_Diagram =>
            UMLDI_UML_Composite_Structure_Diagram_Set;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Deployment_Diagram =>
            UMLDI_UML_Deployment_Diagram_Set;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Edge =>
            UMLDI_UML_Edge_Set;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Interaction_Diagram =>
            UMLDI_UML_Interaction_Diagram_Set;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Interaction_Table_Label =>
            UMLDI_UML_Interaction_Table_Label_Set;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Keyword_Label =>
            UMLDI_UML_Keyword_Label_Set;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Label =>
            UMLDI_UML_Label_Set;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Multiplicity_Label =>
            UMLDI_UML_Multiplicity_Label_Set;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Name_Label =>
            UMLDI_UML_Name_Label_Set;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Object_Diagram =>
            UMLDI_UML_Object_Diagram_Set;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Package_Diagram =>
            UMLDI_UML_Package_Diagram_Set;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Profile_Diagram =>
            UMLDI_UML_Profile_Diagram_Set;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Redefines_Label =>
            UMLDI_UML_Redefines_Label_Set;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Shape =>
            UMLDI_UML_Shape_Set;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_State_Machine_Diagram =>
            UMLDI_UML_State_Machine_Diagram_Set;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_State_Shape =>
            UMLDI_UML_State_Shape_Set;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Stereotype_Property_Value_Label =>
            UMLDI_UML_Stereotype_Property_Value_Label_Set;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Style =>
            UMLDI_UML_Style_Set;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Typed_Element_Label =>
            UMLDI_UML_Typed_Element_Label_Set;

         when AMF.Internals.Tables.UML_Types.E_UMLDI_UML_Use_Case_Diagram =>
            UMLDI_UML_Use_Case_Diagram_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Data_Store_Node =>
            UML_Data_Store_Node_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Data_Type =>
            UML_Data_Type_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Decision_Node =>
            UML_Decision_Node_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Dependency =>
            UML_Dependency_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Deployment =>
            UML_Deployment_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Deployment_Specification =>
            UML_Deployment_Specification_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Destroy_Link_Action =>
            UML_Destroy_Link_Action_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Destroy_Object_Action =>
            UML_Destroy_Object_Action_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Destruction_Occurrence_Specification =>
            UML_Destruction_Occurrence_Specification_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Device =>
            UML_Device_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Duration =>
            UML_Duration_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Duration_Constraint =>
            UML_Duration_Constraint_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Duration_Interval =>
            UML_Duration_Interval_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Duration_Observation =>
            UML_Duration_Observation_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Element_Import =>
            UML_Element_Import_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Enumeration =>
            UML_Enumeration_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Enumeration_Literal =>
            UML_Enumeration_Literal_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Exception_Handler =>
            UML_Exception_Handler_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Execution_Environment =>
            UML_Execution_Environment_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Execution_Occurrence_Specification =>
            UML_Execution_Occurrence_Specification_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Expansion_Node =>
            UML_Expansion_Node_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Expansion_Region =>
            UML_Expansion_Region_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Expression =>
            UML_Expression_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Extend =>
            UML_Extend_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Extension =>
            UML_Extension_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Extension_End =>
            UML_Extension_End_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Extension_Point =>
            UML_Extension_Point_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Final_State =>
            UML_Final_State_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Flow_Final_Node =>
            UML_Flow_Final_Node_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Fork_Node =>
            UML_Fork_Node_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Function_Behavior =>
            UML_Function_Behavior_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Gate =>
            UML_Gate_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_General_Ordering =>
            UML_General_Ordering_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Generalization =>
            UML_Generalization_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Generalization_Set =>
            UML_Generalization_Set_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Image =>
            UML_Image_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Include =>
            UML_Include_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Information_Flow =>
            UML_Information_Flow_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Information_Item =>
            UML_Information_Item_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Initial_Node =>
            UML_Initial_Node_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Input_Pin =>
            UML_Input_Pin_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Instance_Specification =>
            UML_Instance_Specification_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Instance_Value =>
            UML_Instance_Value_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Interaction =>
            UML_Interaction_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Interaction_Constraint =>
            UML_Interaction_Constraint_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Interaction_Operand =>
            UML_Interaction_Operand_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Interaction_Use =>
            UML_Interaction_Use_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Interface =>
            UML_Interface_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Interface_Realization =>
            UML_Interface_Realization_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Interruptible_Activity_Region =>
            UML_Interruptible_Activity_Region_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Interval =>
            UML_Interval_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Interval_Constraint =>
            UML_Interval_Constraint_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Join_Node =>
            UML_Join_Node_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Lifeline =>
            UML_Lifeline_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Link_End_Creation_Data =>
            UML_Link_End_Creation_Data_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Link_End_Data =>
            UML_Link_End_Data_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Link_End_Destruction_Data =>
            UML_Link_End_Destruction_Data_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Literal_Boolean =>
            UML_Literal_Boolean_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Literal_Integer =>
            UML_Literal_Integer_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Literal_Null =>
            UML_Literal_Null_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Literal_Real =>
            UML_Literal_Real_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Literal_String =>
            UML_Literal_String_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Literal_Unlimited_Natural =>
            UML_Literal_Unlimited_Natural_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Loop_Node =>
            UML_Loop_Node_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Manifestation =>
            UML_Manifestation_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Merge_Node =>
            UML_Merge_Node_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Message =>
            UML_Message_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Message_Occurrence_Specification =>
            UML_Message_Occurrence_Specification_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Model =>
            UML_Model_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Node =>
            UML_Node_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Object_Flow =>
            UML_Object_Flow_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Occurrence_Specification =>
            UML_Occurrence_Specification_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Opaque_Action =>
            UML_Opaque_Action_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Opaque_Behavior =>
            UML_Opaque_Behavior_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Opaque_Expression =>
            UML_Opaque_Expression_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Operation =>
            UML_Operation_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Operation_Template_Parameter =>
            UML_Operation_Template_Parameter_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Output_Pin =>
            UML_Output_Pin_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Package =>
            UML_Package_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Package_Import =>
            UML_Package_Import_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Package_Merge =>
            UML_Package_Merge_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Parameter =>
            UML_Parameter_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Parameter_Set =>
            UML_Parameter_Set_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Part_Decomposition =>
            UML_Part_Decomposition_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Port =>
            UML_Port_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Primitive_Type =>
            UML_Primitive_Type_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Profile =>
            UML_Profile_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Profile_Application =>
            UML_Profile_Application_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Property =>
            UML_Property_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Protocol_Conformance =>
            UML_Protocol_Conformance_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Protocol_State_Machine =>
            UML_Protocol_State_Machine_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Protocol_Transition =>
            UML_Protocol_Transition_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Pseudostate =>
            UML_Pseudostate_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Qualifier_Value =>
            UML_Qualifier_Value_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Raise_Exception_Action =>
            UML_Raise_Exception_Action_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Read_Extent_Action =>
            UML_Read_Extent_Action_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Read_Is_Classified_Object_Action =>
            UML_Read_Is_Classified_Object_Action_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Read_Link_Action =>
            UML_Read_Link_Action_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Read_Link_Object_End_Action =>
            UML_Read_Link_Object_End_Action_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Read_Link_Object_End_Qualifier_Action =>
            UML_Read_Link_Object_End_Qualifier_Action_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Read_Self_Action =>
            UML_Read_Self_Action_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Read_Structural_Feature_Action =>
            UML_Read_Structural_Feature_Action_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Read_Variable_Action =>
            UML_Read_Variable_Action_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Realization =>
            UML_Realization_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Reception =>
            UML_Reception_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Reclassify_Object_Action =>
            UML_Reclassify_Object_Action_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Redefinable_Template_Signature =>
            UML_Redefinable_Template_Signature_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Reduce_Action =>
            UML_Reduce_Action_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Region =>
            UML_Region_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Remove_Structural_Feature_Value_Action =>
            UML_Remove_Structural_Feature_Value_Action_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Remove_Variable_Value_Action =>
            UML_Remove_Variable_Value_Action_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Reply_Action =>
            UML_Reply_Action_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Send_Object_Action =>
            UML_Send_Object_Action_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Send_Signal_Action =>
            UML_Send_Signal_Action_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Sequence_Node =>
            UML_Sequence_Node_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Signal =>
            UML_Signal_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Signal_Event =>
            UML_Signal_Event_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Slot =>
            UML_Slot_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Start_Classifier_Behavior_Action =>
            UML_Start_Classifier_Behavior_Action_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Start_Object_Behavior_Action =>
            UML_Start_Object_Behavior_Action_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_State =>
            UML_State_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_State_Invariant =>
            UML_State_Invariant_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_State_Machine =>
            UML_State_Machine_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Stereotype =>
            UML_Stereotype_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_String_Expression =>
            UML_String_Expression_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Structured_Activity_Node =>
            UML_Structured_Activity_Node_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Substitution =>
            UML_Substitution_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Template_Binding =>
            UML_Template_Binding_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Template_Parameter =>
            UML_Template_Parameter_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Template_Parameter_Substitution =>
            UML_Template_Parameter_Substitution_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Template_Signature =>
            UML_Template_Signature_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Test_Identity_Action =>
            UML_Test_Identity_Action_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Time_Constraint =>
            UML_Time_Constraint_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Time_Event =>
            UML_Time_Event_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Time_Expression =>
            UML_Time_Expression_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Time_Interval =>
            UML_Time_Interval_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Time_Observation =>
            UML_Time_Observation_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Transition =>
            UML_Transition_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Trigger =>
            UML_Trigger_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Unmarshall_Action =>
            UML_Unmarshall_Action_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Usage =>
            UML_Usage_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Use_Case =>
            UML_Use_Case_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Value_Pin =>
            UML_Value_Pin_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Value_Specification_Action =>
            UML_Value_Specification_Action_Set;

         when AMF.Internals.Tables.UML_Types.E_UML_Variable =>
            UML_Variable_Set;
      end case;
   end Set;

end AMF.Internals.Tables.UML_Reflection;
