
private package Matreshka.Internals.Regexps.Compiler.Parser.Tables is

   type Goto_Entry is record
      Nonterm  : Integer;
      Newstate : Integer;
   end record;

   type Shift_Reduce_Entry is record
      T   : Integer;
      Act : Integer;
   end record;

   YY_Default           : constant :=    -1;
   YY_First_Shift_Entry : constant :=     0;
   YY_Accept_Code       : constant := -3001;
   YY_Error_Code        : constant := -3000;

   YY_Goto_Matrix : constant array (-1 .. 20) of Goto_Entry :=
    ((   -1,    -1), (   -5,    10), (   -4,     3), (   -3,     2),
     (   -2,     1), (   -5,    10), (   -4,    14), (   -5,    10),
     (   -4,     3), (   -3,     2), (   -2,    22), (   -5,    10),
     (   -4,     3), (   -3,     2), (   -2,    23), (   -6,    24),
     (   -5,    10), (   -4,     3), (   -3,    26), (   -6,    33),
     (   -5,    10), (   -4,    14));

   YY_Goto_Offset : constant array (0 .. 47) of Integer :=
    (    0,    4,    4,    6,    6,   10,   14,   14,
        14,   14,   14,   14,   15,   15,   18,   18,
        18,   18,   18,   18,   18,   18,   18,   18,
        18,   18,   19,   21,   21,   21,   21,   21,
        21,   21,   21,   21,   21,   21,   21,   21,
        21,   21,   21,   21,   21,   21,   21,   21);

   YY_Rule_Length : constant array (0 .. 30) of Integer :=
    (    2,    3,    1,    2,    1,    2,    2,    2,
         2,    2,    2,    6,    6,    5,    5,    5,
         5,    4,    4,    3,    3,    1,    1,    1,
         1,    1,    3,    4,    4,    2,    0);

   YY_Get_LHS_Rule : constant array (0 .. 30) of Integer :=
    (   -1,   -2,   -2,   -3,   -3,   -4,   -4,   -4,
        -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,
        -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,
        -4,   -4,   -5,   -5,   -6,   -6,   -6);

   YY_Shift_Reduce_Matrix : constant array (-1 .. 129) of Shift_Reduce_Entry :=
    ((   -1,    -1), (    2,     7), (    3,     6), (   11,    11),
     (   20,     4), (   21,     5), (   23,     8), (   24,     9),
     (   -1, -3000), (    0, -3001), (    4,    13), (   -1, -3000),
     (    2,     7), (    3,     6), (   11,    11), (   20,     4),
     (   21,     5), (   23,     8), (   24,     9), (   -1,    -2),
     (    5,    15), (    6,    16), (    7,    17), (    8,    18),
     (    9,    19), (   10,    20), (   15,    21), (   -1,    -4),
     (    2,     7), (    3,     6), (   11,    11), (   20,     4),
     (   21,     5), (   23,     8), (   24,     9), (   -1, -3000),
     (    2,     7), (    3,     6), (   11,    11), (   20,     4),
     (   21,     5), (   23,     8), (   24,     9), (   -1, -3000),
     (   -1,   -21), (   -1,   -22), (   -1,   -23), (   -1,   -24),
     (   -1,   -25), (   13,    25), (   -1,   -30), (   -1, -3000),
     (    2,     7), (    3,     6), (   11,    11), (   20,     4),
     (   21,     5), (   23,     8), (   24,     9), (   -1, -3000),
     (    5,    15), (    6,    16), (    7,    17), (    8,    18),
     (    9,    19), (   10,    20), (   15,    21), (   -1,    -3),
     (   -1,    -5), (   -1,    -6), (   -1,    -7), (   -1,    -8),
     (   -1,    -9), (   -1,   -10), (   18,    28), (   19,    27),
     (   -1, -3000), (    4,    13), (   22,    29), (   -1, -3000),
     (    4,    13), (   22,    30), (   -1, -3000), (    2,    32),
     (   12,    31), (   -1, -3000), (   -1,   -30), (    2,     7),
     (    3,     6), (   11,    11), (   20,     4), (   21,     5),
     (   23,     8), (   24,     9), (   -1,    -1), (   16,    35),
     (   17,    36), (   18,    34), (   -1, -3000), (   19,    37),
     (   -1, -3000), (   -1,   -19), (   -1,   -20), (   -1,   -26),
     (   14,    38), (   -1,   -29), (    2,    32), (   12,    39),
     (   -1, -3000), (   16,    41), (   17,    42), (   19,    40),
     (   -1, -3000), (   -1,   -17), (   -1,   -18), (   16,    43),
     (   17,    44), (   -1, -3000), (    2,    45), (   -1, -3000),
     (   -1,   -27), (   16,    46), (   17,    47), (   -1, -3000),
     (   -1,   -15), (   -1,   -16), (   -1,   -13), (   -1,   -14),
     (   -1,   -28), (   -1,   -11), (   -1,   -12));

   YY_Shift_Reduce_Offset : constant array (0 .. 47) of Integer :=
    (    0,    8,   11,   19,   27,   35,   43,   44,
        45,   46,   47,   48,   50,   51,   59,   67,
        68,   69,   70,   71,   72,   73,   76,   79,
        82,   85,   86,   94,   98,  100,  101,  102,
       103,  105,  108,  112,  113,  114,  117,  119,
       120,  123,  124,  125,  126,  127,  128,  129);

end Matreshka.Internals.Regexps.Compiler.Parser.Tables;
