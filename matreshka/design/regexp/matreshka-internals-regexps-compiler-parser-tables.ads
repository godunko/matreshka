
private package Matreshka.Internals.Regexps.Compiler.Parser.Tables is

   pragma Preelaborate;

   type Goto_Entry is record
      Nonterm  : Integer;
      Newstate : Integer;
   end record;

   type Shift_Reduce_Entry is record
      T   : Integer;
      Act : Integer;
   end record;

   YY_Default           : constant :=    -1;
   YY_First_Shift_Entry : constant :=     0;
   YY_Accept_Code       : constant := -3001;
   YY_Error_Code        : constant := -3000;

   YY_Goto_Matrix : constant array (-1 .. 20) of Goto_Entry :=
    ((   -1,    -1), (   -5,    10), (   -4,     3), (   -3,     2),
     (   -2,     1), (   -5,    10), (   -4,    14), (   -5,    10),
     (   -4,     3), (   -3,     2), (   -2,    22), (   -5,    10),
     (   -4,     3), (   -3,     2), (   -2,    23), (   -6,    26),
     (   -5,    10), (   -4,     3), (   -3,    28), (   -6,    39),
     (   -5,    10), (   -4,    14));

   YY_Goto_Offset : constant array (0 .. 57) of Integer :=
    (    0,    4,    4,    6,    6,   10,   14,   14,
        14,   14,   14,   14,   15,   15,   18,   18,
        18,   18,   18,   18,   18,   18,   18,   18,
        18,   18,   18,   18,   19,   21,   21,   21,
        21,   21,   21,   21,   21,   21,   21,   21,
        21,   21,   21,   21,   21,   21,   21,   21,
        21,   21,   21,   21,   21,   21,   21,   21,
        21,   21);

   YY_Rule_Length : constant array (0 .. 32) of Integer :=
    (    2,    3,    1,    2,    1,    2,    2,    2,
         2,    2,    2,    6,    6,    5,    5,    5,
         5,    4,    4,    3,    3,    1,    1,    3,
         3,    1,    3,    4,    4,    2,    4,    4,
         0);

   YY_Get_LHS_Rule : constant array (0 .. 32) of Integer :=
    (   -1,   -2,   -2,   -3,   -3,   -4,   -4,   -4,
        -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,
        -4,   -4,   -4,   -4,   -4,   -4,   -4,   -4,
        -4,   -4,   -5,   -5,   -6,   -6,   -6,   -6,
        -6);

   YY_Shift_Reduce_Matrix : constant array (-1 .. 151) of Shift_Reduce_Entry :=
    ((   -1,    -1), (    2,     7), (    3,     6), (   11,    11),
     (   20,     4), (   21,     5), (   23,     8), (   24,     9),
     (   -1, -3000), (    0, -3001), (    4,    13), (   -1, -3000),
     (    2,     7), (    3,     6), (   11,    11), (   20,     4),
     (   21,     5), (   23,     8), (   24,     9), (   -1,    -2),
     (    5,    15), (    6,    16), (    7,    17), (    8,    18),
     (    9,    19), (   10,    20), (   15,    21), (   -1,    -4),
     (    2,     7), (    3,     6), (   11,    11), (   20,     4),
     (   21,     5), (   23,     8), (   24,     9), (   -1, -3000),
     (    2,     7), (    3,     6), (   11,    11), (   20,     4),
     (   21,     5), (   23,     8), (   24,     9), (   -1, -3000),
     (   -1,   -21), (   -1,   -22), (   26,    24), (   -1, -3000),
     (   26,    25), (   -1, -3000), (   -1,   -25), (   13,    27),
     (   -1,   -32), (   -1, -3000), (    2,     7), (    3,     6),
     (   11,    11), (   20,     4), (   21,     5), (   23,     8),
     (   24,     9), (   -1, -3000), (    5,    15), (    6,    16),
     (    7,    17), (    8,    18), (    9,    19), (   10,    20),
     (   15,    21), (   -1,    -3), (   -1,    -5), (   -1,    -6),
     (   -1,    -7), (   -1,    -8), (   -1,    -9), (   -1,   -10),
     (   18,    30), (   19,    29), (   -1, -3000), (    4,    13),
     (   22,    31), (   -1, -3000), (    4,    13), (   22,    32),
     (   -1, -3000), (   25,    33), (   -1, -3000), (   25,    34),
     (   -1, -3000), (    2,    36), (   12,    35), (   23,    37),
     (   24,    38), (   -1, -3000), (   -1,   -32), (    2,     7),
     (    3,     6), (   11,    11), (   20,     4), (   21,     5),
     (   23,     8), (   24,     9), (   -1,    -1), (   16,    41),
     (   17,    42), (   18,    40), (   -1, -3000), (   19,    43),
     (   -1, -3000), (   -1,   -19), (   -1,   -20), (   -1,   -23),
     (   -1,   -24), (   -1,   -26), (   14,    44), (   -1,   -29),
     (   26,    45), (   -1, -3000), (   26,    46), (   -1, -3000),
     (    2,    36), (   12,    47), (   23,    37), (   24,    38),
     (   -1, -3000), (   16,    49), (   17,    50), (   19,    48),
     (   -1, -3000), (   -1,   -17), (   -1,   -18), (   16,    51),
     (   17,    52), (   -1, -3000), (    2,    53), (   -1, -3000),
     (   25,    54), (   -1, -3000), (   25,    55), (   -1, -3000),
     (   -1,   -27), (   16,    56), (   17,    57), (   -1, -3000),
     (   -1,   -15), (   -1,   -16), (   -1,   -13), (   -1,   -14),
     (   -1,   -28), (   -1,   -30), (   -1,   -31), (   -1,   -11),
     (   -1,   -12));

   YY_Shift_Reduce_Offset : constant array (0 .. 57) of Integer :=
    (    0,    8,   11,   19,   27,   35,   43,   44,
        45,   47,   49,   50,   52,   53,   61,   69,
        70,   71,   72,   73,   74,   75,   78,   81,
        84,   86,   88,   93,   94,  102,  106,  108,
       109,  110,  111,  112,  113,  115,  117,  119,
       124,  128,  129,  130,  133,  135,  137,  139,
       140,  143,  144,  145,  146,  147,  148,  149,
       150,  151);

end Matreshka.Internals.Regexps.Compiler.Parser.Tables;
