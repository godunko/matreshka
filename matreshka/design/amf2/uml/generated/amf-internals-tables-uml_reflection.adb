------------------------------------------------------------------------------
--                                                                          --
--                            Matreshka Project                             --
--                                                                          --
--                          Ada Modeling Framework                          --
--                                                                          --
--                        Runtime Library Component                         --
--                                                                          --
------------------------------------------------------------------------------
--                                                                          --
-- Copyright Â© 2010-2011, Vadim Godunko <vgodunko@gmail.com>                --
-- All rights reserved.                                                     --
--                                                                          --
-- Redistribution and use in source and binary forms, with or without       --
-- modification, are permitted provided that the following conditions       --
-- are met:                                                                 --
--                                                                          --
--  * Redistributions of source code must retain the above copyright        --
--    notice, this list of conditions and the following disclaimer.         --
--                                                                          --
--  * Redistributions in binary form must reproduce the above copyright     --
--    notice, this list of conditions and the following disclaimer in the   --
--    documentation and/or other materials provided with the distribution.  --
--                                                                          --
--  * Neither the name of the Vadim Godunko, IE nor the names of its        --
--    contributors may be used to endorse or promote products derived from  --
--    this software without specific prior written permission.              --
--                                                                          --
-- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS      --
-- "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT        --
-- LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR    --
-- A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT     --
-- HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,   --
-- SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED --
-- TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR   --
-- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF   --
-- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING     --
-- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS       --
-- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.             --
--                                                                          --
------------------------------------------------------------------------------
--  $Revision$ $Date$
------------------------------------------------------------------------------
--  This file is generated, don't edit it.
------------------------------------------------------------------------------
with AMF.Boolean_Collections;
with AMF.Internals.Holders.UML_Holders;
with AMF.String_Collections;
with AMF.UML.Abstractions;
with AMF.UML.Accept_Call_Actions;
with AMF.UML.Accept_Event_Actions;
with AMF.UML.Action_Execution_Specifications;
with AMF.UML.Action_Input_Pins;
with AMF.UML.Actions.Collections;
with AMF.UML.Activities;
with AMF.UML.Activity_Edges.Collections;
with AMF.UML.Activity_Final_Nodes;
with AMF.UML.Activity_Groups.Collections;
with AMF.UML.Activity_Nodes.Collections;
with AMF.UML.Activity_Parameter_Nodes;
with AMF.UML.Activity_Partitions.Collections;
with AMF.UML.Actors;
with AMF.UML.Add_Structural_Feature_Value_Actions;
with AMF.UML.Add_Variable_Value_Actions;
with AMF.UML.Any_Receive_Events;
with AMF.UML.Artifacts.Collections;
with AMF.UML.Association_Classes;
with AMF.UML.Associations;
with AMF.UML.Behavior_Execution_Specifications;
with AMF.UML.Behavioral_Features;
with AMF.UML.Behaviored_Classifiers;
with AMF.UML.Behaviors.Collections;
with AMF.UML.Broadcast_Signal_Actions;
with AMF.UML.Call_Behavior_Actions;
with AMF.UML.Call_Events;
with AMF.UML.Call_Operation_Actions;
with AMF.UML.Central_Buffer_Nodes;
with AMF.UML.Change_Events;
with AMF.UML.Classes.Collections;
with AMF.UML.Classifier_Template_Parameters;
with AMF.UML.Classifiers.Collections;
with AMF.UML.Clauses.Collections;
with AMF.UML.Clear_Association_Actions;
with AMF.UML.Clear_Structural_Feature_Actions;
with AMF.UML.Clear_Variable_Actions;
with AMF.UML.Collaboration_Uses.Collections;
with AMF.UML.Collaborations;
with AMF.UML.Combined_Fragments;
with AMF.UML.Comments.Collections;
with AMF.UML.Communication_Paths;
with AMF.UML.Component_Realizations.Collections;
with AMF.UML.Components;
with AMF.UML.Conditional_Nodes;
with AMF.UML.Connectable_Element_Template_Parameters;
with AMF.UML.Connectable_Elements.Collections;
with AMF.UML.Connection_Point_References.Collections;
with AMF.UML.Connector_Ends.Collections;
with AMF.UML.Connectors.Collections;
with AMF.UML.Consider_Ignore_Fragments;
with AMF.UML.Constraints.Collections;
with AMF.UML.Continuations;
with AMF.UML.Control_Flows;
with AMF.UML.Create_Link_Actions;
with AMF.UML.Create_Link_Object_Actions;
with AMF.UML.Create_Object_Actions;
with AMF.UML.Data_Store_Nodes;
with AMF.UML.Data_Types;
with AMF.UML.Decision_Nodes;
with AMF.UML.Dependencies.Collections;
with AMF.UML.Deployed_Artifacts.Collections;
with AMF.UML.Deployment_Specifications.Collections;
with AMF.UML.Deployment_Targets;
with AMF.UML.Deployments.Collections;
with AMF.UML.Destroy_Link_Actions;
with AMF.UML.Destroy_Object_Actions;
with AMF.UML.Destruction_Occurrence_Specifications;
with AMF.UML.Devices;
with AMF.UML.Duration_Constraints;
with AMF.UML.Duration_Intervals;
with AMF.UML.Duration_Observations;
with AMF.UML.Durations;
with AMF.UML.Element_Imports.Collections;
with AMF.UML.Elements.Collections;
with AMF.UML.Enumeration_Literals.Collections;
with AMF.UML.Enumerations;
with AMF.UML.Events;
with AMF.UML.Exception_Handlers.Collections;
with AMF.UML.Executable_Nodes.Collections;
with AMF.UML.Execution_Environments;
with AMF.UML.Execution_Occurrence_Specifications;
with AMF.UML.Execution_Specifications;
with AMF.UML.Expansion_Nodes.Collections;
with AMF.UML.Expansion_Regions;
with AMF.UML.Expressions;
with AMF.UML.Extends.Collections;
with AMF.UML.Extension_Ends;
with AMF.UML.Extension_Points.Collections;
with AMF.UML.Extensions.Collections;
with AMF.UML.Features.Collections;
with AMF.UML.Final_States;
with AMF.UML.Flow_Final_Nodes;
with AMF.UML.Fork_Nodes;
with AMF.UML.Function_Behaviors;
with AMF.UML.Gates.Collections;
with AMF.UML.General_Orderings.Collections;
with AMF.UML.Generalization_Sets.Collections;
with AMF.UML.Generalizations.Collections;
with AMF.UML.Images.Collections;
with AMF.UML.Includes.Collections;
with AMF.UML.Information_Flows;
with AMF.UML.Information_Items;
with AMF.UML.Initial_Nodes;
with AMF.UML.Input_Pins.Collections;
with AMF.UML.Instance_Specifications;
with AMF.UML.Instance_Values;
with AMF.UML.Interaction_Constraints;
with AMF.UML.Interaction_Fragments.Collections;
with AMF.UML.Interaction_Operands.Collections;
with AMF.UML.Interaction_Uses;
with AMF.UML.Interactions;
with AMF.UML.Interface_Realizations.Collections;
with AMF.UML.Interfaces.Collections;
with AMF.UML.Interruptible_Activity_Regions.Collections;
with AMF.UML.Interval_Constraints;
with AMF.UML.Intervals;
with AMF.UML.Join_Nodes;
with AMF.UML.Lifelines.Collections;
with AMF.UML.Link_End_Creation_Datas.Collections;
with AMF.UML.Link_End_Datas.Collections;
with AMF.UML.Link_End_Destruction_Datas.Collections;
with AMF.UML.Literal_Booleans;
with AMF.UML.Literal_Integers;
with AMF.UML.Literal_Nulls;
with AMF.UML.Literal_Reals;
with AMF.UML.Literal_Strings;
with AMF.UML.Literal_Unlimited_Naturals;
with AMF.UML.Loop_Nodes;
with AMF.UML.Manifestations.Collections;
with AMF.UML.Merge_Nodes;
with AMF.UML.Message_Ends;
with AMF.UML.Message_Occurrence_Specifications;
with AMF.UML.Messages.Collections;
with AMF.UML.Models;
with AMF.UML.Named_Elements.Collections;
with AMF.UML.Namespaces;
with AMF.UML.Nodes.Collections;
with AMF.UML.Object_Flows;
with AMF.UML.Object_Nodes;
with AMF.UML.Observations.Collections;
with AMF.UML.Occurrence_Specifications;
with AMF.UML.Opaque_Actions;
with AMF.UML.Opaque_Behaviors;
with AMF.UML.Opaque_Expressions;
with AMF.UML.Operation_Template_Parameters;
with AMF.UML.Operations.Collections;
with AMF.UML.Output_Pins.Collections;
with AMF.UML.Package_Imports.Collections;
with AMF.UML.Package_Merges.Collections;
with AMF.UML.Packageable_Elements.Collections;
with AMF.UML.Packages.Collections;
with AMF.UML.Parameter_Sets.Collections;
with AMF.UML.Parameterable_Elements;
with AMF.UML.Parameters.Collections;
with AMF.UML.Part_Decompositions;
with AMF.UML.Ports.Collections;
with AMF.UML.Primitive_Types;
with AMF.UML.Profile_Applications.Collections;
with AMF.UML.Profiles;
with AMF.UML.Properties.Collections;
with AMF.UML.Protocol_Conformances.Collections;
with AMF.UML.Protocol_State_Machines;
with AMF.UML.Protocol_Transitions;
with AMF.UML.Pseudostates.Collections;
with AMF.UML.Qualifier_Values.Collections;
with AMF.UML.Raise_Exception_Actions;
with AMF.UML.Read_Extent_Actions;
with AMF.UML.Read_Is_Classified_Object_Actions;
with AMF.UML.Read_Link_Actions;
with AMF.UML.Read_Link_Object_End_Actions;
with AMF.UML.Read_Link_Object_End_Qualifier_Actions;
with AMF.UML.Read_Self_Actions;
with AMF.UML.Read_Structural_Feature_Actions;
with AMF.UML.Read_Variable_Actions;
with AMF.UML.Realizations;
with AMF.UML.Receptions.Collections;
with AMF.UML.Reclassify_Object_Actions;
with AMF.UML.Redefinable_Elements.Collections;
with AMF.UML.Redefinable_Template_Signatures.Collections;
with AMF.UML.Reduce_Actions;
with AMF.UML.Regions.Collections;
with AMF.UML.Relationships.Collections;
with AMF.UML.Remove_Structural_Feature_Value_Actions;
with AMF.UML.Remove_Variable_Value_Actions;
with AMF.UML.Reply_Actions;
with AMF.UML.Send_Object_Actions;
with AMF.UML.Send_Signal_Actions;
with AMF.UML.Sequence_Nodes;
with AMF.UML.Signal_Events;
with AMF.UML.Signals;
with AMF.UML.Slots.Collections;
with AMF.UML.Start_Classifier_Behavior_Actions;
with AMF.UML.Start_Object_Behavior_Actions;
with AMF.UML.State_Invariants;
with AMF.UML.State_Machines.Collections;
with AMF.UML.States.Collections;
with AMF.UML.Stereotypes.Collections;
with AMF.UML.String_Expressions.Collections;
with AMF.UML.Structural_Features;
with AMF.UML.Structured_Activity_Nodes.Collections;
with AMF.UML.Substitutions.Collections;
with AMF.UML.Template_Bindings.Collections;
with AMF.UML.Template_Parameter_Substitutions.Collections;
with AMF.UML.Template_Parameters.Collections;
with AMF.UML.Template_Signatures;
with AMF.UML.Templateable_Elements;
with AMF.UML.Test_Identity_Actions;
with AMF.UML.Time_Constraints;
with AMF.UML.Time_Events;
with AMF.UML.Time_Expressions;
with AMF.UML.Time_Intervals;
with AMF.UML.Time_Observations;
with AMF.UML.Transitions.Collections;
with AMF.UML.Triggers.Collections;
with AMF.UML.Types.Collections;
with AMF.UML.Unmarshall_Actions;
with AMF.UML.Usages;
with AMF.UML.Use_Cases.Collections;
with AMF.UML.Value_Pins;
with AMF.UML.Value_Specification_Actions;
with AMF.UML.Value_Specifications.Collections;
with AMF.UML.Variables.Collections;
with AMF.UML.Vertexs.Collections;
with AMF.UML.Holders.Aggregation_Kinds;
with AMF.UML.Holders.Call_Concurrency_Kinds;
with AMF.UML.Holders.Connector_Kinds;
with AMF.UML.Holders.Expansion_Kinds;
with AMF.UML.Holders.Interaction_Operator_Kinds;
with AMF.UML.Holders.Message_Kinds;
with AMF.UML.Holders.Message_Sorts;
with AMF.UML.Holders.Object_Node_Ordering_Kinds;
with AMF.UML.Holders.Parameter_Direction_Kinds;
with AMF.UML.Holders.Pseudostate_Kinds;
with AMF.UML.Holders.Transition_Kinds;
with AMF.UML.Holders.Visibility_Kinds;
with League.Holders.Integers;
with AMF.Holders.Boolean_Collections;
with AMF.Holders.Reals;
with AMF.Holders.Unlimited_Naturals;
with AMF.Elements;
with AMF.Holders.Collections;
with AMF.Holders.Elements;
with AMF.Holders.String_Collections;
with AMF.Internals.UML_Elements;
with AMF.Internals.Element_Collections;
with AMF.Internals.Helpers;
with AMF.Internals.Holders;
with AMF.Internals.Holders.UML_Holders;
with AMF.Internals.Tables.UML_Attributes;
with AMF.Internals.Tables.UML_Metamodel;
with AMF.Internals.Tables.UML_Element_Table;
with AMF.Internals.Tables.UML_Types;
with AMF.String_Collections;
with League.Holders.Booleans;

package body AMF.Internals.Tables.UML_Reflection is

   use AMF.Internals.Tables;
   use AMF.Internals.Tables.UML_Attributes;
   use AMF.Internals.Tables.UML_Metamodel;
   use AMF.Internals.Tables.UML_Types;
   use type AMF.Internals.AMF_Element;

   ---------
   -- Get --
   ---------

   function Get
    (Self     : UML_Element;
     Property : CMOF_Element) return League.Holders.Holder
   is

      function Abstraction_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Abstraction class.

      function Accept_Call_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of AcceptCallAction class.

      function Accept_Event_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of AcceptEventAction class.

      function Action_Execution_Specification_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ActionExecutionSpecification class.

      function Action_Input_Pin_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ActionInputPin class.

      function Activity_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Activity class.

      function Activity_Final_Node_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ActivityFinalNode class.

      function Activity_Parameter_Node_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ActivityParameterNode class.

      function Activity_Partition_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ActivityPartition class.

      function Actor_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Actor class.

      function Add_Structural_Feature_Value_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of AddStructuralFeatureValueAction class.

      function Add_Variable_Value_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of AddVariableValueAction class.

      function Any_Receive_Event_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of AnyReceiveEvent class.

      function Artifact_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Artifact class.

      function Association_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Association class.

      function Association_Class_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of AssociationClass class.

      function Behavior_Execution_Specification_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of BehaviorExecutionSpecification class.

      function Broadcast_Signal_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of BroadcastSignalAction class.

      function Call_Behavior_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of CallBehaviorAction class.

      function Call_Event_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of CallEvent class.

      function Call_Operation_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of CallOperationAction class.

      function Central_Buffer_Node_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of CentralBufferNode class.

      function Change_Event_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ChangeEvent class.

      function Class_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Class class.

      function Classifier_Template_Parameter_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ClassifierTemplateParameter class.

      function Clause_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Clause class.

      function Clear_Association_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ClearAssociationAction class.

      function Clear_Structural_Feature_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ClearStructuralFeatureAction class.

      function Clear_Variable_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ClearVariableAction class.

      function Collaboration_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Collaboration class.

      function Collaboration_Use_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of CollaborationUse class.

      function Combined_Fragment_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of CombinedFragment class.

      function Comment_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Comment class.

      function Communication_Path_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of CommunicationPath class.

      function Component_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Component class.

      function Component_Realization_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ComponentRealization class.

      function Conditional_Node_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ConditionalNode class.

      function Connectable_Element_Template_Parameter_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ConnectableElementTemplateParameter class.

      function Connection_Point_Reference_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ConnectionPointReference class.

      function Connector_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Connector class.

      function Connector_End_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ConnectorEnd class.

      function Consider_Ignore_Fragment_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ConsiderIgnoreFragment class.

      function Constraint_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Constraint class.

      function Continuation_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Continuation class.

      function Control_Flow_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ControlFlow class.

      function Create_Link_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of CreateLinkAction class.

      function Create_Link_Object_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of CreateLinkObjectAction class.

      function Create_Object_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of CreateObjectAction class.

      function Data_Store_Node_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of DataStoreNode class.

      function Data_Type_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of DataType class.

      function Decision_Node_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of DecisionNode class.

      function Dependency_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Dependency class.

      function Deployment_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Deployment class.

      function Deployment_Specification_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of DeploymentSpecification class.

      function Destroy_Link_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of DestroyLinkAction class.

      function Destroy_Object_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of DestroyObjectAction class.

      function Destruction_Occurrence_Specification_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of DestructionOccurrenceSpecification class.

      function Device_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Device class.

      function Duration_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Duration class.

      function Duration_Constraint_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of DurationConstraint class.

      function Duration_Interval_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of DurationInterval class.

      function Duration_Observation_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of DurationObservation class.

      function Element_Import_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ElementImport class.

      function Enumeration_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Enumeration class.

      function Enumeration_Literal_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of EnumerationLiteral class.

      function Exception_Handler_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ExceptionHandler class.

      function Execution_Environment_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ExecutionEnvironment class.

      function Execution_Occurrence_Specification_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ExecutionOccurrenceSpecification class.

      function Expansion_Node_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ExpansionNode class.

      function Expansion_Region_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ExpansionRegion class.

      function Expression_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Expression class.

      function Extend_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Extend class.

      function Extension_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Extension class.

      function Extension_End_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ExtensionEnd class.

      function Extension_Point_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ExtensionPoint class.

      function Final_State_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of FinalState class.

      function Flow_Final_Node_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of FlowFinalNode class.

      function Fork_Node_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ForkNode class.

      function Function_Behavior_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of FunctionBehavior class.

      function Gate_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Gate class.

      function General_Ordering_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of GeneralOrdering class.

      function Generalization_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Generalization class.

      function Generalization_Set_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of GeneralizationSet class.

      function Image_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Image class.

      function Include_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Include class.

      function Information_Flow_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of InformationFlow class.

      function Information_Item_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of InformationItem class.

      function Initial_Node_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of InitialNode class.

      function Input_Pin_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of InputPin class.

      function Instance_Specification_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of InstanceSpecification class.

      function Instance_Value_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of InstanceValue class.

      function Interaction_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Interaction class.

      function Interaction_Constraint_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of InteractionConstraint class.

      function Interaction_Operand_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of InteractionOperand class.

      function Interaction_Use_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of InteractionUse class.

      function Interface_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Interface class.

      function Interface_Realization_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of InterfaceRealization class.

      function Interruptible_Activity_Region_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of InterruptibleActivityRegion class.

      function Interval_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Interval class.

      function Interval_Constraint_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of IntervalConstraint class.

      function Join_Node_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of JoinNode class.

      function Lifeline_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Lifeline class.

      function Link_End_Creation_Data_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of LinkEndCreationData class.

      function Link_End_Data_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of LinkEndData class.

      function Link_End_Destruction_Data_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of LinkEndDestructionData class.

      function Literal_Boolean_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of LiteralBoolean class.

      function Literal_Integer_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of LiteralInteger class.

      function Literal_Null_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of LiteralNull class.

      function Literal_Real_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of LiteralReal class.

      function Literal_String_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of LiteralString class.

      function Literal_Unlimited_Natural_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of LiteralUnlimitedNatural class.

      function Loop_Node_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of LoopNode class.

      function Manifestation_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Manifestation class.

      function Merge_Node_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of MergeNode class.

      function Message_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Message class.

      function Message_Occurrence_Specification_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of MessageOccurrenceSpecification class.

      function Model_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Model class.

      function Node_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Node class.

      function Object_Flow_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ObjectFlow class.

      function Occurrence_Specification_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of OccurrenceSpecification class.

      function Opaque_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of OpaqueAction class.

      function Opaque_Behavior_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of OpaqueBehavior class.

      function Opaque_Expression_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of OpaqueExpression class.

      function Operation_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Operation class.

      function Operation_Template_Parameter_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of OperationTemplateParameter class.

      function Output_Pin_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of OutputPin class.

      function Package_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Package class.

      function Package_Import_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of PackageImport class.

      function Package_Merge_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of PackageMerge class.

      function Parameter_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Parameter class.

      function Parameter_Set_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ParameterSet class.

      function Part_Decomposition_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of PartDecomposition class.

      function Port_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Port class.

      function Primitive_Type_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of PrimitiveType class.

      function Profile_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Profile class.

      function Profile_Application_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ProfileApplication class.

      function Property_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Property class.

      function Protocol_Conformance_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ProtocolConformance class.

      function Protocol_State_Machine_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ProtocolStateMachine class.

      function Protocol_Transition_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ProtocolTransition class.

      function Pseudostate_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Pseudostate class.

      function Qualifier_Value_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of QualifierValue class.

      function Raise_Exception_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of RaiseExceptionAction class.

      function Read_Extent_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ReadExtentAction class.

      function Read_Is_Classified_Object_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ReadIsClassifiedObjectAction class.

      function Read_Link_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ReadLinkAction class.

      function Read_Link_Object_End_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ReadLinkObjectEndAction class.

      function Read_Link_Object_End_Qualifier_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ReadLinkObjectEndQualifierAction class.

      function Read_Self_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ReadSelfAction class.

      function Read_Structural_Feature_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ReadStructuralFeatureAction class.

      function Read_Variable_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ReadVariableAction class.

      function Realization_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Realization class.

      function Reception_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Reception class.

      function Reclassify_Object_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ReclassifyObjectAction class.

      function Redefinable_Template_Signature_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of RedefinableTemplateSignature class.

      function Reduce_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ReduceAction class.

      function Region_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Region class.

      function Remove_Structural_Feature_Value_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of RemoveStructuralFeatureValueAction class.

      function Remove_Variable_Value_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of RemoveVariableValueAction class.

      function Reply_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ReplyAction class.

      function Send_Object_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of SendObjectAction class.

      function Send_Signal_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of SendSignalAction class.

      function Sequence_Node_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of SequenceNode class.

      function Signal_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Signal class.

      function Signal_Event_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of SignalEvent class.

      function Slot_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Slot class.

      function Start_Classifier_Behavior_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of StartClassifierBehaviorAction class.

      function Start_Object_Behavior_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of StartObjectBehaviorAction class.

      function State_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of State class.

      function State_Invariant_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of StateInvariant class.

      function State_Machine_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of StateMachine class.

      function Stereotype_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Stereotype class.

      function String_Expression_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of StringExpression class.

      function Structured_Activity_Node_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of StructuredActivityNode class.

      function Substitution_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Substitution class.

      function Template_Binding_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of TemplateBinding class.

      function Template_Parameter_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of TemplateParameter class.

      function Template_Parameter_Substitution_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of TemplateParameterSubstitution class.

      function Template_Signature_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of TemplateSignature class.

      function Test_Identity_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of TestIdentityAction class.

      function Time_Constraint_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of TimeConstraint class.

      function Time_Event_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of TimeEvent class.

      function Time_Expression_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of TimeExpression class.

      function Time_Interval_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of TimeInterval class.

      function Time_Observation_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of TimeObservation class.

      function Transition_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Transition class.

      function Trigger_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Trigger class.

      function Unmarshall_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of UnmarshallAction class.

      function Usage_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Usage class.

      function Use_Case_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of UseCase class.

      function Value_Pin_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ValuePin class.

      function Value_Specification_Action_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of ValueSpecificationAction class.

      function Variable_Get return League.Holders.Holder;
      --  Returns attribute's value of instance of Variable class.

      ---------------------
      -- Abstraction_Get --
      ---------------------

      function Abstraction_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Dependency_Client then
            --  Dependency::client : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Abstractions.UML_Abstraction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Abstractions.UML_Abstraction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Abstraction_Mapping then
            --  Abstraction::mapping : OpaqueExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access'
                 (AMF.UML.Abstractions.UML_Abstraction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Mapping));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Abstractions.UML_Abstraction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Abstractions.UML_Abstraction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Abstractions.UML_Abstraction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Abstractions.UML_Abstraction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Abstractions.UML_Abstraction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Abstractions.UML_Abstraction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Abstractions.UML_Abstraction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Abstractions.UML_Abstraction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Relationship_Related_Element then
            --  Relationship::relatedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Abstractions.UML_Abstraction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element));

         elsif Property = MP_UML_Directed_Relationship_Source then
            --  DirectedRelationship::source : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Abstractions.UML_Abstraction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Source));

         elsif Property = MP_UML_Dependency_Supplier then
            --  Dependency::supplier : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Abstractions.UML_Abstraction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Supplier));

         elsif Property = MP_UML_Directed_Relationship_Target then
            --  DirectedRelationship::target : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Abstractions.UML_Abstraction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Target));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Abstractions.UML_Abstraction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Abstractions.UML_Abstraction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Abstractions.UML_Abstraction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Abstraction_Get;

      ----------------------------
      -- Accept_Call_Action_Get --
      ----------------------------

      function Accept_Call_Action_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Accept_Event_Action_Is_Unmarshall then
            --  AcceptEventAction::isUnmarshall : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Unmarshall);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Accept_Event_Action_Result then
            --  AcceptEventAction::result : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = MP_UML_Accept_Call_Action_Return_Information then
            --  AcceptCallAction::returnInformation : OutputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access'
                 (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Return_Information));

         elsif Property = MP_UML_Accept_Event_Action_Trigger then
            --  AcceptEventAction::trigger : Trigger

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Triggers.Collections.UML_Trigger_Collections.Internal
                 (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Trigger));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Accept_Call_Action_Get;

      -----------------------------
      -- Accept_Event_Action_Get --
      -----------------------------

      function Accept_Event_Action_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Accept_Event_Action_Is_Unmarshall then
            --  AcceptEventAction::isUnmarshall : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Unmarshall);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Accept_Event_Action_Result then
            --  AcceptEventAction::result : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = MP_UML_Accept_Event_Action_Trigger then
            --  AcceptEventAction::trigger : Trigger

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Triggers.Collections.UML_Trigger_Collections.Internal
                 (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Trigger));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Accept_Event_Action_Get;

      ----------------------------------------
      -- Action_Execution_Specification_Get --
      ----------------------------------------

      function Action_Execution_Specification_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Action_Execution_Specification_Action then
            --  ActionExecutionSpecification::action : Action

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Actions.UML_Action_Access'
                 (AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Action));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Interaction_Fragment_Covered then
            --  InteractionFragment::covered : Lifeline

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Lifelines.Collections.UML_Lifeline_Collections.Internal
                 (AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Covered));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Interaction then
            --  InteractionFragment::enclosingInteraction : Interaction

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access'
                 (AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Interaction));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Operand then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access'
                 (AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Operand));

         elsif Property = MP_UML_Execution_Specification_Finish then
            --  ExecutionSpecification::finish : OccurrenceSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access'
                 (AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Finish));

         elsif Property = MP_UML_Interaction_Fragment_General_Ordering then
            --  InteractionFragment::generalOrdering : GeneralOrdering

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internal
                 (AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General_Ordering));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Execution_Specification_Start then
            --  ExecutionSpecification::start : OccurrenceSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access'
                 (AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Start));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Action_Execution_Specification_Get;

      --------------------------
      -- Action_Input_Pin_Get --
      --------------------------

      function Action_Input_Pin_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Action_Input_Pin_From_Action then
            --  ActionInputPin::fromAction : Action

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Actions.UML_Action_Access'
                 (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_From_Action));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Object_Node_In_State then
            --  ObjectNode::inState : State

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.States.Collections.UML_State_Collections.Internal
                 (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_State));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Pin_Is_Control then
            --  Pin::isControl : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Control);

         elsif Property = MP_UML_Object_Node_Is_Control_Type then
            --  ObjectNode::isControlType : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Control_Type);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Multiplicity_Element_Is_Ordered then
            --  MultiplicityElement::isOrdered : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Ordered);

         elsif Property = MP_UML_Multiplicity_Element_Is_Unique then
            --  MultiplicityElement::isUnique : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Unique);

         elsif Property = MP_UML_Multiplicity_Element_Lower then
            --  MultiplicityElement::lower : Integer

            return
              AMF.Holders.To_Holder
               (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Lower);

         elsif Property = MP_UML_Multiplicity_Element_Lower_Value then
            --  MultiplicityElement::lowerValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Lower_Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Object_Node_Ordering then
            --  ObjectNode::ordering : ObjectNodeOrderingKind

            return
              AMF.UML.Holders.Object_Node_Ordering_Kinds.To_Holder
               (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Ordering);

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Object_Node_Selection then
            --  ObjectNode::selection : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Selection));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = MP_UML_Multiplicity_Element_Upper then
            --  MultiplicityElement::upper : UnlimitedNatural

            return
              AMF.Holders.To_Holder
               (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Upper);

         elsif Property = MP_UML_Object_Node_Upper_Bound then
            --  ObjectNode::upperBound : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Upper_Bound));

         elsif Property = MP_UML_Multiplicity_Element_Upper_Value then
            --  MultiplicityElement::upperValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Upper_Value));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Action_Input_Pin_Get;

      ------------------
      -- Activity_Get --
      ------------------

      function Activity_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Classifier_Attribute then
            --  Classifier::attribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute));

         elsif Property = MP_UML_Behaviored_Classifier_Classifier_Behavior then
            --  BehavioredClassifier::classifierBehavior : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier_Behavior));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Classifier_Collaboration_Use then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use));

         elsif Property = MP_UML_Behavior_Context then
            --  Behavior::context : BehavioredClassifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviored_Classifiers.UML_Behaviored_Classifier_Access'
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Activity_Edge then
            --  Activity::edge : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Edge));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_Class_Extension then
            --  Class::extension : Extension

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Extensions.Collections.UML_Extension_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Extension));

         elsif Property = MP_UML_Classifier_Feature then
            --  Classifier::feature : Feature

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Features.Collections.UML_Feature_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Feature));

         elsif Property = MP_UML_Classifier_General then
            --  Classifier::general : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General));

         elsif Property = MP_UML_Classifier_Generalization then
            --  Classifier::generalization : Generalization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization));

         elsif Property = MP_UML_Activity_Group then
            --  Activity::group : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Group));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Classifier_Inherited_Member then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member));

         elsif Property = MP_UML_Behaviored_Classifier_Interface_Realization then
            --  BehavioredClassifier::interfaceRealization : InterfaceRealization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interface_Realizations.Collections.UML_Interface_Realization_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Interface_Realization));

         elsif Property = MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Active);

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Activity_Is_Read_Only then
            --  Activity::isReadOnly : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Read_Only);

         elsif Property = MP_UML_Behavior_Is_Reentrant then
            --  Behavior::isReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Reentrant);

         elsif Property = MP_UML_Activity_Is_Single_Execution then
            --  Activity::isSingleExecution : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Single_Execution);

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Class_Nested_Classifier then
            --  Class::nestedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Classifier));

         elsif Property = MP_UML_Activity_Node then
            --  Activity::node : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Node));

         elsif Property = MP_UML_Class_Owned_Attribute then
            --  Class::ownedAttribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute));

         elsif Property = MP_UML_Structured_Classifier_Owned_Attribute then
            --  StructuredClassifier::ownedAttribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute));

         elsif Property = MP_UML_Behaviored_Classifier_Owned_Behavior then
            --  BehavioredClassifier::ownedBehavior : Behavior

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Behavior));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Structured_Classifier_Owned_Connector then
            --  StructuredClassifier::ownedConnector : Connector

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Connectors.Collections.UML_Connector_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Connector));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Class_Owned_Operation then
            --  Class::ownedOperation : Operation

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Operations.Collections.UML_Operation_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Operation));

         elsif Property = MP_UML_Behavior_Owned_Parameter then
            --  Behavior::ownedParameter : Parameter

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Parameters.Collections.UML_Parameter_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parameter));

         elsif Property = MP_UML_Behavior_Owned_Parameter_Set then
            --  Behavior::ownedParameterSet : ParameterSet

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Parameter_Sets.Collections.UML_Parameter_Set_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parameter_Set));

         elsif Property = MP_UML_Encapsulated_Classifier_Owned_Port then
            --  EncapsulatedClassifier::ownedPort : Port

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Ports.Collections.UML_Port_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Port));

         elsif Property = MP_UML_Class_Owned_Reception then
            --  Class::ownedReception : Reception

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Receptions.Collections.UML_Reception_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Reception));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Classifier_Owned_Use_Case then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Structured_Classifier_Part then
            --  StructuredClassifier::part : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Part));

         elsif Property = MP_UML_Activity_Partition then
            --  Activity::partition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Partition));

         elsif Property = MP_UML_Behavior_Postcondition then
            --  Behavior::postcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Postcondition));

         elsif Property = MP_UML_Classifier_Powertype_Extent then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent));

         elsif Property = MP_UML_Behavior_Precondition then
            --  Behavior::precondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Precondition));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Behavior_Redefined_Behavior then
            --  Behavior::redefinedBehavior : Behavior

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Behavior));

         elsif Property = MP_UML_Classifier_Redefined_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier));

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = MP_UML_Structured_Classifier_Role then
            --  StructuredClassifier::role : ConnectableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Connectable_Elements.Collections.UML_Connectable_Element_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Role));

         elsif Property = MP_UML_Behavior_Specification then
            --  Behavior::specification : BehavioralFeature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behavioral_Features.UML_Behavioral_Feature_Access'
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Specification));

         elsif Property = MP_UML_Activity_Structured_Node then
            --  Activity::structuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.Collections.UML_Structured_Activity_Node_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Structured_Node));

         elsif Property = MP_UML_Classifier_Substitution then
            --  Classifier::substitution : Substitution

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution));

         elsif Property = MP_UML_Class_Super_Class then
            --  Class::superClass : Class

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classes.Collections.UML_Class_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Class));

         elsif Property = MP_UML_Templateable_Element_Template_Binding then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Classifier_Use_Case then
            --  Classifier::useCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case));

         elsif Property = MP_UML_Activity_Variable then
            --  Activity::variable : Variable

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Variables.Collections.UML_Variable_Collections.Internal
                 (AMF.UML.Activities.UML_Activity_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Variable));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Activities.UML_Activity_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Activity_Get;

      -----------------------------
      -- Activity_Final_Node_Get --
      -----------------------------

      function Activity_Final_Node_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Activity_Final_Node_Get;

      ---------------------------------
      -- Activity_Parameter_Node_Get --
      ---------------------------------

      function Activity_Parameter_Node_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Object_Node_In_State then
            --  ObjectNode::inState : State

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.States.Collections.UML_State_Collections.Internal
                 (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_State));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Object_Node_Is_Control_Type then
            --  ObjectNode::isControlType : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Control_Type);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Object_Node_Ordering then
            --  ObjectNode::ordering : ObjectNodeOrderingKind

            return
              AMF.UML.Holders.Object_Node_Ordering_Kinds.To_Holder
               (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Ordering);

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Activity_Parameter_Node_Parameter then
            --  ActivityParameterNode::parameter : Parameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Parameters.UML_Parameter_Access'
                 (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Object_Node_Selection then
            --  ObjectNode::selection : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Selection));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = MP_UML_Object_Node_Upper_Bound then
            --  ObjectNode::upperBound : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Upper_Bound));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Activity_Parameter_Node_Get;

      ----------------------------
      -- Activity_Partition_Get --
      ----------------------------

      function Activity_Partition_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Activity_Group_Contained_Edge then
            --  ActivityGroup::containedEdge : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Contained_Edge));

         elsif Property = MP_UML_Activity_Group_Contained_Node then
            --  ActivityGroup::containedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Contained_Node));

         elsif Property = MP_UML_Activity_Partition_Edge then
            --  ActivityPartition::edge : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Edge));

         elsif Property = MP_UML_Activity_Group_In_Activity then
            --  ActivityGroup::inActivity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Activity));

         elsif Property = MP_UML_Activity_Partition_Is_Dimension then
            --  ActivityPartition::isDimension : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Dimension);

         elsif Property = MP_UML_Activity_Partition_Is_External then
            --  ActivityPartition::isExternal : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_External);

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Activity_Partition_Node then
            --  ActivityPartition::node : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Node));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Activity_Partition_Represents then
            --  ActivityPartition::represents : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Represents));

         elsif Property = MP_UML_Activity_Group_Subgroup then
            --  ActivityGroup::subgroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Subgroup));

         elsif Property = MP_UML_Activity_Partition_Subpartition then
            --  ActivityPartition::subpartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Subpartition));

         elsif Property = MP_UML_Activity_Group_Super_Group then
            --  ActivityGroup::superGroup : ActivityGroup

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activity_Groups.UML_Activity_Group_Access'
                 (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Group));

         elsif Property = MP_UML_Activity_Partition_Super_Partition then
            --  ActivityPartition::superPartition : ActivityPartition

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access'
                 (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Partition));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Activity_Partition_Get;

      ---------------
      -- Actor_Get --
      ---------------

      function Actor_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Classifier_Attribute then
            --  Classifier::attribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute));

         elsif Property = MP_UML_Behaviored_Classifier_Classifier_Behavior then
            --  BehavioredClassifier::classifierBehavior : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier_Behavior));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Classifier_Collaboration_Use then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internal
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_Classifier_Feature then
            --  Classifier::feature : Feature

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Features.Collections.UML_Feature_Collections.Internal
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Feature));

         elsif Property = MP_UML_Classifier_General then
            --  Classifier::general : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General));

         elsif Property = MP_UML_Classifier_Generalization then
            --  Classifier::generalization : Generalization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internal
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Classifier_Inherited_Member then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member));

         elsif Property = MP_UML_Behaviored_Classifier_Interface_Realization then
            --  BehavioredClassifier::interfaceRealization : InterfaceRealization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interface_Realizations.Collections.UML_Interface_Realization_Collections.Internal
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Interface_Realization));

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Actors.UML_Actor_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Actors.UML_Actor_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Actors.UML_Actor_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Actors.UML_Actor_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Behaviored_Classifier_Owned_Behavior then
            --  BehavioredClassifier::ownedBehavior : Behavior

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internal
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Behavior));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Classifier_Owned_Use_Case then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Classifier_Powertype_Extent then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internal
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Actors.UML_Actor_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Classifier_Redefined_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier));

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = MP_UML_Classifier_Substitution then
            --  Classifier::substitution : Substitution

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internal
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution));

         elsif Property = MP_UML_Templateable_Element_Template_Binding then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internal
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Classifier_Use_Case then
            --  Classifier::useCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Actors.UML_Actor_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Actors.UML_Actor_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Actors.UML_Actor_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Actor_Get;

      ---------------------------------------------
      -- Add_Structural_Feature_Value_Action_Get --
      ---------------------------------------------

      function Add_Structural_Feature_Value_Action_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Add_Structural_Feature_Value_Action_Insert_At then
            --  AddStructuralFeatureValueAction::insertAt : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Insert_At));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Add_Structural_Feature_Value_Action_Is_Replace_All then
            --  AddStructuralFeatureValueAction::isReplaceAll : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Replace_All);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Structural_Feature_Action_Object then
            --  StructuralFeatureAction::object : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Object));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Write_Structural_Feature_Action_Result then
            --  WriteStructuralFeatureAction::result : OutputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access'
                 (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = MP_UML_Structural_Feature_Action_Structural_Feature then
            --  StructuralFeatureAction::structuralFeature : StructuralFeature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structural_Features.UML_Structural_Feature_Access'
                 (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Structural_Feature));

         elsif Property = MP_UML_Write_Structural_Feature_Action_Value then
            --  WriteStructuralFeatureAction::value : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Value));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Add_Structural_Feature_Value_Action_Get;

      -----------------------------------
      -- Add_Variable_Value_Action_Get --
      -----------------------------------

      function Add_Variable_Value_Action_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Add_Variable_Value_Action_Insert_At then
            --  AddVariableValueAction::insertAt : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Insert_At));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Add_Variable_Value_Action_Is_Replace_All then
            --  AddVariableValueAction::isReplaceAll : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Replace_All);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Write_Variable_Action_Value then
            --  WriteVariableAction::value : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Value));

         elsif Property = MP_UML_Variable_Action_Variable then
            --  VariableAction::variable : Variable

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Variables.UML_Variable_Access'
                 (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Variable));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Add_Variable_Value_Action_Get;

      ---------------------------
      -- Any_Receive_Event_Get --
      ---------------------------

      function Any_Receive_Event_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Any_Receive_Events.UML_Any_Receive_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Any_Receive_Events.UML_Any_Receive_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Any_Receive_Events.UML_Any_Receive_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Any_Receive_Events.UML_Any_Receive_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Any_Receive_Events.UML_Any_Receive_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Any_Receive_Events.UML_Any_Receive_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Any_Receive_Events.UML_Any_Receive_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Any_Receive_Events.UML_Any_Receive_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Any_Receive_Events.UML_Any_Receive_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Any_Receive_Events.UML_Any_Receive_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Any_Receive_Events.UML_Any_Receive_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Any_Receive_Events.UML_Any_Receive_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Any_Receive_Event_Get;

      ------------------
      -- Artifact_Get --
      ------------------

      function Artifact_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Classifier_Attribute then
            --  Classifier::attribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Classifier_Collaboration_Use then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internal
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_Classifier_Feature then
            --  Classifier::feature : Feature

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Features.Collections.UML_Feature_Collections.Internal
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Feature));

         elsif Property = MP_UML_Artifact_File_Name then
            --  Artifact::fileName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_File_Name);

         elsif Property = MP_UML_Classifier_General then
            --  Classifier::general : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General));

         elsif Property = MP_UML_Classifier_Generalization then
            --  Classifier::generalization : Generalization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internal
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Classifier_Inherited_Member then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member));

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Artifact_Manifestation then
            --  Artifact::manifestation : Manifestation

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Manifestations.Collections.UML_Manifestation_Collections.Internal
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Manifestation));

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Artifact_Nested_Artifact then
            --  Artifact::nestedArtifact : Artifact

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Artifacts.Collections.UML_Artifact_Collections.Internal
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Artifact));

         elsif Property = MP_UML_Artifact_Owned_Attribute then
            --  Artifact::ownedAttribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Artifact_Owned_Operation then
            --  Artifact::ownedOperation : Operation

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Operations.Collections.UML_Operation_Collections.Internal
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Operation));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Classifier_Owned_Use_Case then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Classifier_Powertype_Extent then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internal
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Classifier_Redefined_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier));

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = MP_UML_Classifier_Substitution then
            --  Classifier::substitution : Substitution

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internal
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution));

         elsif Property = MP_UML_Templateable_Element_Template_Binding then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internal
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Classifier_Use_Case then
            --  Classifier::useCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Artifacts.UML_Artifact_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Artifacts.UML_Artifact_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Artifact_Get;

      ---------------------
      -- Association_Get --
      ---------------------

      function Association_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Classifier_Attribute then
            --  Classifier::attribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Classifier_Collaboration_Use then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internal
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_Association_End_Type then
            --  Association::endType : Type

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Types.Collections.UML_Type_Collections.Internal
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_End_Type));

         elsif Property = MP_UML_Classifier_Feature then
            --  Classifier::feature : Feature

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Features.Collections.UML_Feature_Collections.Internal
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Feature));

         elsif Property = MP_UML_Classifier_General then
            --  Classifier::general : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General));

         elsif Property = MP_UML_Classifier_Generalization then
            --  Classifier::generalization : Generalization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internal
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Classifier_Inherited_Member then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member));

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Association_Is_Derived then
            --  Association::isDerived : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Derived);

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Association_Member_End then
            --  Association::memberEnd : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member_End));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Association_Navigable_Owned_End then
            --  Association::navigableOwnedEnd : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Navigable_Owned_End));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Association_Owned_End then
            --  Association::ownedEnd : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_End));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Classifier_Owned_Use_Case then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Classifier_Powertype_Extent then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internal
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Classifier_Redefined_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier));

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Relationship_Related_Element then
            --  Relationship::relatedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = MP_UML_Classifier_Substitution then
            --  Classifier::substitution : Substitution

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internal
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution));

         elsif Property = MP_UML_Templateable_Element_Template_Binding then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internal
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Classifier_Use_Case then
            --  Classifier::useCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Associations.UML_Association_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Associations.UML_Association_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Association_Get;

      ---------------------------
      -- Association_Class_Get --
      ---------------------------

      function Association_Class_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Classifier_Attribute then
            --  Classifier::attribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute));

         elsif Property = MP_UML_Behaviored_Classifier_Classifier_Behavior then
            --  BehavioredClassifier::classifierBehavior : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier_Behavior));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Classifier_Collaboration_Use then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_Association_End_Type then
            --  Association::endType : Type

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Types.Collections.UML_Type_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_End_Type));

         elsif Property = MP_UML_Class_Extension then
            --  Class::extension : Extension

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Extensions.Collections.UML_Extension_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Extension));

         elsif Property = MP_UML_Classifier_Feature then
            --  Classifier::feature : Feature

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Features.Collections.UML_Feature_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Feature));

         elsif Property = MP_UML_Classifier_General then
            --  Classifier::general : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General));

         elsif Property = MP_UML_Classifier_Generalization then
            --  Classifier::generalization : Generalization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Classifier_Inherited_Member then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member));

         elsif Property = MP_UML_Behaviored_Classifier_Interface_Realization then
            --  BehavioredClassifier::interfaceRealization : InterfaceRealization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interface_Realizations.Collections.UML_Interface_Realization_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Interface_Realization));

         elsif Property = MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Active);

         elsif Property = MP_UML_Association_Is_Derived then
            --  Association::isDerived : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Derived);

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Association_Member_End then
            --  Association::memberEnd : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member_End));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Association_Navigable_Owned_End then
            --  Association::navigableOwnedEnd : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Navigable_Owned_End));

         elsif Property = MP_UML_Class_Nested_Classifier then
            --  Class::nestedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Classifier));

         elsif Property = MP_UML_Class_Owned_Attribute then
            --  Class::ownedAttribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute));

         elsif Property = MP_UML_Structured_Classifier_Owned_Attribute then
            --  StructuredClassifier::ownedAttribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute));

         elsif Property = MP_UML_Behaviored_Classifier_Owned_Behavior then
            --  BehavioredClassifier::ownedBehavior : Behavior

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Behavior));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Structured_Classifier_Owned_Connector then
            --  StructuredClassifier::ownedConnector : Connector

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Connectors.Collections.UML_Connector_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Connector));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Association_Owned_End then
            --  Association::ownedEnd : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_End));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Class_Owned_Operation then
            --  Class::ownedOperation : Operation

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Operations.Collections.UML_Operation_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Operation));

         elsif Property = MP_UML_Encapsulated_Classifier_Owned_Port then
            --  EncapsulatedClassifier::ownedPort : Port

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Ports.Collections.UML_Port_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Port));

         elsif Property = MP_UML_Class_Owned_Reception then
            --  Class::ownedReception : Reception

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Receptions.Collections.UML_Reception_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Reception));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Classifier_Owned_Use_Case then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Structured_Classifier_Part then
            --  StructuredClassifier::part : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Part));

         elsif Property = MP_UML_Classifier_Powertype_Extent then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Classifier_Redefined_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier));

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Relationship_Related_Element then
            --  Relationship::relatedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = MP_UML_Structured_Classifier_Role then
            --  StructuredClassifier::role : ConnectableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Connectable_Elements.Collections.UML_Connectable_Element_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Role));

         elsif Property = MP_UML_Classifier_Substitution then
            --  Classifier::substitution : Substitution

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution));

         elsif Property = MP_UML_Class_Super_Class then
            --  Class::superClass : Class

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classes.Collections.UML_Class_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Class));

         elsif Property = MP_UML_Templateable_Element_Template_Binding then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Classifier_Use_Case then
            --  Classifier::useCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Association_Classes.UML_Association_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Association_Classes.UML_Association_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Association_Class_Get;

      ------------------------------------------
      -- Behavior_Execution_Specification_Get --
      ------------------------------------------

      function Behavior_Execution_Specification_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Behavior_Execution_Specification_Behavior then
            --  BehaviorExecutionSpecification::behavior : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Behavior));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Interaction_Fragment_Covered then
            --  InteractionFragment::covered : Lifeline

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Lifelines.Collections.UML_Lifeline_Collections.Internal
                 (AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Covered));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Interaction then
            --  InteractionFragment::enclosingInteraction : Interaction

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access'
                 (AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Interaction));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Operand then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access'
                 (AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Operand));

         elsif Property = MP_UML_Execution_Specification_Finish then
            --  ExecutionSpecification::finish : OccurrenceSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access'
                 (AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Finish));

         elsif Property = MP_UML_Interaction_Fragment_General_Ordering then
            --  InteractionFragment::generalOrdering : GeneralOrdering

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internal
                 (AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General_Ordering));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Execution_Specification_Start then
            --  ExecutionSpecification::start : OccurrenceSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access'
                 (AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Start));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Behavior_Execution_Specification_Get;

      ---------------------------------
      -- Broadcast_Signal_Action_Get --
      ---------------------------------

      function Broadcast_Signal_Action_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Invocation_Action_Argument then
            --  InvocationAction::argument : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Argument));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Invocation_Action_On_Port then
            --  InvocationAction::onPort : Port

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Ports.UML_Port_Access'
                 (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_On_Port));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Broadcast_Signal_Action_Signal then
            --  BroadcastSignalAction::signal : Signal

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Signals.UML_Signal_Access'
                 (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Signal));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Broadcast_Signal_Action_Get;

      ------------------------------
      -- Call_Behavior_Action_Get --
      ------------------------------

      function Call_Behavior_Action_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Invocation_Action_Argument then
            --  InvocationAction::argument : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Argument));

         elsif Property = MP_UML_Call_Behavior_Action_Behavior then
            --  CallBehaviorAction::behavior : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Behavior));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Call_Action_Is_Synchronous then
            --  CallAction::isSynchronous : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Synchronous);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Invocation_Action_On_Port then
            --  InvocationAction::onPort : Port

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Ports.UML_Port_Access'
                 (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_On_Port));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Call_Action_Result then
            --  CallAction::result : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Call_Behavior_Action_Get;

      --------------------
      -- Call_Event_Get --
      --------------------

      function Call_Event_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Call_Events.UML_Call_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Call_Events.UML_Call_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Call_Events.UML_Call_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Call_Events.UML_Call_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Call_Event_Operation then
            --  CallEvent::operation : Operation

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Operations.UML_Operation_Access'
                 (AMF.UML.Call_Events.UML_Call_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Operation));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Call_Events.UML_Call_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Call_Events.UML_Call_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Call_Events.UML_Call_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Call_Events.UML_Call_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Call_Events.UML_Call_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Call_Events.UML_Call_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Call_Events.UML_Call_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Call_Events.UML_Call_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Call_Event_Get;

      -------------------------------
      -- Call_Operation_Action_Get --
      -------------------------------

      function Call_Operation_Action_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Invocation_Action_Argument then
            --  InvocationAction::argument : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Argument));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Call_Action_Is_Synchronous then
            --  CallAction::isSynchronous : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Synchronous);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Invocation_Action_On_Port then
            --  InvocationAction::onPort : Port

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Ports.UML_Port_Access'
                 (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_On_Port));

         elsif Property = MP_UML_Call_Operation_Action_Operation then
            --  CallOperationAction::operation : Operation

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Operations.UML_Operation_Access'
                 (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Operation));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Call_Action_Result then
            --  CallAction::result : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = MP_UML_Call_Operation_Action_Target then
            --  CallOperationAction::target : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Target));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Call_Operation_Action_Get;

      -----------------------------
      -- Central_Buffer_Node_Get --
      -----------------------------

      function Central_Buffer_Node_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Object_Node_In_State then
            --  ObjectNode::inState : State

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.States.Collections.UML_State_Collections.Internal
                 (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_State));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Object_Node_Is_Control_Type then
            --  ObjectNode::isControlType : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Control_Type);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Object_Node_Ordering then
            --  ObjectNode::ordering : ObjectNodeOrderingKind

            return
              AMF.UML.Holders.Object_Node_Ordering_Kinds.To_Holder
               (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Ordering);

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Object_Node_Selection then
            --  ObjectNode::selection : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Selection));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = MP_UML_Object_Node_Upper_Bound then
            --  ObjectNode::upperBound : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Upper_Bound));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Central_Buffer_Node_Get;

      ----------------------
      -- Change_Event_Get --
      ----------------------

      function Change_Event_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Change_Event_Change_Expression then
            --  ChangeEvent::changeExpression : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Change_Events.UML_Change_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Change_Expression));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Change_Events.UML_Change_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Change_Events.UML_Change_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Change_Events.UML_Change_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Change_Events.UML_Change_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Change_Events.UML_Change_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Change_Events.UML_Change_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Change_Events.UML_Change_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Change_Events.UML_Change_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Change_Events.UML_Change_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Change_Events.UML_Change_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Change_Events.UML_Change_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Change_Events.UML_Change_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Change_Event_Get;

      ---------------
      -- Class_Get --
      ---------------

      function Class_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Classifier_Attribute then
            --  Classifier::attribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute));

         elsif Property = MP_UML_Behaviored_Classifier_Classifier_Behavior then
            --  BehavioredClassifier::classifierBehavior : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier_Behavior));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Classifier_Collaboration_Use then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internal
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_Class_Extension then
            --  Class::extension : Extension

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Extensions.Collections.UML_Extension_Collections.Internal
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Extension));

         elsif Property = MP_UML_Classifier_Feature then
            --  Classifier::feature : Feature

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Features.Collections.UML_Feature_Collections.Internal
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Feature));

         elsif Property = MP_UML_Classifier_General then
            --  Classifier::general : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General));

         elsif Property = MP_UML_Classifier_Generalization then
            --  Classifier::generalization : Generalization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internal
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Classifier_Inherited_Member then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member));

         elsif Property = MP_UML_Behaviored_Classifier_Interface_Realization then
            --  BehavioredClassifier::interfaceRealization : InterfaceRealization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interface_Realizations.Collections.UML_Interface_Realization_Collections.Internal
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Interface_Realization));

         elsif Property = MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Active);

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Class_Nested_Classifier then
            --  Class::nestedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Classifier));

         elsif Property = MP_UML_Class_Owned_Attribute then
            --  Class::ownedAttribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute));

         elsif Property = MP_UML_Structured_Classifier_Owned_Attribute then
            --  StructuredClassifier::ownedAttribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute));

         elsif Property = MP_UML_Behaviored_Classifier_Owned_Behavior then
            --  BehavioredClassifier::ownedBehavior : Behavior

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internal
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Behavior));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Structured_Classifier_Owned_Connector then
            --  StructuredClassifier::ownedConnector : Connector

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Connectors.Collections.UML_Connector_Collections.Internal
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Connector));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Class_Owned_Operation then
            --  Class::ownedOperation : Operation

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Operations.Collections.UML_Operation_Collections.Internal
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Operation));

         elsif Property = MP_UML_Encapsulated_Classifier_Owned_Port then
            --  EncapsulatedClassifier::ownedPort : Port

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Ports.Collections.UML_Port_Collections.Internal
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Port));

         elsif Property = MP_UML_Class_Owned_Reception then
            --  Class::ownedReception : Reception

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Receptions.Collections.UML_Reception_Collections.Internal
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Reception));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Classifier_Owned_Use_Case then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Structured_Classifier_Part then
            --  StructuredClassifier::part : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Part));

         elsif Property = MP_UML_Classifier_Powertype_Extent then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internal
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Classifier_Redefined_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier));

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = MP_UML_Structured_Classifier_Role then
            --  StructuredClassifier::role : ConnectableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Connectable_Elements.Collections.UML_Connectable_Element_Collections.Internal
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Role));

         elsif Property = MP_UML_Classifier_Substitution then
            --  Classifier::substitution : Substitution

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internal
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution));

         elsif Property = MP_UML_Class_Super_Class then
            --  Class::superClass : Class

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classes.Collections.UML_Class_Collections.Internal
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Class));

         elsif Property = MP_UML_Templateable_Element_Template_Binding then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internal
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Classifier_Use_Case then
            --  Classifier::useCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Classes.UML_Class_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Classes.UML_Class_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Class_Get;

      ---------------------------------------
      -- Classifier_Template_Parameter_Get --
      ---------------------------------------

      function Classifier_Template_Parameter_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Classifier_Template_Parameter_Allow_Substitutable then
            --  ClassifierTemplateParameter::allowSubstitutable : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Allow_Substitutable);

         elsif Property = MP_UML_Classifier_Template_Parameter_Constraining_Classifier then
            --  ClassifierTemplateParameter::constrainingClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Constraining_Classifier));

         elsif Property = MP_UML_Template_Parameter_Default then
            --  TemplateParameter::default : ParameterableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access'
                 (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Default));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Template_Parameter_Owned_Default then
            --  TemplateParameter::ownedDefault : ParameterableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access'
                 (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Default));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Template_Parameter_Owned_Parametered_Element then
            --  TemplateParameter::ownedParameteredElement : ParameterableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access'
                 (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parametered_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Classifier_Template_Parameter_Parametered_Element then
            --  ClassifierTemplateParameter::parameteredElement : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Parametered_Element));

         elsif Property = MP_UML_Template_Parameter_Parametered_Element then
            --  TemplateParameter::parameteredElement : ParameterableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access'
                 (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Parametered_Element));

         elsif Property = MP_UML_Template_Parameter_Signature then
            --  TemplateParameter::signature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Signature));

         else
            raise Program_Error;
         end if;
      end Classifier_Template_Parameter_Get;

      ----------------
      -- Clause_Get --
      ----------------

      function Clause_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Clause_Body then
            --  Clause::body : ExecutableNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Executable_Nodes.Collections.UML_Executable_Node_Collections.Internal
                 (AMF.UML.Clauses.UML_Clause_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Body));

         elsif Property = MP_UML_Clause_Body_Output then
            --  Clause::bodyOutput : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Clauses.UML_Clause_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Body_Output));

         elsif Property = MP_UML_Clause_Decider then
            --  Clause::decider : OutputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access'
                 (AMF.UML.Clauses.UML_Clause_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Decider));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Clauses.UML_Clause_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Clauses.UML_Clause_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Clauses.UML_Clause_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Clause_Predecessor_Clause then
            --  Clause::predecessorClause : Clause

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Clauses.Collections.UML_Clause_Collections.Internal
                 (AMF.UML.Clauses.UML_Clause_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Predecessor_Clause));

         elsif Property = MP_UML_Clause_Successor_Clause then
            --  Clause::successorClause : Clause

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Clauses.Collections.UML_Clause_Collections.Internal
                 (AMF.UML.Clauses.UML_Clause_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Successor_Clause));

         elsif Property = MP_UML_Clause_Test then
            --  Clause::test : ExecutableNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Executable_Nodes.Collections.UML_Executable_Node_Collections.Internal
                 (AMF.UML.Clauses.UML_Clause_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Test));

         else
            raise Program_Error;
         end if;
      end Clause_Get;

      ----------------------------------
      -- Clear_Association_Action_Get --
      ----------------------------------

      function Clear_Association_Action_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Clear_Association_Action_Association then
            --  ClearAssociationAction::association : Association

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Associations.UML_Association_Access'
                 (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Association));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Clear_Association_Action_Object then
            --  ClearAssociationAction::object : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Object));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Clear_Association_Action_Get;

      -----------------------------------------
      -- Clear_Structural_Feature_Action_Get --
      -----------------------------------------

      function Clear_Structural_Feature_Action_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Structural_Feature_Action_Object then
            --  StructuralFeatureAction::object : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Object));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Clear_Structural_Feature_Action_Result then
            --  ClearStructuralFeatureAction::result : OutputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access'
                 (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = MP_UML_Structural_Feature_Action_Structural_Feature then
            --  StructuralFeatureAction::structuralFeature : StructuralFeature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structural_Features.UML_Structural_Feature_Access'
                 (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Structural_Feature));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Clear_Structural_Feature_Action_Get;

      -------------------------------
      -- Clear_Variable_Action_Get --
      -------------------------------

      function Clear_Variable_Action_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Variable_Action_Variable then
            --  VariableAction::variable : Variable

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Variables.UML_Variable_Access'
                 (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Variable));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Clear_Variable_Action_Get;

      -----------------------
      -- Collaboration_Get --
      -----------------------

      function Collaboration_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Classifier_Attribute then
            --  Classifier::attribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute));

         elsif Property = MP_UML_Behaviored_Classifier_Classifier_Behavior then
            --  BehavioredClassifier::classifierBehavior : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier_Behavior));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Collaboration_Collaboration_Role then
            --  Collaboration::collaborationRole : ConnectableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Connectable_Elements.Collections.UML_Connectable_Element_Collections.Internal
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Role));

         elsif Property = MP_UML_Classifier_Collaboration_Use then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internal
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_Classifier_Feature then
            --  Classifier::feature : Feature

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Features.Collections.UML_Feature_Collections.Internal
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Feature));

         elsif Property = MP_UML_Classifier_General then
            --  Classifier::general : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General));

         elsif Property = MP_UML_Classifier_Generalization then
            --  Classifier::generalization : Generalization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internal
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Classifier_Inherited_Member then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member));

         elsif Property = MP_UML_Behaviored_Classifier_Interface_Realization then
            --  BehavioredClassifier::interfaceRealization : InterfaceRealization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interface_Realizations.Collections.UML_Interface_Realization_Collections.Internal
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Interface_Realization));

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Structured_Classifier_Owned_Attribute then
            --  StructuredClassifier::ownedAttribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute));

         elsif Property = MP_UML_Behaviored_Classifier_Owned_Behavior then
            --  BehavioredClassifier::ownedBehavior : Behavior

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internal
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Behavior));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Structured_Classifier_Owned_Connector then
            --  StructuredClassifier::ownedConnector : Connector

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Connectors.Collections.UML_Connector_Collections.Internal
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Connector));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Classifier_Owned_Use_Case then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Structured_Classifier_Part then
            --  StructuredClassifier::part : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Part));

         elsif Property = MP_UML_Classifier_Powertype_Extent then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internal
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Classifier_Redefined_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier));

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = MP_UML_Structured_Classifier_Role then
            --  StructuredClassifier::role : ConnectableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Connectable_Elements.Collections.UML_Connectable_Element_Collections.Internal
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Role));

         elsif Property = MP_UML_Classifier_Substitution then
            --  Classifier::substitution : Substitution

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internal
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution));

         elsif Property = MP_UML_Templateable_Element_Template_Binding then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internal
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Classifier_Use_Case then
            --  Classifier::useCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Collaborations.UML_Collaboration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Collaboration_Get;

      ---------------------------
      -- Collaboration_Use_Get --
      ---------------------------

      function Collaboration_Use_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Collaboration_Use_Role_Binding then
            --  CollaborationUse::roleBinding : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Role_Binding));

         elsif Property = MP_UML_Collaboration_Use_Type then
            --  CollaborationUse::type : Collaboration

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaborations.UML_Collaboration_Access'
                 (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Collaboration_Use_Get;

      ---------------------------
      -- Combined_Fragment_Get --
      ---------------------------

      function Combined_Fragment_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Combined_Fragment_Cfragment_Gate then
            --  CombinedFragment::cfragmentGate : Gate

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Gates.Collections.UML_Gate_Collections.Internal
                 (AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Cfragment_Gate));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Interaction_Fragment_Covered then
            --  InteractionFragment::covered : Lifeline

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Lifelines.Collections.UML_Lifeline_Collections.Internal
                 (AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Covered));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Interaction then
            --  InteractionFragment::enclosingInteraction : Interaction

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access'
                 (AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Interaction));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Operand then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access'
                 (AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Operand));

         elsif Property = MP_UML_Interaction_Fragment_General_Ordering then
            --  InteractionFragment::generalOrdering : GeneralOrdering

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internal
                 (AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General_Ordering));

         elsif Property = MP_UML_Combined_Fragment_Interaction_Operator then
            --  CombinedFragment::interactionOperator : InteractionOperatorKind

            return
              AMF.UML.Holders.Interaction_Operator_Kinds.To_Holder
               (AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Interaction_Operator);

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Combined_Fragment_Operand then
            --  CombinedFragment::operand : InteractionOperand

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interaction_Operands.Collections.UML_Interaction_Operand_Collections.Internal
                 (AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Operand));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Combined_Fragment_Get;

      -----------------
      -- Comment_Get --
      -----------------

      function Comment_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Comment_Annotated_Element then
            --  Comment::annotatedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Comments.UML_Comment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Annotated_Element));

         elsif Property = MP_UML_Comment_Body then
            --  Comment::body : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Comments.UML_Comment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Body);

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Comments.UML_Comment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Comments.UML_Comment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Comments.UML_Comment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         else
            raise Program_Error;
         end if;
      end Comment_Get;

      ----------------------------
      -- Communication_Path_Get --
      ----------------------------

      function Communication_Path_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Classifier_Attribute then
            --  Classifier::attribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Classifier_Collaboration_Use then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internal
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_Association_End_Type then
            --  Association::endType : Type

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Types.Collections.UML_Type_Collections.Internal
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_End_Type));

         elsif Property = MP_UML_Classifier_Feature then
            --  Classifier::feature : Feature

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Features.Collections.UML_Feature_Collections.Internal
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Feature));

         elsif Property = MP_UML_Classifier_General then
            --  Classifier::general : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General));

         elsif Property = MP_UML_Classifier_Generalization then
            --  Classifier::generalization : Generalization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internal
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Classifier_Inherited_Member then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member));

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Association_Is_Derived then
            --  Association::isDerived : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Derived);

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Association_Member_End then
            --  Association::memberEnd : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member_End));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Association_Navigable_Owned_End then
            --  Association::navigableOwnedEnd : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Navigable_Owned_End));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Association_Owned_End then
            --  Association::ownedEnd : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_End));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Classifier_Owned_Use_Case then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Classifier_Powertype_Extent then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internal
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Classifier_Redefined_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier));

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Relationship_Related_Element then
            --  Relationship::relatedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = MP_UML_Classifier_Substitution then
            --  Classifier::substitution : Substitution

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internal
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution));

         elsif Property = MP_UML_Templateable_Element_Template_Binding then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internal
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Classifier_Use_Case then
            --  Classifier::useCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Communication_Paths.UML_Communication_Path_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Communication_Path_Get;

      -------------------
      -- Component_Get --
      -------------------

      function Component_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Classifier_Attribute then
            --  Classifier::attribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute));

         elsif Property = MP_UML_Behaviored_Classifier_Classifier_Behavior then
            --  BehavioredClassifier::classifierBehavior : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier_Behavior));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Classifier_Collaboration_Use then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internal
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_Class_Extension then
            --  Class::extension : Extension

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Extensions.Collections.UML_Extension_Collections.Internal
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Extension));

         elsif Property = MP_UML_Classifier_Feature then
            --  Classifier::feature : Feature

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Features.Collections.UML_Feature_Collections.Internal
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Feature));

         elsif Property = MP_UML_Classifier_General then
            --  Classifier::general : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General));

         elsif Property = MP_UML_Classifier_Generalization then
            --  Classifier::generalization : Generalization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internal
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Classifier_Inherited_Member then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member));

         elsif Property = MP_UML_Behaviored_Classifier_Interface_Realization then
            --  BehavioredClassifier::interfaceRealization : InterfaceRealization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interface_Realizations.Collections.UML_Interface_Realization_Collections.Internal
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Interface_Realization));

         elsif Property = MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Active);

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = MP_UML_Component_Is_Indirectly_Instantiated then
            --  Component::isIndirectlyInstantiated : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Indirectly_Instantiated);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Class_Nested_Classifier then
            --  Class::nestedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Classifier));

         elsif Property = MP_UML_Class_Owned_Attribute then
            --  Class::ownedAttribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute));

         elsif Property = MP_UML_Structured_Classifier_Owned_Attribute then
            --  StructuredClassifier::ownedAttribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute));

         elsif Property = MP_UML_Behaviored_Classifier_Owned_Behavior then
            --  BehavioredClassifier::ownedBehavior : Behavior

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internal
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Behavior));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Structured_Classifier_Owned_Connector then
            --  StructuredClassifier::ownedConnector : Connector

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Connectors.Collections.UML_Connector_Collections.Internal
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Connector));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Class_Owned_Operation then
            --  Class::ownedOperation : Operation

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Operations.Collections.UML_Operation_Collections.Internal
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Operation));

         elsif Property = MP_UML_Encapsulated_Classifier_Owned_Port then
            --  EncapsulatedClassifier::ownedPort : Port

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Ports.Collections.UML_Port_Collections.Internal
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Port));

         elsif Property = MP_UML_Class_Owned_Reception then
            --  Class::ownedReception : Reception

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Receptions.Collections.UML_Reception_Collections.Internal
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Reception));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Classifier_Owned_Use_Case then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Component_Packaged_Element then
            --  Component::packagedElement : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Packaged_Element));

         elsif Property = MP_UML_Structured_Classifier_Part then
            --  StructuredClassifier::part : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Part));

         elsif Property = MP_UML_Classifier_Powertype_Extent then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internal
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent));

         elsif Property = MP_UML_Component_Provided then
            --  Component::provided : Interface

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interfaces.Collections.UML_Interface_Collections.Internal
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Provided));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Component_Realization then
            --  Component::realization : ComponentRealization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Component_Realizations.Collections.UML_Component_Realization_Collections.Internal
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Realization));

         elsif Property = MP_UML_Classifier_Redefined_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier));

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = MP_UML_Component_Required then
            --  Component::required : Interface

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interfaces.Collections.UML_Interface_Collections.Internal
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Required));

         elsif Property = MP_UML_Structured_Classifier_Role then
            --  StructuredClassifier::role : ConnectableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Connectable_Elements.Collections.UML_Connectable_Element_Collections.Internal
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Role));

         elsif Property = MP_UML_Classifier_Substitution then
            --  Classifier::substitution : Substitution

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internal
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution));

         elsif Property = MP_UML_Class_Super_Class then
            --  Class::superClass : Class

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classes.Collections.UML_Class_Collections.Internal
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Class));

         elsif Property = MP_UML_Templateable_Element_Template_Binding then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internal
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Classifier_Use_Case then
            --  Classifier::useCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Components.UML_Component_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Components.UML_Component_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Component_Get;

      -------------------------------
      -- Component_Realization_Get --
      -------------------------------

      function Component_Realization_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Component_Realization_Abstraction then
            --  ComponentRealization::abstraction : Component

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Components.UML_Component_Access'
                 (AMF.UML.Component_Realizations.UML_Component_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Abstraction));

         elsif Property = MP_UML_Dependency_Client then
            --  Dependency::client : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Component_Realizations.UML_Component_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Component_Realizations.UML_Component_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Abstraction_Mapping then
            --  Abstraction::mapping : OpaqueExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access'
                 (AMF.UML.Component_Realizations.UML_Component_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Mapping));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Component_Realizations.UML_Component_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Component_Realizations.UML_Component_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Component_Realizations.UML_Component_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Component_Realizations.UML_Component_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Component_Realizations.UML_Component_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Component_Realizations.UML_Component_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Component_Realizations.UML_Component_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Component_Realizations.UML_Component_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Component_Realization_Realizing_Classifier then
            --  ComponentRealization::realizingClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Component_Realizations.UML_Component_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Realizing_Classifier));

         elsif Property = MP_UML_Relationship_Related_Element then
            --  Relationship::relatedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Component_Realizations.UML_Component_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element));

         elsif Property = MP_UML_Directed_Relationship_Source then
            --  DirectedRelationship::source : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Component_Realizations.UML_Component_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Source));

         elsif Property = MP_UML_Dependency_Supplier then
            --  Dependency::supplier : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Component_Realizations.UML_Component_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Supplier));

         elsif Property = MP_UML_Directed_Relationship_Target then
            --  DirectedRelationship::target : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Component_Realizations.UML_Component_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Target));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Component_Realizations.UML_Component_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Component_Realizations.UML_Component_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Component_Realizations.UML_Component_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Component_Realization_Get;

      --------------------------
      -- Conditional_Node_Get --
      --------------------------

      function Conditional_Node_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Structured_Activity_Node_Activity then
            --  StructuredActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Conditional_Node_Clause then
            --  ConditionalNode::clause : Clause

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Clauses.Collections.UML_Clause_Collections.Internal
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Clause));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Activity_Group_Contained_Edge then
            --  ActivityGroup::containedEdge : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Contained_Edge));

         elsif Property = MP_UML_Activity_Group_Contained_Node then
            --  ActivityGroup::containedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Contained_Node));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Structured_Activity_Node_Edge then
            --  StructuredActivityNode::edge : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Edge));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Activity_Group_In_Activity then
            --  ActivityGroup::inActivity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Activity));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Conditional_Node_Is_Assured then
            --  ConditionalNode::isAssured : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Assured);

         elsif Property = MP_UML_Conditional_Node_Is_Determinate then
            --  ConditionalNode::isDeterminate : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Determinate);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Structured_Activity_Node_Must_Isolate then
            --  StructuredActivityNode::mustIsolate : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Must_Isolate);

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Structured_Activity_Node_Node then
            --  StructuredActivityNode::node : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Node));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Conditional_Node_Result then
            --  ConditionalNode::result : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = MP_UML_Structured_Activity_Node_Structured_Node_Input then
            --  StructuredActivityNode::structuredNodeInput : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Structured_Node_Input));

         elsif Property = MP_UML_Structured_Activity_Node_Structured_Node_Output then
            --  StructuredActivityNode::structuredNodeOutput : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Structured_Node_Output));

         elsif Property = MP_UML_Activity_Group_Subgroup then
            --  ActivityGroup::subgroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Subgroup));

         elsif Property = MP_UML_Activity_Group_Super_Group then
            --  ActivityGroup::superGroup : ActivityGroup

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activity_Groups.UML_Activity_Group_Access'
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Group));

         elsif Property = MP_UML_Structured_Activity_Node_Variable then
            --  StructuredActivityNode::variable : Variable

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Variables.Collections.UML_Variable_Collections.Internal
                 (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Variable));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Conditional_Node_Get;

      ------------------------------------------------
      -- Connectable_Element_Template_Parameter_Get --
      ------------------------------------------------

      function Connectable_Element_Template_Parameter_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Template_Parameter_Default then
            --  TemplateParameter::default : ParameterableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access'
                 (AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Default));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Template_Parameter_Owned_Default then
            --  TemplateParameter::ownedDefault : ParameterableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access'
                 (AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Default));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Template_Parameter_Owned_Parametered_Element then
            --  TemplateParameter::ownedParameteredElement : ParameterableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access'
                 (AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parametered_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Connectable_Element_Template_Parameter_Parametered_Element then
            --  ConnectableElementTemplateParameter::parameteredElement : ConnectableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Connectable_Elements.UML_Connectable_Element_Access'
                 (AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Parametered_Element));

         elsif Property = MP_UML_Template_Parameter_Parametered_Element then
            --  TemplateParameter::parameteredElement : ParameterableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access'
                 (AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Parametered_Element));

         elsif Property = MP_UML_Template_Parameter_Signature then
            --  TemplateParameter::signature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Signature));

         else
            raise Program_Error;
         end if;
      end Connectable_Element_Template_Parameter_Get;

      ------------------------------------
      -- Connection_Point_Reference_Get --
      ------------------------------------

      function Connection_Point_Reference_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Connection_Point_References.UML_Connection_Point_Reference_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Vertex_Container then
            --  Vertex::container : Region

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Regions.UML_Region_Access'
                 (AMF.UML.Connection_Point_References.UML_Connection_Point_Reference_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Container));

         elsif Property = MP_UML_Connection_Point_Reference_Entry then
            --  ConnectionPointReference::entry : Pseudostate

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Pseudostates.Collections.UML_Pseudostate_Collections.Internal
                 (AMF.UML.Connection_Point_References.UML_Connection_Point_Reference_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Entry));

         elsif Property = MP_UML_Connection_Point_Reference_Exit then
            --  ConnectionPointReference::exit : Pseudostate

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Pseudostates.Collections.UML_Pseudostate_Collections.Internal
                 (AMF.UML.Connection_Point_References.UML_Connection_Point_Reference_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Exit));

         elsif Property = MP_UML_Vertex_Incoming then
            --  Vertex::incoming : Transition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Transitions.Collections.UML_Transition_Collections.Internal
                 (AMF.UML.Connection_Point_References.UML_Connection_Point_Reference_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Connection_Point_References.UML_Connection_Point_Reference_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Connection_Point_References.UML_Connection_Point_Reference_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Connection_Point_References.UML_Connection_Point_Reference_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Vertex_Outgoing then
            --  Vertex::outgoing : Transition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Transitions.Collections.UML_Transition_Collections.Internal
                 (AMF.UML.Connection_Point_References.UML_Connection_Point_Reference_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Connection_Point_References.UML_Connection_Point_Reference_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Connection_Point_References.UML_Connection_Point_Reference_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Connection_Point_References.UML_Connection_Point_Reference_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Connection_Point_References.UML_Connection_Point_Reference_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Connection_Point_Reference_State then
            --  ConnectionPointReference::state : State

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.States.UML_State_Access'
                 (AMF.UML.Connection_Point_References.UML_Connection_Point_Reference_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_State));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Connection_Point_References.UML_Connection_Point_Reference_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Connection_Point_Reference_Get;

      -------------------
      -- Connector_Get --
      -------------------

      function Connector_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Connectors.UML_Connector_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Connector_Contract then
            --  Connector::contract : Behavior

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internal
                 (AMF.UML.Connectors.UML_Connector_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Contract));

         elsif Property = MP_UML_Connector_End then
            --  Connector::end : ConnectorEnd

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Connector_Ends.Collections.UML_Connector_End_Collections.Internal
                 (AMF.UML.Connectors.UML_Connector_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_End));

         elsif Property = MP_UML_Feature_Featuring_Classifier then
            --  Feature::featuringClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Connectors.UML_Connector_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Featuring_Classifier));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Connectors.UML_Connector_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Feature_Is_Static then
            --  Feature::isStatic : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Connectors.UML_Connector_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Static);

         elsif Property = MP_UML_Connector_Kind then
            --  Connector::kind : ConnectorKind

            return
              AMF.UML.Holders.Connector_Kinds.To_Holder
               (AMF.UML.Connectors.UML_Connector_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Kind);

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Connectors.UML_Connector_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Connectors.UML_Connector_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Connectors.UML_Connector_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Connectors.UML_Connector_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Connectors.UML_Connector_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Connectors.UML_Connector_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Connectors.UML_Connector_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Connector_Redefined_Connector then
            --  Connector::redefinedConnector : Connector

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Connectors.Collections.UML_Connector_Collections.Internal
                 (AMF.UML.Connectors.UML_Connector_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Connector));

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Connectors.UML_Connector_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Connectors.UML_Connector_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Connector_Type then
            --  Connector::type : Association

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Associations.UML_Association_Access'
                 (AMF.UML.Connectors.UML_Connector_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Connectors.UML_Connector_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Connector_Get;

      -----------------------
      -- Connector_End_Get --
      -----------------------

      function Connector_End_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Connector_End_Defining_End then
            --  ConnectorEnd::definingEnd : Property

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access'
                 (AMF.UML.Connector_Ends.UML_Connector_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Defining_End));

         elsif Property = MP_UML_Multiplicity_Element_Is_Ordered then
            --  MultiplicityElement::isOrdered : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Connector_Ends.UML_Connector_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Ordered);

         elsif Property = MP_UML_Multiplicity_Element_Is_Unique then
            --  MultiplicityElement::isUnique : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Connector_Ends.UML_Connector_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Unique);

         elsif Property = MP_UML_Multiplicity_Element_Lower then
            --  MultiplicityElement::lower : Integer

            return
              AMF.Holders.To_Holder
               (AMF.UML.Connector_Ends.UML_Connector_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Lower);

         elsif Property = MP_UML_Multiplicity_Element_Lower_Value then
            --  MultiplicityElement::lowerValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Connector_Ends.UML_Connector_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Lower_Value));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Connector_Ends.UML_Connector_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Connector_Ends.UML_Connector_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Connector_Ends.UML_Connector_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Connector_End_Part_With_Port then
            --  ConnectorEnd::partWithPort : Property

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access'
                 (AMF.UML.Connector_Ends.UML_Connector_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Part_With_Port));

         elsif Property = MP_UML_Connector_End_Role then
            --  ConnectorEnd::role : ConnectableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Connectable_Elements.UML_Connectable_Element_Access'
                 (AMF.UML.Connector_Ends.UML_Connector_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Role));

         elsif Property = MP_UML_Multiplicity_Element_Upper then
            --  MultiplicityElement::upper : UnlimitedNatural

            return
              AMF.Holders.To_Holder
               (AMF.UML.Connector_Ends.UML_Connector_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Upper);

         elsif Property = MP_UML_Multiplicity_Element_Upper_Value then
            --  MultiplicityElement::upperValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Connector_Ends.UML_Connector_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Upper_Value));

         else
            raise Program_Error;
         end if;
      end Connector_End_Get;

      ----------------------------------
      -- Consider_Ignore_Fragment_Get --
      ----------------------------------

      function Consider_Ignore_Fragment_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Combined_Fragment_Cfragment_Gate then
            --  CombinedFragment::cfragmentGate : Gate

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Gates.Collections.UML_Gate_Collections.Internal
                 (AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Cfragment_Gate));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Interaction_Fragment_Covered then
            --  InteractionFragment::covered : Lifeline

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Lifelines.Collections.UML_Lifeline_Collections.Internal
                 (AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Covered));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Interaction then
            --  InteractionFragment::enclosingInteraction : Interaction

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access'
                 (AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Interaction));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Operand then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access'
                 (AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Operand));

         elsif Property = MP_UML_Interaction_Fragment_General_Ordering then
            --  InteractionFragment::generalOrdering : GeneralOrdering

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internal
                 (AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General_Ordering));

         elsif Property = MP_UML_Combined_Fragment_Interaction_Operator then
            --  CombinedFragment::interactionOperator : InteractionOperatorKind

            return
              AMF.UML.Holders.Interaction_Operator_Kinds.To_Holder
               (AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Interaction_Operator);

         elsif Property = MP_UML_Consider_Ignore_Fragment_Message then
            --  ConsiderIgnoreFragment::message : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Message));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Combined_Fragment_Operand then
            --  CombinedFragment::operand : InteractionOperand

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interaction_Operands.Collections.UML_Interaction_Operand_Collections.Internal
                 (AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Operand));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Consider_Ignore_Fragment_Get;

      --------------------
      -- Constraint_Get --
      --------------------

      function Constraint_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Constraints.UML_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Constraint_Constrained_Element then
            --  Constraint::constrainedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Constraints.UML_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Constrained_Element));

         elsif Property = MP_UML_Constraint_Context then
            --  Constraint::context : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Constraints.UML_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Constraints.UML_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Constraints.UML_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Constraints.UML_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Constraints.UML_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Constraints.UML_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Constraints.UML_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Constraints.UML_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Constraints.UML_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Constraint_Specification then
            --  Constraint::specification : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Constraints.UML_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Specification));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Constraints.UML_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Constraints.UML_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Constraints.UML_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Constraint_Get;

      ----------------------
      -- Continuation_Get --
      ----------------------

      function Continuation_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Continuations.UML_Continuation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Interaction_Fragment_Covered then
            --  InteractionFragment::covered : Lifeline

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Lifelines.Collections.UML_Lifeline_Collections.Internal
                 (AMF.UML.Continuations.UML_Continuation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Covered));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Interaction then
            --  InteractionFragment::enclosingInteraction : Interaction

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access'
                 (AMF.UML.Continuations.UML_Continuation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Interaction));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Operand then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access'
                 (AMF.UML.Continuations.UML_Continuation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Operand));

         elsif Property = MP_UML_Interaction_Fragment_General_Ordering then
            --  InteractionFragment::generalOrdering : GeneralOrdering

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internal
                 (AMF.UML.Continuations.UML_Continuation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General_Ordering));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Continuations.UML_Continuation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Continuations.UML_Continuation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Continuations.UML_Continuation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Continuations.UML_Continuation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Continuations.UML_Continuation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Continuations.UML_Continuation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Continuations.UML_Continuation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Continuation_Setting then
            --  Continuation::setting : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Continuations.UML_Continuation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Setting);

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Continuations.UML_Continuation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Continuation_Get;

      ----------------------
      -- Control_Flow_Get --
      ----------------------

      function Control_Flow_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Edge_Activity then
            --  ActivityEdge::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Control_Flows.UML_Control_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Control_Flows.UML_Control_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Activity_Edge_Guard then
            --  ActivityEdge::guard : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Control_Flows.UML_Control_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Guard));

         elsif Property = MP_UML_Activity_Edge_In_Group then
            --  ActivityEdge::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Control_Flows.UML_Control_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Edge_In_Partition then
            --  ActivityEdge::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Control_Flows.UML_Control_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Edge_In_Structured_Node then
            --  ActivityEdge::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Control_Flows.UML_Control_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Edge_Interrupts then
            --  ActivityEdge::interrupts : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access'
                 (AMF.UML.Control_Flows.UML_Control_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Interrupts));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Control_Flows.UML_Control_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Control_Flows.UML_Control_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Control_Flows.UML_Control_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Control_Flows.UML_Control_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Control_Flows.UML_Control_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Control_Flows.UML_Control_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Control_Flows.UML_Control_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Control_Flows.UML_Control_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Activity_Edge_Redefined_Edge then
            --  ActivityEdge::redefinedEdge : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Control_Flows.UML_Control_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Edge));

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Control_Flows.UML_Control_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Control_Flows.UML_Control_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Activity_Edge_Source then
            --  ActivityEdge::source : ActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activity_Nodes.UML_Activity_Node_Access'
                 (AMF.UML.Control_Flows.UML_Control_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Source));

         elsif Property = MP_UML_Activity_Edge_Target then
            --  ActivityEdge::target : ActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activity_Nodes.UML_Activity_Node_Access'
                 (AMF.UML.Control_Flows.UML_Control_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Target));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Control_Flows.UML_Control_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Activity_Edge_Weight then
            --  ActivityEdge::weight : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Control_Flows.UML_Control_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Weight));

         else
            raise Program_Error;
         end if;
      end Control_Flow_Get;

      ----------------------------
      -- Create_Link_Action_Get --
      ----------------------------

      function Create_Link_Action_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Create_Link_Action_End_Data then
            --  CreateLinkAction::endData : LinkEndCreationData

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Link_End_Creation_Datas.Collections.UML_Link_End_Creation_Data_Collections.Internal
                 (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_End_Data));

         elsif Property = MP_UML_Link_Action_End_Data then
            --  LinkAction::endData : LinkEndData

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Link_End_Datas.Collections.UML_Link_End_Data_Collections.Internal
                 (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_End_Data));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Link_Action_Input_Value then
            --  LinkAction::inputValue : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input_Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Create_Link_Action_Get;

      -----------------------------------
      -- Create_Link_Object_Action_Get --
      -----------------------------------

      function Create_Link_Object_Action_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Create_Link_Action_End_Data then
            --  CreateLinkAction::endData : LinkEndCreationData

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Link_End_Creation_Datas.Collections.UML_Link_End_Creation_Data_Collections.Internal
                 (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_End_Data));

         elsif Property = MP_UML_Link_Action_End_Data then
            --  LinkAction::endData : LinkEndData

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Link_End_Datas.Collections.UML_Link_End_Data_Collections.Internal
                 (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_End_Data));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Link_Action_Input_Value then
            --  LinkAction::inputValue : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input_Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Create_Link_Object_Action_Result then
            --  CreateLinkObjectAction::result : OutputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access'
                 (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Create_Link_Object_Action_Get;

      ------------------------------
      -- Create_Object_Action_Get --
      ------------------------------

      function Create_Object_Action_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Create_Object_Action_Classifier then
            --  CreateObjectAction::classifier : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Create_Object_Action_Result then
            --  CreateObjectAction::result : OutputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access'
                 (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Create_Object_Action_Get;

      -------------------------
      -- Data_Store_Node_Get --
      -------------------------

      function Data_Store_Node_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Object_Node_In_State then
            --  ObjectNode::inState : State

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.States.Collections.UML_State_Collections.Internal
                 (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_State));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Object_Node_Is_Control_Type then
            --  ObjectNode::isControlType : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Control_Type);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Object_Node_Ordering then
            --  ObjectNode::ordering : ObjectNodeOrderingKind

            return
              AMF.UML.Holders.Object_Node_Ordering_Kinds.To_Holder
               (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Ordering);

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Object_Node_Selection then
            --  ObjectNode::selection : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Selection));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = MP_UML_Object_Node_Upper_Bound then
            --  ObjectNode::upperBound : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Upper_Bound));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Data_Store_Node_Get;

      -------------------
      -- Data_Type_Get --
      -------------------

      function Data_Type_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Classifier_Attribute then
            --  Classifier::attribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Classifier_Collaboration_Use then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internal
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_Classifier_Feature then
            --  Classifier::feature : Feature

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Features.Collections.UML_Feature_Collections.Internal
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Feature));

         elsif Property = MP_UML_Classifier_General then
            --  Classifier::general : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General));

         elsif Property = MP_UML_Classifier_Generalization then
            --  Classifier::generalization : Generalization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internal
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Classifier_Inherited_Member then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member));

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Data_Type_Owned_Attribute then
            --  DataType::ownedAttribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Data_Type_Owned_Operation then
            --  DataType::ownedOperation : Operation

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Operations.Collections.UML_Operation_Collections.Internal
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Operation));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Classifier_Owned_Use_Case then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Classifier_Powertype_Extent then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internal
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Classifier_Redefined_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier));

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = MP_UML_Classifier_Substitution then
            --  Classifier::substitution : Substitution

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internal
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution));

         elsif Property = MP_UML_Templateable_Element_Template_Binding then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internal
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Classifier_Use_Case then
            --  Classifier::useCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Data_Types.UML_Data_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Data_Type_Get;

      -----------------------
      -- Decision_Node_Get --
      -----------------------

      function Decision_Node_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Decision_Node_Decision_Input then
            --  DecisionNode::decisionInput : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Decision_Input));

         elsif Property = MP_UML_Decision_Node_Decision_Input_Flow then
            --  DecisionNode::decisionInputFlow : ObjectFlow

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Object_Flows.UML_Object_Flow_Access'
                 (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Decision_Input_Flow));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Decision_Nodes.UML_Decision_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Decision_Node_Get;

      --------------------
      -- Dependency_Get --
      --------------------

      function Dependency_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Dependency_Client then
            --  Dependency::client : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Dependencies.UML_Dependency_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Dependencies.UML_Dependency_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Dependencies.UML_Dependency_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Dependencies.UML_Dependency_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Dependencies.UML_Dependency_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Dependencies.UML_Dependency_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Dependencies.UML_Dependency_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Dependencies.UML_Dependency_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Dependencies.UML_Dependency_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Dependencies.UML_Dependency_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Relationship_Related_Element then
            --  Relationship::relatedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Dependencies.UML_Dependency_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element));

         elsif Property = MP_UML_Directed_Relationship_Source then
            --  DirectedRelationship::source : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Dependencies.UML_Dependency_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Source));

         elsif Property = MP_UML_Dependency_Supplier then
            --  Dependency::supplier : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Dependencies.UML_Dependency_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Supplier));

         elsif Property = MP_UML_Directed_Relationship_Target then
            --  DirectedRelationship::target : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Dependencies.UML_Dependency_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Target));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Dependencies.UML_Dependency_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Dependencies.UML_Dependency_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Dependencies.UML_Dependency_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Dependency_Get;

      --------------------
      -- Deployment_Get --
      --------------------

      function Deployment_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Dependency_Client then
            --  Dependency::client : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Deployments.UML_Deployment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Deployments.UML_Deployment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Deployment_Configuration then
            --  Deployment::configuration : DeploymentSpecification

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Deployment_Specifications.Collections.UML_Deployment_Specification_Collections.Internal
                 (AMF.UML.Deployments.UML_Deployment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Configuration));

         elsif Property = MP_UML_Deployment_Deployed_Artifact then
            --  Deployment::deployedArtifact : DeployedArtifact

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Deployed_Artifacts.Collections.UML_Deployed_Artifact_Collections.Internal
                 (AMF.UML.Deployments.UML_Deployment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Deployed_Artifact));

         elsif Property = MP_UML_Deployment_Location then
            --  Deployment::location : DeploymentTarget

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Deployment_Targets.UML_Deployment_Target_Access'
                 (AMF.UML.Deployments.UML_Deployment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Location));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Deployments.UML_Deployment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Deployments.UML_Deployment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Deployments.UML_Deployment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Deployments.UML_Deployment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Deployments.UML_Deployment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Deployments.UML_Deployment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Deployments.UML_Deployment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Deployments.UML_Deployment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Relationship_Related_Element then
            --  Relationship::relatedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Deployments.UML_Deployment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element));

         elsif Property = MP_UML_Directed_Relationship_Source then
            --  DirectedRelationship::source : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Deployments.UML_Deployment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Source));

         elsif Property = MP_UML_Dependency_Supplier then
            --  Dependency::supplier : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Deployments.UML_Deployment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Supplier));

         elsif Property = MP_UML_Directed_Relationship_Target then
            --  DirectedRelationship::target : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Deployments.UML_Deployment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Target));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Deployments.UML_Deployment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Deployments.UML_Deployment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Deployments.UML_Deployment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Deployment_Get;

      ----------------------------------
      -- Deployment_Specification_Get --
      ----------------------------------

      function Deployment_Specification_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Classifier_Attribute then
            --  Classifier::attribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Classifier_Collaboration_Use then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internal
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use));

         elsif Property = MP_UML_Deployment_Specification_Deployment then
            --  DeploymentSpecification::deployment : Deployment

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Deployments.UML_Deployment_Access'
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Deployment));

         elsif Property = MP_UML_Deployment_Specification_Deployment_Location then
            --  DeploymentSpecification::deploymentLocation : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Deployment_Location);

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_Deployment_Specification_Execution_Location then
            --  DeploymentSpecification::executionLocation : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Execution_Location);

         elsif Property = MP_UML_Classifier_Feature then
            --  Classifier::feature : Feature

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Features.Collections.UML_Feature_Collections.Internal
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Feature));

         elsif Property = MP_UML_Artifact_File_Name then
            --  Artifact::fileName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_File_Name);

         elsif Property = MP_UML_Classifier_General then
            --  Classifier::general : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General));

         elsif Property = MP_UML_Classifier_Generalization then
            --  Classifier::generalization : Generalization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internal
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Classifier_Inherited_Member then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member));

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Artifact_Manifestation then
            --  Artifact::manifestation : Manifestation

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Manifestations.Collections.UML_Manifestation_Collections.Internal
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Manifestation));

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Artifact_Nested_Artifact then
            --  Artifact::nestedArtifact : Artifact

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Artifacts.Collections.UML_Artifact_Collections.Internal
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Artifact));

         elsif Property = MP_UML_Artifact_Owned_Attribute then
            --  Artifact::ownedAttribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Artifact_Owned_Operation then
            --  Artifact::ownedOperation : Operation

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Operations.Collections.UML_Operation_Collections.Internal
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Operation));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Classifier_Owned_Use_Case then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Classifier_Powertype_Extent then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internal
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Classifier_Redefined_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier));

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = MP_UML_Classifier_Substitution then
            --  Classifier::substitution : Substitution

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internal
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution));

         elsif Property = MP_UML_Templateable_Element_Template_Binding then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internal
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Classifier_Use_Case then
            --  Classifier::useCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Deployment_Specification_Get;

      -----------------------------
      -- Destroy_Link_Action_Get --
      -----------------------------

      function Destroy_Link_Action_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Destroy_Link_Action_End_Data then
            --  DestroyLinkAction::endData : LinkEndDestructionData

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Link_End_Destruction_Datas.Collections.UML_Link_End_Destruction_Data_Collections.Internal
                 (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_End_Data));

         elsif Property = MP_UML_Link_Action_End_Data then
            --  LinkAction::endData : LinkEndData

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Link_End_Datas.Collections.UML_Link_End_Data_Collections.Internal
                 (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_End_Data));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Link_Action_Input_Value then
            --  LinkAction::inputValue : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input_Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Destroy_Link_Action_Get;

      -------------------------------
      -- Destroy_Object_Action_Get --
      -------------------------------

      function Destroy_Object_Action_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Destroy_Object_Action_Is_Destroy_Links then
            --  DestroyObjectAction::isDestroyLinks : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Destroy_Links);

         elsif Property = MP_UML_Destroy_Object_Action_Is_Destroy_Owned_Objects then
            --  DestroyObjectAction::isDestroyOwnedObjects : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Destroy_Owned_Objects);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Destroy_Object_Action_Target then
            --  DestroyObjectAction::target : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Target));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Destroy_Object_Action_Get;

      ----------------------------------------------
      -- Destruction_Occurrence_Specification_Get --
      ----------------------------------------------

      function Destruction_Occurrence_Specification_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Interaction_Fragment_Covered then
            --  InteractionFragment::covered : Lifeline

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Lifelines.Collections.UML_Lifeline_Collections.Internal
                 (AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Covered));

         elsif Property = MP_UML_Occurrence_Specification_Covered then
            --  OccurrenceSpecification::covered : Lifeline

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Lifelines.UML_Lifeline_Access'
                 (AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Covered));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Interaction then
            --  InteractionFragment::enclosingInteraction : Interaction

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access'
                 (AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Interaction));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Operand then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access'
                 (AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Operand));

         elsif Property = MP_UML_Interaction_Fragment_General_Ordering then
            --  InteractionFragment::generalOrdering : GeneralOrdering

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internal
                 (AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General_Ordering));

         elsif Property = MP_UML_Message_End_Message then
            --  MessageEnd::message : Message

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Messages.UML_Message_Access'
                 (AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Message));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Occurrence_Specification_To_After then
            --  OccurrenceSpecification::toAfter : GeneralOrdering

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internal
                 (AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_To_After));

         elsif Property = MP_UML_Occurrence_Specification_To_Before then
            --  OccurrenceSpecification::toBefore : GeneralOrdering

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internal
                 (AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_To_Before));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Destruction_Occurrence_Specification_Get;

      ----------------
      -- Device_Get --
      ----------------

      function Device_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Classifier_Attribute then
            --  Classifier::attribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute));

         elsif Property = MP_UML_Behaviored_Classifier_Classifier_Behavior then
            --  BehavioredClassifier::classifierBehavior : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier_Behavior));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Classifier_Collaboration_Use then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internal
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use));

         elsif Property = MP_UML_Deployment_Target_Deployed_Element then
            --  DeploymentTarget::deployedElement : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Deployed_Element));

         elsif Property = MP_UML_Deployment_Target_Deployment then
            --  DeploymentTarget::deployment : Deployment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Deployments.Collections.UML_Deployment_Collections.Internal
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Deployment));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_Class_Extension then
            --  Class::extension : Extension

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Extensions.Collections.UML_Extension_Collections.Internal
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Extension));

         elsif Property = MP_UML_Classifier_Feature then
            --  Classifier::feature : Feature

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Features.Collections.UML_Feature_Collections.Internal
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Feature));

         elsif Property = MP_UML_Classifier_General then
            --  Classifier::general : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General));

         elsif Property = MP_UML_Classifier_Generalization then
            --  Classifier::generalization : Generalization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internal
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Classifier_Inherited_Member then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member));

         elsif Property = MP_UML_Behaviored_Classifier_Interface_Realization then
            --  BehavioredClassifier::interfaceRealization : InterfaceRealization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interface_Realizations.Collections.UML_Interface_Realization_Collections.Internal
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Interface_Realization));

         elsif Property = MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Active);

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Class_Nested_Classifier then
            --  Class::nestedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Classifier));

         elsif Property = MP_UML_Node_Nested_Node then
            --  Node::nestedNode : Node

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Nodes.Collections.UML_Node_Collections.Internal
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Node));

         elsif Property = MP_UML_Class_Owned_Attribute then
            --  Class::ownedAttribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute));

         elsif Property = MP_UML_Structured_Classifier_Owned_Attribute then
            --  StructuredClassifier::ownedAttribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute));

         elsif Property = MP_UML_Behaviored_Classifier_Owned_Behavior then
            --  BehavioredClassifier::ownedBehavior : Behavior

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internal
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Behavior));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Structured_Classifier_Owned_Connector then
            --  StructuredClassifier::ownedConnector : Connector

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Connectors.Collections.UML_Connector_Collections.Internal
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Connector));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Class_Owned_Operation then
            --  Class::ownedOperation : Operation

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Operations.Collections.UML_Operation_Collections.Internal
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Operation));

         elsif Property = MP_UML_Encapsulated_Classifier_Owned_Port then
            --  EncapsulatedClassifier::ownedPort : Port

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Ports.Collections.UML_Port_Collections.Internal
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Port));

         elsif Property = MP_UML_Class_Owned_Reception then
            --  Class::ownedReception : Reception

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Receptions.Collections.UML_Reception_Collections.Internal
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Reception));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Classifier_Owned_Use_Case then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Structured_Classifier_Part then
            --  StructuredClassifier::part : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Part));

         elsif Property = MP_UML_Classifier_Powertype_Extent then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internal
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Classifier_Redefined_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier));

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = MP_UML_Structured_Classifier_Role then
            --  StructuredClassifier::role : ConnectableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Connectable_Elements.Collections.UML_Connectable_Element_Collections.Internal
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Role));

         elsif Property = MP_UML_Classifier_Substitution then
            --  Classifier::substitution : Substitution

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internal
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution));

         elsif Property = MP_UML_Class_Super_Class then
            --  Class::superClass : Class

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classes.Collections.UML_Class_Collections.Internal
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Class));

         elsif Property = MP_UML_Templateable_Element_Template_Binding then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internal
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Classifier_Use_Case then
            --  Classifier::useCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Devices.UML_Device_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Devices.UML_Device_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Device_Get;

      ------------------
      -- Duration_Get --
      ------------------

      function Duration_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Durations.UML_Duration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Duration_Expr then
            --  Duration::expr : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Durations.UML_Duration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Expr));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Durations.UML_Duration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Durations.UML_Duration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Durations.UML_Duration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Duration_Observation then
            --  Duration::observation : Observation

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Observations.Collections.UML_Observation_Collections.Internal
                 (AMF.UML.Durations.UML_Duration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Observation));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Durations.UML_Duration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Durations.UML_Duration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Durations.UML_Duration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Durations.UML_Duration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Durations.UML_Duration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Durations.UML_Duration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Durations.UML_Duration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Durations.UML_Duration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Durations.UML_Duration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Duration_Get;

      -----------------------------
      -- Duration_Constraint_Get --
      -----------------------------

      function Duration_Constraint_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Constraint_Constrained_Element then
            --  Constraint::constrainedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Constrained_Element));

         elsif Property = MP_UML_Constraint_Context then
            --  Constraint::context : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Duration_Constraint_First_Event then
            --  DurationConstraint::firstEvent : Boolean

            return
              AMF.Holders.Boolean_Collections.To_Holder
               (AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_First_Event);

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Constraint_Specification then
            --  Constraint::specification : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Specification));

         elsif Property = MP_UML_Duration_Constraint_Specification then
            --  DurationConstraint::specification : DurationInterval

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Duration_Intervals.UML_Duration_Interval_Access'
                 (AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Specification));

         elsif Property = MP_UML_Interval_Constraint_Specification then
            --  IntervalConstraint::specification : Interval

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Intervals.UML_Interval_Access'
                 (AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Specification));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Duration_Constraint_Get;

      ---------------------------
      -- Duration_Interval_Get --
      ---------------------------

      function Duration_Interval_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Duration_Interval_Max then
            --  DurationInterval::max : Duration

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Durations.UML_Duration_Access'
                 (AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Max));

         elsif Property = MP_UML_Interval_Max then
            --  Interval::max : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Max));

         elsif Property = MP_UML_Duration_Interval_Min then
            --  DurationInterval::min : Duration

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Durations.UML_Duration_Access'
                 (AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Min));

         elsif Property = MP_UML_Interval_Min then
            --  Interval::min : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Min));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Duration_Interval_Get;

      ------------------------------
      -- Duration_Observation_Get --
      ------------------------------

      function Duration_Observation_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Duration_Observations.UML_Duration_Observation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Duration_Observation_Event then
            --  DurationObservation::event : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Duration_Observations.UML_Duration_Observation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Event));

         elsif Property = MP_UML_Duration_Observation_First_Event then
            --  DurationObservation::firstEvent : Boolean

            return
              AMF.Holders.Boolean_Collections.To_Holder
               (AMF.UML.Duration_Observations.UML_Duration_Observation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_First_Event);

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Duration_Observations.UML_Duration_Observation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Duration_Observations.UML_Duration_Observation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Duration_Observations.UML_Duration_Observation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Duration_Observations.UML_Duration_Observation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Duration_Observations.UML_Duration_Observation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Duration_Observations.UML_Duration_Observation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Duration_Observations.UML_Duration_Observation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Duration_Observations.UML_Duration_Observation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Duration_Observations.UML_Duration_Observation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Duration_Observations.UML_Duration_Observation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Duration_Observations.UML_Duration_Observation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Duration_Observation_Get;

      ------------------------
      -- Element_Import_Get --
      ------------------------

      function Element_Import_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Element_Import_Alias then
            --  ElementImport::alias : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Element_Imports.UML_Element_Import_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Alias);

         elsif Property = MP_UML_Element_Import_Imported_Element then
            --  ElementImport::importedElement : PackageableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packageable_Elements.UML_Packageable_Element_Access'
                 (AMF.UML.Element_Imports.UML_Element_Import_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Element));

         elsif Property = MP_UML_Element_Import_Importing_Namespace then
            --  ElementImport::importingNamespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Element_Imports.UML_Element_Import_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Importing_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Element_Imports.UML_Element_Import_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Element_Imports.UML_Element_Import_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Element_Imports.UML_Element_Import_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Relationship_Related_Element then
            --  Relationship::relatedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Element_Imports.UML_Element_Import_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element));

         elsif Property = MP_UML_Directed_Relationship_Source then
            --  DirectedRelationship::source : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Element_Imports.UML_Element_Import_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Source));

         elsif Property = MP_UML_Directed_Relationship_Target then
            --  DirectedRelationship::target : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Element_Imports.UML_Element_Import_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Target));

         elsif Property = MP_UML_Element_Import_Visibility then
            --  ElementImport::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Element_Imports.UML_Element_Import_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Element_Import_Get;

      ---------------------
      -- Enumeration_Get --
      ---------------------

      function Enumeration_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Classifier_Attribute then
            --  Classifier::attribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Classifier_Collaboration_Use then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internal
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_Classifier_Feature then
            --  Classifier::feature : Feature

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Features.Collections.UML_Feature_Collections.Internal
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Feature));

         elsif Property = MP_UML_Classifier_General then
            --  Classifier::general : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General));

         elsif Property = MP_UML_Classifier_Generalization then
            --  Classifier::generalization : Generalization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internal
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Classifier_Inherited_Member then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member));

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Data_Type_Owned_Attribute then
            --  DataType::ownedAttribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Enumeration_Owned_Literal then
            --  Enumeration::ownedLiteral : EnumerationLiteral

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Enumeration_Literals.Collections.UML_Enumeration_Literal_Collections.Internal
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Literal));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Data_Type_Owned_Operation then
            --  DataType::ownedOperation : Operation

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Operations.Collections.UML_Operation_Collections.Internal
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Operation));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Classifier_Owned_Use_Case then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Classifier_Powertype_Extent then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internal
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Classifier_Redefined_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier));

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = MP_UML_Classifier_Substitution then
            --  Classifier::substitution : Substitution

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internal
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution));

         elsif Property = MP_UML_Templateable_Element_Template_Binding then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internal
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Classifier_Use_Case then
            --  Classifier::useCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Enumerations.UML_Enumeration_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Enumeration_Get;

      -----------------------------
      -- Enumeration_Literal_Get --
      -----------------------------

      function Enumeration_Literal_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Enumeration_Literal_Classifier then
            --  EnumerationLiteral::classifier : Enumeration

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access'
                 (AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier));

         elsif Property = MP_UML_Instance_Specification_Classifier then
            --  InstanceSpecification::classifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Deployment_Target_Deployed_Element then
            --  DeploymentTarget::deployedElement : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Deployed_Element));

         elsif Property = MP_UML_Deployment_Target_Deployment then
            --  DeploymentTarget::deployment : Deployment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Deployments.Collections.UML_Deployment_Collections.Internal
                 (AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Deployment));

         elsif Property = MP_UML_Enumeration_Literal_Enumeration then
            --  EnumerationLiteral::enumeration : Enumeration

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Enumerations.UML_Enumeration_Access'
                 (AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enumeration));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Instance_Specification_Slot then
            --  InstanceSpecification::slot : Slot

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Slots.Collections.UML_Slot_Collections.Internal
                 (AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Slot));

         elsif Property = MP_UML_Instance_Specification_Specification then
            --  InstanceSpecification::specification : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Specification));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Enumeration_Literal_Get;

      ---------------------------
      -- Exception_Handler_Get --
      ---------------------------

      function Exception_Handler_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Exception_Handler_Exception_Input then
            --  ExceptionHandler::exceptionInput : ObjectNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Object_Nodes.UML_Object_Node_Access'
                 (AMF.UML.Exception_Handlers.UML_Exception_Handler_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Exception_Input));

         elsif Property = MP_UML_Exception_Handler_Exception_Type then
            --  ExceptionHandler::exceptionType : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Exception_Handlers.UML_Exception_Handler_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Exception_Type));

         elsif Property = MP_UML_Exception_Handler_Handler_Body then
            --  ExceptionHandler::handlerBody : ExecutableNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Executable_Nodes.UML_Executable_Node_Access'
                 (AMF.UML.Exception_Handlers.UML_Exception_Handler_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler_Body));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Exception_Handlers.UML_Exception_Handler_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Exception_Handlers.UML_Exception_Handler_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Exception_Handlers.UML_Exception_Handler_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Exception_Handler_Protected_Node then
            --  ExceptionHandler::protectedNode : ExecutableNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Executable_Nodes.UML_Executable_Node_Access'
                 (AMF.UML.Exception_Handlers.UML_Exception_Handler_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Protected_Node));

         else
            raise Program_Error;
         end if;
      end Exception_Handler_Get;

      -------------------------------
      -- Execution_Environment_Get --
      -------------------------------

      function Execution_Environment_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Classifier_Attribute then
            --  Classifier::attribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute));

         elsif Property = MP_UML_Behaviored_Classifier_Classifier_Behavior then
            --  BehavioredClassifier::classifierBehavior : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier_Behavior));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Classifier_Collaboration_Use then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internal
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use));

         elsif Property = MP_UML_Deployment_Target_Deployed_Element then
            --  DeploymentTarget::deployedElement : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Deployed_Element));

         elsif Property = MP_UML_Deployment_Target_Deployment then
            --  DeploymentTarget::deployment : Deployment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Deployments.Collections.UML_Deployment_Collections.Internal
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Deployment));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_Class_Extension then
            --  Class::extension : Extension

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Extensions.Collections.UML_Extension_Collections.Internal
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Extension));

         elsif Property = MP_UML_Classifier_Feature then
            --  Classifier::feature : Feature

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Features.Collections.UML_Feature_Collections.Internal
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Feature));

         elsif Property = MP_UML_Classifier_General then
            --  Classifier::general : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General));

         elsif Property = MP_UML_Classifier_Generalization then
            --  Classifier::generalization : Generalization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internal
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Classifier_Inherited_Member then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member));

         elsif Property = MP_UML_Behaviored_Classifier_Interface_Realization then
            --  BehavioredClassifier::interfaceRealization : InterfaceRealization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interface_Realizations.Collections.UML_Interface_Realization_Collections.Internal
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Interface_Realization));

         elsif Property = MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Active);

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Class_Nested_Classifier then
            --  Class::nestedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Classifier));

         elsif Property = MP_UML_Node_Nested_Node then
            --  Node::nestedNode : Node

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Nodes.Collections.UML_Node_Collections.Internal
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Node));

         elsif Property = MP_UML_Class_Owned_Attribute then
            --  Class::ownedAttribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute));

         elsif Property = MP_UML_Structured_Classifier_Owned_Attribute then
            --  StructuredClassifier::ownedAttribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute));

         elsif Property = MP_UML_Behaviored_Classifier_Owned_Behavior then
            --  BehavioredClassifier::ownedBehavior : Behavior

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internal
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Behavior));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Structured_Classifier_Owned_Connector then
            --  StructuredClassifier::ownedConnector : Connector

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Connectors.Collections.UML_Connector_Collections.Internal
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Connector));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Class_Owned_Operation then
            --  Class::ownedOperation : Operation

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Operations.Collections.UML_Operation_Collections.Internal
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Operation));

         elsif Property = MP_UML_Encapsulated_Classifier_Owned_Port then
            --  EncapsulatedClassifier::ownedPort : Port

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Ports.Collections.UML_Port_Collections.Internal
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Port));

         elsif Property = MP_UML_Class_Owned_Reception then
            --  Class::ownedReception : Reception

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Receptions.Collections.UML_Reception_Collections.Internal
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Reception));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Classifier_Owned_Use_Case then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Structured_Classifier_Part then
            --  StructuredClassifier::part : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Part));

         elsif Property = MP_UML_Classifier_Powertype_Extent then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internal
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Classifier_Redefined_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier));

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = MP_UML_Structured_Classifier_Role then
            --  StructuredClassifier::role : ConnectableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Connectable_Elements.Collections.UML_Connectable_Element_Collections.Internal
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Role));

         elsif Property = MP_UML_Classifier_Substitution then
            --  Classifier::substitution : Substitution

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internal
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution));

         elsif Property = MP_UML_Class_Super_Class then
            --  Class::superClass : Class

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classes.Collections.UML_Class_Collections.Internal
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Class));

         elsif Property = MP_UML_Templateable_Element_Template_Binding then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internal
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Classifier_Use_Case then
            --  Classifier::useCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Execution_Environments.UML_Execution_Environment_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Execution_Environment_Get;

      --------------------------------------------
      -- Execution_Occurrence_Specification_Get --
      --------------------------------------------

      function Execution_Occurrence_Specification_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Interaction_Fragment_Covered then
            --  InteractionFragment::covered : Lifeline

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Lifelines.Collections.UML_Lifeline_Collections.Internal
                 (AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Covered));

         elsif Property = MP_UML_Occurrence_Specification_Covered then
            --  OccurrenceSpecification::covered : Lifeline

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Lifelines.UML_Lifeline_Access'
                 (AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Covered));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Interaction then
            --  InteractionFragment::enclosingInteraction : Interaction

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access'
                 (AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Interaction));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Operand then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access'
                 (AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Operand));

         elsif Property = MP_UML_Execution_Occurrence_Specification_Execution then
            --  ExecutionOccurrenceSpecification::execution : ExecutionSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Execution_Specifications.UML_Execution_Specification_Access'
                 (AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Execution));

         elsif Property = MP_UML_Interaction_Fragment_General_Ordering then
            --  InteractionFragment::generalOrdering : GeneralOrdering

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internal
                 (AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General_Ordering));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Occurrence_Specification_To_After then
            --  OccurrenceSpecification::toAfter : GeneralOrdering

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internal
                 (AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_To_After));

         elsif Property = MP_UML_Occurrence_Specification_To_Before then
            --  OccurrenceSpecification::toBefore : GeneralOrdering

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internal
                 (AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_To_Before));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Execution_Occurrence_Specification_Get;

      ------------------------
      -- Expansion_Node_Get --
      ------------------------

      function Expansion_Node_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Object_Node_In_State then
            --  ObjectNode::inState : State

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.States.Collections.UML_State_Collections.Internal
                 (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_State));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Object_Node_Is_Control_Type then
            --  ObjectNode::isControlType : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Control_Type);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Object_Node_Ordering then
            --  ObjectNode::ordering : ObjectNodeOrderingKind

            return
              AMF.UML.Holders.Object_Node_Ordering_Kinds.To_Holder
               (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Ordering);

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Expansion_Node_Region_As_Input then
            --  ExpansionNode::regionAsInput : ExpansionRegion

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access'
                 (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Region_As_Input));

         elsif Property = MP_UML_Expansion_Node_Region_As_Output then
            --  ExpansionNode::regionAsOutput : ExpansionRegion

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access'
                 (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Region_As_Output));

         elsif Property = MP_UML_Object_Node_Selection then
            --  ObjectNode::selection : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Selection));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = MP_UML_Object_Node_Upper_Bound then
            --  ObjectNode::upperBound : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Upper_Bound));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Expansion_Node_Get;

      --------------------------
      -- Expansion_Region_Get --
      --------------------------

      function Expansion_Region_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Structured_Activity_Node_Activity then
            --  StructuredActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Activity_Group_Contained_Edge then
            --  ActivityGroup::containedEdge : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Contained_Edge));

         elsif Property = MP_UML_Activity_Group_Contained_Node then
            --  ActivityGroup::containedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Contained_Node));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Structured_Activity_Node_Edge then
            --  StructuredActivityNode::edge : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Edge));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Activity_Group_In_Activity then
            --  ActivityGroup::inActivity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Activity));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Expansion_Region_Input_Element then
            --  ExpansionRegion::inputElement : ExpansionNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Expansion_Nodes.Collections.UML_Expansion_Node_Collections.Internal
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input_Element));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Expansion_Region_Mode then
            --  ExpansionRegion::mode : ExpansionKind

            return
              AMF.UML.Holders.Expansion_Kinds.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Mode);

         elsif Property = MP_UML_Structured_Activity_Node_Must_Isolate then
            --  StructuredActivityNode::mustIsolate : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Must_Isolate);

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Structured_Activity_Node_Node then
            --  StructuredActivityNode::node : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Node));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Expansion_Region_Output_Element then
            --  ExpansionRegion::outputElement : ExpansionNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Expansion_Nodes.Collections.UML_Expansion_Node_Collections.Internal
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output_Element));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Structured_Activity_Node_Structured_Node_Input then
            --  StructuredActivityNode::structuredNodeInput : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Structured_Node_Input));

         elsif Property = MP_UML_Structured_Activity_Node_Structured_Node_Output then
            --  StructuredActivityNode::structuredNodeOutput : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Structured_Node_Output));

         elsif Property = MP_UML_Activity_Group_Subgroup then
            --  ActivityGroup::subgroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Subgroup));

         elsif Property = MP_UML_Activity_Group_Super_Group then
            --  ActivityGroup::superGroup : ActivityGroup

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activity_Groups.UML_Activity_Group_Access'
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Group));

         elsif Property = MP_UML_Structured_Activity_Node_Variable then
            --  StructuredActivityNode::variable : Variable

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Variables.Collections.UML_Variable_Collections.Internal
                 (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Variable));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Expansion_Region_Get;

      --------------------
      -- Expression_Get --
      --------------------

      function Expression_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Expressions.UML_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Expressions.UML_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Expressions.UML_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Expressions.UML_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Expression_Operand then
            --  Expression::operand : ValueSpecification

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Value_Specifications.Collections.UML_Value_Specification_Collections.Internal
                 (AMF.UML.Expressions.UML_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Operand));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Expressions.UML_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Expressions.UML_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Expressions.UML_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Expressions.UML_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Expressions.UML_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Expression_Symbol then
            --  Expression::symbol : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Expressions.UML_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Symbol);

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Expressions.UML_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Expressions.UML_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Expressions.UML_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Expressions.UML_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Expression_Get;

      ----------------
      -- Extend_Get --
      ----------------

      function Extend_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Extends.UML_Extend_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Extend_Condition then
            --  Extend::condition : Constraint

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Constraints.UML_Constraint_Access'
                 (AMF.UML.Extends.UML_Extend_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Condition));

         elsif Property = MP_UML_Extend_Extended_Case then
            --  Extend::extendedCase : UseCase

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access'
                 (AMF.UML.Extends.UML_Extend_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Extended_Case));

         elsif Property = MP_UML_Extend_Extension then
            --  Extend::extension : UseCase

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access'
                 (AMF.UML.Extends.UML_Extend_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Extension));

         elsif Property = MP_UML_Extend_Extension_Location then
            --  Extend::extensionLocation : ExtensionPoint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Extension_Points.Collections.UML_Extension_Point_Collections.Internal
                 (AMF.UML.Extends.UML_Extend_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Extension_Location));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Extends.UML_Extend_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Extends.UML_Extend_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Extends.UML_Extend_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Extends.UML_Extend_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Extends.UML_Extend_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Extends.UML_Extend_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Extends.UML_Extend_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Relationship_Related_Element then
            --  Relationship::relatedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Extends.UML_Extend_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element));

         elsif Property = MP_UML_Directed_Relationship_Source then
            --  DirectedRelationship::source : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Extends.UML_Extend_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Source));

         elsif Property = MP_UML_Directed_Relationship_Target then
            --  DirectedRelationship::target : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Extends.UML_Extend_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Target));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Extends.UML_Extend_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Extend_Get;

      -------------------
      -- Extension_Get --
      -------------------

      function Extension_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Classifier_Attribute then
            --  Classifier::attribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Classifier_Collaboration_Use then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internal
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_Association_End_Type then
            --  Association::endType : Type

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Types.Collections.UML_Type_Collections.Internal
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_End_Type));

         elsif Property = MP_UML_Classifier_Feature then
            --  Classifier::feature : Feature

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Features.Collections.UML_Feature_Collections.Internal
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Feature));

         elsif Property = MP_UML_Classifier_General then
            --  Classifier::general : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General));

         elsif Property = MP_UML_Classifier_Generalization then
            --  Classifier::generalization : Generalization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internal
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Classifier_Inherited_Member then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member));

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Association_Is_Derived then
            --  Association::isDerived : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Derived);

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Extension_Is_Required then
            --  Extension::isRequired : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Required);

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Association_Member_End then
            --  Association::memberEnd : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member_End));

         elsif Property = MP_UML_Extension_Metaclass then
            --  Extension::metaclass : Class

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classes.UML_Class_Access'
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Metaclass));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Association_Navigable_Owned_End then
            --  Association::navigableOwnedEnd : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Navigable_Owned_End));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Association_Owned_End then
            --  Association::ownedEnd : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_End));

         elsif Property = MP_UML_Extension_Owned_End then
            --  Extension::ownedEnd : ExtensionEnd

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access'
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_End));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Classifier_Owned_Use_Case then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Classifier_Powertype_Extent then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internal
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Classifier_Redefined_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier));

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Relationship_Related_Element then
            --  Relationship::relatedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = MP_UML_Classifier_Substitution then
            --  Classifier::substitution : Substitution

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internal
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution));

         elsif Property = MP_UML_Templateable_Element_Template_Binding then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internal
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Classifier_Use_Case then
            --  Classifier::useCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Extensions.UML_Extension_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Extensions.UML_Extension_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Extension_Get;

      -----------------------
      -- Extension_End_Get --
      -----------------------

      function Extension_End_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Property_Aggregation then
            --  Property::aggregation : AggregationKind

            return
              AMF.UML.Holders.Aggregation_Kinds.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Aggregation);

         elsif Property = MP_UML_Property_Association then
            --  Property::association : Association

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Associations.UML_Association_Access'
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Association));

         elsif Property = MP_UML_Property_Association_End then
            --  Property::associationEnd : Property

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access'
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Association_End));

         elsif Property = MP_UML_Property_Class then
            --  Property::class : Class

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classes.UML_Class_Access'
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Class));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Property_Datatype then
            --  Property::datatype : DataType

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access'
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Datatype));

         elsif Property = MP_UML_Property_Default then
            --  Property::default : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Default);

         elsif Property = MP_UML_Property_Default_Value then
            --  Property::defaultValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Default_Value));

         elsif Property = MP_UML_Deployment_Target_Deployed_Element then
            --  DeploymentTarget::deployedElement : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Deployed_Element));

         elsif Property = MP_UML_Deployment_Target_Deployment then
            --  DeploymentTarget::deployment : Deployment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Deployments.Collections.UML_Deployment_Collections.Internal
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Deployment));

         elsif Property = MP_UML_Connectable_Element_End then
            --  ConnectableElement::end : ConnectorEnd

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Connector_Ends.Collections.UML_Connector_End_Collections.Internal
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_End));

         elsif Property = MP_UML_Feature_Featuring_Classifier then
            --  Feature::featuringClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Featuring_Classifier));

         elsif Property = MP_UML_Property_Interface then
            --  Property::interface : Interface

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access'
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Interface));

         elsif Property = MP_UML_Property_Is_Composite then
            --  Property::isComposite : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Composite);

         elsif Property = MP_UML_Property_Is_Derived then
            --  Property::isDerived : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Derived);

         elsif Property = MP_UML_Property_Is_Derived_Union then
            --  Property::isDerivedUnion : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Derived_Union);

         elsif Property = MP_UML_Property_Is_ID then
            --  Property::isID : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_ID);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Multiplicity_Element_Is_Ordered then
            --  MultiplicityElement::isOrdered : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Ordered);

         elsif Property = MP_UML_Property_Is_Read_Only then
            --  Property::isReadOnly : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Read_Only);

         elsif Property = MP_UML_Structural_Feature_Is_Read_Only then
            --  StructuralFeature::isReadOnly : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Read_Only);

         elsif Property = MP_UML_Feature_Is_Static then
            --  Feature::isStatic : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Static);

         elsif Property = MP_UML_Multiplicity_Element_Is_Unique then
            --  MultiplicityElement::isUnique : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Unique);

         elsif Property = MP_UML_Extension_End_Lower then
            --  ExtensionEnd::lower : Integer

            return
              AMF.Holders.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Lower);

         elsif Property = MP_UML_Multiplicity_Element_Lower then
            --  MultiplicityElement::lower : Integer

            return
              AMF.Holders.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Lower);

         elsif Property = MP_UML_Multiplicity_Element_Lower_Value then
            --  MultiplicityElement::lowerValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Lower_Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Property_Opposite then
            --  Property::opposite : Property

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access'
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Opposite));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Property_Owning_Association then
            --  Property::owningAssociation : Association

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Associations.UML_Association_Access'
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Association));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Property_Qualifier then
            --  Property::qualifier : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Qualifier));

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Property_Redefined_Property then
            --  Property::redefinedProperty : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Property));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Property_Subsetted_Property then
            --  Property::subsettedProperty : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Subsetted_Property));

         elsif Property = MP_UML_Connectable_Element_Template_Parameter then
            --  ConnectableElement::templateParameter : ConnectableElementTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access'
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Extension_End_Type then
            --  ExtensionEnd::type : Stereotype

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access'
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = MP_UML_Multiplicity_Element_Upper then
            --  MultiplicityElement::upper : UnlimitedNatural

            return
              AMF.Holders.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Upper);

         elsif Property = MP_UML_Multiplicity_Element_Upper_Value then
            --  MultiplicityElement::upperValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Extension_Ends.UML_Extension_End_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Upper_Value));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Extension_Ends.UML_Extension_End_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Extension_End_Get;

      -------------------------
      -- Extension_Point_Get --
      -------------------------

      function Extension_Point_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Extension_Points.UML_Extension_Point_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Extension_Points.UML_Extension_Point_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Extension_Points.UML_Extension_Point_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Extension_Points.UML_Extension_Point_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Extension_Points.UML_Extension_Point_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Extension_Points.UML_Extension_Point_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Extension_Points.UML_Extension_Point_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Extension_Points.UML_Extension_Point_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Extension_Points.UML_Extension_Point_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Extension_Points.UML_Extension_Point_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Extension_Points.UML_Extension_Point_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Extension_Point_Use_Case then
            --  ExtensionPoint::useCase : UseCase

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access'
                 (AMF.UML.Extension_Points.UML_Extension_Point_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Extension_Points.UML_Extension_Point_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Extension_Point_Get;

      ---------------------
      -- Final_State_Get --
      ---------------------

      function Final_State_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Final_States.UML_Final_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_State_Connection then
            --  State::connection : ConnectionPointReference

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Connection_Point_References.Collections.UML_Connection_Point_Reference_Collections.Internal
                 (AMF.UML.Final_States.UML_Final_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Connection));

         elsif Property = MP_UML_State_Connection_Point then
            --  State::connectionPoint : Pseudostate

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Pseudostates.Collections.UML_Pseudostate_Collections.Internal
                 (AMF.UML.Final_States.UML_Final_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Connection_Point));

         elsif Property = MP_UML_Vertex_Container then
            --  Vertex::container : Region

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Regions.UML_Region_Access'
                 (AMF.UML.Final_States.UML_Final_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Container));

         elsif Property = MP_UML_State_Deferrable_Trigger then
            --  State::deferrableTrigger : Trigger

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Triggers.Collections.UML_Trigger_Collections.Internal
                 (AMF.UML.Final_States.UML_Final_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Deferrable_Trigger));

         elsif Property = MP_UML_State_Do_Activity then
            --  State::doActivity : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Final_States.UML_Final_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Do_Activity));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Final_States.UML_Final_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_State_Entry then
            --  State::entry : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Final_States.UML_Final_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Entry));

         elsif Property = MP_UML_State_Exit then
            --  State::exit : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Final_States.UML_Final_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Exit));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Final_States.UML_Final_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Vertex_Incoming then
            --  Vertex::incoming : Transition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Transitions.Collections.UML_Transition_Collections.Internal
                 (AMF.UML.Final_States.UML_Final_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_State_Is_Composite then
            --  State::isComposite : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Final_States.UML_Final_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Composite);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Final_States.UML_Final_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_State_Is_Orthogonal then
            --  State::isOrthogonal : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Final_States.UML_Final_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Orthogonal);

         elsif Property = MP_UML_State_Is_Simple then
            --  State::isSimple : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Final_States.UML_Final_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Simple);

         elsif Property = MP_UML_State_Is_Submachine_State then
            --  State::isSubmachineState : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Final_States.UML_Final_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Submachine_State);

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Final_States.UML_Final_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Final_States.UML_Final_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Final_States.UML_Final_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Final_States.UML_Final_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Vertex_Outgoing then
            --  Vertex::outgoing : Transition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Transitions.Collections.UML_Transition_Collections.Internal
                 (AMF.UML.Final_States.UML_Final_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Final_States.UML_Final_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Final_States.UML_Final_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Final_States.UML_Final_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Final_States.UML_Final_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Final_States.UML_Final_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Final_States.UML_Final_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Final_States.UML_Final_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Final_States.UML_Final_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_State_Redefined_State then
            --  State::redefinedState : State

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.States.UML_State_Access'
                 (AMF.UML.Final_States.UML_Final_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_State));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Final_States.UML_Final_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_State_Redefinition_Context then
            --  State::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Final_States.UML_Final_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_State_Region then
            --  State::region : Region

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Regions.Collections.UML_Region_Collections.Internal
                 (AMF.UML.Final_States.UML_Final_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Region));

         elsif Property = MP_UML_State_State_Invariant then
            --  State::stateInvariant : Constraint

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Constraints.UML_Constraint_Access'
                 (AMF.UML.Final_States.UML_Final_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_State_Invariant));

         elsif Property = MP_UML_State_Submachine then
            --  State::submachine : StateMachine

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access'
                 (AMF.UML.Final_States.UML_Final_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Submachine));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Final_States.UML_Final_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Final_State_Get;

      -------------------------
      -- Flow_Final_Node_Get --
      -------------------------

      function Flow_Final_Node_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Flow_Final_Node_Get;

      -------------------
      -- Fork_Node_Get --
      -------------------

      function Fork_Node_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Fork_Nodes.UML_Fork_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Fork_Nodes.UML_Fork_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Fork_Nodes.UML_Fork_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Fork_Nodes.UML_Fork_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Fork_Nodes.UML_Fork_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Fork_Nodes.UML_Fork_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Fork_Nodes.UML_Fork_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Fork_Nodes.UML_Fork_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Fork_Nodes.UML_Fork_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Fork_Nodes.UML_Fork_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Fork_Nodes.UML_Fork_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Fork_Nodes.UML_Fork_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Fork_Nodes.UML_Fork_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Fork_Nodes.UML_Fork_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Fork_Nodes.UML_Fork_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Fork_Nodes.UML_Fork_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Fork_Nodes.UML_Fork_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Fork_Nodes.UML_Fork_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Fork_Nodes.UML_Fork_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Fork_Nodes.UML_Fork_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Fork_Node_Get;

      ---------------------------
      -- Function_Behavior_Get --
      ---------------------------

      function Function_Behavior_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Classifier_Attribute then
            --  Classifier::attribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute));

         elsif Property = MP_UML_Opaque_Behavior_Body then
            --  OpaqueBehavior::body : String

            return
              AMF.Holders.String_Collections.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Body);

         elsif Property = MP_UML_Behaviored_Classifier_Classifier_Behavior then
            --  BehavioredClassifier::classifierBehavior : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier_Behavior));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Classifier_Collaboration_Use then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use));

         elsif Property = MP_UML_Behavior_Context then
            --  Behavior::context : BehavioredClassifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviored_Classifiers.UML_Behaviored_Classifier_Access'
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_Class_Extension then
            --  Class::extension : Extension

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Extensions.Collections.UML_Extension_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Extension));

         elsif Property = MP_UML_Classifier_Feature then
            --  Classifier::feature : Feature

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Features.Collections.UML_Feature_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Feature));

         elsif Property = MP_UML_Classifier_General then
            --  Classifier::general : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General));

         elsif Property = MP_UML_Classifier_Generalization then
            --  Classifier::generalization : Generalization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Classifier_Inherited_Member then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member));

         elsif Property = MP_UML_Behaviored_Classifier_Interface_Realization then
            --  BehavioredClassifier::interfaceRealization : InterfaceRealization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interface_Realizations.Collections.UML_Interface_Realization_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Interface_Realization));

         elsif Property = MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Active);

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Behavior_Is_Reentrant then
            --  Behavior::isReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Reentrant);

         elsif Property = MP_UML_Opaque_Behavior_Language then
            --  OpaqueBehavior::language : String

            return
              AMF.Holders.String_Collections.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Language);

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Class_Nested_Classifier then
            --  Class::nestedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Classifier));

         elsif Property = MP_UML_Class_Owned_Attribute then
            --  Class::ownedAttribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute));

         elsif Property = MP_UML_Structured_Classifier_Owned_Attribute then
            --  StructuredClassifier::ownedAttribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute));

         elsif Property = MP_UML_Behaviored_Classifier_Owned_Behavior then
            --  BehavioredClassifier::ownedBehavior : Behavior

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Behavior));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Structured_Classifier_Owned_Connector then
            --  StructuredClassifier::ownedConnector : Connector

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Connectors.Collections.UML_Connector_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Connector));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Class_Owned_Operation then
            --  Class::ownedOperation : Operation

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Operations.Collections.UML_Operation_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Operation));

         elsif Property = MP_UML_Behavior_Owned_Parameter then
            --  Behavior::ownedParameter : Parameter

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Parameters.Collections.UML_Parameter_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parameter));

         elsif Property = MP_UML_Behavior_Owned_Parameter_Set then
            --  Behavior::ownedParameterSet : ParameterSet

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Parameter_Sets.Collections.UML_Parameter_Set_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parameter_Set));

         elsif Property = MP_UML_Encapsulated_Classifier_Owned_Port then
            --  EncapsulatedClassifier::ownedPort : Port

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Ports.Collections.UML_Port_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Port));

         elsif Property = MP_UML_Class_Owned_Reception then
            --  Class::ownedReception : Reception

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Receptions.Collections.UML_Reception_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Reception));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Classifier_Owned_Use_Case then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Structured_Classifier_Part then
            --  StructuredClassifier::part : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Part));

         elsif Property = MP_UML_Behavior_Postcondition then
            --  Behavior::postcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Postcondition));

         elsif Property = MP_UML_Classifier_Powertype_Extent then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent));

         elsif Property = MP_UML_Behavior_Precondition then
            --  Behavior::precondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Precondition));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Behavior_Redefined_Behavior then
            --  Behavior::redefinedBehavior : Behavior

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Behavior));

         elsif Property = MP_UML_Classifier_Redefined_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier));

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = MP_UML_Structured_Classifier_Role then
            --  StructuredClassifier::role : ConnectableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Connectable_Elements.Collections.UML_Connectable_Element_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Role));

         elsif Property = MP_UML_Behavior_Specification then
            --  Behavior::specification : BehavioralFeature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behavioral_Features.UML_Behavioral_Feature_Access'
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Specification));

         elsif Property = MP_UML_Classifier_Substitution then
            --  Classifier::substitution : Substitution

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution));

         elsif Property = MP_UML_Class_Super_Class then
            --  Class::superClass : Class

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classes.Collections.UML_Class_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Class));

         elsif Property = MP_UML_Templateable_Element_Template_Binding then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Classifier_Use_Case then
            --  Classifier::useCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Function_Behavior_Get;

      --------------
      -- Gate_Get --
      --------------

      function Gate_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Gates.UML_Gate_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Message_End_Message then
            --  MessageEnd::message : Message

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Messages.UML_Message_Access'
                 (AMF.UML.Gates.UML_Gate_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Message));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Gates.UML_Gate_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Gates.UML_Gate_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Gates.UML_Gate_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Gates.UML_Gate_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Gates.UML_Gate_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Gates.UML_Gate_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Gates.UML_Gate_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Gates.UML_Gate_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Gate_Get;

      --------------------------
      -- General_Ordering_Get --
      --------------------------

      function General_Ordering_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_General_Ordering_After then
            --  GeneralOrdering::after : OccurrenceSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access'
                 (AMF.UML.General_Orderings.UML_General_Ordering_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_After));

         elsif Property = MP_UML_General_Ordering_Before then
            --  GeneralOrdering::before : OccurrenceSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access'
                 (AMF.UML.General_Orderings.UML_General_Ordering_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Before));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.General_Orderings.UML_General_Ordering_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.General_Orderings.UML_General_Ordering_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.General_Orderings.UML_General_Ordering_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.General_Orderings.UML_General_Ordering_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.General_Orderings.UML_General_Ordering_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.General_Orderings.UML_General_Ordering_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.General_Orderings.UML_General_Ordering_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.General_Orderings.UML_General_Ordering_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.General_Orderings.UML_General_Ordering_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end General_Ordering_Get;

      ------------------------
      -- Generalization_Get --
      ------------------------

      function Generalization_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Generalization_General then
            --  Generalization::general : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Generalizations.UML_Generalization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General));

         elsif Property = MP_UML_Generalization_Generalization_Set then
            --  Generalization::generalizationSet : GeneralizationSet

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internal
                 (AMF.UML.Generalizations.UML_Generalization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization_Set));

         elsif Property = MP_UML_Generalization_Is_Substitutable then
            --  Generalization::isSubstitutable : Boolean

            return
              AMF.Holders.To_Holder
               (AMF.UML.Generalizations.UML_Generalization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Substitutable);

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Generalizations.UML_Generalization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Generalizations.UML_Generalization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Generalizations.UML_Generalization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Relationship_Related_Element then
            --  Relationship::relatedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Generalizations.UML_Generalization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element));

         elsif Property = MP_UML_Directed_Relationship_Source then
            --  DirectedRelationship::source : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Generalizations.UML_Generalization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Source));

         elsif Property = MP_UML_Generalization_Specific then
            --  Generalization::specific : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Generalizations.UML_Generalization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Specific));

         elsif Property = MP_UML_Directed_Relationship_Target then
            --  DirectedRelationship::target : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Generalizations.UML_Generalization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Target));

         else
            raise Program_Error;
         end if;
      end Generalization_Get;

      ----------------------------
      -- Generalization_Set_Get --
      ----------------------------

      function Generalization_Set_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Generalization_Set_Generalization then
            --  GeneralizationSet::generalization : Generalization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internal
                 (AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization));

         elsif Property = MP_UML_Generalization_Set_Is_Covering then
            --  GeneralizationSet::isCovering : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Covering);

         elsif Property = MP_UML_Generalization_Set_Is_Disjoint then
            --  GeneralizationSet::isDisjoint : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Disjoint);

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Generalization_Set_Powertype then
            --  GeneralizationSet::powertype : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Generalization_Set_Get;

      ---------------
      -- Image_Get --
      ---------------

      function Image_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Image_Content then
            --  Image::content : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Images.UML_Image_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Content);

         elsif Property = MP_UML_Image_Format then
            --  Image::format : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Images.UML_Image_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Format);

         elsif Property = MP_UML_Image_Location then
            --  Image::location : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Images.UML_Image_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Location);

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Images.UML_Image_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Images.UML_Image_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Images.UML_Image_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         else
            raise Program_Error;
         end if;
      end Image_Get;

      -----------------
      -- Include_Get --
      -----------------

      function Include_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Include_Addition then
            --  Include::addition : UseCase

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access'
                 (AMF.UML.Includes.UML_Include_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Addition));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Includes.UML_Include_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Include_Including_Case then
            --  Include::includingCase : UseCase

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access'
                 (AMF.UML.Includes.UML_Include_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Including_Case));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Includes.UML_Include_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Includes.UML_Include_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Includes.UML_Include_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Includes.UML_Include_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Includes.UML_Include_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Includes.UML_Include_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Includes.UML_Include_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Relationship_Related_Element then
            --  Relationship::relatedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Includes.UML_Include_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element));

         elsif Property = MP_UML_Directed_Relationship_Source then
            --  DirectedRelationship::source : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Includes.UML_Include_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Source));

         elsif Property = MP_UML_Directed_Relationship_Target then
            --  DirectedRelationship::target : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Includes.UML_Include_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Target));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Includes.UML_Include_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Include_Get;

      --------------------------
      -- Information_Flow_Get --
      --------------------------

      function Information_Flow_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Information_Flows.UML_Information_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Information_Flow_Conveyed then
            --  InformationFlow::conveyed : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Information_Flows.UML_Information_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Conveyed));

         elsif Property = MP_UML_Information_Flow_Information_Source then
            --  InformationFlow::informationSource : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Information_Flows.UML_Information_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Information_Source));

         elsif Property = MP_UML_Information_Flow_Information_Target then
            --  InformationFlow::informationTarget : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Information_Flows.UML_Information_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Information_Target));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Information_Flows.UML_Information_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Information_Flows.UML_Information_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Information_Flows.UML_Information_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Information_Flows.UML_Information_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Information_Flows.UML_Information_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Information_Flows.UML_Information_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Information_Flows.UML_Information_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Information_Flows.UML_Information_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Information_Flow_Realization then
            --  InformationFlow::realization : Relationship

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Relationships.Collections.UML_Relationship_Collections.Internal
                 (AMF.UML.Information_Flows.UML_Information_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Realization));

         elsif Property = MP_UML_Information_Flow_Realizing_Activity_Edge then
            --  InformationFlow::realizingActivityEdge : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Information_Flows.UML_Information_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Realizing_Activity_Edge));

         elsif Property = MP_UML_Information_Flow_Realizing_Connector then
            --  InformationFlow::realizingConnector : Connector

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Connectors.Collections.UML_Connector_Collections.Internal
                 (AMF.UML.Information_Flows.UML_Information_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Realizing_Connector));

         elsif Property = MP_UML_Information_Flow_Realizing_Message then
            --  InformationFlow::realizingMessage : Message

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Messages.Collections.UML_Message_Collections.Internal
                 (AMF.UML.Information_Flows.UML_Information_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Realizing_Message));

         elsif Property = MP_UML_Relationship_Related_Element then
            --  Relationship::relatedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Information_Flows.UML_Information_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element));

         elsif Property = MP_UML_Directed_Relationship_Source then
            --  DirectedRelationship::source : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Information_Flows.UML_Information_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Source));

         elsif Property = MP_UML_Directed_Relationship_Target then
            --  DirectedRelationship::target : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Information_Flows.UML_Information_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Target));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Information_Flows.UML_Information_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Information_Flows.UML_Information_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Information_Flows.UML_Information_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Information_Flow_Get;

      --------------------------
      -- Information_Item_Get --
      --------------------------

      function Information_Item_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Classifier_Attribute then
            --  Classifier::attribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Classifier_Collaboration_Use then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internal
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_Classifier_Feature then
            --  Classifier::feature : Feature

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Features.Collections.UML_Feature_Collections.Internal
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Feature));

         elsif Property = MP_UML_Classifier_General then
            --  Classifier::general : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General));

         elsif Property = MP_UML_Classifier_Generalization then
            --  Classifier::generalization : Generalization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internal
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Classifier_Inherited_Member then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member));

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Information_Items.UML_Information_Item_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Information_Items.UML_Information_Item_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Information_Items.UML_Information_Item_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Information_Items.UML_Information_Item_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Classifier_Owned_Use_Case then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Classifier_Powertype_Extent then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internal
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Information_Items.UML_Information_Item_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Classifier_Redefined_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier));

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = MP_UML_Information_Item_Represented then
            --  InformationItem::represented : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Represented));

         elsif Property = MP_UML_Classifier_Substitution then
            --  Classifier::substitution : Substitution

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internal
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution));

         elsif Property = MP_UML_Templateable_Element_Template_Binding then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internal
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Classifier_Use_Case then
            --  Classifier::useCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Information_Items.UML_Information_Item_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Information_Items.UML_Information_Item_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Information_Items.UML_Information_Item_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Information_Item_Get;

      ----------------------
      -- Initial_Node_Get --
      ----------------------

      function Initial_Node_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Initial_Nodes.UML_Initial_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Initial_Nodes.UML_Initial_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Initial_Nodes.UML_Initial_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Initial_Nodes.UML_Initial_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Initial_Nodes.UML_Initial_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Initial_Nodes.UML_Initial_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Initial_Nodes.UML_Initial_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Initial_Nodes.UML_Initial_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Initial_Nodes.UML_Initial_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Initial_Nodes.UML_Initial_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Initial_Nodes.UML_Initial_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Initial_Nodes.UML_Initial_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Initial_Nodes.UML_Initial_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Initial_Nodes.UML_Initial_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Initial_Nodes.UML_Initial_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Initial_Nodes.UML_Initial_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Initial_Nodes.UML_Initial_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Initial_Nodes.UML_Initial_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Initial_Nodes.UML_Initial_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Initial_Nodes.UML_Initial_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Initial_Node_Get;

      -------------------
      -- Input_Pin_Get --
      -------------------

      function Input_Pin_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Input_Pins.UML_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Input_Pins.UML_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Input_Pins.UML_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Input_Pins.UML_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Input_Pins.UML_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Object_Node_In_State then
            --  ObjectNode::inState : State

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.States.Collections.UML_State_Collections.Internal
                 (AMF.UML.Input_Pins.UML_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_State));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Input_Pins.UML_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Input_Pins.UML_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Pin_Is_Control then
            --  Pin::isControl : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Control);

         elsif Property = MP_UML_Object_Node_Is_Control_Type then
            --  ObjectNode::isControlType : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Control_Type);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Multiplicity_Element_Is_Ordered then
            --  MultiplicityElement::isOrdered : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Ordered);

         elsif Property = MP_UML_Multiplicity_Element_Is_Unique then
            --  MultiplicityElement::isUnique : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Unique);

         elsif Property = MP_UML_Multiplicity_Element_Lower then
            --  MultiplicityElement::lower : Integer

            return
              AMF.Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Lower);

         elsif Property = MP_UML_Multiplicity_Element_Lower_Value then
            --  MultiplicityElement::lowerValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Input_Pins.UML_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Lower_Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Input_Pins.UML_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Input_Pins.UML_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Object_Node_Ordering then
            --  ObjectNode::ordering : ObjectNodeOrderingKind

            return
              AMF.UML.Holders.Object_Node_Ordering_Kinds.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Ordering);

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Input_Pins.UML_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Input_Pins.UML_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Input_Pins.UML_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Input_Pins.UML_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Input_Pins.UML_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Input_Pins.UML_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Input_Pins.UML_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Object_Node_Selection then
            --  ObjectNode::selection : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Input_Pins.UML_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Selection));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Input_Pins.UML_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = MP_UML_Multiplicity_Element_Upper then
            --  MultiplicityElement::upper : UnlimitedNatural

            return
              AMF.Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Upper);

         elsif Property = MP_UML_Object_Node_Upper_Bound then
            --  ObjectNode::upperBound : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Input_Pins.UML_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Upper_Bound));

         elsif Property = MP_UML_Multiplicity_Element_Upper_Value then
            --  MultiplicityElement::upperValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Input_Pins.UML_Input_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Upper_Value));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Input_Pin_Get;

      --------------------------------
      -- Instance_Specification_Get --
      --------------------------------

      function Instance_Specification_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Instance_Specification_Classifier then
            --  InstanceSpecification::classifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Deployment_Target_Deployed_Element then
            --  DeploymentTarget::deployedElement : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Deployed_Element));

         elsif Property = MP_UML_Deployment_Target_Deployment then
            --  DeploymentTarget::deployment : Deployment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Deployments.Collections.UML_Deployment_Collections.Internal
                 (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Deployment));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Instance_Specification_Slot then
            --  InstanceSpecification::slot : Slot

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Slots.Collections.UML_Slot_Collections.Internal
                 (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Slot));

         elsif Property = MP_UML_Instance_Specification_Specification then
            --  InstanceSpecification::specification : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Specification));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Instance_Specification_Get;

      ------------------------
      -- Instance_Value_Get --
      ------------------------

      function Instance_Value_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Instance_Values.UML_Instance_Value_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Instance_Value_Instance then
            --  InstanceValue::instance : InstanceSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access'
                 (AMF.UML.Instance_Values.UML_Instance_Value_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Instance));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Instance_Values.UML_Instance_Value_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Instance_Values.UML_Instance_Value_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Instance_Values.UML_Instance_Value_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Instance_Values.UML_Instance_Value_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Instance_Values.UML_Instance_Value_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Instance_Values.UML_Instance_Value_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Instance_Values.UML_Instance_Value_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Instance_Values.UML_Instance_Value_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Instance_Values.UML_Instance_Value_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Instance_Values.UML_Instance_Value_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Instance_Values.UML_Instance_Value_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Instance_Values.UML_Instance_Value_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Instance_Value_Get;

      ---------------------
      -- Interaction_Get --
      ---------------------

      function Interaction_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Interaction_Action then
            --  Interaction::action : Action

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Actions.Collections.UML_Action_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Action));

         elsif Property = MP_UML_Classifier_Attribute then
            --  Classifier::attribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute));

         elsif Property = MP_UML_Behaviored_Classifier_Classifier_Behavior then
            --  BehavioredClassifier::classifierBehavior : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier_Behavior));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Classifier_Collaboration_Use then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use));

         elsif Property = MP_UML_Behavior_Context then
            --  Behavior::context : BehavioredClassifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviored_Classifiers.UML_Behaviored_Classifier_Access'
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Interaction_Fragment_Covered then
            --  InteractionFragment::covered : Lifeline

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Lifelines.Collections.UML_Lifeline_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Covered));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Interaction then
            --  InteractionFragment::enclosingInteraction : Interaction

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access'
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Interaction));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Operand then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access'
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Operand));

         elsif Property = MP_UML_Class_Extension then
            --  Class::extension : Extension

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Extensions.Collections.UML_Extension_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Extension));

         elsif Property = MP_UML_Classifier_Feature then
            --  Classifier::feature : Feature

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Features.Collections.UML_Feature_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Feature));

         elsif Property = MP_UML_Interaction_Formal_Gate then
            --  Interaction::formalGate : Gate

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Gates.Collections.UML_Gate_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Formal_Gate));

         elsif Property = MP_UML_Interaction_Fragment then
            --  Interaction::fragment : InteractionFragment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interaction_Fragments.Collections.UML_Interaction_Fragment_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Fragment));

         elsif Property = MP_UML_Classifier_General then
            --  Classifier::general : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General));

         elsif Property = MP_UML_Interaction_Fragment_General_Ordering then
            --  InteractionFragment::generalOrdering : GeneralOrdering

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General_Ordering));

         elsif Property = MP_UML_Classifier_Generalization then
            --  Classifier::generalization : Generalization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Classifier_Inherited_Member then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member));

         elsif Property = MP_UML_Behaviored_Classifier_Interface_Realization then
            --  BehavioredClassifier::interfaceRealization : InterfaceRealization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interface_Realizations.Collections.UML_Interface_Realization_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Interface_Realization));

         elsif Property = MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Active);

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Behavior_Is_Reentrant then
            --  Behavior::isReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Reentrant);

         elsif Property = MP_UML_Interaction_Lifeline then
            --  Interaction::lifeline : Lifeline

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Lifelines.Collections.UML_Lifeline_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Lifeline));

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Interaction_Message then
            --  Interaction::message : Message

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Messages.Collections.UML_Message_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Message));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Class_Nested_Classifier then
            --  Class::nestedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Classifier));

         elsif Property = MP_UML_Class_Owned_Attribute then
            --  Class::ownedAttribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute));

         elsif Property = MP_UML_Structured_Classifier_Owned_Attribute then
            --  StructuredClassifier::ownedAttribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute));

         elsif Property = MP_UML_Behaviored_Classifier_Owned_Behavior then
            --  BehavioredClassifier::ownedBehavior : Behavior

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Behavior));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Structured_Classifier_Owned_Connector then
            --  StructuredClassifier::ownedConnector : Connector

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Connectors.Collections.UML_Connector_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Connector));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Class_Owned_Operation then
            --  Class::ownedOperation : Operation

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Operations.Collections.UML_Operation_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Operation));

         elsif Property = MP_UML_Behavior_Owned_Parameter then
            --  Behavior::ownedParameter : Parameter

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Parameters.Collections.UML_Parameter_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parameter));

         elsif Property = MP_UML_Behavior_Owned_Parameter_Set then
            --  Behavior::ownedParameterSet : ParameterSet

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Parameter_Sets.Collections.UML_Parameter_Set_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parameter_Set));

         elsif Property = MP_UML_Encapsulated_Classifier_Owned_Port then
            --  EncapsulatedClassifier::ownedPort : Port

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Ports.Collections.UML_Port_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Port));

         elsif Property = MP_UML_Class_Owned_Reception then
            --  Class::ownedReception : Reception

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Receptions.Collections.UML_Reception_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Reception));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Classifier_Owned_Use_Case then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Structured_Classifier_Part then
            --  StructuredClassifier::part : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Part));

         elsif Property = MP_UML_Behavior_Postcondition then
            --  Behavior::postcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Postcondition));

         elsif Property = MP_UML_Classifier_Powertype_Extent then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent));

         elsif Property = MP_UML_Behavior_Precondition then
            --  Behavior::precondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Precondition));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Behavior_Redefined_Behavior then
            --  Behavior::redefinedBehavior : Behavior

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Behavior));

         elsif Property = MP_UML_Classifier_Redefined_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier));

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = MP_UML_Structured_Classifier_Role then
            --  StructuredClassifier::role : ConnectableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Connectable_Elements.Collections.UML_Connectable_Element_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Role));

         elsif Property = MP_UML_Behavior_Specification then
            --  Behavior::specification : BehavioralFeature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behavioral_Features.UML_Behavioral_Feature_Access'
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Specification));

         elsif Property = MP_UML_Classifier_Substitution then
            --  Classifier::substitution : Substitution

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution));

         elsif Property = MP_UML_Class_Super_Class then
            --  Class::superClass : Class

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classes.Collections.UML_Class_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Class));

         elsif Property = MP_UML_Templateable_Element_Template_Binding then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Classifier_Use_Case then
            --  Classifier::useCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Interactions.UML_Interaction_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Interaction_Get;

      --------------------------------
      -- Interaction_Constraint_Get --
      --------------------------------

      function Interaction_Constraint_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Constraint_Constrained_Element then
            --  Constraint::constrainedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Constrained_Element));

         elsif Property = MP_UML_Constraint_Context then
            --  Constraint::context : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Interaction_Constraint_Maxint then
            --  InteractionConstraint::maxint : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Maxint));

         elsif Property = MP_UML_Interaction_Constraint_Minint then
            --  InteractionConstraint::minint : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Minint));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Constraint_Specification then
            --  Constraint::specification : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Specification));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Interaction_Constraint_Get;

      -----------------------------
      -- Interaction_Operand_Get --
      -----------------------------

      function Interaction_Operand_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Interaction_Fragment_Covered then
            --  InteractionFragment::covered : Lifeline

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Lifelines.Collections.UML_Lifeline_Collections.Internal
                 (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Covered));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Interaction then
            --  InteractionFragment::enclosingInteraction : Interaction

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access'
                 (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Interaction));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Operand then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access'
                 (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Operand));

         elsif Property = MP_UML_Interaction_Operand_Fragment then
            --  InteractionOperand::fragment : InteractionFragment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interaction_Fragments.Collections.UML_Interaction_Fragment_Collections.Internal
                 (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Fragment));

         elsif Property = MP_UML_Interaction_Fragment_General_Ordering then
            --  InteractionFragment::generalOrdering : GeneralOrdering

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internal
                 (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General_Ordering));

         elsif Property = MP_UML_Interaction_Operand_Guard then
            --  InteractionOperand::guard : InteractionConstraint

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access'
                 (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Guard));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Interaction_Operand_Get;

      -------------------------
      -- Interaction_Use_Get --
      -------------------------

      function Interaction_Use_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Interaction_Use_Actual_Gate then
            --  InteractionUse::actualGate : Gate

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Gates.Collections.UML_Gate_Collections.Internal
                 (AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Actual_Gate));

         elsif Property = MP_UML_Interaction_Use_Argument then
            --  InteractionUse::argument : ValueSpecification

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Value_Specifications.Collections.UML_Value_Specification_Collections.Internal
                 (AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Argument));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Interaction_Fragment_Covered then
            --  InteractionFragment::covered : Lifeline

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Lifelines.Collections.UML_Lifeline_Collections.Internal
                 (AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Covered));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Interaction then
            --  InteractionFragment::enclosingInteraction : Interaction

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access'
                 (AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Interaction));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Operand then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access'
                 (AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Operand));

         elsif Property = MP_UML_Interaction_Fragment_General_Ordering then
            --  InteractionFragment::generalOrdering : GeneralOrdering

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internal
                 (AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General_Ordering));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Interaction_Use_Refers_To then
            --  InteractionUse::refersTo : Interaction

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access'
                 (AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Refers_To));

         elsif Property = MP_UML_Interaction_Use_Return_Value then
            --  InteractionUse::returnValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Return_Value));

         elsif Property = MP_UML_Interaction_Use_Return_Value_Recipient then
            --  InteractionUse::returnValueRecipient : Property

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access'
                 (AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Return_Value_Recipient));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Interaction_Use_Get;

      -------------------
      -- Interface_Get --
      -------------------

      function Interface_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Classifier_Attribute then
            --  Classifier::attribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Classifier_Collaboration_Use then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internal
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_Classifier_Feature then
            --  Classifier::feature : Feature

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Features.Collections.UML_Feature_Collections.Internal
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Feature));

         elsif Property = MP_UML_Classifier_General then
            --  Classifier::general : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General));

         elsif Property = MP_UML_Classifier_Generalization then
            --  Classifier::generalization : Generalization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internal
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Classifier_Inherited_Member then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member));

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Interface_Nested_Classifier then
            --  Interface::nestedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Classifier));

         elsif Property = MP_UML_Interface_Owned_Attribute then
            --  Interface::ownedAttribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Interface_Owned_Operation then
            --  Interface::ownedOperation : Operation

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Operations.Collections.UML_Operation_Collections.Internal
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Operation));

         elsif Property = MP_UML_Interface_Owned_Reception then
            --  Interface::ownedReception : Reception

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Receptions.Collections.UML_Reception_Collections.Internal
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Reception));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Classifier_Owned_Use_Case then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Classifier_Powertype_Extent then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internal
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent));

         elsif Property = MP_UML_Interface_Protocol then
            --  Interface::protocol : ProtocolStateMachine

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access'
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Protocol));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Classifier_Redefined_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier));

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Interface_Redefined_Interface then
            --  Interface::redefinedInterface : Interface

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interfaces.Collections.UML_Interface_Collections.Internal
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Interface));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = MP_UML_Classifier_Substitution then
            --  Classifier::substitution : Substitution

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internal
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution));

         elsif Property = MP_UML_Templateable_Element_Template_Binding then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internal
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Classifier_Use_Case then
            --  Classifier::useCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Interfaces.UML_Interface_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Interface_Get;

      -------------------------------
      -- Interface_Realization_Get --
      -------------------------------

      function Interface_Realization_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Dependency_Client then
            --  Dependency::client : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Interface_Realization_Contract then
            --  InterfaceRealization::contract : Interface

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access'
                 (AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Contract));

         elsif Property = MP_UML_Interface_Realization_Implementing_Classifier then
            --  InterfaceRealization::implementingClassifier : BehavioredClassifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviored_Classifiers.UML_Behaviored_Classifier_Access'
                 (AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Implementing_Classifier));

         elsif Property = MP_UML_Abstraction_Mapping then
            --  Abstraction::mapping : OpaqueExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access'
                 (AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Mapping));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Relationship_Related_Element then
            --  Relationship::relatedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element));

         elsif Property = MP_UML_Directed_Relationship_Source then
            --  DirectedRelationship::source : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Source));

         elsif Property = MP_UML_Dependency_Supplier then
            --  Dependency::supplier : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Supplier));

         elsif Property = MP_UML_Directed_Relationship_Target then
            --  DirectedRelationship::target : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Target));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Interface_Realization_Get;

      ---------------------------------------
      -- Interruptible_Activity_Region_Get --
      ---------------------------------------

      function Interruptible_Activity_Region_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Activity_Group_Contained_Edge then
            --  ActivityGroup::containedEdge : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Contained_Edge));

         elsif Property = MP_UML_Activity_Group_Contained_Node then
            --  ActivityGroup::containedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Contained_Node));

         elsif Property = MP_UML_Activity_Group_In_Activity then
            --  ActivityGroup::inActivity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Activity));

         elsif Property = MP_UML_Interruptible_Activity_Region_Interrupting_Edge then
            --  InterruptibleActivityRegion::interruptingEdge : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Interrupting_Edge));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Interruptible_Activity_Region_Node then
            --  InterruptibleActivityRegion::node : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Node));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Activity_Group_Subgroup then
            --  ActivityGroup::subgroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Subgroup));

         elsif Property = MP_UML_Activity_Group_Super_Group then
            --  ActivityGroup::superGroup : ActivityGroup

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activity_Groups.UML_Activity_Group_Access'
                 (AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Group));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Interruptible_Activity_Region_Get;

      ------------------
      -- Interval_Get --
      ------------------

      function Interval_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Intervals.UML_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Interval_Max then
            --  Interval::max : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Intervals.UML_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Max));

         elsif Property = MP_UML_Interval_Min then
            --  Interval::min : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Intervals.UML_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Min));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Intervals.UML_Interval_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Intervals.UML_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Intervals.UML_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Intervals.UML_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Intervals.UML_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Intervals.UML_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Intervals.UML_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Intervals.UML_Interval_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Intervals.UML_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Intervals.UML_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Intervals.UML_Interval_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Intervals.UML_Interval_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Interval_Get;

      -----------------------------
      -- Interval_Constraint_Get --
      -----------------------------

      function Interval_Constraint_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Constraint_Constrained_Element then
            --  Constraint::constrainedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Constrained_Element));

         elsif Property = MP_UML_Constraint_Context then
            --  Constraint::context : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Constraint_Specification then
            --  Constraint::specification : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Specification));

         elsif Property = MP_UML_Interval_Constraint_Specification then
            --  IntervalConstraint::specification : Interval

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Intervals.UML_Interval_Access'
                 (AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Specification));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Interval_Constraint_Get;

      -------------------
      -- Join_Node_Get --
      -------------------

      function Join_Node_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Join_Nodes.UML_Join_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Join_Nodes.UML_Join_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Join_Nodes.UML_Join_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Join_Nodes.UML_Join_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Join_Nodes.UML_Join_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Join_Nodes.UML_Join_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Join_Nodes.UML_Join_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Join_Node_Is_Combine_Duplicate then
            --  JoinNode::isCombineDuplicate : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Join_Nodes.UML_Join_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Combine_Duplicate);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Join_Nodes.UML_Join_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Join_Node_Join_Spec then
            --  JoinNode::joinSpec : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Join_Nodes.UML_Join_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Join_Spec));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Join_Nodes.UML_Join_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Join_Nodes.UML_Join_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Join_Nodes.UML_Join_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Join_Nodes.UML_Join_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Join_Nodes.UML_Join_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Join_Nodes.UML_Join_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Join_Nodes.UML_Join_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Join_Nodes.UML_Join_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Join_Nodes.UML_Join_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Join_Nodes.UML_Join_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Join_Nodes.UML_Join_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Join_Nodes.UML_Join_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Join_Node_Get;

      ------------------
      -- Lifeline_Get --
      ------------------

      function Lifeline_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Lifelines.UML_Lifeline_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Lifeline_Covered_By then
            --  Lifeline::coveredBy : InteractionFragment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interaction_Fragments.Collections.UML_Interaction_Fragment_Collections.Internal
                 (AMF.UML.Lifelines.UML_Lifeline_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Covered_By));

         elsif Property = MP_UML_Lifeline_Decomposed_As then
            --  Lifeline::decomposedAs : PartDecomposition

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access'
                 (AMF.UML.Lifelines.UML_Lifeline_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Decomposed_As));

         elsif Property = MP_UML_Lifeline_Interaction then
            --  Lifeline::interaction : Interaction

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access'
                 (AMF.UML.Lifelines.UML_Lifeline_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Interaction));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Lifelines.UML_Lifeline_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Lifelines.UML_Lifeline_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Lifelines.UML_Lifeline_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Lifelines.UML_Lifeline_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Lifelines.UML_Lifeline_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Lifelines.UML_Lifeline_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Lifelines.UML_Lifeline_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Lifeline_Represents then
            --  Lifeline::represents : ConnectableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Connectable_Elements.UML_Connectable_Element_Access'
                 (AMF.UML.Lifelines.UML_Lifeline_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Represents));

         elsif Property = MP_UML_Lifeline_Selector then
            --  Lifeline::selector : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Lifelines.UML_Lifeline_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Selector));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Lifelines.UML_Lifeline_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Lifeline_Get;

      --------------------------------
      -- Link_End_Creation_Data_Get --
      --------------------------------

      function Link_End_Creation_Data_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Link_End_Data_End then
            --  LinkEndData::end : Property

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access'
                 (AMF.UML.Link_End_Creation_Datas.UML_Link_End_Creation_Data_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_End));

         elsif Property = MP_UML_Link_End_Creation_Data_Insert_At then
            --  LinkEndCreationData::insertAt : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Link_End_Creation_Datas.UML_Link_End_Creation_Data_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Insert_At));

         elsif Property = MP_UML_Link_End_Creation_Data_Is_Replace_All then
            --  LinkEndCreationData::isReplaceAll : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Link_End_Creation_Datas.UML_Link_End_Creation_Data_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Replace_All);

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Link_End_Creation_Datas.UML_Link_End_Creation_Data_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Link_End_Creation_Datas.UML_Link_End_Creation_Data_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Link_End_Creation_Datas.UML_Link_End_Creation_Data_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Link_End_Data_Qualifier then
            --  LinkEndData::qualifier : QualifierValue

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Qualifier_Values.Collections.UML_Qualifier_Value_Collections.Internal
                 (AMF.UML.Link_End_Creation_Datas.UML_Link_End_Creation_Data_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Qualifier));

         elsif Property = MP_UML_Link_End_Data_Value then
            --  LinkEndData::value : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Link_End_Creation_Datas.UML_Link_End_Creation_Data_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Value));

         else
            raise Program_Error;
         end if;
      end Link_End_Creation_Data_Get;

      -----------------------
      -- Link_End_Data_Get --
      -----------------------

      function Link_End_Data_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Link_End_Data_End then
            --  LinkEndData::end : Property

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access'
                 (AMF.UML.Link_End_Datas.UML_Link_End_Data_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_End));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Link_End_Datas.UML_Link_End_Data_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Link_End_Datas.UML_Link_End_Data_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Link_End_Datas.UML_Link_End_Data_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Link_End_Data_Qualifier then
            --  LinkEndData::qualifier : QualifierValue

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Qualifier_Values.Collections.UML_Qualifier_Value_Collections.Internal
                 (AMF.UML.Link_End_Datas.UML_Link_End_Data_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Qualifier));

         elsif Property = MP_UML_Link_End_Data_Value then
            --  LinkEndData::value : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Link_End_Datas.UML_Link_End_Data_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Value));

         else
            raise Program_Error;
         end if;
      end Link_End_Data_Get;

      -----------------------------------
      -- Link_End_Destruction_Data_Get --
      -----------------------------------

      function Link_End_Destruction_Data_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Link_End_Destruction_Data_Destroy_At then
            --  LinkEndDestructionData::destroyAt : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Link_End_Destruction_Datas.UML_Link_End_Destruction_Data_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Destroy_At));

         elsif Property = MP_UML_Link_End_Data_End then
            --  LinkEndData::end : Property

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access'
                 (AMF.UML.Link_End_Destruction_Datas.UML_Link_End_Destruction_Data_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_End));

         elsif Property = MP_UML_Link_End_Destruction_Data_Is_Destroy_Duplicates then
            --  LinkEndDestructionData::isDestroyDuplicates : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Link_End_Destruction_Datas.UML_Link_End_Destruction_Data_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Destroy_Duplicates);

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Link_End_Destruction_Datas.UML_Link_End_Destruction_Data_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Link_End_Destruction_Datas.UML_Link_End_Destruction_Data_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Link_End_Destruction_Datas.UML_Link_End_Destruction_Data_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Link_End_Data_Qualifier then
            --  LinkEndData::qualifier : QualifierValue

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Qualifier_Values.Collections.UML_Qualifier_Value_Collections.Internal
                 (AMF.UML.Link_End_Destruction_Datas.UML_Link_End_Destruction_Data_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Qualifier));

         elsif Property = MP_UML_Link_End_Data_Value then
            --  LinkEndData::value : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Link_End_Destruction_Datas.UML_Link_End_Destruction_Data_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Value));

         else
            raise Program_Error;
         end if;
      end Link_End_Destruction_Data_Get;

      -------------------------
      -- Literal_Boolean_Get --
      -------------------------

      function Literal_Boolean_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = MP_UML_Literal_Boolean_Value then
            --  LiteralBoolean::value : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Value);

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Literal_Boolean_Get;

      -------------------------
      -- Literal_Integer_Get --
      -------------------------

      function Literal_Integer_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Literal_Integers.UML_Literal_Integer_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Literal_Integers.UML_Literal_Integer_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Literal_Integers.UML_Literal_Integer_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Literal_Integers.UML_Literal_Integer_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Literal_Integers.UML_Literal_Integer_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Literal_Integers.UML_Literal_Integer_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Literal_Integers.UML_Literal_Integer_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Literal_Integers.UML_Literal_Integer_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Literal_Integers.UML_Literal_Integer_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Literal_Integers.UML_Literal_Integer_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Literal_Integers.UML_Literal_Integer_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = MP_UML_Literal_Integer_Value then
            --  LiteralInteger::value : Integer

            return
              League.Holders.Integers.To_Holder
               (AMF.UML.Literal_Integers.UML_Literal_Integer_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Value);

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Literal_Integers.UML_Literal_Integer_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Literal_Integers.UML_Literal_Integer_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Literal_Integer_Get;

      ----------------------
      -- Literal_Null_Get --
      ----------------------

      function Literal_Null_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Literal_Nulls.UML_Literal_Null_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Literal_Nulls.UML_Literal_Null_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Literal_Nulls.UML_Literal_Null_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Literal_Nulls.UML_Literal_Null_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Literal_Nulls.UML_Literal_Null_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Literal_Nulls.UML_Literal_Null_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Literal_Nulls.UML_Literal_Null_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Literal_Nulls.UML_Literal_Null_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Literal_Nulls.UML_Literal_Null_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Literal_Nulls.UML_Literal_Null_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Literal_Nulls.UML_Literal_Null_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Literal_Nulls.UML_Literal_Null_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Literal_Nulls.UML_Literal_Null_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Literal_Null_Get;

      ----------------------
      -- Literal_Real_Get --
      ----------------------

      function Literal_Real_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Literal_Reals.UML_Literal_Real_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Literal_Reals.UML_Literal_Real_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Literal_Reals.UML_Literal_Real_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Literal_Reals.UML_Literal_Real_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Literal_Reals.UML_Literal_Real_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Literal_Reals.UML_Literal_Real_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Literal_Reals.UML_Literal_Real_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Literal_Reals.UML_Literal_Real_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Literal_Reals.UML_Literal_Real_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Literal_Reals.UML_Literal_Real_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Literal_Reals.UML_Literal_Real_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = MP_UML_Literal_Real_Value then
            --  LiteralReal::value : Real

            return
              AMF.Holders.Reals.To_Holder
               (AMF.UML.Literal_Reals.UML_Literal_Real_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Value);

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Literal_Reals.UML_Literal_Real_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Literal_Reals.UML_Literal_Real_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Literal_Real_Get;

      ------------------------
      -- Literal_String_Get --
      ------------------------

      function Literal_String_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Literal_Strings.UML_Literal_String_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Literal_Strings.UML_Literal_String_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Literal_Strings.UML_Literal_String_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Literal_Strings.UML_Literal_String_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Literal_Strings.UML_Literal_String_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Literal_Strings.UML_Literal_String_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Literal_Strings.UML_Literal_String_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Literal_Strings.UML_Literal_String_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Literal_Strings.UML_Literal_String_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Literal_Strings.UML_Literal_String_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Literal_Strings.UML_Literal_String_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = MP_UML_Literal_String_Value then
            --  LiteralString::value : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Literal_Strings.UML_Literal_String_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Value);

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Literal_Strings.UML_Literal_String_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Literal_Strings.UML_Literal_String_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Literal_String_Get;

      -----------------------------------
      -- Literal_Unlimited_Natural_Get --
      -----------------------------------

      function Literal_Unlimited_Natural_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = MP_UML_Literal_Unlimited_Natural_Value then
            --  LiteralUnlimitedNatural::value : UnlimitedNatural

            return
              AMF.Holders.Unlimited_Naturals.To_Holder
               (AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Value);

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Literal_Unlimited_Natural_Get;

      -------------------
      -- Loop_Node_Get --
      -------------------

      function Loop_Node_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Structured_Activity_Node_Activity then
            --  StructuredActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Loop_Node_Body_Output then
            --  LoopNode::bodyOutput : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Body_Output));

         elsif Property = MP_UML_Loop_Node_Body_Part then
            --  LoopNode::bodyPart : ExecutableNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Executable_Nodes.Collections.UML_Executable_Node_Collections.Internal
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Body_Part));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Activity_Group_Contained_Edge then
            --  ActivityGroup::containedEdge : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Contained_Edge));

         elsif Property = MP_UML_Activity_Group_Contained_Node then
            --  ActivityGroup::containedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Contained_Node));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Loop_Node_Decider then
            --  LoopNode::decider : OutputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access'
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Decider));

         elsif Property = MP_UML_Structured_Activity_Node_Edge then
            --  StructuredActivityNode::edge : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Edge));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Activity_Group_In_Activity then
            --  ActivityGroup::inActivity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Activity));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Loop_Node_Is_Tested_First then
            --  LoopNode::isTestedFirst : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Tested_First);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Loop_Node_Loop_Variable then
            --  LoopNode::loopVariable : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Loop_Variable));

         elsif Property = MP_UML_Loop_Node_Loop_Variable_Input then
            --  LoopNode::loopVariableInput : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Loop_Variable_Input));

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Structured_Activity_Node_Must_Isolate then
            --  StructuredActivityNode::mustIsolate : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Must_Isolate);

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Structured_Activity_Node_Node then
            --  StructuredActivityNode::node : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Node));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Loop_Node_Result then
            --  LoopNode::result : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = MP_UML_Loop_Node_Setup_Part then
            --  LoopNode::setupPart : ExecutableNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Executable_Nodes.Collections.UML_Executable_Node_Collections.Internal
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Setup_Part));

         elsif Property = MP_UML_Structured_Activity_Node_Structured_Node_Input then
            --  StructuredActivityNode::structuredNodeInput : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Structured_Node_Input));

         elsif Property = MP_UML_Structured_Activity_Node_Structured_Node_Output then
            --  StructuredActivityNode::structuredNodeOutput : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Structured_Node_Output));

         elsif Property = MP_UML_Activity_Group_Subgroup then
            --  ActivityGroup::subgroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Subgroup));

         elsif Property = MP_UML_Activity_Group_Super_Group then
            --  ActivityGroup::superGroup : ActivityGroup

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activity_Groups.UML_Activity_Group_Access'
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Group));

         elsif Property = MP_UML_Loop_Node_Test then
            --  LoopNode::test : ExecutableNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Executable_Nodes.Collections.UML_Executable_Node_Collections.Internal
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Test));

         elsif Property = MP_UML_Structured_Activity_Node_Variable then
            --  StructuredActivityNode::variable : Variable

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Variables.Collections.UML_Variable_Collections.Internal
                 (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Variable));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Loop_Nodes.UML_Loop_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Loop_Node_Get;

      -----------------------
      -- Manifestation_Get --
      -----------------------

      function Manifestation_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Dependency_Client then
            --  Dependency::client : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Manifestations.UML_Manifestation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Manifestations.UML_Manifestation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Abstraction_Mapping then
            --  Abstraction::mapping : OpaqueExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access'
                 (AMF.UML.Manifestations.UML_Manifestation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Mapping));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Manifestations.UML_Manifestation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Manifestations.UML_Manifestation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Manifestations.UML_Manifestation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Manifestations.UML_Manifestation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Manifestations.UML_Manifestation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Manifestations.UML_Manifestation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Manifestations.UML_Manifestation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Manifestations.UML_Manifestation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Relationship_Related_Element then
            --  Relationship::relatedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Manifestations.UML_Manifestation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element));

         elsif Property = MP_UML_Directed_Relationship_Source then
            --  DirectedRelationship::source : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Manifestations.UML_Manifestation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Source));

         elsif Property = MP_UML_Dependency_Supplier then
            --  Dependency::supplier : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Manifestations.UML_Manifestation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Supplier));

         elsif Property = MP_UML_Directed_Relationship_Target then
            --  DirectedRelationship::target : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Manifestations.UML_Manifestation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Target));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Manifestations.UML_Manifestation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Manifestation_Utilized_Element then
            --  Manifestation::utilizedElement : PackageableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packageable_Elements.UML_Packageable_Element_Access'
                 (AMF.UML.Manifestations.UML_Manifestation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Utilized_Element));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Manifestations.UML_Manifestation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Manifestations.UML_Manifestation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Manifestation_Get;

      --------------------
      -- Merge_Node_Get --
      --------------------

      function Merge_Node_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Merge_Nodes.UML_Merge_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Merge_Nodes.UML_Merge_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Merge_Nodes.UML_Merge_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Merge_Nodes.UML_Merge_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Merge_Nodes.UML_Merge_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Merge_Nodes.UML_Merge_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Merge_Nodes.UML_Merge_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Merge_Nodes.UML_Merge_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Merge_Nodes.UML_Merge_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Merge_Nodes.UML_Merge_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Merge_Nodes.UML_Merge_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Merge_Nodes.UML_Merge_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Merge_Nodes.UML_Merge_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Merge_Nodes.UML_Merge_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Merge_Nodes.UML_Merge_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Merge_Nodes.UML_Merge_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Merge_Nodes.UML_Merge_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Merge_Nodes.UML_Merge_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Merge_Nodes.UML_Merge_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Merge_Nodes.UML_Merge_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Merge_Node_Get;

      -----------------
      -- Message_Get --
      -----------------

      function Message_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Message_Argument then
            --  Message::argument : ValueSpecification

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Value_Specifications.Collections.UML_Value_Specification_Collections.Internal
                 (AMF.UML.Messages.UML_Message_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Argument));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Messages.UML_Message_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Message_Connector then
            --  Message::connector : Connector

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Connectors.UML_Connector_Access'
                 (AMF.UML.Messages.UML_Message_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Connector));

         elsif Property = MP_UML_Message_Interaction then
            --  Message::interaction : Interaction

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access'
                 (AMF.UML.Messages.UML_Message_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Interaction));

         elsif Property = MP_UML_Message_Message_Kind then
            --  Message::messageKind : MessageKind

            return
              AMF.UML.Holders.Message_Kinds.To_Holder
               (AMF.UML.Messages.UML_Message_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Message_Kind);

         elsif Property = MP_UML_Message_Message_Sort then
            --  Message::messageSort : MessageSort

            return
              AMF.UML.Holders.Message_Sorts.To_Holder
               (AMF.UML.Messages.UML_Message_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Message_Sort);

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Messages.UML_Message_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Messages.UML_Message_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Messages.UML_Message_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Messages.UML_Message_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Messages.UML_Message_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Messages.UML_Message_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Messages.UML_Message_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Message_Receive_Event then
            --  Message::receiveEvent : MessageEnd

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Message_Ends.UML_Message_End_Access'
                 (AMF.UML.Messages.UML_Message_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Receive_Event));

         elsif Property = MP_UML_Message_Send_Event then
            --  Message::sendEvent : MessageEnd

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Message_Ends.UML_Message_End_Access'
                 (AMF.UML.Messages.UML_Message_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Send_Event));

         elsif Property = MP_UML_Message_Signature then
            --  Message::signature : NamedElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Named_Elements.UML_Named_Element_Access'
                 (AMF.UML.Messages.UML_Message_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Signature));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Messages.UML_Message_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Message_Get;

      ------------------------------------------
      -- Message_Occurrence_Specification_Get --
      ------------------------------------------

      function Message_Occurrence_Specification_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Interaction_Fragment_Covered then
            --  InteractionFragment::covered : Lifeline

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Lifelines.Collections.UML_Lifeline_Collections.Internal
                 (AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Covered));

         elsif Property = MP_UML_Occurrence_Specification_Covered then
            --  OccurrenceSpecification::covered : Lifeline

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Lifelines.UML_Lifeline_Access'
                 (AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Covered));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Interaction then
            --  InteractionFragment::enclosingInteraction : Interaction

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access'
                 (AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Interaction));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Operand then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access'
                 (AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Operand));

         elsif Property = MP_UML_Interaction_Fragment_General_Ordering then
            --  InteractionFragment::generalOrdering : GeneralOrdering

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internal
                 (AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General_Ordering));

         elsif Property = MP_UML_Message_End_Message then
            --  MessageEnd::message : Message

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Messages.UML_Message_Access'
                 (AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Message));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Occurrence_Specification_To_After then
            --  OccurrenceSpecification::toAfter : GeneralOrdering

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internal
                 (AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_To_After));

         elsif Property = MP_UML_Occurrence_Specification_To_Before then
            --  OccurrenceSpecification::toBefore : GeneralOrdering

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internal
                 (AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_To_Before));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Message_Occurrence_Specification_Get;

      ---------------
      -- Model_Get --
      ---------------

      function Model_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Package_URI then
            --  Package::URI : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Models.UML_Model_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_URI);

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Models.UML_Model_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Models.UML_Model_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Models.UML_Model_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Models.UML_Model_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Models.UML_Model_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Models.UML_Model_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Models.UML_Model_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Package_Nested_Package then
            --  Package::nestedPackage : Package

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packages.Collections.UML_Package_Collections.Internal
                 (AMF.UML.Models.UML_Model_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Package));

         elsif Property = MP_UML_Package_Nesting_Package then
            --  Package::nestingPackage : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Models.UML_Model_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Nesting_Package));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Models.UML_Model_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Models.UML_Model_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Models.UML_Model_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Models.UML_Model_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Package_Owned_Stereotype then
            --  Package::ownedStereotype : Stereotype

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Stereotypes.Collections.UML_Stereotype_Collections.Internal
                 (AMF.UML.Models.UML_Model_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Stereotype));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Models.UML_Model_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Package_Owned_Type then
            --  Package::ownedType : Type

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Types.Collections.UML_Type_Collections.Internal
                 (AMF.UML.Models.UML_Model_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Type));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Models.UML_Model_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Models.UML_Model_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Models.UML_Model_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Package_Package_Merge then
            --  Package::packageMerge : PackageMerge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Merges.Collections.UML_Package_Merge_Collections.Internal
                 (AMF.UML.Models.UML_Model_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Merge));

         elsif Property = MP_UML_Package_Packaged_Element then
            --  Package::packagedElement : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Models.UML_Model_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Packaged_Element));

         elsif Property = MP_UML_Package_Profile_Application then
            --  Package::profileApplication : ProfileApplication

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Profile_Applications.Collections.UML_Profile_Application_Collections.Internal
                 (AMF.UML.Models.UML_Model_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Profile_Application));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Models.UML_Model_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Templateable_Element_Template_Binding then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internal
                 (AMF.UML.Models.UML_Model_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Models.UML_Model_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Model_Viewpoint then
            --  Model::viewpoint : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Models.UML_Model_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Viewpoint);

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Models.UML_Model_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Models.UML_Model_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Model_Get;

      --------------
      -- Node_Get --
      --------------

      function Node_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Classifier_Attribute then
            --  Classifier::attribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute));

         elsif Property = MP_UML_Behaviored_Classifier_Classifier_Behavior then
            --  BehavioredClassifier::classifierBehavior : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier_Behavior));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Classifier_Collaboration_Use then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internal
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use));

         elsif Property = MP_UML_Deployment_Target_Deployed_Element then
            --  DeploymentTarget::deployedElement : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Deployed_Element));

         elsif Property = MP_UML_Deployment_Target_Deployment then
            --  DeploymentTarget::deployment : Deployment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Deployments.Collections.UML_Deployment_Collections.Internal
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Deployment));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_Class_Extension then
            --  Class::extension : Extension

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Extensions.Collections.UML_Extension_Collections.Internal
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Extension));

         elsif Property = MP_UML_Classifier_Feature then
            --  Classifier::feature : Feature

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Features.Collections.UML_Feature_Collections.Internal
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Feature));

         elsif Property = MP_UML_Classifier_General then
            --  Classifier::general : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General));

         elsif Property = MP_UML_Classifier_Generalization then
            --  Classifier::generalization : Generalization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internal
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Classifier_Inherited_Member then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member));

         elsif Property = MP_UML_Behaviored_Classifier_Interface_Realization then
            --  BehavioredClassifier::interfaceRealization : InterfaceRealization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interface_Realizations.Collections.UML_Interface_Realization_Collections.Internal
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Interface_Realization));

         elsif Property = MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Active);

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Class_Nested_Classifier then
            --  Class::nestedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Classifier));

         elsif Property = MP_UML_Node_Nested_Node then
            --  Node::nestedNode : Node

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Nodes.Collections.UML_Node_Collections.Internal
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Node));

         elsif Property = MP_UML_Class_Owned_Attribute then
            --  Class::ownedAttribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute));

         elsif Property = MP_UML_Structured_Classifier_Owned_Attribute then
            --  StructuredClassifier::ownedAttribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute));

         elsif Property = MP_UML_Behaviored_Classifier_Owned_Behavior then
            --  BehavioredClassifier::ownedBehavior : Behavior

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internal
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Behavior));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Structured_Classifier_Owned_Connector then
            --  StructuredClassifier::ownedConnector : Connector

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Connectors.Collections.UML_Connector_Collections.Internal
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Connector));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Class_Owned_Operation then
            --  Class::ownedOperation : Operation

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Operations.Collections.UML_Operation_Collections.Internal
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Operation));

         elsif Property = MP_UML_Encapsulated_Classifier_Owned_Port then
            --  EncapsulatedClassifier::ownedPort : Port

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Ports.Collections.UML_Port_Collections.Internal
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Port));

         elsif Property = MP_UML_Class_Owned_Reception then
            --  Class::ownedReception : Reception

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Receptions.Collections.UML_Reception_Collections.Internal
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Reception));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Classifier_Owned_Use_Case then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Structured_Classifier_Part then
            --  StructuredClassifier::part : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Part));

         elsif Property = MP_UML_Classifier_Powertype_Extent then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internal
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Classifier_Redefined_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier));

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = MP_UML_Structured_Classifier_Role then
            --  StructuredClassifier::role : ConnectableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Connectable_Elements.Collections.UML_Connectable_Element_Collections.Internal
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Role));

         elsif Property = MP_UML_Classifier_Substitution then
            --  Classifier::substitution : Substitution

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internal
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution));

         elsif Property = MP_UML_Class_Super_Class then
            --  Class::superClass : Class

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classes.Collections.UML_Class_Collections.Internal
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Class));

         elsif Property = MP_UML_Templateable_Element_Template_Binding then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internal
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Classifier_Use_Case then
            --  Classifier::useCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Nodes.UML_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Nodes.UML_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Node_Get;

      ---------------------
      -- Object_Flow_Get --
      ---------------------

      function Object_Flow_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Edge_Activity then
            --  ActivityEdge::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Object_Flows.UML_Object_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Object_Flows.UML_Object_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Activity_Edge_Guard then
            --  ActivityEdge::guard : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Object_Flows.UML_Object_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Guard));

         elsif Property = MP_UML_Activity_Edge_In_Group then
            --  ActivityEdge::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Object_Flows.UML_Object_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Edge_In_Partition then
            --  ActivityEdge::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Object_Flows.UML_Object_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Edge_In_Structured_Node then
            --  ActivityEdge::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Object_Flows.UML_Object_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Edge_Interrupts then
            --  ActivityEdge::interrupts : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access'
                 (AMF.UML.Object_Flows.UML_Object_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Interrupts));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Object_Flows.UML_Object_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Object_Flow_Is_Multicast then
            --  ObjectFlow::isMulticast : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Object_Flows.UML_Object_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Multicast);

         elsif Property = MP_UML_Object_Flow_Is_Multireceive then
            --  ObjectFlow::isMultireceive : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Object_Flows.UML_Object_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Multireceive);

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Object_Flows.UML_Object_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Object_Flows.UML_Object_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Object_Flows.UML_Object_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Object_Flows.UML_Object_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Object_Flows.UML_Object_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Object_Flows.UML_Object_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Object_Flows.UML_Object_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Activity_Edge_Redefined_Edge then
            --  ActivityEdge::redefinedEdge : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Object_Flows.UML_Object_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Edge));

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Object_Flows.UML_Object_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Object_Flows.UML_Object_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Object_Flow_Selection then
            --  ObjectFlow::selection : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Object_Flows.UML_Object_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Selection));

         elsif Property = MP_UML_Activity_Edge_Source then
            --  ActivityEdge::source : ActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activity_Nodes.UML_Activity_Node_Access'
                 (AMF.UML.Object_Flows.UML_Object_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Source));

         elsif Property = MP_UML_Activity_Edge_Target then
            --  ActivityEdge::target : ActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activity_Nodes.UML_Activity_Node_Access'
                 (AMF.UML.Object_Flows.UML_Object_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Target));

         elsif Property = MP_UML_Object_Flow_Transformation then
            --  ObjectFlow::transformation : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Object_Flows.UML_Object_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Transformation));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Object_Flows.UML_Object_Flow_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Activity_Edge_Weight then
            --  ActivityEdge::weight : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Object_Flows.UML_Object_Flow_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Weight));

         else
            raise Program_Error;
         end if;
      end Object_Flow_Get;

      ----------------------------------
      -- Occurrence_Specification_Get --
      ----------------------------------

      function Occurrence_Specification_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Interaction_Fragment_Covered then
            --  InteractionFragment::covered : Lifeline

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Lifelines.Collections.UML_Lifeline_Collections.Internal
                 (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Covered));

         elsif Property = MP_UML_Occurrence_Specification_Covered then
            --  OccurrenceSpecification::covered : Lifeline

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Lifelines.UML_Lifeline_Access'
                 (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Covered));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Interaction then
            --  InteractionFragment::enclosingInteraction : Interaction

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access'
                 (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Interaction));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Operand then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access'
                 (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Operand));

         elsif Property = MP_UML_Interaction_Fragment_General_Ordering then
            --  InteractionFragment::generalOrdering : GeneralOrdering

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internal
                 (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General_Ordering));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Occurrence_Specification_To_After then
            --  OccurrenceSpecification::toAfter : GeneralOrdering

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internal
                 (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_To_After));

         elsif Property = MP_UML_Occurrence_Specification_To_Before then
            --  OccurrenceSpecification::toBefore : GeneralOrdering

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internal
                 (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_To_Before));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Occurrence_Specification_Get;

      -----------------------
      -- Opaque_Action_Get --
      -----------------------

      function Opaque_Action_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Opaque_Action_Body then
            --  OpaqueAction::body : String

            return
              AMF.Holders.String_Collections.To_Holder
               (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Body);

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Opaque_Action_Input_Value then
            --  OpaqueAction::inputValue : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input_Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Opaque_Action_Language then
            --  OpaqueAction::language : String

            return
              AMF.Holders.String_Collections.To_Holder
               (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Language);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Opaque_Action_Output_Value then
            --  OpaqueAction::outputValue : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output_Value));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Opaque_Action_Get;

      -------------------------
      -- Opaque_Behavior_Get --
      -------------------------

      function Opaque_Behavior_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Classifier_Attribute then
            --  Classifier::attribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute));

         elsif Property = MP_UML_Opaque_Behavior_Body then
            --  OpaqueBehavior::body : String

            return
              AMF.Holders.String_Collections.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Body);

         elsif Property = MP_UML_Behaviored_Classifier_Classifier_Behavior then
            --  BehavioredClassifier::classifierBehavior : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier_Behavior));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Classifier_Collaboration_Use then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use));

         elsif Property = MP_UML_Behavior_Context then
            --  Behavior::context : BehavioredClassifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviored_Classifiers.UML_Behaviored_Classifier_Access'
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_Class_Extension then
            --  Class::extension : Extension

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Extensions.Collections.UML_Extension_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Extension));

         elsif Property = MP_UML_Classifier_Feature then
            --  Classifier::feature : Feature

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Features.Collections.UML_Feature_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Feature));

         elsif Property = MP_UML_Classifier_General then
            --  Classifier::general : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General));

         elsif Property = MP_UML_Classifier_Generalization then
            --  Classifier::generalization : Generalization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Classifier_Inherited_Member then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member));

         elsif Property = MP_UML_Behaviored_Classifier_Interface_Realization then
            --  BehavioredClassifier::interfaceRealization : InterfaceRealization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interface_Realizations.Collections.UML_Interface_Realization_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Interface_Realization));

         elsif Property = MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Active);

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Behavior_Is_Reentrant then
            --  Behavior::isReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Reentrant);

         elsif Property = MP_UML_Opaque_Behavior_Language then
            --  OpaqueBehavior::language : String

            return
              AMF.Holders.String_Collections.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Language);

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Class_Nested_Classifier then
            --  Class::nestedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Classifier));

         elsif Property = MP_UML_Class_Owned_Attribute then
            --  Class::ownedAttribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute));

         elsif Property = MP_UML_Structured_Classifier_Owned_Attribute then
            --  StructuredClassifier::ownedAttribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute));

         elsif Property = MP_UML_Behaviored_Classifier_Owned_Behavior then
            --  BehavioredClassifier::ownedBehavior : Behavior

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Behavior));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Structured_Classifier_Owned_Connector then
            --  StructuredClassifier::ownedConnector : Connector

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Connectors.Collections.UML_Connector_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Connector));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Class_Owned_Operation then
            --  Class::ownedOperation : Operation

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Operations.Collections.UML_Operation_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Operation));

         elsif Property = MP_UML_Behavior_Owned_Parameter then
            --  Behavior::ownedParameter : Parameter

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Parameters.Collections.UML_Parameter_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parameter));

         elsif Property = MP_UML_Behavior_Owned_Parameter_Set then
            --  Behavior::ownedParameterSet : ParameterSet

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Parameter_Sets.Collections.UML_Parameter_Set_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parameter_Set));

         elsif Property = MP_UML_Encapsulated_Classifier_Owned_Port then
            --  EncapsulatedClassifier::ownedPort : Port

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Ports.Collections.UML_Port_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Port));

         elsif Property = MP_UML_Class_Owned_Reception then
            --  Class::ownedReception : Reception

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Receptions.Collections.UML_Reception_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Reception));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Classifier_Owned_Use_Case then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Structured_Classifier_Part then
            --  StructuredClassifier::part : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Part));

         elsif Property = MP_UML_Behavior_Postcondition then
            --  Behavior::postcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Postcondition));

         elsif Property = MP_UML_Classifier_Powertype_Extent then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent));

         elsif Property = MP_UML_Behavior_Precondition then
            --  Behavior::precondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Precondition));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Behavior_Redefined_Behavior then
            --  Behavior::redefinedBehavior : Behavior

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Behavior));

         elsif Property = MP_UML_Classifier_Redefined_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier));

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = MP_UML_Structured_Classifier_Role then
            --  StructuredClassifier::role : ConnectableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Connectable_Elements.Collections.UML_Connectable_Element_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Role));

         elsif Property = MP_UML_Behavior_Specification then
            --  Behavior::specification : BehavioralFeature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behavioral_Features.UML_Behavioral_Feature_Access'
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Specification));

         elsif Property = MP_UML_Classifier_Substitution then
            --  Classifier::substitution : Substitution

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution));

         elsif Property = MP_UML_Class_Super_Class then
            --  Class::superClass : Class

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classes.Collections.UML_Class_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Class));

         elsif Property = MP_UML_Templateable_Element_Template_Binding then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Classifier_Use_Case then
            --  Classifier::useCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Opaque_Behavior_Get;

      ---------------------------
      -- Opaque_Expression_Get --
      ---------------------------

      function Opaque_Expression_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Opaque_Expression_Behavior then
            --  OpaqueExpression::behavior : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Behavior));

         elsif Property = MP_UML_Opaque_Expression_Body then
            --  OpaqueExpression::body : String

            return
              AMF.Holders.String_Collections.To_Holder
               (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Body);

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Opaque_Expression_Language then
            --  OpaqueExpression::language : String

            return
              AMF.Holders.String_Collections.To_Holder
               (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Language);

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Opaque_Expression_Result then
            --  OpaqueExpression::result : Parameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Parameters.UML_Parameter_Access'
                 (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Opaque_Expression_Get;

      -------------------
      -- Operation_Get --
      -------------------

      function Operation_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Operation_Body_Condition then
            --  Operation::bodyCondition : Constraint

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Constraints.UML_Constraint_Access'
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Body_Condition));

         elsif Property = MP_UML_Operation_Class then
            --  Operation::class : Class

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classes.UML_Class_Access'
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Class));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Behavioral_Feature_Concurrency then
            --  BehavioralFeature::concurrency : CallConcurrencyKind

            return
              AMF.UML.Holders.Call_Concurrency_Kinds.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Concurrency);

         elsif Property = MP_UML_Operation_Datatype then
            --  Operation::datatype : DataType

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access'
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Datatype));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_Feature_Featuring_Classifier then
            --  Feature::featuringClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Featuring_Classifier));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Operation_Interface then
            --  Operation::interface : Interface

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access'
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Interface));

         elsif Property = MP_UML_Behavioral_Feature_Is_Abstract then
            --  BehavioralFeature::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Operation_Is_Ordered then
            --  Operation::isOrdered : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Ordered);

         elsif Property = MP_UML_Operation_Is_Query then
            --  Operation::isQuery : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Query);

         elsif Property = MP_UML_Feature_Is_Static then
            --  Feature::isStatic : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Static);

         elsif Property = MP_UML_Operation_Is_Unique then
            --  Operation::isUnique : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Unique);

         elsif Property = MP_UML_Operation_Lower then
            --  Operation::lower : Integer

            return
              AMF.Holders.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Lower);

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Behavioral_Feature_Method then
            --  BehavioralFeature::method : Behavior

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internal
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Method));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Behavioral_Feature_Owned_Parameter then
            --  BehavioralFeature::ownedParameter : Parameter

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Parameters.Collections.UML_Parameter_Collections.Internal
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parameter));

         elsif Property = MP_UML_Operation_Owned_Parameter then
            --  Operation::ownedParameter : Parameter

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Parameters.Collections.UML_Parameter_Collections.Internal
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parameter));

         elsif Property = MP_UML_Behavioral_Feature_Owned_Parameter_Set then
            --  BehavioralFeature::ownedParameterSet : ParameterSet

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Parameter_Sets.Collections.UML_Parameter_Set_Collections.Internal
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parameter_Set));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Operation_Postcondition then
            --  Operation::postcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Postcondition));

         elsif Property = MP_UML_Operation_Precondition then
            --  Operation::precondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Precondition));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Behavioral_Feature_Raised_Exception then
            --  BehavioralFeature::raisedException : Type

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Types.Collections.UML_Type_Collections.Internal
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Raised_Exception));

         elsif Property = MP_UML_Operation_Raised_Exception then
            --  Operation::raisedException : Type

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Types.Collections.UML_Type_Collections.Internal
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Raised_Exception));

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Operation_Redefined_Operation then
            --  Operation::redefinedOperation : Operation

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Operations.Collections.UML_Operation_Collections.Internal
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Operation));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Templateable_Element_Template_Binding then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internal
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding));

         elsif Property = MP_UML_Operation_Template_Parameter then
            --  Operation::templateParameter : OperationTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Operation_Template_Parameters.UML_Operation_Template_Parameter_Access'
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Operation_Type then
            --  Operation::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Operations.UML_Operation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = MP_UML_Operation_Upper then
            --  Operation::upper : UnlimitedNatural

            return
              AMF.Holders.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Upper);

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Operations.UML_Operation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Operation_Get;

      --------------------------------------
      -- Operation_Template_Parameter_Get --
      --------------------------------------

      function Operation_Template_Parameter_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Template_Parameter_Default then
            --  TemplateParameter::default : ParameterableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access'
                 (AMF.UML.Operation_Template_Parameters.UML_Operation_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Default));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Operation_Template_Parameters.UML_Operation_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Template_Parameter_Owned_Default then
            --  TemplateParameter::ownedDefault : ParameterableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access'
                 (AMF.UML.Operation_Template_Parameters.UML_Operation_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Default));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Operation_Template_Parameters.UML_Operation_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Template_Parameter_Owned_Parametered_Element then
            --  TemplateParameter::ownedParameteredElement : ParameterableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access'
                 (AMF.UML.Operation_Template_Parameters.UML_Operation_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parametered_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Operation_Template_Parameters.UML_Operation_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Operation_Template_Parameter_Parametered_Element then
            --  OperationTemplateParameter::parameteredElement : Operation

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Operations.UML_Operation_Access'
                 (AMF.UML.Operation_Template_Parameters.UML_Operation_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Parametered_Element));

         elsif Property = MP_UML_Template_Parameter_Parametered_Element then
            --  TemplateParameter::parameteredElement : ParameterableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access'
                 (AMF.UML.Operation_Template_Parameters.UML_Operation_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Parametered_Element));

         elsif Property = MP_UML_Template_Parameter_Signature then
            --  TemplateParameter::signature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Operation_Template_Parameters.UML_Operation_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Signature));

         else
            raise Program_Error;
         end if;
      end Operation_Template_Parameter_Get;

      --------------------
      -- Output_Pin_Get --
      --------------------

      function Output_Pin_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Output_Pins.UML_Output_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Output_Pins.UML_Output_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Output_Pins.UML_Output_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Output_Pins.UML_Output_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Output_Pins.UML_Output_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Object_Node_In_State then
            --  ObjectNode::inState : State

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.States.Collections.UML_State_Collections.Internal
                 (AMF.UML.Output_Pins.UML_Output_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_State));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Output_Pins.UML_Output_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Output_Pins.UML_Output_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Pin_Is_Control then
            --  Pin::isControl : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Control);

         elsif Property = MP_UML_Object_Node_Is_Control_Type then
            --  ObjectNode::isControlType : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Control_Type);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Multiplicity_Element_Is_Ordered then
            --  MultiplicityElement::isOrdered : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Ordered);

         elsif Property = MP_UML_Multiplicity_Element_Is_Unique then
            --  MultiplicityElement::isUnique : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Unique);

         elsif Property = MP_UML_Multiplicity_Element_Lower then
            --  MultiplicityElement::lower : Integer

            return
              AMF.Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Lower);

         elsif Property = MP_UML_Multiplicity_Element_Lower_Value then
            --  MultiplicityElement::lowerValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Output_Pins.UML_Output_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Lower_Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Output_Pins.UML_Output_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Output_Pins.UML_Output_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Object_Node_Ordering then
            --  ObjectNode::ordering : ObjectNodeOrderingKind

            return
              AMF.UML.Holders.Object_Node_Ordering_Kinds.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Ordering);

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Output_Pins.UML_Output_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Output_Pins.UML_Output_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Output_Pins.UML_Output_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Output_Pins.UML_Output_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Output_Pins.UML_Output_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Output_Pins.UML_Output_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Output_Pins.UML_Output_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Object_Node_Selection then
            --  ObjectNode::selection : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Output_Pins.UML_Output_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Selection));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Output_Pins.UML_Output_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = MP_UML_Multiplicity_Element_Upper then
            --  MultiplicityElement::upper : UnlimitedNatural

            return
              AMF.Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Upper);

         elsif Property = MP_UML_Object_Node_Upper_Bound then
            --  ObjectNode::upperBound : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Output_Pins.UML_Output_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Upper_Bound));

         elsif Property = MP_UML_Multiplicity_Element_Upper_Value then
            --  MultiplicityElement::upperValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Output_Pins.UML_Output_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Upper_Value));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Output_Pin_Get;

      -----------------
      -- Package_Get --
      -----------------

      function Package_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Package_URI then
            --  Package::URI : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_URI);

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Packages.UML_Package_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Packages.UML_Package_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Packages.UML_Package_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Packages.UML_Package_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Packages.UML_Package_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Packages.UML_Package_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Package_Nested_Package then
            --  Package::nestedPackage : Package

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packages.Collections.UML_Package_Collections.Internal
                 (AMF.UML.Packages.UML_Package_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Package));

         elsif Property = MP_UML_Package_Nesting_Package then
            --  Package::nestingPackage : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Packages.UML_Package_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Nesting_Package));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Packages.UML_Package_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Packages.UML_Package_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Packages.UML_Package_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Packages.UML_Package_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Package_Owned_Stereotype then
            --  Package::ownedStereotype : Stereotype

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Stereotypes.Collections.UML_Stereotype_Collections.Internal
                 (AMF.UML.Packages.UML_Package_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Stereotype));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Packages.UML_Package_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Package_Owned_Type then
            --  Package::ownedType : Type

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Types.Collections.UML_Type_Collections.Internal
                 (AMF.UML.Packages.UML_Package_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Type));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Packages.UML_Package_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Packages.UML_Package_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Packages.UML_Package_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Package_Package_Merge then
            --  Package::packageMerge : PackageMerge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Merges.Collections.UML_Package_Merge_Collections.Internal
                 (AMF.UML.Packages.UML_Package_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Merge));

         elsif Property = MP_UML_Package_Packaged_Element then
            --  Package::packagedElement : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Packages.UML_Package_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Packaged_Element));

         elsif Property = MP_UML_Package_Profile_Application then
            --  Package::profileApplication : ProfileApplication

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Profile_Applications.Collections.UML_Profile_Application_Collections.Internal
                 (AMF.UML.Packages.UML_Package_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Profile_Application));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Templateable_Element_Template_Binding then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internal
                 (AMF.UML.Packages.UML_Package_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Packages.UML_Package_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Packages.UML_Package_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Package_Get;

      ------------------------
      -- Package_Import_Get --
      ------------------------

      function Package_Import_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Package_Import_Imported_Package then
            --  PackageImport::importedPackage : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Package_Imports.UML_Package_Import_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Package));

         elsif Property = MP_UML_Package_Import_Importing_Namespace then
            --  PackageImport::importingNamespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Package_Imports.UML_Package_Import_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Importing_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Package_Imports.UML_Package_Import_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Package_Imports.UML_Package_Import_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Package_Imports.UML_Package_Import_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Relationship_Related_Element then
            --  Relationship::relatedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Package_Imports.UML_Package_Import_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element));

         elsif Property = MP_UML_Directed_Relationship_Source then
            --  DirectedRelationship::source : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Package_Imports.UML_Package_Import_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Source));

         elsif Property = MP_UML_Directed_Relationship_Target then
            --  DirectedRelationship::target : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Package_Imports.UML_Package_Import_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Target));

         elsif Property = MP_UML_Package_Import_Visibility then
            --  PackageImport::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Package_Imports.UML_Package_Import_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Package_Import_Get;

      -----------------------
      -- Package_Merge_Get --
      -----------------------

      function Package_Merge_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Package_Merge_Merged_Package then
            --  PackageMerge::mergedPackage : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Package_Merges.UML_Package_Merge_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Merged_Package));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Package_Merges.UML_Package_Merge_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Package_Merges.UML_Package_Merge_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Package_Merges.UML_Package_Merge_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Package_Merge_Receiving_Package then
            --  PackageMerge::receivingPackage : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Package_Merges.UML_Package_Merge_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Receiving_Package));

         elsif Property = MP_UML_Relationship_Related_Element then
            --  Relationship::relatedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Package_Merges.UML_Package_Merge_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element));

         elsif Property = MP_UML_Directed_Relationship_Source then
            --  DirectedRelationship::source : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Package_Merges.UML_Package_Merge_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Source));

         elsif Property = MP_UML_Directed_Relationship_Target then
            --  DirectedRelationship::target : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Package_Merges.UML_Package_Merge_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Target));

         else
            raise Program_Error;
         end if;
      end Package_Merge_Get;

      -------------------
      -- Parameter_Get --
      -------------------

      function Parameter_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Parameters.UML_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Parameter_Default then
            --  Parameter::default : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Parameters.UML_Parameter_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Default);

         elsif Property = MP_UML_Parameter_Default_Value then
            --  Parameter::defaultValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Parameters.UML_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Default_Value));

         elsif Property = MP_UML_Parameter_Direction then
            --  Parameter::direction : ParameterDirectionKind

            return
              AMF.UML.Holders.Parameter_Direction_Kinds.To_Holder
               (AMF.UML.Parameters.UML_Parameter_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Direction);

         elsif Property = MP_UML_Parameter_Effect then
            --  Parameter::effect : ParameterEffectKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Parameters.UML_Parameter_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Effect);

         elsif Property = MP_UML_Connectable_Element_End then
            --  ConnectableElement::end : ConnectorEnd

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Connector_Ends.Collections.UML_Connector_End_Collections.Internal
                 (AMF.UML.Parameters.UML_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_End));

         elsif Property = MP_UML_Parameter_Is_Exception then
            --  Parameter::isException : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Parameters.UML_Parameter_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Exception);

         elsif Property = MP_UML_Multiplicity_Element_Is_Ordered then
            --  MultiplicityElement::isOrdered : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Parameters.UML_Parameter_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Ordered);

         elsif Property = MP_UML_Parameter_Is_Stream then
            --  Parameter::isStream : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Parameters.UML_Parameter_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Stream);

         elsif Property = MP_UML_Multiplicity_Element_Is_Unique then
            --  MultiplicityElement::isUnique : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Parameters.UML_Parameter_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Unique);

         elsif Property = MP_UML_Multiplicity_Element_Lower then
            --  MultiplicityElement::lower : Integer

            return
              AMF.Holders.To_Holder
               (AMF.UML.Parameters.UML_Parameter_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Lower);

         elsif Property = MP_UML_Multiplicity_Element_Lower_Value then
            --  MultiplicityElement::lowerValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Parameters.UML_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Lower_Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Parameters.UML_Parameter_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Parameters.UML_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Parameters.UML_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Parameter_Operation then
            --  Parameter::operation : Operation

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Operations.UML_Operation_Access'
                 (AMF.UML.Parameters.UML_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Operation));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Parameters.UML_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Parameters.UML_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Parameters.UML_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Parameters.UML_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Parameter_Parameter_Set then
            --  Parameter::parameterSet : ParameterSet

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Parameter_Sets.Collections.UML_Parameter_Set_Collections.Internal
                 (AMF.UML.Parameters.UML_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Parameter_Set));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Parameters.UML_Parameter_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Connectable_Element_Template_Parameter then
            --  ConnectableElement::templateParameter : ConnectableElementTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access'
                 (AMF.UML.Parameters.UML_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Parameters.UML_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Parameters.UML_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = MP_UML_Multiplicity_Element_Upper then
            --  MultiplicityElement::upper : UnlimitedNatural

            return
              AMF.Holders.To_Holder
               (AMF.UML.Parameters.UML_Parameter_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Upper);

         elsif Property = MP_UML_Multiplicity_Element_Upper_Value then
            --  MultiplicityElement::upperValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Parameters.UML_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Upper_Value));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Parameters.UML_Parameter_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Parameter_Get;

      -----------------------
      -- Parameter_Set_Get --
      -----------------------

      function Parameter_Set_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Parameter_Sets.UML_Parameter_Set_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Parameter_Set_Condition then
            --  ParameterSet::condition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Parameter_Sets.UML_Parameter_Set_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Condition));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Parameter_Sets.UML_Parameter_Set_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Parameter_Sets.UML_Parameter_Set_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Parameter_Sets.UML_Parameter_Set_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Parameter_Sets.UML_Parameter_Set_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Parameter_Sets.UML_Parameter_Set_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Parameter_Sets.UML_Parameter_Set_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameter_Set_Parameter then
            --  ParameterSet::parameter : Parameter

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Parameters.Collections.UML_Parameter_Collections.Internal
                 (AMF.UML.Parameter_Sets.UML_Parameter_Set_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Parameter_Sets.UML_Parameter_Set_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Parameter_Sets.UML_Parameter_Set_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Parameter_Set_Get;

      ----------------------------
      -- Part_Decomposition_Get --
      ----------------------------

      function Part_Decomposition_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Interaction_Use_Actual_Gate then
            --  InteractionUse::actualGate : Gate

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Gates.Collections.UML_Gate_Collections.Internal
                 (AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Actual_Gate));

         elsif Property = MP_UML_Interaction_Use_Argument then
            --  InteractionUse::argument : ValueSpecification

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Value_Specifications.Collections.UML_Value_Specification_Collections.Internal
                 (AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Argument));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Interaction_Fragment_Covered then
            --  InteractionFragment::covered : Lifeline

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Lifelines.Collections.UML_Lifeline_Collections.Internal
                 (AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Covered));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Interaction then
            --  InteractionFragment::enclosingInteraction : Interaction

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access'
                 (AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Interaction));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Operand then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access'
                 (AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Operand));

         elsif Property = MP_UML_Interaction_Fragment_General_Ordering then
            --  InteractionFragment::generalOrdering : GeneralOrdering

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internal
                 (AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General_Ordering));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Interaction_Use_Refers_To then
            --  InteractionUse::refersTo : Interaction

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access'
                 (AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Refers_To));

         elsif Property = MP_UML_Interaction_Use_Return_Value then
            --  InteractionUse::returnValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Return_Value));

         elsif Property = MP_UML_Interaction_Use_Return_Value_Recipient then
            --  InteractionUse::returnValueRecipient : Property

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access'
                 (AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Return_Value_Recipient));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Part_Decomposition_Get;

      --------------
      -- Port_Get --
      --------------

      function Port_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Property_Aggregation then
            --  Property::aggregation : AggregationKind

            return
              AMF.UML.Holders.Aggregation_Kinds.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Aggregation);

         elsif Property = MP_UML_Property_Association then
            --  Property::association : Association

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Associations.UML_Association_Access'
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Association));

         elsif Property = MP_UML_Property_Association_End then
            --  Property::associationEnd : Property

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access'
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Association_End));

         elsif Property = MP_UML_Property_Class then
            --  Property::class : Class

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classes.UML_Class_Access'
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Class));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Property_Datatype then
            --  Property::datatype : DataType

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access'
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Datatype));

         elsif Property = MP_UML_Property_Default then
            --  Property::default : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Default);

         elsif Property = MP_UML_Property_Default_Value then
            --  Property::defaultValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Default_Value));

         elsif Property = MP_UML_Deployment_Target_Deployed_Element then
            --  DeploymentTarget::deployedElement : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Deployed_Element));

         elsif Property = MP_UML_Deployment_Target_Deployment then
            --  DeploymentTarget::deployment : Deployment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Deployments.Collections.UML_Deployment_Collections.Internal
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Deployment));

         elsif Property = MP_UML_Connectable_Element_End then
            --  ConnectableElement::end : ConnectorEnd

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Connector_Ends.Collections.UML_Connector_End_Collections.Internal
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_End));

         elsif Property = MP_UML_Feature_Featuring_Classifier then
            --  Feature::featuringClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Featuring_Classifier));

         elsif Property = MP_UML_Property_Interface then
            --  Property::interface : Interface

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access'
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Interface));

         elsif Property = MP_UML_Port_Is_Behavior then
            --  Port::isBehavior : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Behavior);

         elsif Property = MP_UML_Property_Is_Composite then
            --  Property::isComposite : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Composite);

         elsif Property = MP_UML_Port_Is_Conjugated then
            --  Port::isConjugated : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Conjugated);

         elsif Property = MP_UML_Property_Is_Derived then
            --  Property::isDerived : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Derived);

         elsif Property = MP_UML_Property_Is_Derived_Union then
            --  Property::isDerivedUnion : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Derived_Union);

         elsif Property = MP_UML_Property_Is_ID then
            --  Property::isID : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_ID);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Multiplicity_Element_Is_Ordered then
            --  MultiplicityElement::isOrdered : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Ordered);

         elsif Property = MP_UML_Property_Is_Read_Only then
            --  Property::isReadOnly : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Read_Only);

         elsif Property = MP_UML_Structural_Feature_Is_Read_Only then
            --  StructuralFeature::isReadOnly : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Read_Only);

         elsif Property = MP_UML_Port_Is_Service then
            --  Port::isService : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Service);

         elsif Property = MP_UML_Feature_Is_Static then
            --  Feature::isStatic : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Static);

         elsif Property = MP_UML_Multiplicity_Element_Is_Unique then
            --  MultiplicityElement::isUnique : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Unique);

         elsif Property = MP_UML_Multiplicity_Element_Lower then
            --  MultiplicityElement::lower : Integer

            return
              AMF.Holders.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Lower);

         elsif Property = MP_UML_Multiplicity_Element_Lower_Value then
            --  MultiplicityElement::lowerValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Lower_Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Property_Opposite then
            --  Property::opposite : Property

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access'
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Opposite));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Property_Owning_Association then
            --  Property::owningAssociation : Association

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Associations.UML_Association_Access'
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Association));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Port_Protocol then
            --  Port::protocol : ProtocolStateMachine

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access'
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Protocol));

         elsif Property = MP_UML_Port_Provided then
            --  Port::provided : Interface

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interfaces.Collections.UML_Interface_Collections.Internal
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Provided));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Property_Qualifier then
            --  Property::qualifier : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Qualifier));

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Port_Redefined_Port then
            --  Port::redefinedPort : Port

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Ports.Collections.UML_Port_Collections.Internal
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Port));

         elsif Property = MP_UML_Property_Redefined_Property then
            --  Property::redefinedProperty : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Property));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Port_Required then
            --  Port::required : Interface

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interfaces.Collections.UML_Interface_Collections.Internal
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Required));

         elsif Property = MP_UML_Property_Subsetted_Property then
            --  Property::subsettedProperty : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Subsetted_Property));

         elsif Property = MP_UML_Connectable_Element_Template_Parameter then
            --  ConnectableElement::templateParameter : ConnectableElementTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access'
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = MP_UML_Multiplicity_Element_Upper then
            --  MultiplicityElement::upper : UnlimitedNatural

            return
              AMF.Holders.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Upper);

         elsif Property = MP_UML_Multiplicity_Element_Upper_Value then
            --  MultiplicityElement::upperValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Ports.UML_Port_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Upper_Value));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Ports.UML_Port_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Port_Get;

      ------------------------
      -- Primitive_Type_Get --
      ------------------------

      function Primitive_Type_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Classifier_Attribute then
            --  Classifier::attribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Classifier_Collaboration_Use then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internal
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_Classifier_Feature then
            --  Classifier::feature : Feature

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Features.Collections.UML_Feature_Collections.Internal
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Feature));

         elsif Property = MP_UML_Classifier_General then
            --  Classifier::general : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General));

         elsif Property = MP_UML_Classifier_Generalization then
            --  Classifier::generalization : Generalization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internal
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Classifier_Inherited_Member then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member));

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Data_Type_Owned_Attribute then
            --  DataType::ownedAttribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Data_Type_Owned_Operation then
            --  DataType::ownedOperation : Operation

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Operations.Collections.UML_Operation_Collections.Internal
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Operation));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Classifier_Owned_Use_Case then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Classifier_Powertype_Extent then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internal
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Classifier_Redefined_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier));

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = MP_UML_Classifier_Substitution then
            --  Classifier::substitution : Substitution

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internal
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution));

         elsif Property = MP_UML_Templateable_Element_Template_Binding then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internal
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Classifier_Use_Case then
            --  Classifier::useCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Primitive_Types.UML_Primitive_Type_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Primitive_Type_Get;

      -----------------
      -- Profile_Get --
      -----------------

      function Profile_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Package_URI then
            --  Package::URI : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Profiles.UML_Profile_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_URI);

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Profiles.UML_Profile_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Profiles.UML_Profile_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Profiles.UML_Profile_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Profiles.UML_Profile_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Profile_Metaclass_Reference then
            --  Profile::metaclassReference : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Profiles.UML_Profile_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Metaclass_Reference));

         elsif Property = MP_UML_Profile_Metamodel_Reference then
            --  Profile::metamodelReference : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Profiles.UML_Profile_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Metamodel_Reference));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Profiles.UML_Profile_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Profiles.UML_Profile_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Profiles.UML_Profile_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Package_Nested_Package then
            --  Package::nestedPackage : Package

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packages.Collections.UML_Package_Collections.Internal
                 (AMF.UML.Profiles.UML_Profile_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Package));

         elsif Property = MP_UML_Package_Nesting_Package then
            --  Package::nestingPackage : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Profiles.UML_Profile_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Nesting_Package));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Profiles.UML_Profile_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Profiles.UML_Profile_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Profiles.UML_Profile_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Profiles.UML_Profile_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Package_Owned_Stereotype then
            --  Package::ownedStereotype : Stereotype

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Stereotypes.Collections.UML_Stereotype_Collections.Internal
                 (AMF.UML.Profiles.UML_Profile_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Stereotype));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Profiles.UML_Profile_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Package_Owned_Type then
            --  Package::ownedType : Type

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Types.Collections.UML_Type_Collections.Internal
                 (AMF.UML.Profiles.UML_Profile_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Type));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Profiles.UML_Profile_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Profiles.UML_Profile_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Profiles.UML_Profile_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Package_Package_Merge then
            --  Package::packageMerge : PackageMerge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Merges.Collections.UML_Package_Merge_Collections.Internal
                 (AMF.UML.Profiles.UML_Profile_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Merge));

         elsif Property = MP_UML_Package_Packaged_Element then
            --  Package::packagedElement : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Profiles.UML_Profile_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Packaged_Element));

         elsif Property = MP_UML_Package_Profile_Application then
            --  Package::profileApplication : ProfileApplication

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Profile_Applications.Collections.UML_Profile_Application_Collections.Internal
                 (AMF.UML.Profiles.UML_Profile_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Profile_Application));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Profiles.UML_Profile_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Templateable_Element_Template_Binding then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internal
                 (AMF.UML.Profiles.UML_Profile_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Profiles.UML_Profile_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Profiles.UML_Profile_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Profiles.UML_Profile_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Profile_Get;

      -----------------------------
      -- Profile_Application_Get --
      -----------------------------

      function Profile_Application_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Profile_Application_Applied_Profile then
            --  ProfileApplication::appliedProfile : Profile

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Profiles.UML_Profile_Access'
                 (AMF.UML.Profile_Applications.UML_Profile_Application_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Applied_Profile));

         elsif Property = MP_UML_Profile_Application_Applying_Package then
            --  ProfileApplication::applyingPackage : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Profile_Applications.UML_Profile_Application_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Applying_Package));

         elsif Property = MP_UML_Profile_Application_Is_Strict then
            --  ProfileApplication::isStrict : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Profile_Applications.UML_Profile_Application_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Strict);

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Profile_Applications.UML_Profile_Application_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Profile_Applications.UML_Profile_Application_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Profile_Applications.UML_Profile_Application_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Relationship_Related_Element then
            --  Relationship::relatedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Profile_Applications.UML_Profile_Application_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element));

         elsif Property = MP_UML_Directed_Relationship_Source then
            --  DirectedRelationship::source : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Profile_Applications.UML_Profile_Application_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Source));

         elsif Property = MP_UML_Directed_Relationship_Target then
            --  DirectedRelationship::target : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Profile_Applications.UML_Profile_Application_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Target));

         else
            raise Program_Error;
         end if;
      end Profile_Application_Get;

      ------------------
      -- Property_Get --
      ------------------

      function Property_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Property_Aggregation then
            --  Property::aggregation : AggregationKind

            return
              AMF.UML.Holders.Aggregation_Kinds.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Aggregation);

         elsif Property = MP_UML_Property_Association then
            --  Property::association : Association

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Associations.UML_Association_Access'
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Association));

         elsif Property = MP_UML_Property_Association_End then
            --  Property::associationEnd : Property

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access'
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Association_End));

         elsif Property = MP_UML_Property_Class then
            --  Property::class : Class

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classes.UML_Class_Access'
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Class));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Property_Datatype then
            --  Property::datatype : DataType

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Data_Types.UML_Data_Type_Access'
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Datatype));

         elsif Property = MP_UML_Property_Default then
            --  Property::default : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Default);

         elsif Property = MP_UML_Property_Default_Value then
            --  Property::defaultValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Default_Value));

         elsif Property = MP_UML_Deployment_Target_Deployed_Element then
            --  DeploymentTarget::deployedElement : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Deployed_Element));

         elsif Property = MP_UML_Deployment_Target_Deployment then
            --  DeploymentTarget::deployment : Deployment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Deployments.Collections.UML_Deployment_Collections.Internal
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Deployment));

         elsif Property = MP_UML_Connectable_Element_End then
            --  ConnectableElement::end : ConnectorEnd

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Connector_Ends.Collections.UML_Connector_End_Collections.Internal
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_End));

         elsif Property = MP_UML_Feature_Featuring_Classifier then
            --  Feature::featuringClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Featuring_Classifier));

         elsif Property = MP_UML_Property_Interface then
            --  Property::interface : Interface

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interfaces.UML_Interface_Access'
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Interface));

         elsif Property = MP_UML_Property_Is_Composite then
            --  Property::isComposite : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Composite);

         elsif Property = MP_UML_Property_Is_Derived then
            --  Property::isDerived : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Derived);

         elsif Property = MP_UML_Property_Is_Derived_Union then
            --  Property::isDerivedUnion : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Derived_Union);

         elsif Property = MP_UML_Property_Is_ID then
            --  Property::isID : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_ID);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Multiplicity_Element_Is_Ordered then
            --  MultiplicityElement::isOrdered : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Ordered);

         elsif Property = MP_UML_Property_Is_Read_Only then
            --  Property::isReadOnly : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Read_Only);

         elsif Property = MP_UML_Structural_Feature_Is_Read_Only then
            --  StructuralFeature::isReadOnly : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Read_Only);

         elsif Property = MP_UML_Feature_Is_Static then
            --  Feature::isStatic : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Static);

         elsif Property = MP_UML_Multiplicity_Element_Is_Unique then
            --  MultiplicityElement::isUnique : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Unique);

         elsif Property = MP_UML_Multiplicity_Element_Lower then
            --  MultiplicityElement::lower : Integer

            return
              AMF.Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Lower);

         elsif Property = MP_UML_Multiplicity_Element_Lower_Value then
            --  MultiplicityElement::lowerValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Lower_Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Property_Opposite then
            --  Property::opposite : Property

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access'
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Opposite));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Property_Owning_Association then
            --  Property::owningAssociation : Association

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Associations.UML_Association_Access'
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Association));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Property_Qualifier then
            --  Property::qualifier : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Qualifier));

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Property_Redefined_Property then
            --  Property::redefinedProperty : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Property));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Property_Subsetted_Property then
            --  Property::subsettedProperty : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Subsetted_Property));

         elsif Property = MP_UML_Connectable_Element_Template_Parameter then
            --  ConnectableElement::templateParameter : ConnectableElementTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access'
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = MP_UML_Multiplicity_Element_Upper then
            --  MultiplicityElement::upper : UnlimitedNatural

            return
              AMF.Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Upper);

         elsif Property = MP_UML_Multiplicity_Element_Upper_Value then
            --  MultiplicityElement::upperValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Properties.UML_Property_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Upper_Value));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Property_Get;

      ------------------------------
      -- Protocol_Conformance_Get --
      ------------------------------

      function Protocol_Conformance_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Protocol_Conformance_General_Machine then
            --  ProtocolConformance::generalMachine : ProtocolStateMachine

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access'
                 (AMF.UML.Protocol_Conformances.UML_Protocol_Conformance_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General_Machine));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Protocol_Conformances.UML_Protocol_Conformance_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Protocol_Conformances.UML_Protocol_Conformance_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Protocol_Conformances.UML_Protocol_Conformance_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Relationship_Related_Element then
            --  Relationship::relatedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Protocol_Conformances.UML_Protocol_Conformance_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element));

         elsif Property = MP_UML_Directed_Relationship_Source then
            --  DirectedRelationship::source : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Protocol_Conformances.UML_Protocol_Conformance_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Source));

         elsif Property = MP_UML_Protocol_Conformance_Specific_Machine then
            --  ProtocolConformance::specificMachine : ProtocolStateMachine

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access'
                 (AMF.UML.Protocol_Conformances.UML_Protocol_Conformance_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Specific_Machine));

         elsif Property = MP_UML_Directed_Relationship_Target then
            --  DirectedRelationship::target : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Protocol_Conformances.UML_Protocol_Conformance_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Target));

         else
            raise Program_Error;
         end if;
      end Protocol_Conformance_Get;

      --------------------------------
      -- Protocol_State_Machine_Get --
      --------------------------------

      function Protocol_State_Machine_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Classifier_Attribute then
            --  Classifier::attribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute));

         elsif Property = MP_UML_Behaviored_Classifier_Classifier_Behavior then
            --  BehavioredClassifier::classifierBehavior : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier_Behavior));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Classifier_Collaboration_Use then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use));

         elsif Property = MP_UML_Protocol_State_Machine_Conformance then
            --  ProtocolStateMachine::conformance : ProtocolConformance

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Protocol_Conformances.Collections.UML_Protocol_Conformance_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Conformance));

         elsif Property = MP_UML_State_Machine_Connection_Point then
            --  StateMachine::connectionPoint : Pseudostate

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Pseudostates.Collections.UML_Pseudostate_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Connection_Point));

         elsif Property = MP_UML_Behavior_Context then
            --  Behavior::context : BehavioredClassifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviored_Classifiers.UML_Behaviored_Classifier_Access'
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_State_Machine_Extended_State_Machine then
            --  StateMachine::extendedStateMachine : StateMachine

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.State_Machines.Collections.UML_State_Machine_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Extended_State_Machine));

         elsif Property = MP_UML_Class_Extension then
            --  Class::extension : Extension

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Extensions.Collections.UML_Extension_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Extension));

         elsif Property = MP_UML_Classifier_Feature then
            --  Classifier::feature : Feature

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Features.Collections.UML_Feature_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Feature));

         elsif Property = MP_UML_Classifier_General then
            --  Classifier::general : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General));

         elsif Property = MP_UML_Classifier_Generalization then
            --  Classifier::generalization : Generalization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Classifier_Inherited_Member then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member));

         elsif Property = MP_UML_Behaviored_Classifier_Interface_Realization then
            --  BehavioredClassifier::interfaceRealization : InterfaceRealization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interface_Realizations.Collections.UML_Interface_Realization_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Interface_Realization));

         elsif Property = MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Active);

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Behavior_Is_Reentrant then
            --  Behavior::isReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Reentrant);

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Class_Nested_Classifier then
            --  Class::nestedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Classifier));

         elsif Property = MP_UML_Class_Owned_Attribute then
            --  Class::ownedAttribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute));

         elsif Property = MP_UML_Structured_Classifier_Owned_Attribute then
            --  StructuredClassifier::ownedAttribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute));

         elsif Property = MP_UML_Behaviored_Classifier_Owned_Behavior then
            --  BehavioredClassifier::ownedBehavior : Behavior

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Behavior));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Structured_Classifier_Owned_Connector then
            --  StructuredClassifier::ownedConnector : Connector

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Connectors.Collections.UML_Connector_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Connector));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Class_Owned_Operation then
            --  Class::ownedOperation : Operation

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Operations.Collections.UML_Operation_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Operation));

         elsif Property = MP_UML_Behavior_Owned_Parameter then
            --  Behavior::ownedParameter : Parameter

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Parameters.Collections.UML_Parameter_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parameter));

         elsif Property = MP_UML_Behavior_Owned_Parameter_Set then
            --  Behavior::ownedParameterSet : ParameterSet

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Parameter_Sets.Collections.UML_Parameter_Set_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parameter_Set));

         elsif Property = MP_UML_Encapsulated_Classifier_Owned_Port then
            --  EncapsulatedClassifier::ownedPort : Port

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Ports.Collections.UML_Port_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Port));

         elsif Property = MP_UML_Class_Owned_Reception then
            --  Class::ownedReception : Reception

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Receptions.Collections.UML_Reception_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Reception));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Classifier_Owned_Use_Case then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Structured_Classifier_Part then
            --  StructuredClassifier::part : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Part));

         elsif Property = MP_UML_Behavior_Postcondition then
            --  Behavior::postcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Postcondition));

         elsif Property = MP_UML_Classifier_Powertype_Extent then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent));

         elsif Property = MP_UML_Behavior_Precondition then
            --  Behavior::precondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Precondition));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Behavior_Redefined_Behavior then
            --  Behavior::redefinedBehavior : Behavior

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Behavior));

         elsif Property = MP_UML_Classifier_Redefined_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier));

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_State_Machine_Region then
            --  StateMachine::region : Region

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Regions.Collections.UML_Region_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Region));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = MP_UML_Structured_Classifier_Role then
            --  StructuredClassifier::role : ConnectableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Connectable_Elements.Collections.UML_Connectable_Element_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Role));

         elsif Property = MP_UML_Behavior_Specification then
            --  Behavior::specification : BehavioralFeature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behavioral_Features.UML_Behavioral_Feature_Access'
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Specification));

         elsif Property = MP_UML_State_Machine_Submachine_State then
            --  StateMachine::submachineState : State

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.States.Collections.UML_State_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Submachine_State));

         elsif Property = MP_UML_Classifier_Substitution then
            --  Classifier::substitution : Substitution

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution));

         elsif Property = MP_UML_Class_Super_Class then
            --  Class::superClass : Class

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classes.Collections.UML_Class_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Class));

         elsif Property = MP_UML_Templateable_Element_Template_Binding then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Classifier_Use_Case then
            --  Classifier::useCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Protocol_State_Machine_Get;

      -----------------------------
      -- Protocol_Transition_Get --
      -----------------------------

      function Protocol_Transition_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Transition_Container then
            --  Transition::container : Region

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Regions.UML_Region_Access'
                 (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Container));

         elsif Property = MP_UML_Transition_Effect then
            --  Transition::effect : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Effect));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_Transition_Guard then
            --  Transition::guard : Constraint

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Constraints.UML_Constraint_Access'
                 (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Guard));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Transition_Kind then
            --  Transition::kind : TransitionKind

            return
              AMF.UML.Holders.Transition_Kinds.To_Holder
               (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Kind);

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Protocol_Transition_Post_Condition then
            --  ProtocolTransition::postCondition : Constraint

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Constraints.UML_Constraint_Access'
                 (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Post_Condition));

         elsif Property = MP_UML_Protocol_Transition_Pre_Condition then
            --  ProtocolTransition::preCondition : Constraint

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Constraints.UML_Constraint_Access'
                 (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Pre_Condition));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Transition_Redefined_Transition then
            --  Transition::redefinedTransition : Transition

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Transitions.UML_Transition_Access'
                 (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Transition));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Transition_Redefinition_Context then
            --  Transition::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Protocol_Transition_Referred then
            --  ProtocolTransition::referred : Operation

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Operations.Collections.UML_Operation_Collections.Internal
                 (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Referred));

         elsif Property = MP_UML_Transition_Source then
            --  Transition::source : Vertex

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Vertexs.UML_Vertex_Access'
                 (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Source));

         elsif Property = MP_UML_Transition_Target then
            --  Transition::target : Vertex

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Vertexs.UML_Vertex_Access'
                 (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Target));

         elsif Property = MP_UML_Transition_Trigger then
            --  Transition::trigger : Trigger

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Triggers.Collections.UML_Trigger_Collections.Internal
                 (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Trigger));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Protocol_Transition_Get;

      ---------------------
      -- Pseudostate_Get --
      ---------------------

      function Pseudostate_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Pseudostates.UML_Pseudostate_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Vertex_Container then
            --  Vertex::container : Region

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Regions.UML_Region_Access'
                 (AMF.UML.Pseudostates.UML_Pseudostate_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Container));

         elsif Property = MP_UML_Vertex_Incoming then
            --  Vertex::incoming : Transition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Transitions.Collections.UML_Transition_Collections.Internal
                 (AMF.UML.Pseudostates.UML_Pseudostate_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Pseudostate_Kind then
            --  Pseudostate::kind : PseudostateKind

            return
              AMF.UML.Holders.Pseudostate_Kinds.To_Holder
               (AMF.UML.Pseudostates.UML_Pseudostate_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Kind);

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Pseudostates.UML_Pseudostate_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Pseudostates.UML_Pseudostate_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Pseudostates.UML_Pseudostate_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Vertex_Outgoing then
            --  Vertex::outgoing : Transition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Transitions.Collections.UML_Transition_Collections.Internal
                 (AMF.UML.Pseudostates.UML_Pseudostate_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Pseudostates.UML_Pseudostate_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Pseudostates.UML_Pseudostate_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Pseudostates.UML_Pseudostate_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Pseudostates.UML_Pseudostate_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Pseudostate_State then
            --  Pseudostate::state : State

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.States.UML_State_Access'
                 (AMF.UML.Pseudostates.UML_Pseudostate_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_State));

         elsif Property = MP_UML_Pseudostate_State_Machine then
            --  Pseudostate::stateMachine : StateMachine

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access'
                 (AMF.UML.Pseudostates.UML_Pseudostate_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_State_Machine));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Pseudostates.UML_Pseudostate_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Pseudostate_Get;

      -------------------------
      -- Qualifier_Value_Get --
      -------------------------

      function Qualifier_Value_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Qualifier_Values.UML_Qualifier_Value_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Qualifier_Values.UML_Qualifier_Value_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Qualifier_Values.UML_Qualifier_Value_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Qualifier_Value_Qualifier then
            --  QualifierValue::qualifier : Property

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access'
                 (AMF.UML.Qualifier_Values.UML_Qualifier_Value_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Qualifier));

         elsif Property = MP_UML_Qualifier_Value_Value then
            --  QualifierValue::value : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Qualifier_Values.UML_Qualifier_Value_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Value));

         else
            raise Program_Error;
         end if;
      end Qualifier_Value_Get;

      --------------------------------
      -- Raise_Exception_Action_Get --
      --------------------------------

      function Raise_Exception_Action_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Raise_Exception_Action_Exception then
            --  RaiseExceptionAction::exception : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Exception));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Raise_Exception_Action_Get;

      ----------------------------
      -- Read_Extent_Action_Get --
      ----------------------------

      function Read_Extent_Action_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Read_Extent_Action_Classifier then
            --  ReadExtentAction::classifier : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Read_Extent_Action_Result then
            --  ReadExtentAction::result : OutputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access'
                 (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Read_Extent_Action_Get;

      ------------------------------------------
      -- Read_Is_Classified_Object_Action_Get --
      ------------------------------------------

      function Read_Is_Classified_Object_Action_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Read_Is_Classified_Object_Action_Classifier then
            --  ReadIsClassifiedObjectAction::classifier : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Read_Is_Classified_Object_Action_Is_Direct then
            --  ReadIsClassifiedObjectAction::isDirect : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Direct);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Read_Is_Classified_Object_Action_Object then
            --  ReadIsClassifiedObjectAction::object : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Object));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Read_Is_Classified_Object_Action_Result then
            --  ReadIsClassifiedObjectAction::result : OutputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access'
                 (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Read_Is_Classified_Object_Action_Get;

      --------------------------
      -- Read_Link_Action_Get --
      --------------------------

      function Read_Link_Action_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Link_Action_End_Data then
            --  LinkAction::endData : LinkEndData

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Link_End_Datas.Collections.UML_Link_End_Data_Collections.Internal
                 (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_End_Data));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Link_Action_Input_Value then
            --  LinkAction::inputValue : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input_Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Read_Link_Action_Result then
            --  ReadLinkAction::result : OutputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access'
                 (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Read_Link_Action_Get;

      -------------------------------------
      -- Read_Link_Object_End_Action_Get --
      -------------------------------------

      function Read_Link_Object_End_Action_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Read_Link_Object_End_Action_End then
            --  ReadLinkObjectEndAction::end : Property

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access'
                 (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_End));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Read_Link_Object_End_Action_Object then
            --  ReadLinkObjectEndAction::object : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Object));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Read_Link_Object_End_Action_Result then
            --  ReadLinkObjectEndAction::result : OutputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access'
                 (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Read_Link_Object_End_Action_Get;

      -----------------------------------------------
      -- Read_Link_Object_End_Qualifier_Action_Get --
      -----------------------------------------------

      function Read_Link_Object_End_Qualifier_Action_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Read_Link_Object_End_Qualifier_Action_Object then
            --  ReadLinkObjectEndQualifierAction::object : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Object));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Read_Link_Object_End_Qualifier_Action_Qualifier then
            --  ReadLinkObjectEndQualifierAction::qualifier : Property

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Properties.UML_Property_Access'
                 (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Qualifier));

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Read_Link_Object_End_Qualifier_Action_Result then
            --  ReadLinkObjectEndQualifierAction::result : OutputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access'
                 (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Read_Link_Object_End_Qualifier_Action_Get;

      --------------------------
      -- Read_Self_Action_Get --
      --------------------------

      function Read_Self_Action_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Read_Self_Action_Result then
            --  ReadSelfAction::result : OutputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access'
                 (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Read_Self_Action_Get;

      ----------------------------------------
      -- Read_Structural_Feature_Action_Get --
      ----------------------------------------

      function Read_Structural_Feature_Action_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Structural_Feature_Action_Object then
            --  StructuralFeatureAction::object : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Object));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Read_Structural_Feature_Action_Result then
            --  ReadStructuralFeatureAction::result : OutputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access'
                 (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = MP_UML_Structural_Feature_Action_Structural_Feature then
            --  StructuralFeatureAction::structuralFeature : StructuralFeature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structural_Features.UML_Structural_Feature_Access'
                 (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Structural_Feature));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Read_Structural_Feature_Action_Get;

      ------------------------------
      -- Read_Variable_Action_Get --
      ------------------------------

      function Read_Variable_Action_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Read_Variable_Action_Result then
            --  ReadVariableAction::result : OutputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access'
                 (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = MP_UML_Variable_Action_Variable then
            --  VariableAction::variable : Variable

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Variables.UML_Variable_Access'
                 (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Variable));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Read_Variable_Action_Get;

      ---------------------
      -- Realization_Get --
      ---------------------

      function Realization_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Dependency_Client then
            --  Dependency::client : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Realizations.UML_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Realizations.UML_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Abstraction_Mapping then
            --  Abstraction::mapping : OpaqueExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access'
                 (AMF.UML.Realizations.UML_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Mapping));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Realizations.UML_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Realizations.UML_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Realizations.UML_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Realizations.UML_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Realizations.UML_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Realizations.UML_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Realizations.UML_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Realizations.UML_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Relationship_Related_Element then
            --  Relationship::relatedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Realizations.UML_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element));

         elsif Property = MP_UML_Directed_Relationship_Source then
            --  DirectedRelationship::source : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Realizations.UML_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Source));

         elsif Property = MP_UML_Dependency_Supplier then
            --  Dependency::supplier : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Realizations.UML_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Supplier));

         elsif Property = MP_UML_Directed_Relationship_Target then
            --  DirectedRelationship::target : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Realizations.UML_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Target));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Realizations.UML_Realization_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Realizations.UML_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Realizations.UML_Realization_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Realization_Get;

      -------------------
      -- Reception_Get --
      -------------------

      function Reception_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Receptions.UML_Reception_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Behavioral_Feature_Concurrency then
            --  BehavioralFeature::concurrency : CallConcurrencyKind

            return
              AMF.UML.Holders.Call_Concurrency_Kinds.To_Holder
               (AMF.UML.Receptions.UML_Reception_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Concurrency);

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Receptions.UML_Reception_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_Feature_Featuring_Classifier then
            --  Feature::featuringClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Receptions.UML_Reception_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Featuring_Classifier));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Receptions.UML_Reception_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Behavioral_Feature_Is_Abstract then
            --  BehavioralFeature::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Receptions.UML_Reception_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Receptions.UML_Reception_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Feature_Is_Static then
            --  Feature::isStatic : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Receptions.UML_Reception_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Static);

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Receptions.UML_Reception_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Behavioral_Feature_Method then
            --  BehavioralFeature::method : Behavior

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internal
                 (AMF.UML.Receptions.UML_Reception_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Method));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Receptions.UML_Reception_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Receptions.UML_Reception_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Receptions.UML_Reception_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Receptions.UML_Reception_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Receptions.UML_Reception_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Receptions.UML_Reception_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Behavioral_Feature_Owned_Parameter then
            --  BehavioralFeature::ownedParameter : Parameter

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Parameters.Collections.UML_Parameter_Collections.Internal
                 (AMF.UML.Receptions.UML_Reception_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parameter));

         elsif Property = MP_UML_Behavioral_Feature_Owned_Parameter_Set then
            --  BehavioralFeature::ownedParameterSet : ParameterSet

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Parameter_Sets.Collections.UML_Parameter_Set_Collections.Internal
                 (AMF.UML.Receptions.UML_Reception_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parameter_Set));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Receptions.UML_Reception_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Receptions.UML_Reception_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Receptions.UML_Reception_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Receptions.UML_Reception_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Behavioral_Feature_Raised_Exception then
            --  BehavioralFeature::raisedException : Type

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Types.Collections.UML_Type_Collections.Internal
                 (AMF.UML.Receptions.UML_Reception_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Raised_Exception));

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Receptions.UML_Reception_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Receptions.UML_Reception_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Reception_Signal then
            --  Reception::signal : Signal

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Signals.UML_Signal_Access'
                 (AMF.UML.Receptions.UML_Reception_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Signal));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Receptions.UML_Reception_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Reception_Get;

      ----------------------------------
      -- Reclassify_Object_Action_Get --
      ----------------------------------

      function Reclassify_Object_Action_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Reclassify_Object_Action_Is_Replace_All then
            --  ReclassifyObjectAction::isReplaceAll : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Replace_All);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Reclassify_Object_Action_New_Classifier then
            --  ReclassifyObjectAction::newClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_New_Classifier));

         elsif Property = MP_UML_Reclassify_Object_Action_Object then
            --  ReclassifyObjectAction::object : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Object));

         elsif Property = MP_UML_Reclassify_Object_Action_Old_Classifier then
            --  ReclassifyObjectAction::oldClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Old_Classifier));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Reclassify_Object_Action_Get;

      ----------------------------------------
      -- Redefinable_Template_Signature_Get --
      ----------------------------------------

      function Redefinable_Template_Signature_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Redefinable_Template_Signature_Classifier then
            --  RedefinableTemplateSignature::classifier : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Redefinable_Template_Signature_Extended_Signature then
            --  RedefinableTemplateSignature::extendedSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.Collections.UML_Redefinable_Template_Signature_Collections.Internal
                 (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Extended_Signature));

         elsif Property = MP_UML_Redefinable_Template_Signature_Inherited_Parameter then
            --  RedefinableTemplateSignature::inheritedParameter : TemplateParameter

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Template_Parameters.Collections.UML_Template_Parameter_Collections.Internal
                 (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Parameter));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Template_Signature_Owned_Parameter then
            --  TemplateSignature::ownedParameter : TemplateParameter

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Template_Parameters.Collections.UML_Template_Parameter_Collections.Internal
                 (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parameter));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Template_Signature_Parameter then
            --  TemplateSignature::parameter : TemplateParameter

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Template_Parameters.Collections.UML_Template_Parameter_Collections.Internal
                 (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Template_Signature_Template then
            --  TemplateSignature::template : TemplateableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Templateable_Elements.UML_Templateable_Element_Access'
                 (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Redefinable_Template_Signature_Get;

      -----------------------
      -- Reduce_Action_Get --
      -----------------------

      function Reduce_Action_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Reduce_Action_Collection then
            --  ReduceAction::collection : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Collection));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Reduce_Action_Is_Ordered then
            --  ReduceAction::isOrdered : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Ordered);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Reduce_Action_Reducer then
            --  ReduceAction::reducer : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Reducer));

         elsif Property = MP_UML_Reduce_Action_Result then
            --  ReduceAction::result : OutputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access'
                 (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Reduce_Action_Get;

      ----------------
      -- Region_Get --
      ----------------

      function Region_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Regions.UML_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Regions.UML_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_Region_Extended_Region then
            --  Region::extendedRegion : Region

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Regions.UML_Region_Access'
                 (AMF.UML.Regions.UML_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Extended_Region));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Regions.UML_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Regions.UML_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Regions.UML_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Regions.UML_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Regions.UML_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Regions.UML_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Regions.UML_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Regions.UML_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Regions.UML_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Regions.UML_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Regions.UML_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Regions.UML_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Regions.UML_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Regions.UML_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Regions.UML_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Region_Redefinition_Context then
            --  Region::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Regions.UML_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Region_State then
            --  Region::state : State

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.States.UML_State_Access'
                 (AMF.UML.Regions.UML_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_State));

         elsif Property = MP_UML_Region_State_Machine then
            --  Region::stateMachine : StateMachine

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access'
                 (AMF.UML.Regions.UML_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_State_Machine));

         elsif Property = MP_UML_Region_Subvertex then
            --  Region::subvertex : Vertex

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Vertexs.Collections.UML_Vertex_Collections.Internal
                 (AMF.UML.Regions.UML_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Subvertex));

         elsif Property = MP_UML_Region_Transition then
            --  Region::transition : Transition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Transitions.Collections.UML_Transition_Collections.Internal
                 (AMF.UML.Regions.UML_Region_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Transition));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Regions.UML_Region_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Region_Get;

      ------------------------------------------------
      -- Remove_Structural_Feature_Value_Action_Get --
      ------------------------------------------------

      function Remove_Structural_Feature_Value_Action_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Remove_Structural_Feature_Value_Action_Is_Remove_Duplicates then
            --  RemoveStructuralFeatureValueAction::isRemoveDuplicates : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Remove_Duplicates);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Structural_Feature_Action_Object then
            --  StructuralFeatureAction::object : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Object));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Remove_Structural_Feature_Value_Action_Remove_At then
            --  RemoveStructuralFeatureValueAction::removeAt : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Remove_At));

         elsif Property = MP_UML_Write_Structural_Feature_Action_Result then
            --  WriteStructuralFeatureAction::result : OutputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access'
                 (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = MP_UML_Structural_Feature_Action_Structural_Feature then
            --  StructuralFeatureAction::structuralFeature : StructuralFeature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structural_Features.UML_Structural_Feature_Access'
                 (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Structural_Feature));

         elsif Property = MP_UML_Write_Structural_Feature_Action_Value then
            --  WriteStructuralFeatureAction::value : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Value));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Remove_Structural_Feature_Value_Action_Get;

      --------------------------------------
      -- Remove_Variable_Value_Action_Get --
      --------------------------------------

      function Remove_Variable_Value_Action_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Remove_Variable_Value_Action_Is_Remove_Duplicates then
            --  RemoveVariableValueAction::isRemoveDuplicates : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Remove_Duplicates);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Remove_Variable_Value_Action_Remove_At then
            --  RemoveVariableValueAction::removeAt : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Remove_At));

         elsif Property = MP_UML_Write_Variable_Action_Value then
            --  WriteVariableAction::value : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Value));

         elsif Property = MP_UML_Variable_Action_Variable then
            --  VariableAction::variable : Variable

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Variables.UML_Variable_Access'
                 (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Variable));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Remove_Variable_Value_Action_Get;

      ----------------------
      -- Reply_Action_Get --
      ----------------------

      function Reply_Action_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Reply_Action_Reply_To_Call then
            --  ReplyAction::replyToCall : Trigger

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Triggers.UML_Trigger_Access'
                 (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Reply_To_Call));

         elsif Property = MP_UML_Reply_Action_Reply_Value then
            --  ReplyAction::replyValue : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Reply_Value));

         elsif Property = MP_UML_Reply_Action_Return_Information then
            --  ReplyAction::returnInformation : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Return_Information));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Reply_Actions.UML_Reply_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Reply_Action_Get;

      ----------------------------
      -- Send_Object_Action_Get --
      ----------------------------

      function Send_Object_Action_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Invocation_Action_Argument then
            --  InvocationAction::argument : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Argument));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Invocation_Action_On_Port then
            --  InvocationAction::onPort : Port

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Ports.UML_Port_Access'
                 (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_On_Port));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Send_Object_Action_Request then
            --  SendObjectAction::request : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Request));

         elsif Property = MP_UML_Send_Object_Action_Target then
            --  SendObjectAction::target : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Target));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Send_Object_Action_Get;

      ----------------------------
      -- Send_Signal_Action_Get --
      ----------------------------

      function Send_Signal_Action_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Invocation_Action_Argument then
            --  InvocationAction::argument : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Argument));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Invocation_Action_On_Port then
            --  InvocationAction::onPort : Port

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Ports.UML_Port_Access'
                 (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_On_Port));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Send_Signal_Action_Signal then
            --  SendSignalAction::signal : Signal

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Signals.UML_Signal_Access'
                 (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Signal));

         elsif Property = MP_UML_Send_Signal_Action_Target then
            --  SendSignalAction::target : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Target));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Send_Signal_Action_Get;

      -----------------------
      -- Sequence_Node_Get --
      -----------------------

      function Sequence_Node_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Structured_Activity_Node_Activity then
            --  StructuredActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Activity_Group_Contained_Edge then
            --  ActivityGroup::containedEdge : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Contained_Edge));

         elsif Property = MP_UML_Activity_Group_Contained_Node then
            --  ActivityGroup::containedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Contained_Node));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Structured_Activity_Node_Edge then
            --  StructuredActivityNode::edge : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Edge));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_Sequence_Node_Executable_Node then
            --  SequenceNode::executableNode : ExecutableNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Executable_Nodes.Collections.UML_Executable_Node_Collections.Internal
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Executable_Node));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Activity_Group_In_Activity then
            --  ActivityGroup::inActivity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Activity));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Structured_Activity_Node_Must_Isolate then
            --  StructuredActivityNode::mustIsolate : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Must_Isolate);

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Structured_Activity_Node_Node then
            --  StructuredActivityNode::node : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Node));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Structured_Activity_Node_Structured_Node_Input then
            --  StructuredActivityNode::structuredNodeInput : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Structured_Node_Input));

         elsif Property = MP_UML_Structured_Activity_Node_Structured_Node_Output then
            --  StructuredActivityNode::structuredNodeOutput : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Structured_Node_Output));

         elsif Property = MP_UML_Activity_Group_Subgroup then
            --  ActivityGroup::subgroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Subgroup));

         elsif Property = MP_UML_Activity_Group_Super_Group then
            --  ActivityGroup::superGroup : ActivityGroup

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activity_Groups.UML_Activity_Group_Access'
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Group));

         elsif Property = MP_UML_Structured_Activity_Node_Variable then
            --  StructuredActivityNode::variable : Variable

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Variables.Collections.UML_Variable_Collections.Internal
                 (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Variable));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Sequence_Node_Get;

      ----------------
      -- Signal_Get --
      ----------------

      function Signal_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Classifier_Attribute then
            --  Classifier::attribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Classifier_Collaboration_Use then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internal
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_Classifier_Feature then
            --  Classifier::feature : Feature

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Features.Collections.UML_Feature_Collections.Internal
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Feature));

         elsif Property = MP_UML_Classifier_General then
            --  Classifier::general : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General));

         elsif Property = MP_UML_Classifier_Generalization then
            --  Classifier::generalization : Generalization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internal
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Classifier_Inherited_Member then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member));

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Signals.UML_Signal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Signals.UML_Signal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Signals.UML_Signal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Signals.UML_Signal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Signal_Owned_Attribute then
            --  Signal::ownedAttribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Classifier_Owned_Use_Case then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Classifier_Powertype_Extent then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internal
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Signals.UML_Signal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Classifier_Redefined_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier));

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = MP_UML_Classifier_Substitution then
            --  Classifier::substitution : Substitution

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internal
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution));

         elsif Property = MP_UML_Templateable_Element_Template_Binding then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internal
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Classifier_Use_Case then
            --  Classifier::useCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Signals.UML_Signal_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Signals.UML_Signal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Signals.UML_Signal_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Signal_Get;

      ----------------------
      -- Signal_Event_Get --
      ----------------------

      function Signal_Event_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Signal_Events.UML_Signal_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Signal_Events.UML_Signal_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Signal_Events.UML_Signal_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Signal_Events.UML_Signal_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Signal_Events.UML_Signal_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Signal_Events.UML_Signal_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Signal_Events.UML_Signal_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Signal_Events.UML_Signal_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Signal_Events.UML_Signal_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Signal_Event_Signal then
            --  SignalEvent::signal : Signal

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Signals.UML_Signal_Access'
                 (AMF.UML.Signal_Events.UML_Signal_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Signal));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Signal_Events.UML_Signal_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Signal_Events.UML_Signal_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Signal_Events.UML_Signal_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Signal_Event_Get;

      --------------
      -- Slot_Get --
      --------------

      function Slot_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Slot_Defining_Feature then
            --  Slot::definingFeature : StructuralFeature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structural_Features.UML_Structural_Feature_Access'
                 (AMF.UML.Slots.UML_Slot_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Defining_Feature));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Slots.UML_Slot_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Slots.UML_Slot_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Slots.UML_Slot_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Slot_Owning_Instance then
            --  Slot::owningInstance : InstanceSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access'
                 (AMF.UML.Slots.UML_Slot_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Instance));

         elsif Property = MP_UML_Slot_Value then
            --  Slot::value : ValueSpecification

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Value_Specifications.Collections.UML_Value_Specification_Collections.Internal
                 (AMF.UML.Slots.UML_Slot_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Value));

         else
            raise Program_Error;
         end if;
      end Slot_Get;

      ------------------------------------------
      -- Start_Classifier_Behavior_Action_Get --
      ------------------------------------------

      function Start_Classifier_Behavior_Action_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Start_Classifier_Behavior_Action_Object then
            --  StartClassifierBehaviorAction::object : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Object));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Start_Classifier_Behavior_Action_Get;

      --------------------------------------
      -- Start_Object_Behavior_Action_Get --
      --------------------------------------

      function Start_Object_Behavior_Action_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Invocation_Action_Argument then
            --  InvocationAction::argument : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Argument));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Call_Action_Is_Synchronous then
            --  CallAction::isSynchronous : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Synchronous);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Start_Object_Behavior_Action_Object then
            --  StartObjectBehaviorAction::object : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Object));

         elsif Property = MP_UML_Invocation_Action_On_Port then
            --  InvocationAction::onPort : Port

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Ports.UML_Port_Access'
                 (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_On_Port));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Call_Action_Result then
            --  CallAction::result : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Start_Object_Behavior_Action_Get;

      ---------------
      -- State_Get --
      ---------------

      function State_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.States.UML_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_State_Connection then
            --  State::connection : ConnectionPointReference

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Connection_Point_References.Collections.UML_Connection_Point_Reference_Collections.Internal
                 (AMF.UML.States.UML_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Connection));

         elsif Property = MP_UML_State_Connection_Point then
            --  State::connectionPoint : Pseudostate

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Pseudostates.Collections.UML_Pseudostate_Collections.Internal
                 (AMF.UML.States.UML_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Connection_Point));

         elsif Property = MP_UML_Vertex_Container then
            --  Vertex::container : Region

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Regions.UML_Region_Access'
                 (AMF.UML.States.UML_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Container));

         elsif Property = MP_UML_State_Deferrable_Trigger then
            --  State::deferrableTrigger : Trigger

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Triggers.Collections.UML_Trigger_Collections.Internal
                 (AMF.UML.States.UML_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Deferrable_Trigger));

         elsif Property = MP_UML_State_Do_Activity then
            --  State::doActivity : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.States.UML_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Do_Activity));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.States.UML_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_State_Entry then
            --  State::entry : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.States.UML_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Entry));

         elsif Property = MP_UML_State_Exit then
            --  State::exit : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.States.UML_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Exit));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.States.UML_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Vertex_Incoming then
            --  Vertex::incoming : Transition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Transitions.Collections.UML_Transition_Collections.Internal
                 (AMF.UML.States.UML_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_State_Is_Composite then
            --  State::isComposite : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.States.UML_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Composite);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.States.UML_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_State_Is_Orthogonal then
            --  State::isOrthogonal : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.States.UML_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Orthogonal);

         elsif Property = MP_UML_State_Is_Simple then
            --  State::isSimple : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.States.UML_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Simple);

         elsif Property = MP_UML_State_Is_Submachine_State then
            --  State::isSubmachineState : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.States.UML_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Submachine_State);

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.States.UML_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.States.UML_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.States.UML_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.States.UML_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Vertex_Outgoing then
            --  Vertex::outgoing : Transition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Transitions.Collections.UML_Transition_Collections.Internal
                 (AMF.UML.States.UML_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.States.UML_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.States.UML_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.States.UML_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.States.UML_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.States.UML_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.States.UML_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.States.UML_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.States.UML_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_State_Redefined_State then
            --  State::redefinedState : State

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.States.UML_State_Access'
                 (AMF.UML.States.UML_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_State));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.States.UML_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_State_Redefinition_Context then
            --  State::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.States.UML_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_State_Region then
            --  State::region : Region

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Regions.Collections.UML_Region_Collections.Internal
                 (AMF.UML.States.UML_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Region));

         elsif Property = MP_UML_State_State_Invariant then
            --  State::stateInvariant : Constraint

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Constraints.UML_Constraint_Access'
                 (AMF.UML.States.UML_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_State_Invariant));

         elsif Property = MP_UML_State_Submachine then
            --  State::submachine : StateMachine

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access'
                 (AMF.UML.States.UML_State_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Submachine));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.States.UML_State_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end State_Get;

      -------------------------
      -- State_Invariant_Get --
      -------------------------

      function State_Invariant_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.State_Invariants.UML_State_Invariant_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Interaction_Fragment_Covered then
            --  InteractionFragment::covered : Lifeline

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Lifelines.Collections.UML_Lifeline_Collections.Internal
                 (AMF.UML.State_Invariants.UML_State_Invariant_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Covered));

         elsif Property = MP_UML_State_Invariant_Covered then
            --  StateInvariant::covered : Lifeline

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Lifelines.UML_Lifeline_Access'
                 (AMF.UML.State_Invariants.UML_State_Invariant_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Covered));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Interaction then
            --  InteractionFragment::enclosingInteraction : Interaction

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interactions.UML_Interaction_Access'
                 (AMF.UML.State_Invariants.UML_State_Invariant_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Interaction));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Operand then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access'
                 (AMF.UML.State_Invariants.UML_State_Invariant_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Enclosing_Operand));

         elsif Property = MP_UML_Interaction_Fragment_General_Ordering then
            --  InteractionFragment::generalOrdering : GeneralOrdering

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.General_Orderings.Collections.UML_General_Ordering_Collections.Internal
                 (AMF.UML.State_Invariants.UML_State_Invariant_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General_Ordering));

         elsif Property = MP_UML_State_Invariant_Invariant then
            --  StateInvariant::invariant : Constraint

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Constraints.UML_Constraint_Access'
                 (AMF.UML.State_Invariants.UML_State_Invariant_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Invariant));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.State_Invariants.UML_State_Invariant_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.State_Invariants.UML_State_Invariant_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.State_Invariants.UML_State_Invariant_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.State_Invariants.UML_State_Invariant_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.State_Invariants.UML_State_Invariant_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.State_Invariants.UML_State_Invariant_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.State_Invariants.UML_State_Invariant_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.State_Invariants.UML_State_Invariant_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end State_Invariant_Get;

      -----------------------
      -- State_Machine_Get --
      -----------------------

      function State_Machine_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Classifier_Attribute then
            --  Classifier::attribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute));

         elsif Property = MP_UML_Behaviored_Classifier_Classifier_Behavior then
            --  BehavioredClassifier::classifierBehavior : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier_Behavior));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Classifier_Collaboration_Use then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use));

         elsif Property = MP_UML_State_Machine_Connection_Point then
            --  StateMachine::connectionPoint : Pseudostate

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Pseudostates.Collections.UML_Pseudostate_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Connection_Point));

         elsif Property = MP_UML_Behavior_Context then
            --  Behavior::context : BehavioredClassifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviored_Classifiers.UML_Behaviored_Classifier_Access'
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_State_Machine_Extended_State_Machine then
            --  StateMachine::extendedStateMachine : StateMachine

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.State_Machines.Collections.UML_State_Machine_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Extended_State_Machine));

         elsif Property = MP_UML_Class_Extension then
            --  Class::extension : Extension

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Extensions.Collections.UML_Extension_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Extension));

         elsif Property = MP_UML_Classifier_Feature then
            --  Classifier::feature : Feature

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Features.Collections.UML_Feature_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Feature));

         elsif Property = MP_UML_Classifier_General then
            --  Classifier::general : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General));

         elsif Property = MP_UML_Classifier_Generalization then
            --  Classifier::generalization : Generalization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Classifier_Inherited_Member then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member));

         elsif Property = MP_UML_Behaviored_Classifier_Interface_Realization then
            --  BehavioredClassifier::interfaceRealization : InterfaceRealization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interface_Realizations.Collections.UML_Interface_Realization_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Interface_Realization));

         elsif Property = MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Active);

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Behavior_Is_Reentrant then
            --  Behavior::isReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Reentrant);

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Class_Nested_Classifier then
            --  Class::nestedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Classifier));

         elsif Property = MP_UML_Class_Owned_Attribute then
            --  Class::ownedAttribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute));

         elsif Property = MP_UML_Structured_Classifier_Owned_Attribute then
            --  StructuredClassifier::ownedAttribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute));

         elsif Property = MP_UML_Behaviored_Classifier_Owned_Behavior then
            --  BehavioredClassifier::ownedBehavior : Behavior

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Behavior));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Structured_Classifier_Owned_Connector then
            --  StructuredClassifier::ownedConnector : Connector

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Connectors.Collections.UML_Connector_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Connector));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Class_Owned_Operation then
            --  Class::ownedOperation : Operation

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Operations.Collections.UML_Operation_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Operation));

         elsif Property = MP_UML_Behavior_Owned_Parameter then
            --  Behavior::ownedParameter : Parameter

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Parameters.Collections.UML_Parameter_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parameter));

         elsif Property = MP_UML_Behavior_Owned_Parameter_Set then
            --  Behavior::ownedParameterSet : ParameterSet

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Parameter_Sets.Collections.UML_Parameter_Set_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parameter_Set));

         elsif Property = MP_UML_Encapsulated_Classifier_Owned_Port then
            --  EncapsulatedClassifier::ownedPort : Port

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Ports.Collections.UML_Port_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Port));

         elsif Property = MP_UML_Class_Owned_Reception then
            --  Class::ownedReception : Reception

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Receptions.Collections.UML_Reception_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Reception));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Classifier_Owned_Use_Case then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Structured_Classifier_Part then
            --  StructuredClassifier::part : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Part));

         elsif Property = MP_UML_Behavior_Postcondition then
            --  Behavior::postcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Postcondition));

         elsif Property = MP_UML_Classifier_Powertype_Extent then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent));

         elsif Property = MP_UML_Behavior_Precondition then
            --  Behavior::precondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Precondition));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Behavior_Redefined_Behavior then
            --  Behavior::redefinedBehavior : Behavior

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Behavior));

         elsif Property = MP_UML_Classifier_Redefined_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier));

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_State_Machine_Region then
            --  StateMachine::region : Region

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Regions.Collections.UML_Region_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Region));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = MP_UML_Structured_Classifier_Role then
            --  StructuredClassifier::role : ConnectableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Connectable_Elements.Collections.UML_Connectable_Element_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Role));

         elsif Property = MP_UML_Behavior_Specification then
            --  Behavior::specification : BehavioralFeature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behavioral_Features.UML_Behavioral_Feature_Access'
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Specification));

         elsif Property = MP_UML_State_Machine_Submachine_State then
            --  StateMachine::submachineState : State

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.States.Collections.UML_State_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Submachine_State));

         elsif Property = MP_UML_Classifier_Substitution then
            --  Classifier::substitution : Substitution

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution));

         elsif Property = MP_UML_Class_Super_Class then
            --  Class::superClass : Class

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classes.Collections.UML_Class_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Class));

         elsif Property = MP_UML_Templateable_Element_Template_Binding then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Classifier_Use_Case then
            --  Classifier::useCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.State_Machines.UML_State_Machine_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.State_Machines.UML_State_Machine_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end State_Machine_Get;

      --------------------
      -- Stereotype_Get --
      --------------------

      function Stereotype_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Classifier_Attribute then
            --  Classifier::attribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute));

         elsif Property = MP_UML_Behaviored_Classifier_Classifier_Behavior then
            --  BehavioredClassifier::classifierBehavior : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier_Behavior));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Classifier_Collaboration_Use then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internal
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_Class_Extension then
            --  Class::extension : Extension

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Extensions.Collections.UML_Extension_Collections.Internal
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Extension));

         elsif Property = MP_UML_Classifier_Feature then
            --  Classifier::feature : Feature

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Features.Collections.UML_Feature_Collections.Internal
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Feature));

         elsif Property = MP_UML_Classifier_General then
            --  Classifier::general : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General));

         elsif Property = MP_UML_Classifier_Generalization then
            --  Classifier::generalization : Generalization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internal
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization));

         elsif Property = MP_UML_Stereotype_Icon then
            --  Stereotype::icon : Image

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Images.Collections.UML_Image_Collections.Internal
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Icon));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Classifier_Inherited_Member then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member));

         elsif Property = MP_UML_Behaviored_Classifier_Interface_Realization then
            --  BehavioredClassifier::interfaceRealization : InterfaceRealization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interface_Realizations.Collections.UML_Interface_Realization_Collections.Internal
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Interface_Realization));

         elsif Property = MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Active);

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Class_Nested_Classifier then
            --  Class::nestedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Nested_Classifier));

         elsif Property = MP_UML_Class_Owned_Attribute then
            --  Class::ownedAttribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute));

         elsif Property = MP_UML_Structured_Classifier_Owned_Attribute then
            --  StructuredClassifier::ownedAttribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Attribute));

         elsif Property = MP_UML_Behaviored_Classifier_Owned_Behavior then
            --  BehavioredClassifier::ownedBehavior : Behavior

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internal
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Behavior));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Structured_Classifier_Owned_Connector then
            --  StructuredClassifier::ownedConnector : Connector

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Connectors.Collections.UML_Connector_Collections.Internal
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Connector));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Class_Owned_Operation then
            --  Class::ownedOperation : Operation

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Operations.Collections.UML_Operation_Collections.Internal
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Operation));

         elsif Property = MP_UML_Encapsulated_Classifier_Owned_Port then
            --  EncapsulatedClassifier::ownedPort : Port

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Ports.Collections.UML_Port_Collections.Internal
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Port));

         elsif Property = MP_UML_Class_Owned_Reception then
            --  Class::ownedReception : Reception

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Receptions.Collections.UML_Reception_Collections.Internal
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Reception));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Classifier_Owned_Use_Case then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Structured_Classifier_Part then
            --  StructuredClassifier::part : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Part));

         elsif Property = MP_UML_Classifier_Powertype_Extent then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internal
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent));

         elsif Property = MP_UML_Stereotype_Profile then
            --  Stereotype::profile : Profile

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Profiles.UML_Profile_Access'
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Profile));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Classifier_Redefined_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier));

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = MP_UML_Structured_Classifier_Role then
            --  StructuredClassifier::role : ConnectableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Connectable_Elements.Collections.UML_Connectable_Element_Collections.Internal
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Role));

         elsif Property = MP_UML_Classifier_Substitution then
            --  Classifier::substitution : Substitution

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internal
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution));

         elsif Property = MP_UML_Class_Super_Class then
            --  Class::superClass : Class

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classes.Collections.UML_Class_Collections.Internal
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Class));

         elsif Property = MP_UML_Templateable_Element_Template_Binding then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internal
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Classifier_Use_Case then
            --  Classifier::useCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Stereotypes.UML_Stereotype_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Stereotypes.UML_Stereotype_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Stereotype_Get;

      ---------------------------
      -- String_Expression_Get --
      ---------------------------

      function String_Expression_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.String_Expressions.UML_String_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.String_Expressions.UML_String_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.String_Expressions.UML_String_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Expression_Operand then
            --  Expression::operand : ValueSpecification

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Value_Specifications.Collections.UML_Value_Specification_Collections.Internal
                 (AMF.UML.String_Expressions.UML_String_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Operand));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.String_Expressions.UML_String_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.String_Expressions.UML_String_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.String_Expressions.UML_String_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.String_Expressions.UML_String_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_String_Expression_Owning_Expression then
            --  StringExpression::owningExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.String_Expressions.UML_String_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Expression));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.String_Expressions.UML_String_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_String_Expression_Sub_Expression then
            --  StringExpression::subExpression : StringExpression

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.String_Expressions.Collections.UML_String_Expression_Collections.Internal
                 (AMF.UML.String_Expressions.UML_String_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Sub_Expression));

         elsif Property = MP_UML_Expression_Symbol then
            --  Expression::symbol : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Symbol);

         elsif Property = MP_UML_Templateable_Element_Template_Binding then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internal
                 (AMF.UML.String_Expressions.UML_String_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.String_Expressions.UML_String_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.String_Expressions.UML_String_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end String_Expression_Get;

      ----------------------------------
      -- Structured_Activity_Node_Get --
      ----------------------------------

      function Structured_Activity_Node_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Structured_Activity_Node_Activity then
            --  StructuredActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Activity_Group_Contained_Edge then
            --  ActivityGroup::containedEdge : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Contained_Edge));

         elsif Property = MP_UML_Activity_Group_Contained_Node then
            --  ActivityGroup::containedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Contained_Node));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Structured_Activity_Node_Edge then
            --  StructuredActivityNode::edge : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Edge));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Activity_Group_In_Activity then
            --  ActivityGroup::inActivity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Activity));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Structured_Activity_Node_Must_Isolate then
            --  StructuredActivityNode::mustIsolate : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Must_Isolate);

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Structured_Activity_Node_Node then
            --  StructuredActivityNode::node : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Node));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Structured_Activity_Node_Structured_Node_Input then
            --  StructuredActivityNode::structuredNodeInput : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Structured_Node_Input));

         elsif Property = MP_UML_Structured_Activity_Node_Structured_Node_Output then
            --  StructuredActivityNode::structuredNodeOutput : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Structured_Node_Output));

         elsif Property = MP_UML_Activity_Group_Subgroup then
            --  ActivityGroup::subgroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Subgroup));

         elsif Property = MP_UML_Activity_Group_Super_Group then
            --  ActivityGroup::superGroup : ActivityGroup

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activity_Groups.UML_Activity_Group_Access'
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Super_Group));

         elsif Property = MP_UML_Structured_Activity_Node_Variable then
            --  StructuredActivityNode::variable : Variable

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Variables.Collections.UML_Variable_Collections.Internal
                 (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Variable));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Structured_Activity_Node_Get;

      ----------------------
      -- Substitution_Get --
      ----------------------

      function Substitution_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Dependency_Client then
            --  Dependency::client : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Substitutions.UML_Substitution_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Substitutions.UML_Substitution_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Substitution_Contract then
            --  Substitution::contract : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Substitutions.UML_Substitution_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Contract));

         elsif Property = MP_UML_Abstraction_Mapping then
            --  Abstraction::mapping : OpaqueExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access'
                 (AMF.UML.Substitutions.UML_Substitution_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Mapping));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Substitutions.UML_Substitution_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Substitutions.UML_Substitution_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Substitutions.UML_Substitution_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Substitutions.UML_Substitution_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Substitutions.UML_Substitution_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Substitutions.UML_Substitution_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Substitutions.UML_Substitution_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Substitutions.UML_Substitution_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Relationship_Related_Element then
            --  Relationship::relatedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Substitutions.UML_Substitution_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element));

         elsif Property = MP_UML_Directed_Relationship_Source then
            --  DirectedRelationship::source : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Substitutions.UML_Substitution_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Source));

         elsif Property = MP_UML_Substitution_Substituting_Classifier then
            --  Substitution::substitutingClassifier : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Substitutions.UML_Substitution_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Substituting_Classifier));

         elsif Property = MP_UML_Dependency_Supplier then
            --  Dependency::supplier : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Substitutions.UML_Substitution_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Supplier));

         elsif Property = MP_UML_Directed_Relationship_Target then
            --  DirectedRelationship::target : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Substitutions.UML_Substitution_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Target));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Substitutions.UML_Substitution_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Substitutions.UML_Substitution_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Substitutions.UML_Substitution_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Substitution_Get;

      --------------------------
      -- Template_Binding_Get --
      --------------------------

      function Template_Binding_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Template_Binding_Bound_Element then
            --  TemplateBinding::boundElement : TemplateableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Templateable_Elements.UML_Templateable_Element_Access'
                 (AMF.UML.Template_Bindings.UML_Template_Binding_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Bound_Element));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Template_Bindings.UML_Template_Binding_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Template_Bindings.UML_Template_Binding_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Template_Bindings.UML_Template_Binding_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Template_Binding_Parameter_Substitution then
            --  TemplateBinding::parameterSubstitution : TemplateParameterSubstitution

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Template_Parameter_Substitutions.Collections.UML_Template_Parameter_Substitution_Collections.Internal
                 (AMF.UML.Template_Bindings.UML_Template_Binding_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Parameter_Substitution));

         elsif Property = MP_UML_Relationship_Related_Element then
            --  Relationship::relatedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Template_Bindings.UML_Template_Binding_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element));

         elsif Property = MP_UML_Template_Binding_Signature then
            --  TemplateBinding::signature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Template_Bindings.UML_Template_Binding_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Signature));

         elsif Property = MP_UML_Directed_Relationship_Source then
            --  DirectedRelationship::source : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Template_Bindings.UML_Template_Binding_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Source));

         elsif Property = MP_UML_Directed_Relationship_Target then
            --  DirectedRelationship::target : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Template_Bindings.UML_Template_Binding_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Target));

         else
            raise Program_Error;
         end if;
      end Template_Binding_Get;

      ----------------------------
      -- Template_Parameter_Get --
      ----------------------------

      function Template_Parameter_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Template_Parameter_Default then
            --  TemplateParameter::default : ParameterableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access'
                 (AMF.UML.Template_Parameters.UML_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Default));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Template_Parameters.UML_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Template_Parameter_Owned_Default then
            --  TemplateParameter::ownedDefault : ParameterableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access'
                 (AMF.UML.Template_Parameters.UML_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Default));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Template_Parameters.UML_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Template_Parameter_Owned_Parametered_Element then
            --  TemplateParameter::ownedParameteredElement : ParameterableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access'
                 (AMF.UML.Template_Parameters.UML_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parametered_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Template_Parameters.UML_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Template_Parameter_Parametered_Element then
            --  TemplateParameter::parameteredElement : ParameterableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access'
                 (AMF.UML.Template_Parameters.UML_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Parametered_Element));

         elsif Property = MP_UML_Template_Parameter_Signature then
            --  TemplateParameter::signature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Template_Parameters.UML_Template_Parameter_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Signature));

         else
            raise Program_Error;
         end if;
      end Template_Parameter_Get;

      -----------------------------------------
      -- Template_Parameter_Substitution_Get --
      -----------------------------------------

      function Template_Parameter_Substitution_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Template_Parameter_Substitution_Actual then
            --  TemplateParameterSubstitution::actual : ParameterableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access'
                 (AMF.UML.Template_Parameter_Substitutions.UML_Template_Parameter_Substitution_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Actual));

         elsif Property = MP_UML_Template_Parameter_Substitution_Formal then
            --  TemplateParameterSubstitution::formal : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Template_Parameter_Substitutions.UML_Template_Parameter_Substitution_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Formal));

         elsif Property = MP_UML_Template_Parameter_Substitution_Owned_Actual then
            --  TemplateParameterSubstitution::ownedActual : ParameterableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access'
                 (AMF.UML.Template_Parameter_Substitutions.UML_Template_Parameter_Substitution_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Actual));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Template_Parameter_Substitutions.UML_Template_Parameter_Substitution_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Template_Parameter_Substitutions.UML_Template_Parameter_Substitution_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Template_Parameter_Substitutions.UML_Template_Parameter_Substitution_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Template_Parameter_Substitution_Template_Binding then
            --  TemplateParameterSubstitution::templateBinding : TemplateBinding

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Bindings.UML_Template_Binding_Access'
                 (AMF.UML.Template_Parameter_Substitutions.UML_Template_Parameter_Substitution_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding));

         else
            raise Program_Error;
         end if;
      end Template_Parameter_Substitution_Get;

      ----------------------------
      -- Template_Signature_Get --
      ----------------------------

      function Template_Signature_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Template_Signatures.UML_Template_Signature_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Template_Signatures.UML_Template_Signature_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Template_Signature_Owned_Parameter then
            --  TemplateSignature::ownedParameter : TemplateParameter

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Template_Parameters.Collections.UML_Template_Parameter_Collections.Internal
                 (AMF.UML.Template_Signatures.UML_Template_Signature_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Parameter));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Template_Signatures.UML_Template_Signature_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Template_Signature_Parameter then
            --  TemplateSignature::parameter : TemplateParameter

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Template_Parameters.Collections.UML_Template_Parameter_Collections.Internal
                 (AMF.UML.Template_Signatures.UML_Template_Signature_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Parameter));

         elsif Property = MP_UML_Template_Signature_Template then
            --  TemplateSignature::template : TemplateableElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Templateable_Elements.UML_Templateable_Element_Access'
                 (AMF.UML.Template_Signatures.UML_Template_Signature_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template));

         else
            raise Program_Error;
         end if;
      end Template_Signature_Get;

      ------------------------------
      -- Test_Identity_Action_Get --
      ------------------------------

      function Test_Identity_Action_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Test_Identity_Action_First then
            --  TestIdentityAction::first : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_First));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Test_Identity_Action_Result then
            --  TestIdentityAction::result : OutputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access'
                 (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = MP_UML_Test_Identity_Action_Second then
            --  TestIdentityAction::second : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Second));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Test_Identity_Action_Get;

      -------------------------
      -- Time_Constraint_Get --
      -------------------------

      function Time_Constraint_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Time_Constraints.UML_Time_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Constraint_Constrained_Element then
            --  Constraint::constrainedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Time_Constraints.UML_Time_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Constrained_Element));

         elsif Property = MP_UML_Constraint_Context then
            --  Constraint::context : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Time_Constraints.UML_Time_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Time_Constraint_First_Event then
            --  TimeConstraint::firstEvent : Boolean

            return
              AMF.Holders.To_Holder
               (AMF.UML.Time_Constraints.UML_Time_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_First_Event);

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Time_Constraints.UML_Time_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Time_Constraints.UML_Time_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Time_Constraints.UML_Time_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Time_Constraints.UML_Time_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Time_Constraints.UML_Time_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Time_Constraints.UML_Time_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Time_Constraints.UML_Time_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Time_Constraints.UML_Time_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Constraint_Specification then
            --  Constraint::specification : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Time_Constraints.UML_Time_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Specification));

         elsif Property = MP_UML_Interval_Constraint_Specification then
            --  IntervalConstraint::specification : Interval

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Intervals.UML_Interval_Access'
                 (AMF.UML.Time_Constraints.UML_Time_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Specification));

         elsif Property = MP_UML_Time_Constraint_Specification then
            --  TimeConstraint::specification : TimeInterval

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Time_Intervals.UML_Time_Interval_Access'
                 (AMF.UML.Time_Constraints.UML_Time_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Specification));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Time_Constraints.UML_Time_Constraint_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Time_Constraints.UML_Time_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Time_Constraints.UML_Time_Constraint_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Time_Constraint_Get;

      --------------------
      -- Time_Event_Get --
      --------------------

      function Time_Event_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Time_Events.UML_Time_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Time_Event_Is_Relative then
            --  TimeEvent::isRelative : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Time_Events.UML_Time_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Relative);

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Time_Events.UML_Time_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Time_Events.UML_Time_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Time_Events.UML_Time_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Time_Events.UML_Time_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Time_Events.UML_Time_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Time_Events.UML_Time_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Time_Events.UML_Time_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Time_Events.UML_Time_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Time_Events.UML_Time_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Time_Events.UML_Time_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Time_Events.UML_Time_Event_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Time_Event_When then
            --  TimeEvent::when : TimeExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Time_Expressions.UML_Time_Expression_Access'
                 (AMF.UML.Time_Events.UML_Time_Event_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_When));

         else
            raise Program_Error;
         end if;
      end Time_Event_Get;

      -------------------------
      -- Time_Expression_Get --
      -------------------------

      function Time_Expression_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Time_Expressions.UML_Time_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Time_Expression_Expr then
            --  TimeExpression::expr : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Time_Expressions.UML_Time_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Expr));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Time_Expressions.UML_Time_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Time_Expressions.UML_Time_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Time_Expressions.UML_Time_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Time_Expression_Observation then
            --  TimeExpression::observation : Observation

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Observations.Collections.UML_Observation_Collections.Internal
                 (AMF.UML.Time_Expressions.UML_Time_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Observation));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Time_Expressions.UML_Time_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Time_Expressions.UML_Time_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Time_Expressions.UML_Time_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Time_Expressions.UML_Time_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Time_Expressions.UML_Time_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Time_Expressions.UML_Time_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Time_Expressions.UML_Time_Expression_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Time_Expressions.UML_Time_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Time_Expressions.UML_Time_Expression_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Time_Expression_Get;

      -----------------------
      -- Time_Interval_Get --
      -----------------------

      function Time_Interval_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Time_Intervals.UML_Time_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Interval_Max then
            --  Interval::max : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Time_Intervals.UML_Time_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Max));

         elsif Property = MP_UML_Time_Interval_Max then
            --  TimeInterval::max : TimeExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Time_Expressions.UML_Time_Expression_Access'
                 (AMF.UML.Time_Intervals.UML_Time_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Max));

         elsif Property = MP_UML_Interval_Min then
            --  Interval::min : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Time_Intervals.UML_Time_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Min));

         elsif Property = MP_UML_Time_Interval_Min then
            --  TimeInterval::min : TimeExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Time_Expressions.UML_Time_Expression_Access'
                 (AMF.UML.Time_Intervals.UML_Time_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Min));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Time_Intervals.UML_Time_Interval_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Time_Intervals.UML_Time_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Time_Intervals.UML_Time_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Time_Intervals.UML_Time_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Time_Intervals.UML_Time_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Time_Intervals.UML_Time_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Time_Intervals.UML_Time_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Time_Intervals.UML_Time_Interval_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Time_Intervals.UML_Time_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Time_Intervals.UML_Time_Interval_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Time_Intervals.UML_Time_Interval_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Time_Intervals.UML_Time_Interval_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Time_Interval_Get;

      --------------------------
      -- Time_Observation_Get --
      --------------------------

      function Time_Observation_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Time_Observations.UML_Time_Observation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Time_Observation_Event then
            --  TimeObservation::event : NamedElement

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Named_Elements.UML_Named_Element_Access'
                 (AMF.UML.Time_Observations.UML_Time_Observation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Event));

         elsif Property = MP_UML_Time_Observation_First_Event then
            --  TimeObservation::firstEvent : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Time_Observations.UML_Time_Observation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_First_Event);

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Time_Observations.UML_Time_Observation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Time_Observations.UML_Time_Observation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Time_Observations.UML_Time_Observation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Time_Observations.UML_Time_Observation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Time_Observations.UML_Time_Observation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Time_Observations.UML_Time_Observation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Time_Observations.UML_Time_Observation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Time_Observations.UML_Time_Observation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Time_Observations.UML_Time_Observation_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Time_Observations.UML_Time_Observation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Time_Observations.UML_Time_Observation_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Time_Observation_Get;

      --------------------
      -- Transition_Get --
      --------------------

      function Transition_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Transitions.UML_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Transition_Container then
            --  Transition::container : Region

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Regions.UML_Region_Access'
                 (AMF.UML.Transitions.UML_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Container));

         elsif Property = MP_UML_Transition_Effect then
            --  Transition::effect : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Transitions.UML_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Effect));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Transitions.UML_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_Transition_Guard then
            --  Transition::guard : Constraint

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Constraints.UML_Constraint_Access'
                 (AMF.UML.Transitions.UML_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Guard));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Transitions.UML_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Transitions.UML_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Transition_Kind then
            --  Transition::kind : TransitionKind

            return
              AMF.UML.Holders.Transition_Kinds.To_Holder
               (AMF.UML.Transitions.UML_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Kind);

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Transitions.UML_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Transitions.UML_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Transitions.UML_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Transitions.UML_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Transitions.UML_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Transitions.UML_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Transitions.UML_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Transitions.UML_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Transitions.UML_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Transitions.UML_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Transitions.UML_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Transitions.UML_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Transition_Redefined_Transition then
            --  Transition::redefinedTransition : Transition

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Transitions.UML_Transition_Access'
                 (AMF.UML.Transitions.UML_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Transition));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Transitions.UML_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Transition_Redefinition_Context then
            --  Transition::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Transitions.UML_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Transition_Source then
            --  Transition::source : Vertex

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Vertexs.UML_Vertex_Access'
                 (AMF.UML.Transitions.UML_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Source));

         elsif Property = MP_UML_Transition_Target then
            --  Transition::target : Vertex

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Vertexs.UML_Vertex_Access'
                 (AMF.UML.Transitions.UML_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Target));

         elsif Property = MP_UML_Transition_Trigger then
            --  Transition::trigger : Trigger

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Triggers.Collections.UML_Trigger_Collections.Internal
                 (AMF.UML.Transitions.UML_Transition_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Trigger));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Transitions.UML_Transition_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Transition_Get;

      -----------------
      -- Trigger_Get --
      -----------------

      function Trigger_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Triggers.UML_Trigger_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Trigger_Event then
            --  Trigger::event : Event

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Events.UML_Event_Access'
                 (AMF.UML.Triggers.UML_Trigger_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Event));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Triggers.UML_Trigger_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Triggers.UML_Trigger_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Triggers.UML_Trigger_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Triggers.UML_Trigger_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Triggers.UML_Trigger_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Triggers.UML_Trigger_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Trigger_Port then
            --  Trigger::port : Port

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Ports.Collections.UML_Port_Collections.Internal
                 (AMF.UML.Triggers.UML_Trigger_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Port));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Triggers.UML_Trigger_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Triggers.UML_Trigger_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Trigger_Get;

      ---------------------------
      -- Unmarshall_Action_Get --
      ---------------------------

      function Unmarshall_Action_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Unmarshall_Action_Object then
            --  UnmarshallAction::object : InputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Input_Pins.UML_Input_Pin_Access'
                 (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Object));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Unmarshall_Action_Result then
            --  UnmarshallAction::result : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = MP_UML_Unmarshall_Action_Unmarshall_Type then
            --  UnmarshallAction::unmarshallType : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Unmarshall_Type));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Unmarshall_Action_Get;

      ---------------
      -- Usage_Get --
      ---------------

      function Usage_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Dependency_Client then
            --  Dependency::client : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Usages.UML_Usage_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Usages.UML_Usage_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Usages.UML_Usage_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Usages.UML_Usage_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Usages.UML_Usage_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Usages.UML_Usage_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Usages.UML_Usage_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Usages.UML_Usage_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Usages.UML_Usage_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Usages.UML_Usage_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Relationship_Related_Element then
            --  Relationship::relatedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Usages.UML_Usage_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Related_Element));

         elsif Property = MP_UML_Directed_Relationship_Source then
            --  DirectedRelationship::source : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Usages.UML_Usage_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Source));

         elsif Property = MP_UML_Dependency_Supplier then
            --  Dependency::supplier : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Usages.UML_Usage_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Supplier));

         elsif Property = MP_UML_Directed_Relationship_Target then
            --  DirectedRelationship::target : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Usages.UML_Usage_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Target));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Usages.UML_Usage_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Usages.UML_Usage_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Usages.UML_Usage_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Usage_Get;

      ------------------
      -- Use_Case_Get --
      ------------------

      function Use_Case_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Classifier_Attribute then
            --  Classifier::attribute : Property

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Properties.Collections.UML_Property_Collections.Internal
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Attribute));

         elsif Property = MP_UML_Behaviored_Classifier_Classifier_Behavior then
            --  BehavioredClassifier::classifierBehavior : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Classifier_Behavior));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Classifier_Collaboration_Use then
            --  Classifier::collaborationUse : CollaborationUse

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Collaboration_Uses.Collections.UML_Collaboration_Use_Collections.Internal
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Collaboration_Use));

         elsif Property = MP_UML_Namespace_Element_Import then
            --  Namespace::elementImport : ElementImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Element_Imports.Collections.UML_Element_Import_Collections.Internal
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Element_Import));

         elsif Property = MP_UML_Use_Case_Extend then
            --  UseCase::extend : Extend

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Extends.Collections.UML_Extend_Collections.Internal
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Extend));

         elsif Property = MP_UML_Use_Case_Extension_Point then
            --  UseCase::extensionPoint : ExtensionPoint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Extension_Points.Collections.UML_Extension_Point_Collections.Internal
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Extension_Point));

         elsif Property = MP_UML_Classifier_Feature then
            --  Classifier::feature : Feature

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Features.Collections.UML_Feature_Collections.Internal
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Feature));

         elsif Property = MP_UML_Classifier_General then
            --  Classifier::general : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_General));

         elsif Property = MP_UML_Classifier_Generalization then
            --  Classifier::generalization : Generalization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalizations.Collections.UML_Generalization_Collections.Internal
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Generalization));

         elsif Property = MP_UML_Namespace_Imported_Member then
            --  Namespace::importedMember : PackageableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Packageable_Elements.Collections.UML_Packageable_Element_Collections.Internal
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Imported_Member));

         elsif Property = MP_UML_Use_Case_Include then
            --  UseCase::include : Include

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Includes.Collections.UML_Include_Collections.Internal
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Include));

         elsif Property = MP_UML_Classifier_Inherited_Member then
            --  Classifier::inheritedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Inherited_Member));

         elsif Property = MP_UML_Behaviored_Classifier_Interface_Realization then
            --  BehavioredClassifier::interfaceRealization : InterfaceRealization

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interface_Realizations.Collections.UML_Interface_Realization_Collections.Internal
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Interface_Realization));

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Abstract);

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Final_Specialization);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Namespace_Member then
            --  Namespace::member : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Member));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Behaviored_Classifier_Owned_Behavior then
            --  BehavioredClassifier::ownedBehavior : Behavior

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Behaviors.Collections.UML_Behavior_Collections.Internal
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Behavior));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Namespace_Owned_Member then
            --  Namespace::ownedMember : NamedElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Named_Elements.Collections.UML_Named_Element_Collections.Internal
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Member));

         elsif Property = MP_UML_Namespace_Owned_Rule then
            --  Namespace::ownedRule : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Rule));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access'
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access'
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Template_Signature));

         elsif Property = MP_UML_Classifier_Owned_Use_Case then
            --  Classifier::ownedUseCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Use_Case));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Packages.UML_Package_Access'
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package));

         elsif Property = MP_UML_Namespace_Package_Import then
            --  Namespace::packageImport : PackageImport

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Package_Imports.Collections.UML_Package_Import_Collections.Internal
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Package_Import));

         elsif Property = MP_UML_Classifier_Powertype_Extent then
            --  Classifier::powertypeExtent : GeneralizationSet

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Generalization_Sets.Collections.UML_Generalization_Set_Collections.Internal
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Powertype_Extent));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Classifier_Redefined_Classifier then
            --  Classifier::redefinedClassifier : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Classifier));

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access'
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Representation));

         elsif Property = MP_UML_Use_Case_Subject then
            --  UseCase::subject : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Subject));

         elsif Property = MP_UML_Classifier_Substitution then
            --  Classifier::substitution : Substitution

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Substitutions.Collections.UML_Substitution_Collections.Internal
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Substitution));

         elsif Property = MP_UML_Templateable_Element_Template_Binding then
            --  TemplateableElement::templateBinding : TemplateBinding

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Template_Bindings.Collections.UML_Template_Binding_Collections.Internal
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Binding));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access'
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Classifier_Use_Case then
            --  Classifier::useCase : UseCase

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Use_Cases.Collections.UML_Use_Case_Collections.Internal
                 (AMF.UML.Use_Cases.UML_Use_Case_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Use_Case));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.Visibility_Kinds.To_Holder
               (AMF.UML.Use_Cases.UML_Use_Case_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Use_Case_Get;

      -------------------
      -- Value_Pin_Get --
      -------------------

      function Value_Pin_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Value_Pins.UML_Value_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Value_Pins.UML_Value_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Value_Pins.UML_Value_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Value_Pins.UML_Value_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Value_Pins.UML_Value_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Object_Node_In_State then
            --  ObjectNode::inState : State

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.States.Collections.UML_State_Collections.Internal
                 (AMF.UML.Value_Pins.UML_Value_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_State));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Value_Pins.UML_Value_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Value_Pins.UML_Value_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Pin_Is_Control then
            --  Pin::isControl : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Value_Pins.UML_Value_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Control);

         elsif Property = MP_UML_Object_Node_Is_Control_Type then
            --  ObjectNode::isControlType : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Value_Pins.UML_Value_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Control_Type);

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Value_Pins.UML_Value_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Multiplicity_Element_Is_Ordered then
            --  MultiplicityElement::isOrdered : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Value_Pins.UML_Value_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Ordered);

         elsif Property = MP_UML_Multiplicity_Element_Is_Unique then
            --  MultiplicityElement::isUnique : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Value_Pins.UML_Value_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Unique);

         elsif Property = MP_UML_Multiplicity_Element_Lower then
            --  MultiplicityElement::lower : Integer

            return
              AMF.Holders.To_Holder
               (AMF.UML.Value_Pins.UML_Value_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Lower);

         elsif Property = MP_UML_Multiplicity_Element_Lower_Value then
            --  MultiplicityElement::lowerValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Value_Pins.UML_Value_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Lower_Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Value_Pins.UML_Value_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Value_Pins.UML_Value_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Value_Pins.UML_Value_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Object_Node_Ordering then
            --  ObjectNode::ordering : ObjectNodeOrderingKind

            return
              AMF.UML.Holders.Object_Node_Ordering_Kinds.To_Holder
               (AMF.UML.Value_Pins.UML_Value_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Ordering);

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Value_Pins.UML_Value_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Value_Pins.UML_Value_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Value_Pins.UML_Value_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Value_Pins.UML_Value_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Value_Pins.UML_Value_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Value_Pins.UML_Value_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Value_Pins.UML_Value_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Value_Pins.UML_Value_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Object_Node_Selection then
            --  ObjectNode::selection : Behavior

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Behaviors.UML_Behavior_Access'
                 (AMF.UML.Value_Pins.UML_Value_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Selection));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Value_Pins.UML_Value_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = MP_UML_Multiplicity_Element_Upper then
            --  MultiplicityElement::upper : UnlimitedNatural

            return
              AMF.Holders.To_Holder
               (AMF.UML.Value_Pins.UML_Value_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Upper);

         elsif Property = MP_UML_Object_Node_Upper_Bound then
            --  ObjectNode::upperBound : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Value_Pins.UML_Value_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Upper_Bound));

         elsif Property = MP_UML_Multiplicity_Element_Upper_Value then
            --  MultiplicityElement::upperValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Value_Pins.UML_Value_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Upper_Value));

         elsif Property = MP_UML_Value_Pin_Value then
            --  ValuePin::value : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Value_Pins.UML_Value_Pin_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Value));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Value_Pins.UML_Value_Pin_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Value_Pin_Get;

      ------------------------------------
      -- Value_Specification_Action_Get --
      ------------------------------------

      function Value_Specification_Action_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Action_Context then
            --  Action::context : Classifier

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Classifiers.UML_Classifier_Access'
                 (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Context));

         elsif Property = MP_UML_Executable_Node_Handler then
            --  ExecutableNode::handler : ExceptionHandler

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Exception_Handlers.Collections.UML_Exception_Handler_Collections.Internal
                 (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Handler));

         elsif Property = MP_UML_Activity_Node_In_Group then
            --  ActivityNode::inGroup : ActivityGroup

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Groups.Collections.UML_Activity_Group_Collections.Internal
                 (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Group));

         elsif Property = MP_UML_Activity_Node_In_Interruptible_Region then
            --  ActivityNode::inInterruptibleRegion : InterruptibleActivityRegion

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Interruptible_Activity_Regions.Collections.UML_Interruptible_Activity_Region_Collections.Internal
                 (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Interruptible_Region));

         elsif Property = MP_UML_Activity_Node_In_Partition then
            --  ActivityNode::inPartition : ActivityPartition

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Partitions.Collections.UML_Activity_Partition_Collections.Internal
                 (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Partition));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_In_Structured_Node));

         elsif Property = MP_UML_Activity_Node_Incoming then
            --  ActivityNode::incoming : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Incoming));

         elsif Property = MP_UML_Action_Input then
            --  Action::input : InputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Input_Pins.Collections.UML_Input_Pin_Collections.Internal
                 (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Input));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Leaf);

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Locally_Reentrant);

         elsif Property = MP_UML_Action_Local_Postcondition then
            --  Action::localPostcondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Postcondition));

         elsif Property = MP_UML_Action_Local_Precondition then
            --  Action::localPrecondition : Constraint

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Constraints.Collections.UML_Constraint_Collections.Internal
                 (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Local_Precondition));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Activity_Node_Outgoing then
            --  ActivityNode::outgoing : ActivityEdge

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Edges.Collections.UML_Activity_Edge_Collections.Internal
                 (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Outgoing));

         elsif Property = MP_UML_Action_Output then
            --  Action::output : OutputPin

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Output_Pins.Collections.UML_Output_Pin_Collections.Internal
                 (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Output));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Redefinable_Element_Redefined_Element then
            --  RedefinableElement::redefinedElement : RedefinableElement

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Redefinable_Elements.Collections.UML_Redefinable_Element_Collections.Internal
                 (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Element));

         elsif Property = MP_UML_Activity_Node_Redefined_Node then
            --  ActivityNode::redefinedNode : ActivityNode

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Activity_Nodes.Collections.UML_Activity_Node_Collections.Internal
                 (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefined_Node));

         elsif Property = MP_UML_Redefinable_Element_Redefinition_Context then
            --  RedefinableElement::redefinitionContext : Classifier

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Classifiers.Collections.UML_Classifier_Collections.Internal
                 (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Redefinition_Context));

         elsif Property = MP_UML_Value_Specification_Action_Result then
            --  ValueSpecificationAction::result : OutputPin

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Output_Pins.UML_Output_Pin_Access'
                 (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Result));

         elsif Property = MP_UML_Value_Specification_Action_Value then
            --  ValueSpecificationAction::value : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Value));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Value_Specification_Action_Get;

      ------------------
      -- Variable_Get --
      ------------------

      function Variable_Get return League.Holders.Holder is
      begin
         if Property = MP_UML_Variable_Activity_Scope then
            --  Variable::activityScope : Activity

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Activities.UML_Activity_Access'
                 (AMF.UML.Variables.UML_Variable_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Activity_Scope));

         elsif Property = MP_UML_Named_Element_Client_Dependency then
            --  NamedElement::clientDependency : Dependency

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Dependencies.Collections.UML_Dependency_Collections.Internal
                 (AMF.UML.Variables.UML_Variable_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Client_Dependency));

         elsif Property = MP_UML_Connectable_Element_End then
            --  ConnectableElement::end : ConnectorEnd

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Connector_Ends.Collections.UML_Connector_End_Collections.Internal
                 (AMF.UML.Variables.UML_Variable_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_End));

         elsif Property = MP_UML_Multiplicity_Element_Is_Ordered then
            --  MultiplicityElement::isOrdered : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Variables.UML_Variable_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Ordered);

         elsif Property = MP_UML_Multiplicity_Element_Is_Unique then
            --  MultiplicityElement::isUnique : Boolean

            return
              League.Holders.Booleans.To_Holder
               (AMF.UML.Variables.UML_Variable_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Is_Unique);

         elsif Property = MP_UML_Multiplicity_Element_Lower then
            --  MultiplicityElement::lower : Integer

            return
              AMF.Holders.To_Holder
               (AMF.UML.Variables.UML_Variable_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Lower);

         elsif Property = MP_UML_Multiplicity_Element_Lower_Value then
            --  MultiplicityElement::lowerValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Variables.UML_Variable_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Lower_Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Variables.UML_Variable_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Name);

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.String_Expressions.UML_String_Expression_Access'
                 (AMF.UML.Variables.UML_Variable_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Name_Expression));

         elsif Property = MP_UML_Named_Element_Namespace then
            --  NamedElement::namespace : Namespace

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Namespaces.UML_Namespace_Access'
                 (AMF.UML.Variables.UML_Variable_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Namespace));

         elsif Property = MP_UML_Element_Owned_Comment then
            --  Element::ownedComment : Comment

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Comments.Collections.UML_Comment_Collections.Internal
                 (AMF.UML.Variables.UML_Variable_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Comment));

         elsif Property = MP_UML_Element_Owned_Element then
            --  Element::ownedElement : Element

            return
              AMF.Internals.Holders.To_Holder
               (AMF.UML.Elements.Collections.UML_Element_Collections.Internal
                 (AMF.UML.Variables.UML_Variable_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owned_Element));

         elsif Property = MP_UML_Element_Owner then
            --  Element::owner : Element

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Elements.UML_Element_Access'
                 (AMF.UML.Variables.UML_Variable_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owner));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Variables.UML_Variable_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Owning_Template_Parameter));

         elsif Property = MP_UML_Named_Element_Qualified_Name then
            --  NamedElement::qualifiedName : String

            return
              AMF.Holders.To_Holder
               (AMF.UML.Variables.UML_Variable_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Qualified_Name);

         elsif Property = MP_UML_Variable_Scope then
            --  Variable::scope : StructuredActivityNode

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access'
                 (AMF.UML.Variables.UML_Variable_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Scope));

         elsif Property = MP_UML_Connectable_Element_Template_Parameter then
            --  ConnectableElement::templateParameter : ConnectableElementTemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access'
                 (AMF.UML.Variables.UML_Variable_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access'
                 (AMF.UML.Variables.UML_Variable_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Template_Parameter));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Types.UML_Type_Access'
                 (AMF.UML.Variables.UML_Variable_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Type));

         elsif Property = MP_UML_Multiplicity_Element_Upper then
            --  MultiplicityElement::upper : UnlimitedNatural

            return
              AMF.Holders.To_Holder
               (AMF.UML.Variables.UML_Variable_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Upper);

         elsif Property = MP_UML_Multiplicity_Element_Upper_Value then
            --  MultiplicityElement::upperValue : ValueSpecification

            return
              AMF.Internals.Holders.UML_Holders.To_Holder
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access'
                 (AMF.UML.Variables.UML_Variable_Access
                   (AMF.Internals.Helpers.To_Element (Self)).Get_Upper_Value));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            return
              AMF.UML.Holders.To_Holder
               (AMF.UML.Variables.UML_Variable_Access
                 (AMF.Internals.Helpers.To_Element (Self)).Get_Visibility);

         else
            raise Program_Error;
         end if;
      end Variable_Get;

   begin
      case UML_Element_Table.Table (Self).Kind is
         when E_None =>
            raise Program_Error;

         when E_Abstraction =>
            return Abstraction_Get;

         when E_Accept_Call_Action =>
            return Accept_Call_Action_Get;

         when E_Accept_Event_Action =>
            return Accept_Event_Action_Get;

         when E_Action_Execution_Specification =>
            return Action_Execution_Specification_Get;

         when E_Action_Input_Pin =>
            return Action_Input_Pin_Get;

         when E_Activity =>
            return Activity_Get;

         when E_Activity_Final_Node =>
            return Activity_Final_Node_Get;

         when E_Activity_Parameter_Node =>
            return Activity_Parameter_Node_Get;

         when E_Activity_Partition =>
            return Activity_Partition_Get;

         when E_Actor =>
            return Actor_Get;

         when E_Add_Structural_Feature_Value_Action =>
            return Add_Structural_Feature_Value_Action_Get;

         when E_Add_Variable_Value_Action =>
            return Add_Variable_Value_Action_Get;

         when E_Any_Receive_Event =>
            return Any_Receive_Event_Get;

         when E_Artifact =>
            return Artifact_Get;

         when E_Association =>
            return Association_Get;

         when E_Association_Class =>
            return Association_Class_Get;

         when E_Behavior_Execution_Specification =>
            return Behavior_Execution_Specification_Get;

         when E_Broadcast_Signal_Action =>
            return Broadcast_Signal_Action_Get;

         when E_Call_Behavior_Action =>
            return Call_Behavior_Action_Get;

         when E_Call_Event =>
            return Call_Event_Get;

         when E_Call_Operation_Action =>
            return Call_Operation_Action_Get;

         when E_Central_Buffer_Node =>
            return Central_Buffer_Node_Get;

         when E_Change_Event =>
            return Change_Event_Get;

         when E_Class =>
            return Class_Get;

         when E_Classifier_Template_Parameter =>
            return Classifier_Template_Parameter_Get;

         when E_Clause =>
            return Clause_Get;

         when E_Clear_Association_Action =>
            return Clear_Association_Action_Get;

         when E_Clear_Structural_Feature_Action =>
            return Clear_Structural_Feature_Action_Get;

         when E_Clear_Variable_Action =>
            return Clear_Variable_Action_Get;

         when E_Collaboration =>
            return Collaboration_Get;

         when E_Collaboration_Use =>
            return Collaboration_Use_Get;

         when E_Combined_Fragment =>
            return Combined_Fragment_Get;

         when E_Comment =>
            return Comment_Get;

         when E_Communication_Path =>
            return Communication_Path_Get;

         when E_Component =>
            return Component_Get;

         when E_Component_Realization =>
            return Component_Realization_Get;

         when E_Conditional_Node =>
            return Conditional_Node_Get;

         when E_Connectable_Element_Template_Parameter =>
            return Connectable_Element_Template_Parameter_Get;

         when E_Connection_Point_Reference =>
            return Connection_Point_Reference_Get;

         when E_Connector =>
            return Connector_Get;

         when E_Connector_End =>
            return Connector_End_Get;

         when E_Consider_Ignore_Fragment =>
            return Consider_Ignore_Fragment_Get;

         when E_Constraint =>
            return Constraint_Get;

         when E_Continuation =>
            return Continuation_Get;

         when E_Control_Flow =>
            return Control_Flow_Get;

         when E_Create_Link_Action =>
            return Create_Link_Action_Get;

         when E_Create_Link_Object_Action =>
            return Create_Link_Object_Action_Get;

         when E_Create_Object_Action =>
            return Create_Object_Action_Get;

         when E_Data_Store_Node =>
            return Data_Store_Node_Get;

         when E_Data_Type =>
            return Data_Type_Get;

         when E_Decision_Node =>
            return Decision_Node_Get;

         when E_Dependency =>
            return Dependency_Get;

         when E_Deployment =>
            return Deployment_Get;

         when E_Deployment_Specification =>
            return Deployment_Specification_Get;

         when E_Destroy_Link_Action =>
            return Destroy_Link_Action_Get;

         when E_Destroy_Object_Action =>
            return Destroy_Object_Action_Get;

         when E_Destruction_Occurrence_Specification =>
            return Destruction_Occurrence_Specification_Get;

         when E_Device =>
            return Device_Get;

         when E_Duration =>
            return Duration_Get;

         when E_Duration_Constraint =>
            return Duration_Constraint_Get;

         when E_Duration_Interval =>
            return Duration_Interval_Get;

         when E_Duration_Observation =>
            return Duration_Observation_Get;

         when E_Element_Import =>
            return Element_Import_Get;

         when E_Enumeration =>
            return Enumeration_Get;

         when E_Enumeration_Literal =>
            return Enumeration_Literal_Get;

         when E_Exception_Handler =>
            return Exception_Handler_Get;

         when E_Execution_Environment =>
            return Execution_Environment_Get;

         when E_Execution_Occurrence_Specification =>
            return Execution_Occurrence_Specification_Get;

         when E_Expansion_Node =>
            return Expansion_Node_Get;

         when E_Expansion_Region =>
            return Expansion_Region_Get;

         when E_Expression =>
            return Expression_Get;

         when E_Extend =>
            return Extend_Get;

         when E_Extension =>
            return Extension_Get;

         when E_Extension_End =>
            return Extension_End_Get;

         when E_Extension_Point =>
            return Extension_Point_Get;

         when E_Final_State =>
            return Final_State_Get;

         when E_Flow_Final_Node =>
            return Flow_Final_Node_Get;

         when E_Fork_Node =>
            return Fork_Node_Get;

         when E_Function_Behavior =>
            return Function_Behavior_Get;

         when E_Gate =>
            return Gate_Get;

         when E_General_Ordering =>
            return General_Ordering_Get;

         when E_Generalization =>
            return Generalization_Get;

         when E_Generalization_Set =>
            return Generalization_Set_Get;

         when E_Image =>
            return Image_Get;

         when E_Include =>
            return Include_Get;

         when E_Information_Flow =>
            return Information_Flow_Get;

         when E_Information_Item =>
            return Information_Item_Get;

         when E_Initial_Node =>
            return Initial_Node_Get;

         when E_Input_Pin =>
            return Input_Pin_Get;

         when E_Instance_Specification =>
            return Instance_Specification_Get;

         when E_Instance_Value =>
            return Instance_Value_Get;

         when E_Interaction =>
            return Interaction_Get;

         when E_Interaction_Constraint =>
            return Interaction_Constraint_Get;

         when E_Interaction_Operand =>
            return Interaction_Operand_Get;

         when E_Interaction_Use =>
            return Interaction_Use_Get;

         when E_Interface =>
            return Interface_Get;

         when E_Interface_Realization =>
            return Interface_Realization_Get;

         when E_Interruptible_Activity_Region =>
            return Interruptible_Activity_Region_Get;

         when E_Interval =>
            return Interval_Get;

         when E_Interval_Constraint =>
            return Interval_Constraint_Get;

         when E_Join_Node =>
            return Join_Node_Get;

         when E_Lifeline =>
            return Lifeline_Get;

         when E_Link_End_Creation_Data =>
            return Link_End_Creation_Data_Get;

         when E_Link_End_Data =>
            return Link_End_Data_Get;

         when E_Link_End_Destruction_Data =>
            return Link_End_Destruction_Data_Get;

         when E_Literal_Boolean =>
            return Literal_Boolean_Get;

         when E_Literal_Integer =>
            return Literal_Integer_Get;

         when E_Literal_Null =>
            return Literal_Null_Get;

         when E_Literal_Real =>
            return Literal_Real_Get;

         when E_Literal_String =>
            return Literal_String_Get;

         when E_Literal_Unlimited_Natural =>
            return Literal_Unlimited_Natural_Get;

         when E_Loop_Node =>
            return Loop_Node_Get;

         when E_Manifestation =>
            return Manifestation_Get;

         when E_Merge_Node =>
            return Merge_Node_Get;

         when E_Message =>
            return Message_Get;

         when E_Message_Occurrence_Specification =>
            return Message_Occurrence_Specification_Get;

         when E_Model =>
            return Model_Get;

         when E_Node =>
            return Node_Get;

         when E_Object_Flow =>
            return Object_Flow_Get;

         when E_Occurrence_Specification =>
            return Occurrence_Specification_Get;

         when E_Opaque_Action =>
            return Opaque_Action_Get;

         when E_Opaque_Behavior =>
            return Opaque_Behavior_Get;

         when E_Opaque_Expression =>
            return Opaque_Expression_Get;

         when E_Operation =>
            return Operation_Get;

         when E_Operation_Template_Parameter =>
            return Operation_Template_Parameter_Get;

         when E_Output_Pin =>
            return Output_Pin_Get;

         when E_Package =>
            return Package_Get;

         when E_Package_Import =>
            return Package_Import_Get;

         when E_Package_Merge =>
            return Package_Merge_Get;

         when E_Parameter =>
            return Parameter_Get;

         when E_Parameter_Set =>
            return Parameter_Set_Get;

         when E_Part_Decomposition =>
            return Part_Decomposition_Get;

         when E_Port =>
            return Port_Get;

         when E_Primitive_Type =>
            return Primitive_Type_Get;

         when E_Profile =>
            return Profile_Get;

         when E_Profile_Application =>
            return Profile_Application_Get;

         when E_Property =>
            return Property_Get;

         when E_Protocol_Conformance =>
            return Protocol_Conformance_Get;

         when E_Protocol_State_Machine =>
            return Protocol_State_Machine_Get;

         when E_Protocol_Transition =>
            return Protocol_Transition_Get;

         when E_Pseudostate =>
            return Pseudostate_Get;

         when E_Qualifier_Value =>
            return Qualifier_Value_Get;

         when E_Raise_Exception_Action =>
            return Raise_Exception_Action_Get;

         when E_Read_Extent_Action =>
            return Read_Extent_Action_Get;

         when E_Read_Is_Classified_Object_Action =>
            return Read_Is_Classified_Object_Action_Get;

         when E_Read_Link_Action =>
            return Read_Link_Action_Get;

         when E_Read_Link_Object_End_Action =>
            return Read_Link_Object_End_Action_Get;

         when E_Read_Link_Object_End_Qualifier_Action =>
            return Read_Link_Object_End_Qualifier_Action_Get;

         when E_Read_Self_Action =>
            return Read_Self_Action_Get;

         when E_Read_Structural_Feature_Action =>
            return Read_Structural_Feature_Action_Get;

         when E_Read_Variable_Action =>
            return Read_Variable_Action_Get;

         when E_Realization =>
            return Realization_Get;

         when E_Reception =>
            return Reception_Get;

         when E_Reclassify_Object_Action =>
            return Reclassify_Object_Action_Get;

         when E_Redefinable_Template_Signature =>
            return Redefinable_Template_Signature_Get;

         when E_Reduce_Action =>
            return Reduce_Action_Get;

         when E_Region =>
            return Region_Get;

         when E_Remove_Structural_Feature_Value_Action =>
            return Remove_Structural_Feature_Value_Action_Get;

         when E_Remove_Variable_Value_Action =>
            return Remove_Variable_Value_Action_Get;

         when E_Reply_Action =>
            return Reply_Action_Get;

         when E_Send_Object_Action =>
            return Send_Object_Action_Get;

         when E_Send_Signal_Action =>
            return Send_Signal_Action_Get;

         when E_Sequence_Node =>
            return Sequence_Node_Get;

         when E_Signal =>
            return Signal_Get;

         when E_Signal_Event =>
            return Signal_Event_Get;

         when E_Slot =>
            return Slot_Get;

         when E_Start_Classifier_Behavior_Action =>
            return Start_Classifier_Behavior_Action_Get;

         when E_Start_Object_Behavior_Action =>
            return Start_Object_Behavior_Action_Get;

         when E_State =>
            return State_Get;

         when E_State_Invariant =>
            return State_Invariant_Get;

         when E_State_Machine =>
            return State_Machine_Get;

         when E_Stereotype =>
            return Stereotype_Get;

         when E_String_Expression =>
            return String_Expression_Get;

         when E_Structured_Activity_Node =>
            return Structured_Activity_Node_Get;

         when E_Substitution =>
            return Substitution_Get;

         when E_Template_Binding =>
            return Template_Binding_Get;

         when E_Template_Parameter =>
            return Template_Parameter_Get;

         when E_Template_Parameter_Substitution =>
            return Template_Parameter_Substitution_Get;

         when E_Template_Signature =>
            return Template_Signature_Get;

         when E_Test_Identity_Action =>
            return Test_Identity_Action_Get;

         when E_Time_Constraint =>
            return Time_Constraint_Get;

         when E_Time_Event =>
            return Time_Event_Get;

         when E_Time_Expression =>
            return Time_Expression_Get;

         when E_Time_Interval =>
            return Time_Interval_Get;

         when E_Time_Observation =>
            return Time_Observation_Get;

         when E_Transition =>
            return Transition_Get;

         when E_Trigger =>
            return Trigger_Get;

         when E_Unmarshall_Action =>
            return Unmarshall_Action_Get;

         when E_Usage =>
            return Usage_Get;

         when E_Use_Case =>
            return Use_Case_Get;

         when E_Value_Pin =>
            return Value_Pin_Get;

         when E_Value_Specification_Action =>
            return Value_Specification_Action_Get;

         when E_Variable =>
            return Variable_Get;
      end case;
   end Get;

   --------------------
   -- Get_Meta_Class --
   --------------------

   function Get_Meta_Class (Self : UML_Element) return CMOF_Element is
   begin
      case UML_Element_Table.Table (Self).Kind is
         when E_None =>
            return 0;

         when E_Abstraction =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Abstraction;

         when E_Accept_Call_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Accept_Call_Action;

         when E_Accept_Event_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Accept_Event_Action;

         when E_Action_Execution_Specification =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Action_Execution_Specification;

         when E_Action_Input_Pin =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Action_Input_Pin;

         when E_Activity =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Activity;

         when E_Activity_Final_Node =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Activity_Final_Node;

         when E_Activity_Parameter_Node =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Activity_Parameter_Node;

         when E_Activity_Partition =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Activity_Partition;

         when E_Actor =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Actor;

         when E_Add_Structural_Feature_Value_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Add_Structural_Feature_Value_Action;

         when E_Add_Variable_Value_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Add_Variable_Value_Action;

         when E_Any_Receive_Event =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Any_Receive_Event;

         when E_Artifact =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Artifact;

         when E_Association =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Association;

         when E_Association_Class =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Association_Class;

         when E_Behavior_Execution_Specification =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Behavior_Execution_Specification;

         when E_Broadcast_Signal_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Broadcast_Signal_Action;

         when E_Call_Behavior_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Call_Behavior_Action;

         when E_Call_Event =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Call_Event;

         when E_Call_Operation_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Call_Operation_Action;

         when E_Central_Buffer_Node =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Central_Buffer_Node;

         when E_Change_Event =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Change_Event;

         when E_Class =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Class;

         when E_Classifier_Template_Parameter =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Classifier_Template_Parameter;

         when E_Clause =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Clause;

         when E_Clear_Association_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Clear_Association_Action;

         when E_Clear_Structural_Feature_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Clear_Structural_Feature_Action;

         when E_Clear_Variable_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Clear_Variable_Action;

         when E_Collaboration =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Collaboration;

         when E_Collaboration_Use =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Collaboration_Use;

         when E_Combined_Fragment =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Combined_Fragment;

         when E_Comment =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Comment;

         when E_Communication_Path =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Communication_Path;

         when E_Component =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Component;

         when E_Component_Realization =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Component_Realization;

         when E_Conditional_Node =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Conditional_Node;

         when E_Connectable_Element_Template_Parameter =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Connectable_Element_Template_Parameter;

         when E_Connection_Point_Reference =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Connection_Point_Reference;

         when E_Connector =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Connector;

         when E_Connector_End =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Connector_End;

         when E_Consider_Ignore_Fragment =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Consider_Ignore_Fragment;

         when E_Constraint =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Constraint;

         when E_Continuation =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Continuation;

         when E_Control_Flow =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Control_Flow;

         when E_Create_Link_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Create_Link_Action;

         when E_Create_Link_Object_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Create_Link_Object_Action;

         when E_Create_Object_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Create_Object_Action;

         when E_Data_Store_Node =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Data_Store_Node;

         when E_Data_Type =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Data_Type;

         when E_Decision_Node =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Decision_Node;

         when E_Dependency =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Dependency;

         when E_Deployment =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Deployment;

         when E_Deployment_Specification =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Deployment_Specification;

         when E_Destroy_Link_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Destroy_Link_Action;

         when E_Destroy_Object_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Destroy_Object_Action;

         when E_Destruction_Occurrence_Specification =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Destruction_Occurrence_Specification;

         when E_Device =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Device;

         when E_Duration =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Duration;

         when E_Duration_Constraint =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Duration_Constraint;

         when E_Duration_Interval =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Duration_Interval;

         when E_Duration_Observation =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Duration_Observation;

         when E_Element_Import =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Element_Import;

         when E_Enumeration =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Enumeration;

         when E_Enumeration_Literal =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Enumeration_Literal;

         when E_Exception_Handler =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Exception_Handler;

         when E_Execution_Environment =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Execution_Environment;

         when E_Execution_Occurrence_Specification =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Execution_Occurrence_Specification;

         when E_Expansion_Node =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Expansion_Node;

         when E_Expansion_Region =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Expansion_Region;

         when E_Expression =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Expression;

         when E_Extend =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Extend;

         when E_Extension =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Extension;

         when E_Extension_End =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Extension_End;

         when E_Extension_Point =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Extension_Point;

         when E_Final_State =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Final_State;

         when E_Flow_Final_Node =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Flow_Final_Node;

         when E_Fork_Node =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Fork_Node;

         when E_Function_Behavior =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Function_Behavior;

         when E_Gate =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Gate;

         when E_General_Ordering =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_General_Ordering;

         when E_Generalization =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Generalization;

         when E_Generalization_Set =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Generalization_Set;

         when E_Image =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Image;

         when E_Include =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Include;

         when E_Information_Flow =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Information_Flow;

         when E_Information_Item =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Information_Item;

         when E_Initial_Node =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Initial_Node;

         when E_Input_Pin =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Input_Pin;

         when E_Instance_Specification =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Instance_Specification;

         when E_Instance_Value =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Instance_Value;

         when E_Interaction =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Interaction;

         when E_Interaction_Constraint =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Interaction_Constraint;

         when E_Interaction_Operand =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Interaction_Operand;

         when E_Interaction_Use =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Interaction_Use;

         when E_Interface =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Interface;

         when E_Interface_Realization =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Interface_Realization;

         when E_Interruptible_Activity_Region =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Interruptible_Activity_Region;

         when E_Interval =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Interval;

         when E_Interval_Constraint =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Interval_Constraint;

         when E_Join_Node =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Join_Node;

         when E_Lifeline =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Lifeline;

         when E_Link_End_Creation_Data =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Link_End_Creation_Data;

         when E_Link_End_Data =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Link_End_Data;

         when E_Link_End_Destruction_Data =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Link_End_Destruction_Data;

         when E_Literal_Boolean =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Literal_Boolean;

         when E_Literal_Integer =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Literal_Integer;

         when E_Literal_Null =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Literal_Null;

         when E_Literal_Real =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Literal_Real;

         when E_Literal_String =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Literal_String;

         when E_Literal_Unlimited_Natural =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Literal_Unlimited_Natural;

         when E_Loop_Node =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Loop_Node;

         when E_Manifestation =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Manifestation;

         when E_Merge_Node =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Merge_Node;

         when E_Message =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Message;

         when E_Message_Occurrence_Specification =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Message_Occurrence_Specification;

         when E_Model =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Model;

         when E_Node =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Node;

         when E_Object_Flow =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Object_Flow;

         when E_Occurrence_Specification =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Occurrence_Specification;

         when E_Opaque_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Opaque_Action;

         when E_Opaque_Behavior =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Opaque_Behavior;

         when E_Opaque_Expression =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Opaque_Expression;

         when E_Operation =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Operation;

         when E_Operation_Template_Parameter =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Operation_Template_Parameter;

         when E_Output_Pin =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Output_Pin;

         when E_Package =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Package;

         when E_Package_Import =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Package_Import;

         when E_Package_Merge =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Package_Merge;

         when E_Parameter =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Parameter;

         when E_Parameter_Set =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Parameter_Set;

         when E_Part_Decomposition =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Part_Decomposition;

         when E_Port =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Port;

         when E_Primitive_Type =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Primitive_Type;

         when E_Profile =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Profile;

         when E_Profile_Application =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Profile_Application;

         when E_Property =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Property;

         when E_Protocol_Conformance =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Protocol_Conformance;

         when E_Protocol_State_Machine =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Protocol_State_Machine;

         when E_Protocol_Transition =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Protocol_Transition;

         when E_Pseudostate =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Pseudostate;

         when E_Qualifier_Value =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Qualifier_Value;

         when E_Raise_Exception_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Raise_Exception_Action;

         when E_Read_Extent_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Read_Extent_Action;

         when E_Read_Is_Classified_Object_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Read_Is_Classified_Object_Action;

         when E_Read_Link_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Read_Link_Action;

         when E_Read_Link_Object_End_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Read_Link_Object_End_Action;

         when E_Read_Link_Object_End_Qualifier_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Read_Link_Object_End_Qualifier_Action;

         when E_Read_Self_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Read_Self_Action;

         when E_Read_Structural_Feature_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Read_Structural_Feature_Action;

         when E_Read_Variable_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Read_Variable_Action;

         when E_Realization =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Realization;

         when E_Reception =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Reception;

         when E_Reclassify_Object_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Reclassify_Object_Action;

         when E_Redefinable_Template_Signature =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Redefinable_Template_Signature;

         when E_Reduce_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Reduce_Action;

         when E_Region =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Region;

         when E_Remove_Structural_Feature_Value_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Remove_Structural_Feature_Value_Action;

         when E_Remove_Variable_Value_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Remove_Variable_Value_Action;

         when E_Reply_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Reply_Action;

         when E_Send_Object_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Send_Object_Action;

         when E_Send_Signal_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Send_Signal_Action;

         when E_Sequence_Node =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Sequence_Node;

         when E_Signal =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Signal;

         when E_Signal_Event =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Signal_Event;

         when E_Slot =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Slot;

         when E_Start_Classifier_Behavior_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Start_Classifier_Behavior_Action;

         when E_Start_Object_Behavior_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Start_Object_Behavior_Action;

         when E_State =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_State;

         when E_State_Invariant =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_State_Invariant;

         when E_State_Machine =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_State_Machine;

         when E_Stereotype =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Stereotype;

         when E_String_Expression =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_String_Expression;

         when E_Structured_Activity_Node =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Structured_Activity_Node;

         when E_Substitution =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Substitution;

         when E_Template_Binding =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Template_Binding;

         when E_Template_Parameter =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Template_Parameter;

         when E_Template_Parameter_Substitution =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Template_Parameter_Substitution;

         when E_Template_Signature =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Template_Signature;

         when E_Test_Identity_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Test_Identity_Action;

         when E_Time_Constraint =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Time_Constraint;

         when E_Time_Event =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Time_Event;

         when E_Time_Expression =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Time_Expression;

         when E_Time_Interval =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Time_Interval;

         when E_Time_Observation =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Time_Observation;

         when E_Transition =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Transition;

         when E_Trigger =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Trigger;

         when E_Unmarshall_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Unmarshall_Action;

         when E_Usage =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Usage;

         when E_Use_Case =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Use_Case;

         when E_Value_Pin =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Value_Pin;

         when E_Value_Specification_Action =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Value_Specification_Action;

         when E_Variable =>
            return AMF.Internals.Tables.UML_Metamodel.MC_UML_Variable;
      end case;
   end Get_Meta_Class;

   ---------
   -- Set --
   ---------

   procedure Set
    (Self     : UML_Element;
     Property : CMOF_Element;
     Value    : League.Holders.Holder)
   is

      procedure Abstraction_Set;
      --  Sets attribute's value of instance of Abstraction class.

      procedure Accept_Call_Action_Set;
      --  Sets attribute's value of instance of AcceptCallAction class.

      procedure Accept_Event_Action_Set;
      --  Sets attribute's value of instance of AcceptEventAction class.

      procedure Action_Execution_Specification_Set;
      --  Sets attribute's value of instance of ActionExecutionSpecification class.

      procedure Action_Input_Pin_Set;
      --  Sets attribute's value of instance of ActionInputPin class.

      procedure Activity_Set;
      --  Sets attribute's value of instance of Activity class.

      procedure Activity_Final_Node_Set;
      --  Sets attribute's value of instance of ActivityFinalNode class.

      procedure Activity_Parameter_Node_Set;
      --  Sets attribute's value of instance of ActivityParameterNode class.

      procedure Activity_Partition_Set;
      --  Sets attribute's value of instance of ActivityPartition class.

      procedure Actor_Set;
      --  Sets attribute's value of instance of Actor class.

      procedure Add_Structural_Feature_Value_Action_Set;
      --  Sets attribute's value of instance of AddStructuralFeatureValueAction class.

      procedure Add_Variable_Value_Action_Set;
      --  Sets attribute's value of instance of AddVariableValueAction class.

      procedure Any_Receive_Event_Set;
      --  Sets attribute's value of instance of AnyReceiveEvent class.

      procedure Artifact_Set;
      --  Sets attribute's value of instance of Artifact class.

      procedure Association_Set;
      --  Sets attribute's value of instance of Association class.

      procedure Association_Class_Set;
      --  Sets attribute's value of instance of AssociationClass class.

      procedure Behavior_Execution_Specification_Set;
      --  Sets attribute's value of instance of BehaviorExecutionSpecification class.

      procedure Broadcast_Signal_Action_Set;
      --  Sets attribute's value of instance of BroadcastSignalAction class.

      procedure Call_Behavior_Action_Set;
      --  Sets attribute's value of instance of CallBehaviorAction class.

      procedure Call_Event_Set;
      --  Sets attribute's value of instance of CallEvent class.

      procedure Call_Operation_Action_Set;
      --  Sets attribute's value of instance of CallOperationAction class.

      procedure Central_Buffer_Node_Set;
      --  Sets attribute's value of instance of CentralBufferNode class.

      procedure Change_Event_Set;
      --  Sets attribute's value of instance of ChangeEvent class.

      procedure Class_Set;
      --  Sets attribute's value of instance of Class class.

      procedure Classifier_Template_Parameter_Set;
      --  Sets attribute's value of instance of ClassifierTemplateParameter class.

      procedure Clause_Set;
      --  Sets attribute's value of instance of Clause class.

      procedure Clear_Association_Action_Set;
      --  Sets attribute's value of instance of ClearAssociationAction class.

      procedure Clear_Structural_Feature_Action_Set;
      --  Sets attribute's value of instance of ClearStructuralFeatureAction class.

      procedure Clear_Variable_Action_Set;
      --  Sets attribute's value of instance of ClearVariableAction class.

      procedure Collaboration_Set;
      --  Sets attribute's value of instance of Collaboration class.

      procedure Collaboration_Use_Set;
      --  Sets attribute's value of instance of CollaborationUse class.

      procedure Combined_Fragment_Set;
      --  Sets attribute's value of instance of CombinedFragment class.

      procedure Comment_Set;
      --  Sets attribute's value of instance of Comment class.

      procedure Communication_Path_Set;
      --  Sets attribute's value of instance of CommunicationPath class.

      procedure Component_Set;
      --  Sets attribute's value of instance of Component class.

      procedure Component_Realization_Set;
      --  Sets attribute's value of instance of ComponentRealization class.

      procedure Conditional_Node_Set;
      --  Sets attribute's value of instance of ConditionalNode class.

      procedure Connectable_Element_Template_Parameter_Set;
      --  Sets attribute's value of instance of ConnectableElementTemplateParameter class.

      procedure Connection_Point_Reference_Set;
      --  Sets attribute's value of instance of ConnectionPointReference class.

      procedure Connector_Set;
      --  Sets attribute's value of instance of Connector class.

      procedure Connector_End_Set;
      --  Sets attribute's value of instance of ConnectorEnd class.

      procedure Consider_Ignore_Fragment_Set;
      --  Sets attribute's value of instance of ConsiderIgnoreFragment class.

      procedure Constraint_Set;
      --  Sets attribute's value of instance of Constraint class.

      procedure Continuation_Set;
      --  Sets attribute's value of instance of Continuation class.

      procedure Control_Flow_Set;
      --  Sets attribute's value of instance of ControlFlow class.

      procedure Create_Link_Action_Set;
      --  Sets attribute's value of instance of CreateLinkAction class.

      procedure Create_Link_Object_Action_Set;
      --  Sets attribute's value of instance of CreateLinkObjectAction class.

      procedure Create_Object_Action_Set;
      --  Sets attribute's value of instance of CreateObjectAction class.

      procedure Data_Store_Node_Set;
      --  Sets attribute's value of instance of DataStoreNode class.

      procedure Data_Type_Set;
      --  Sets attribute's value of instance of DataType class.

      procedure Decision_Node_Set;
      --  Sets attribute's value of instance of DecisionNode class.

      procedure Dependency_Set;
      --  Sets attribute's value of instance of Dependency class.

      procedure Deployment_Set;
      --  Sets attribute's value of instance of Deployment class.

      procedure Deployment_Specification_Set;
      --  Sets attribute's value of instance of DeploymentSpecification class.

      procedure Destroy_Link_Action_Set;
      --  Sets attribute's value of instance of DestroyLinkAction class.

      procedure Destroy_Object_Action_Set;
      --  Sets attribute's value of instance of DestroyObjectAction class.

      procedure Destruction_Occurrence_Specification_Set;
      --  Sets attribute's value of instance of DestructionOccurrenceSpecification class.

      procedure Device_Set;
      --  Sets attribute's value of instance of Device class.

      procedure Duration_Set;
      --  Sets attribute's value of instance of Duration class.

      procedure Duration_Constraint_Set;
      --  Sets attribute's value of instance of DurationConstraint class.

      procedure Duration_Interval_Set;
      --  Sets attribute's value of instance of DurationInterval class.

      procedure Duration_Observation_Set;
      --  Sets attribute's value of instance of DurationObservation class.

      procedure Element_Import_Set;
      --  Sets attribute's value of instance of ElementImport class.

      procedure Enumeration_Set;
      --  Sets attribute's value of instance of Enumeration class.

      procedure Enumeration_Literal_Set;
      --  Sets attribute's value of instance of EnumerationLiteral class.

      procedure Exception_Handler_Set;
      --  Sets attribute's value of instance of ExceptionHandler class.

      procedure Execution_Environment_Set;
      --  Sets attribute's value of instance of ExecutionEnvironment class.

      procedure Execution_Occurrence_Specification_Set;
      --  Sets attribute's value of instance of ExecutionOccurrenceSpecification class.

      procedure Expansion_Node_Set;
      --  Sets attribute's value of instance of ExpansionNode class.

      procedure Expansion_Region_Set;
      --  Sets attribute's value of instance of ExpansionRegion class.

      procedure Expression_Set;
      --  Sets attribute's value of instance of Expression class.

      procedure Extend_Set;
      --  Sets attribute's value of instance of Extend class.

      procedure Extension_Set;
      --  Sets attribute's value of instance of Extension class.

      procedure Extension_End_Set;
      --  Sets attribute's value of instance of ExtensionEnd class.

      procedure Extension_Point_Set;
      --  Sets attribute's value of instance of ExtensionPoint class.

      procedure Final_State_Set;
      --  Sets attribute's value of instance of FinalState class.

      procedure Flow_Final_Node_Set;
      --  Sets attribute's value of instance of FlowFinalNode class.

      procedure Fork_Node_Set;
      --  Sets attribute's value of instance of ForkNode class.

      procedure Function_Behavior_Set;
      --  Sets attribute's value of instance of FunctionBehavior class.

      procedure Gate_Set;
      --  Sets attribute's value of instance of Gate class.

      procedure General_Ordering_Set;
      --  Sets attribute's value of instance of GeneralOrdering class.

      procedure Generalization_Set;
      --  Sets attribute's value of instance of Generalization class.

      procedure Generalization_Set_Set;
      --  Sets attribute's value of instance of GeneralizationSet class.

      procedure Image_Set;
      --  Sets attribute's value of instance of Image class.

      procedure Include_Set;
      --  Sets attribute's value of instance of Include class.

      procedure Information_Flow_Set;
      --  Sets attribute's value of instance of InformationFlow class.

      procedure Information_Item_Set;
      --  Sets attribute's value of instance of InformationItem class.

      procedure Initial_Node_Set;
      --  Sets attribute's value of instance of InitialNode class.

      procedure Input_Pin_Set;
      --  Sets attribute's value of instance of InputPin class.

      procedure Instance_Specification_Set;
      --  Sets attribute's value of instance of InstanceSpecification class.

      procedure Instance_Value_Set;
      --  Sets attribute's value of instance of InstanceValue class.

      procedure Interaction_Set;
      --  Sets attribute's value of instance of Interaction class.

      procedure Interaction_Constraint_Set;
      --  Sets attribute's value of instance of InteractionConstraint class.

      procedure Interaction_Operand_Set;
      --  Sets attribute's value of instance of InteractionOperand class.

      procedure Interaction_Use_Set;
      --  Sets attribute's value of instance of InteractionUse class.

      procedure Interface_Set;
      --  Sets attribute's value of instance of Interface class.

      procedure Interface_Realization_Set;
      --  Sets attribute's value of instance of InterfaceRealization class.

      procedure Interruptible_Activity_Region_Set;
      --  Sets attribute's value of instance of InterruptibleActivityRegion class.

      procedure Interval_Set;
      --  Sets attribute's value of instance of Interval class.

      procedure Interval_Constraint_Set;
      --  Sets attribute's value of instance of IntervalConstraint class.

      procedure Join_Node_Set;
      --  Sets attribute's value of instance of JoinNode class.

      procedure Lifeline_Set;
      --  Sets attribute's value of instance of Lifeline class.

      procedure Link_End_Creation_Data_Set;
      --  Sets attribute's value of instance of LinkEndCreationData class.

      procedure Link_End_Data_Set;
      --  Sets attribute's value of instance of LinkEndData class.

      procedure Link_End_Destruction_Data_Set;
      --  Sets attribute's value of instance of LinkEndDestructionData class.

      procedure Literal_Boolean_Set;
      --  Sets attribute's value of instance of LiteralBoolean class.

      procedure Literal_Integer_Set;
      --  Sets attribute's value of instance of LiteralInteger class.

      procedure Literal_Null_Set;
      --  Sets attribute's value of instance of LiteralNull class.

      procedure Literal_Real_Set;
      --  Sets attribute's value of instance of LiteralReal class.

      procedure Literal_String_Set;
      --  Sets attribute's value of instance of LiteralString class.

      procedure Literal_Unlimited_Natural_Set;
      --  Sets attribute's value of instance of LiteralUnlimitedNatural class.

      procedure Loop_Node_Set;
      --  Sets attribute's value of instance of LoopNode class.

      procedure Manifestation_Set;
      --  Sets attribute's value of instance of Manifestation class.

      procedure Merge_Node_Set;
      --  Sets attribute's value of instance of MergeNode class.

      procedure Message_Set;
      --  Sets attribute's value of instance of Message class.

      procedure Message_Occurrence_Specification_Set;
      --  Sets attribute's value of instance of MessageOccurrenceSpecification class.

      procedure Model_Set;
      --  Sets attribute's value of instance of Model class.

      procedure Node_Set;
      --  Sets attribute's value of instance of Node class.

      procedure Object_Flow_Set;
      --  Sets attribute's value of instance of ObjectFlow class.

      procedure Occurrence_Specification_Set;
      --  Sets attribute's value of instance of OccurrenceSpecification class.

      procedure Opaque_Action_Set;
      --  Sets attribute's value of instance of OpaqueAction class.

      procedure Opaque_Behavior_Set;
      --  Sets attribute's value of instance of OpaqueBehavior class.

      procedure Opaque_Expression_Set;
      --  Sets attribute's value of instance of OpaqueExpression class.

      procedure Operation_Set;
      --  Sets attribute's value of instance of Operation class.

      procedure Operation_Template_Parameter_Set;
      --  Sets attribute's value of instance of OperationTemplateParameter class.

      procedure Output_Pin_Set;
      --  Sets attribute's value of instance of OutputPin class.

      procedure Package_Set;
      --  Sets attribute's value of instance of Package class.

      procedure Package_Import_Set;
      --  Sets attribute's value of instance of PackageImport class.

      procedure Package_Merge_Set;
      --  Sets attribute's value of instance of PackageMerge class.

      procedure Parameter_Set;
      --  Sets attribute's value of instance of Parameter class.

      procedure Parameter_Set_Set;
      --  Sets attribute's value of instance of ParameterSet class.

      procedure Part_Decomposition_Set;
      --  Sets attribute's value of instance of PartDecomposition class.

      procedure Port_Set;
      --  Sets attribute's value of instance of Port class.

      procedure Primitive_Type_Set;
      --  Sets attribute's value of instance of PrimitiveType class.

      procedure Profile_Set;
      --  Sets attribute's value of instance of Profile class.

      procedure Profile_Application_Set;
      --  Sets attribute's value of instance of ProfileApplication class.

      procedure Property_Set;
      --  Sets attribute's value of instance of Property class.

      procedure Protocol_Conformance_Set;
      --  Sets attribute's value of instance of ProtocolConformance class.

      procedure Protocol_State_Machine_Set;
      --  Sets attribute's value of instance of ProtocolStateMachine class.

      procedure Protocol_Transition_Set;
      --  Sets attribute's value of instance of ProtocolTransition class.

      procedure Pseudostate_Set;
      --  Sets attribute's value of instance of Pseudostate class.

      procedure Qualifier_Value_Set;
      --  Sets attribute's value of instance of QualifierValue class.

      procedure Raise_Exception_Action_Set;
      --  Sets attribute's value of instance of RaiseExceptionAction class.

      procedure Read_Extent_Action_Set;
      --  Sets attribute's value of instance of ReadExtentAction class.

      procedure Read_Is_Classified_Object_Action_Set;
      --  Sets attribute's value of instance of ReadIsClassifiedObjectAction class.

      procedure Read_Link_Action_Set;
      --  Sets attribute's value of instance of ReadLinkAction class.

      procedure Read_Link_Object_End_Action_Set;
      --  Sets attribute's value of instance of ReadLinkObjectEndAction class.

      procedure Read_Link_Object_End_Qualifier_Action_Set;
      --  Sets attribute's value of instance of ReadLinkObjectEndQualifierAction class.

      procedure Read_Self_Action_Set;
      --  Sets attribute's value of instance of ReadSelfAction class.

      procedure Read_Structural_Feature_Action_Set;
      --  Sets attribute's value of instance of ReadStructuralFeatureAction class.

      procedure Read_Variable_Action_Set;
      --  Sets attribute's value of instance of ReadVariableAction class.

      procedure Realization_Set;
      --  Sets attribute's value of instance of Realization class.

      procedure Reception_Set;
      --  Sets attribute's value of instance of Reception class.

      procedure Reclassify_Object_Action_Set;
      --  Sets attribute's value of instance of ReclassifyObjectAction class.

      procedure Redefinable_Template_Signature_Set;
      --  Sets attribute's value of instance of RedefinableTemplateSignature class.

      procedure Reduce_Action_Set;
      --  Sets attribute's value of instance of ReduceAction class.

      procedure Region_Set;
      --  Sets attribute's value of instance of Region class.

      procedure Remove_Structural_Feature_Value_Action_Set;
      --  Sets attribute's value of instance of RemoveStructuralFeatureValueAction class.

      procedure Remove_Variable_Value_Action_Set;
      --  Sets attribute's value of instance of RemoveVariableValueAction class.

      procedure Reply_Action_Set;
      --  Sets attribute's value of instance of ReplyAction class.

      procedure Send_Object_Action_Set;
      --  Sets attribute's value of instance of SendObjectAction class.

      procedure Send_Signal_Action_Set;
      --  Sets attribute's value of instance of SendSignalAction class.

      procedure Sequence_Node_Set;
      --  Sets attribute's value of instance of SequenceNode class.

      procedure Signal_Set;
      --  Sets attribute's value of instance of Signal class.

      procedure Signal_Event_Set;
      --  Sets attribute's value of instance of SignalEvent class.

      procedure Slot_Set;
      --  Sets attribute's value of instance of Slot class.

      procedure Start_Classifier_Behavior_Action_Set;
      --  Sets attribute's value of instance of StartClassifierBehaviorAction class.

      procedure Start_Object_Behavior_Action_Set;
      --  Sets attribute's value of instance of StartObjectBehaviorAction class.

      procedure State_Set;
      --  Sets attribute's value of instance of State class.

      procedure State_Invariant_Set;
      --  Sets attribute's value of instance of StateInvariant class.

      procedure State_Machine_Set;
      --  Sets attribute's value of instance of StateMachine class.

      procedure Stereotype_Set;
      --  Sets attribute's value of instance of Stereotype class.

      procedure String_Expression_Set;
      --  Sets attribute's value of instance of StringExpression class.

      procedure Structured_Activity_Node_Set;
      --  Sets attribute's value of instance of StructuredActivityNode class.

      procedure Substitution_Set;
      --  Sets attribute's value of instance of Substitution class.

      procedure Template_Binding_Set;
      --  Sets attribute's value of instance of TemplateBinding class.

      procedure Template_Parameter_Set;
      --  Sets attribute's value of instance of TemplateParameter class.

      procedure Template_Parameter_Substitution_Set;
      --  Sets attribute's value of instance of TemplateParameterSubstitution class.

      procedure Template_Signature_Set;
      --  Sets attribute's value of instance of TemplateSignature class.

      procedure Test_Identity_Action_Set;
      --  Sets attribute's value of instance of TestIdentityAction class.

      procedure Time_Constraint_Set;
      --  Sets attribute's value of instance of TimeConstraint class.

      procedure Time_Event_Set;
      --  Sets attribute's value of instance of TimeEvent class.

      procedure Time_Expression_Set;
      --  Sets attribute's value of instance of TimeExpression class.

      procedure Time_Interval_Set;
      --  Sets attribute's value of instance of TimeInterval class.

      procedure Time_Observation_Set;
      --  Sets attribute's value of instance of TimeObservation class.

      procedure Transition_Set;
      --  Sets attribute's value of instance of Transition class.

      procedure Trigger_Set;
      --  Sets attribute's value of instance of Trigger class.

      procedure Unmarshall_Action_Set;
      --  Sets attribute's value of instance of UnmarshallAction class.

      procedure Usage_Set;
      --  Sets attribute's value of instance of Usage class.

      procedure Use_Case_Set;
      --  Sets attribute's value of instance of UseCase class.

      procedure Value_Pin_Set;
      --  Sets attribute's value of instance of ValuePin class.

      procedure Value_Specification_Action_Set;
      --  Sets attribute's value of instance of ValueSpecificationAction class.

      procedure Variable_Set;
      --  Sets attribute's value of instance of Variable class.

      ---------------------
      -- Abstraction_Set --
      ---------------------

      procedure Abstraction_Set is
      begin
         if Property = MP_UML_Abstraction_Mapping then
            --  Abstraction::mapping : OpaqueExpression

            AMF.UML.Abstractions.UML_Abstraction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Mapping
               (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Abstractions.UML_Abstraction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Abstractions.UML_Abstraction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Abstractions.UML_Abstraction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Abstractions.UML_Abstraction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Abstractions.UML_Abstraction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Abstractions.UML_Abstraction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Abstraction_Set;

      ----------------------------
      -- Accept_Call_Action_Set --
      ----------------------------

      procedure Accept_Call_Action_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Accept_Event_Action_Is_Unmarshall then
            --  AcceptEventAction::isUnmarshall : Boolean

            AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Unmarshall
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Accept_Call_Action_Return_Information then
            --  AcceptCallAction::returnInformation : OutputPin

            AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Return_Information
               (AMF.UML.Output_Pins.UML_Output_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Accept_Call_Actions.UML_Accept_Call_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Accept_Call_Action_Set;

      -----------------------------
      -- Accept_Event_Action_Set --
      -----------------------------

      procedure Accept_Event_Action_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Accept_Event_Action_Is_Unmarshall then
            --  AcceptEventAction::isUnmarshall : Boolean

            AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Unmarshall
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Accept_Event_Actions.UML_Accept_Event_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Accept_Event_Action_Set;

      ----------------------------------------
      -- Action_Execution_Specification_Set --
      ----------------------------------------

      procedure Action_Execution_Specification_Set is
      begin
         if Property = MP_UML_Action_Execution_Specification_Action then
            --  ActionExecutionSpecification::action : Action

            AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Action
               (AMF.UML.Actions.UML_Action_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Interaction then
            --  InteractionFragment::enclosingInteraction : Interaction

            AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Interaction
               (AMF.UML.Interactions.UML_Interaction_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Operand then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Operand
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Execution_Specification_Finish then
            --  ExecutionSpecification::finish : OccurrenceSpecification

            AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Finish
               (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Execution_Specification_Start then
            --  ExecutionSpecification::start : OccurrenceSpecification

            AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Start
               (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Action_Execution_Specifications.UML_Action_Execution_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Action_Execution_Specification_Set;

      --------------------------
      -- Action_Input_Pin_Set --
      --------------------------

      procedure Action_Input_Pin_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Action_Input_Pin_From_Action then
            --  ActionInputPin::fromAction : Action

            AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_From_Action
               (AMF.UML.Actions.UML_Action_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Pin_Is_Control then
            --  Pin::isControl : Boolean

            AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Control
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Object_Node_Is_Control_Type then
            --  ObjectNode::isControlType : Boolean

            AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Control_Type
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Multiplicity_Element_Is_Ordered then
            --  MultiplicityElement::isOrdered : Boolean

            AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Ordered
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Multiplicity_Element_Is_Unique then
            --  MultiplicityElement::isUnique : Boolean

            AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Unique
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Multiplicity_Element_Lower_Value then
            --  MultiplicityElement::lowerValue : ValueSpecification

            AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Lower_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Object_Node_Ordering then
            --  ObjectNode::ordering : ObjectNodeOrderingKind

            AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Ordering
               (AMF.UML.Holders.Object_Node_Ordering_Kinds.Element (Value));

         elsif Property = MP_UML_Object_Node_Selection then
            --  ObjectNode::selection : Behavior

            AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Selection
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Object_Node_Upper_Bound then
            --  ObjectNode::upperBound : ValueSpecification

            AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Upper_Bound
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Multiplicity_Element_Upper_Value then
            --  MultiplicityElement::upperValue : ValueSpecification

            AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Upper_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Action_Input_Pins.UML_Action_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Action_Input_Pin_Set;

      ------------------
      -- Activity_Set --
      ------------------

      procedure Activity_Set is
      begin
         if Property = MP_UML_Behaviored_Classifier_Classifier_Behavior then
            --  BehavioredClassifier::classifierBehavior : Behavior

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Classifier_Behavior
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Active
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Activity_Is_Read_Only then
            --  Activity::isReadOnly : Boolean

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Read_Only
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Behavior_Is_Reentrant then
            --  Behavior::isReentrant : Boolean

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Activity_Is_Single_Execution then
            --  Activity::isSingleExecution : Boolean

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Single_Execution
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Behavior_Specification then
            --  Behavior::specification : BehavioralFeature

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Specification
               (AMF.UML.Behavioral_Features.UML_Behavioral_Feature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Activities.UML_Activity_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Activity_Set;

      -----------------------------
      -- Activity_Final_Node_Set --
      -----------------------------

      procedure Activity_Final_Node_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Activity_Final_Nodes.UML_Activity_Final_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Activity_Final_Node_Set;

      ---------------------------------
      -- Activity_Parameter_Node_Set --
      ---------------------------------

      procedure Activity_Parameter_Node_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Object_Node_Is_Control_Type then
            --  ObjectNode::isControlType : Boolean

            AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Control_Type
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Object_Node_Ordering then
            --  ObjectNode::ordering : ObjectNodeOrderingKind

            AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Ordering
               (AMF.UML.Holders.Object_Node_Ordering_Kinds.Element (Value));

         elsif Property = MP_UML_Activity_Parameter_Node_Parameter then
            --  ActivityParameterNode::parameter : Parameter

            AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Parameter
               (AMF.UML.Parameters.UML_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Object_Node_Selection then
            --  ObjectNode::selection : Behavior

            AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Selection
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Object_Node_Upper_Bound then
            --  ObjectNode::upperBound : ValueSpecification

            AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Upper_Bound
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Activity_Parameter_Nodes.UML_Activity_Parameter_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Activity_Parameter_Node_Set;

      ----------------------------
      -- Activity_Partition_Set --
      ----------------------------

      procedure Activity_Partition_Set is
      begin
         if Property = MP_UML_Activity_Group_In_Activity then
            --  ActivityGroup::inActivity : Activity

            AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Partition_Is_Dimension then
            --  ActivityPartition::isDimension : Boolean

            AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Dimension
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Activity_Partition_Is_External then
            --  ActivityPartition::isExternal : Boolean

            AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_External
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Partition_Represents then
            --  ActivityPartition::represents : Element

            AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Represents
               (AMF.UML.Elements.UML_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Partition_Super_Partition then
            --  ActivityPartition::superPartition : ActivityPartition

            AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Super_Partition
               (AMF.UML.Activity_Partitions.UML_Activity_Partition_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Activity_Partitions.UML_Activity_Partition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Activity_Partition_Set;

      ---------------
      -- Actor_Set --
      ---------------

      procedure Actor_Set is
      begin
         if Property = MP_UML_Behaviored_Classifier_Classifier_Behavior then
            --  BehavioredClassifier::classifierBehavior : Behavior

            AMF.UML.Actors.UML_Actor_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Classifier_Behavior
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Actors.UML_Actor_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Actors.UML_Actor_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Actors.UML_Actor_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Actors.UML_Actor_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Actors.UML_Actor_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Actors.UML_Actor_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Actors.UML_Actor_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Actors.UML_Actor_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            AMF.UML.Actors.UML_Actor_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Actors.UML_Actor_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Actors.UML_Actor_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Actors.UML_Actor_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Actors.UML_Actor_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Actors.UML_Actor_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Actor_Set;

      ---------------------------------------------
      -- Add_Structural_Feature_Value_Action_Set --
      ---------------------------------------------

      procedure Add_Structural_Feature_Value_Action_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Add_Structural_Feature_Value_Action_Insert_At then
            --  AddStructuralFeatureValueAction::insertAt : InputPin

            AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Insert_At
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Add_Structural_Feature_Value_Action_Is_Replace_All then
            --  AddStructuralFeatureValueAction::isReplaceAll : Boolean

            AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Replace_All
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Structural_Feature_Action_Object then
            --  StructuralFeatureAction::object : InputPin

            AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Object
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Write_Structural_Feature_Action_Result then
            --  WriteStructuralFeatureAction::result : OutputPin

            AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Result
               (AMF.UML.Output_Pins.UML_Output_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Structural_Feature_Action_Structural_Feature then
            --  StructuralFeatureAction::structuralFeature : StructuralFeature

            AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Structural_Feature
               (AMF.UML.Structural_Features.UML_Structural_Feature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Write_Structural_Feature_Action_Value then
            --  WriteStructuralFeatureAction::value : InputPin

            AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Value
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Add_Structural_Feature_Value_Actions.UML_Add_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Add_Structural_Feature_Value_Action_Set;

      -----------------------------------
      -- Add_Variable_Value_Action_Set --
      -----------------------------------

      procedure Add_Variable_Value_Action_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Add_Variable_Value_Action_Insert_At then
            --  AddVariableValueAction::insertAt : InputPin

            AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Insert_At
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Add_Variable_Value_Action_Is_Replace_All then
            --  AddVariableValueAction::isReplaceAll : Boolean

            AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Replace_All
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Write_Variable_Action_Value then
            --  WriteVariableAction::value : InputPin

            AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Value
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Variable_Action_Variable then
            --  VariableAction::variable : Variable

            AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Variable
               (AMF.UML.Variables.UML_Variable_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Add_Variable_Value_Actions.UML_Add_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Add_Variable_Value_Action_Set;

      ---------------------------
      -- Any_Receive_Event_Set --
      ---------------------------

      procedure Any_Receive_Event_Set is
      begin
         if Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Any_Receive_Events.UML_Any_Receive_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Any_Receive_Events.UML_Any_Receive_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Any_Receive_Events.UML_Any_Receive_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Any_Receive_Events.UML_Any_Receive_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Any_Receive_Events.UML_Any_Receive_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Any_Receive_Events.UML_Any_Receive_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Any_Receive_Event_Set;

      ------------------
      -- Artifact_Set --
      ------------------

      procedure Artifact_Set is
      begin
         if Property = MP_UML_Artifact_File_Name then
            --  Artifact::fileName : String

            AMF.UML.Artifacts.UML_Artifact_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_File_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Artifacts.UML_Artifact_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Artifacts.UML_Artifact_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Artifacts.UML_Artifact_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Artifacts.UML_Artifact_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Artifacts.UML_Artifact_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Artifacts.UML_Artifact_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Artifacts.UML_Artifact_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Artifacts.UML_Artifact_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            AMF.UML.Artifacts.UML_Artifact_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Artifacts.UML_Artifact_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Artifacts.UML_Artifact_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Artifacts.UML_Artifact_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Artifacts.UML_Artifact_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Artifacts.UML_Artifact_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Artifact_Set;

      ---------------------
      -- Association_Set --
      ---------------------

      procedure Association_Set is
      begin
         if Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Associations.UML_Association_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Association_Is_Derived then
            --  Association::isDerived : Boolean

            AMF.UML.Associations.UML_Association_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Derived
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Associations.UML_Association_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Associations.UML_Association_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Associations.UML_Association_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Associations.UML_Association_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Associations.UML_Association_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Associations.UML_Association_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Associations.UML_Association_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            AMF.UML.Associations.UML_Association_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Associations.UML_Association_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Associations.UML_Association_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Associations.UML_Association_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Associations.UML_Association_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Associations.UML_Association_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Association_Set;

      ---------------------------
      -- Association_Class_Set --
      ---------------------------

      procedure Association_Class_Set is
      begin
         if Property = MP_UML_Behaviored_Classifier_Classifier_Behavior then
            --  BehavioredClassifier::classifierBehavior : Behavior

            AMF.UML.Association_Classes.UML_Association_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Classifier_Behavior
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            AMF.UML.Association_Classes.UML_Association_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Association_Classes.UML_Association_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            AMF.UML.Association_Classes.UML_Association_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Active
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Association_Is_Derived then
            --  Association::isDerived : Boolean

            AMF.UML.Association_Classes.UML_Association_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Derived
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Association_Classes.UML_Association_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Association_Classes.UML_Association_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Association_Classes.UML_Association_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Association_Classes.UML_Association_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Association_Classes.UML_Association_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Association_Classes.UML_Association_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Association_Classes.UML_Association_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            AMF.UML.Association_Classes.UML_Association_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Association_Classes.UML_Association_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Association_Classes.UML_Association_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Association_Classes.UML_Association_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Association_Classes.UML_Association_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Association_Classes.UML_Association_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Association_Class_Set;

      ------------------------------------------
      -- Behavior_Execution_Specification_Set --
      ------------------------------------------

      procedure Behavior_Execution_Specification_Set is
      begin
         if Property = MP_UML_Behavior_Execution_Specification_Behavior then
            --  BehaviorExecutionSpecification::behavior : Behavior

            AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Behavior
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Interaction then
            --  InteractionFragment::enclosingInteraction : Interaction

            AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Interaction
               (AMF.UML.Interactions.UML_Interaction_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Operand then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Operand
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Execution_Specification_Finish then
            --  ExecutionSpecification::finish : OccurrenceSpecification

            AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Finish
               (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Execution_Specification_Start then
            --  ExecutionSpecification::start : OccurrenceSpecification

            AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Start
               (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Behavior_Execution_Specifications.UML_Behavior_Execution_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Behavior_Execution_Specification_Set;

      ---------------------------------
      -- Broadcast_Signal_Action_Set --
      ---------------------------------

      procedure Broadcast_Signal_Action_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Invocation_Action_On_Port then
            --  InvocationAction::onPort : Port

            AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_On_Port
               (AMF.UML.Ports.UML_Port_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Broadcast_Signal_Action_Signal then
            --  BroadcastSignalAction::signal : Signal

            AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Signal
               (AMF.UML.Signals.UML_Signal_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Broadcast_Signal_Actions.UML_Broadcast_Signal_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Broadcast_Signal_Action_Set;

      ------------------------------
      -- Call_Behavior_Action_Set --
      ------------------------------

      procedure Call_Behavior_Action_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Call_Behavior_Action_Behavior then
            --  CallBehaviorAction::behavior : Behavior

            AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Behavior
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Call_Action_Is_Synchronous then
            --  CallAction::isSynchronous : Boolean

            AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Synchronous
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Invocation_Action_On_Port then
            --  InvocationAction::onPort : Port

            AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_On_Port
               (AMF.UML.Ports.UML_Port_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Call_Behavior_Actions.UML_Call_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Call_Behavior_Action_Set;

      --------------------
      -- Call_Event_Set --
      --------------------

      procedure Call_Event_Set is
      begin
         if Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Call_Events.UML_Call_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Call_Events.UML_Call_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Call_Event_Operation then
            --  CallEvent::operation : Operation

            AMF.UML.Call_Events.UML_Call_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Operation
               (AMF.UML.Operations.UML_Operation_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Call_Events.UML_Call_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Call_Events.UML_Call_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Call_Events.UML_Call_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Call_Events.UML_Call_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Call_Event_Set;

      -------------------------------
      -- Call_Operation_Action_Set --
      -------------------------------

      procedure Call_Operation_Action_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Call_Action_Is_Synchronous then
            --  CallAction::isSynchronous : Boolean

            AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Synchronous
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Invocation_Action_On_Port then
            --  InvocationAction::onPort : Port

            AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_On_Port
               (AMF.UML.Ports.UML_Port_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Call_Operation_Action_Operation then
            --  CallOperationAction::operation : Operation

            AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Operation
               (AMF.UML.Operations.UML_Operation_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Call_Operation_Action_Target then
            --  CallOperationAction::target : InputPin

            AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Target
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Call_Operation_Actions.UML_Call_Operation_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Call_Operation_Action_Set;

      -----------------------------
      -- Central_Buffer_Node_Set --
      -----------------------------

      procedure Central_Buffer_Node_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Object_Node_Is_Control_Type then
            --  ObjectNode::isControlType : Boolean

            AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Control_Type
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Object_Node_Ordering then
            --  ObjectNode::ordering : ObjectNodeOrderingKind

            AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Ordering
               (AMF.UML.Holders.Object_Node_Ordering_Kinds.Element (Value));

         elsif Property = MP_UML_Object_Node_Selection then
            --  ObjectNode::selection : Behavior

            AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Selection
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Object_Node_Upper_Bound then
            --  ObjectNode::upperBound : ValueSpecification

            AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Upper_Bound
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Central_Buffer_Nodes.UML_Central_Buffer_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Central_Buffer_Node_Set;

      ----------------------
      -- Change_Event_Set --
      ----------------------

      procedure Change_Event_Set is
      begin
         if Property = MP_UML_Change_Event_Change_Expression then
            --  ChangeEvent::changeExpression : ValueSpecification

            AMF.UML.Change_Events.UML_Change_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Change_Expression
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Change_Events.UML_Change_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Change_Events.UML_Change_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Change_Events.UML_Change_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Change_Events.UML_Change_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Change_Events.UML_Change_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Change_Events.UML_Change_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Change_Event_Set;

      ---------------
      -- Class_Set --
      ---------------

      procedure Class_Set is
      begin
         if Property = MP_UML_Behaviored_Classifier_Classifier_Behavior then
            --  BehavioredClassifier::classifierBehavior : Behavior

            AMF.UML.Classes.UML_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Classifier_Behavior
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            AMF.UML.Classes.UML_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Classes.UML_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            AMF.UML.Classes.UML_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Active
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Classes.UML_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Classes.UML_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Classes.UML_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Classes.UML_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Classes.UML_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Classes.UML_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Classes.UML_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            AMF.UML.Classes.UML_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Classes.UML_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Classes.UML_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Classes.UML_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Classes.UML_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Classes.UML_Class_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Class_Set;

      ---------------------------------------
      -- Classifier_Template_Parameter_Set --
      ---------------------------------------

      procedure Classifier_Template_Parameter_Set is
      begin
         if Property = MP_UML_Classifier_Template_Parameter_Allow_Substitutable then
            --  ClassifierTemplateParameter::allowSubstitutable : Boolean

            AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Allow_Substitutable
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Template_Parameter_Default then
            --  TemplateParameter::default : ParameterableElement

            AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Default
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Template_Parameter_Owned_Default then
            --  TemplateParameter::ownedDefault : ParameterableElement

            AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Default
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Template_Parameter_Owned_Parametered_Element then
            --  TemplateParameter::ownedParameteredElement : ParameterableElement

            AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Parametered_Element
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Template_Parameter_Parametered_Element then
            --  ClassifierTemplateParameter::parameteredElement : Classifier

            AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Parametered_Element
               (AMF.UML.Classifiers.UML_Classifier_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Template_Parameter_Parametered_Element then
            --  TemplateParameter::parameteredElement : ParameterableElement

            AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Parametered_Element
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Template_Parameter_Signature then
            --  TemplateParameter::signature : TemplateSignature

            AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Classifier_Template_Parameter_Set;

      ----------------
      -- Clause_Set --
      ----------------

      procedure Clause_Set is
      begin
         if Property = MP_UML_Clause_Decider then
            --  Clause::decider : OutputPin

            AMF.UML.Clauses.UML_Clause_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Decider
               (AMF.UML.Output_Pins.UML_Output_Pin_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Clause_Set;

      ----------------------------------
      -- Clear_Association_Action_Set --
      ----------------------------------

      procedure Clear_Association_Action_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Clear_Association_Action_Association then
            --  ClearAssociationAction::association : Association

            AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Association
               (AMF.UML.Associations.UML_Association_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Clear_Association_Action_Object then
            --  ClearAssociationAction::object : InputPin

            AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Object
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Clear_Association_Actions.UML_Clear_Association_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Clear_Association_Action_Set;

      -----------------------------------------
      -- Clear_Structural_Feature_Action_Set --
      -----------------------------------------

      procedure Clear_Structural_Feature_Action_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Structural_Feature_Action_Object then
            --  StructuralFeatureAction::object : InputPin

            AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Object
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Clear_Structural_Feature_Action_Result then
            --  ClearStructuralFeatureAction::result : OutputPin

            AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Result
               (AMF.UML.Output_Pins.UML_Output_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Structural_Feature_Action_Structural_Feature then
            --  StructuralFeatureAction::structuralFeature : StructuralFeature

            AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Structural_Feature
               (AMF.UML.Structural_Features.UML_Structural_Feature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Clear_Structural_Feature_Actions.UML_Clear_Structural_Feature_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Clear_Structural_Feature_Action_Set;

      -------------------------------
      -- Clear_Variable_Action_Set --
      -------------------------------

      procedure Clear_Variable_Action_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Variable_Action_Variable then
            --  VariableAction::variable : Variable

            AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Variable
               (AMF.UML.Variables.UML_Variable_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Clear_Variable_Actions.UML_Clear_Variable_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Clear_Variable_Action_Set;

      -----------------------
      -- Collaboration_Set --
      -----------------------

      procedure Collaboration_Set is
      begin
         if Property = MP_UML_Behaviored_Classifier_Classifier_Behavior then
            --  BehavioredClassifier::classifierBehavior : Behavior

            AMF.UML.Collaborations.UML_Collaboration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Classifier_Behavior
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Collaborations.UML_Collaboration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Collaborations.UML_Collaboration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Collaborations.UML_Collaboration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Collaborations.UML_Collaboration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Collaborations.UML_Collaboration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Collaborations.UML_Collaboration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Collaborations.UML_Collaboration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Collaborations.UML_Collaboration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            AMF.UML.Collaborations.UML_Collaboration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Collaborations.UML_Collaboration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Collaborations.UML_Collaboration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Collaborations.UML_Collaboration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Collaborations.UML_Collaboration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Collaborations.UML_Collaboration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Collaboration_Set;

      ---------------------------
      -- Collaboration_Use_Set --
      ---------------------------

      procedure Collaboration_Use_Set is
      begin
         if Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Collaboration_Use_Type then
            --  CollaborationUse::type : Collaboration

            AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Collaborations.UML_Collaboration_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Collaboration_Use_Set;

      ---------------------------
      -- Combined_Fragment_Set --
      ---------------------------

      procedure Combined_Fragment_Set is
      begin
         if Property = MP_UML_Interaction_Fragment_Enclosing_Interaction then
            --  InteractionFragment::enclosingInteraction : Interaction

            AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Interaction
               (AMF.UML.Interactions.UML_Interaction_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Operand then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Operand
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Combined_Fragment_Interaction_Operator then
            --  CombinedFragment::interactionOperator : InteractionOperatorKind

            AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Interaction_Operator
               (AMF.UML.Holders.Interaction_Operator_Kinds.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Combined_Fragments.UML_Combined_Fragment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Combined_Fragment_Set;

      -----------------
      -- Comment_Set --
      -----------------

      procedure Comment_Set is
      begin
         if Property = MP_UML_Comment_Body then
            --  Comment::body : String

            AMF.UML.Comments.UML_Comment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Body
               (AMF.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Comment_Set;

      ----------------------------
      -- Communication_Path_Set --
      ----------------------------

      procedure Communication_Path_Set is
      begin
         if Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Communication_Paths.UML_Communication_Path_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Association_Is_Derived then
            --  Association::isDerived : Boolean

            AMF.UML.Communication_Paths.UML_Communication_Path_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Derived
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Communication_Paths.UML_Communication_Path_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Communication_Paths.UML_Communication_Path_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Communication_Paths.UML_Communication_Path_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Communication_Paths.UML_Communication_Path_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Communication_Paths.UML_Communication_Path_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Communication_Paths.UML_Communication_Path_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Communication_Paths.UML_Communication_Path_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            AMF.UML.Communication_Paths.UML_Communication_Path_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Communication_Paths.UML_Communication_Path_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Communication_Paths.UML_Communication_Path_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Communication_Paths.UML_Communication_Path_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Communication_Paths.UML_Communication_Path_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Communication_Paths.UML_Communication_Path_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Communication_Path_Set;

      -------------------
      -- Component_Set --
      -------------------

      procedure Component_Set is
      begin
         if Property = MP_UML_Behaviored_Classifier_Classifier_Behavior then
            --  BehavioredClassifier::classifierBehavior : Behavior

            AMF.UML.Components.UML_Component_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Classifier_Behavior
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            AMF.UML.Components.UML_Component_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Components.UML_Component_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            AMF.UML.Components.UML_Component_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Active
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Components.UML_Component_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Component_Is_Indirectly_Instantiated then
            --  Component::isIndirectlyInstantiated : Boolean

            AMF.UML.Components.UML_Component_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Indirectly_Instantiated
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Components.UML_Component_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Components.UML_Component_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Components.UML_Component_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Components.UML_Component_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Components.UML_Component_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Components.UML_Component_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            AMF.UML.Components.UML_Component_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Components.UML_Component_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Components.UML_Component_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Components.UML_Component_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Components.UML_Component_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Components.UML_Component_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Component_Set;

      -------------------------------
      -- Component_Realization_Set --
      -------------------------------

      procedure Component_Realization_Set is
      begin
         if Property = MP_UML_Component_Realization_Abstraction then
            --  ComponentRealization::abstraction : Component

            AMF.UML.Component_Realizations.UML_Component_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Abstraction
               (AMF.UML.Components.UML_Component_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Abstraction_Mapping then
            --  Abstraction::mapping : OpaqueExpression

            AMF.UML.Component_Realizations.UML_Component_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Mapping
               (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Component_Realizations.UML_Component_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Component_Realizations.UML_Component_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Component_Realizations.UML_Component_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Component_Realizations.UML_Component_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Component_Realizations.UML_Component_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Component_Realizations.UML_Component_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Component_Realization_Set;

      --------------------------
      -- Conditional_Node_Set --
      --------------------------

      procedure Conditional_Node_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Structured_Activity_Node_Activity then
            --  StructuredActivityNode::activity : Activity

            AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Group_In_Activity then
            --  ActivityGroup::inActivity : Activity

            AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Conditional_Node_Is_Assured then
            --  ConditionalNode::isAssured : Boolean

            AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Assured
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Conditional_Node_Is_Determinate then
            --  ConditionalNode::isDeterminate : Boolean

            AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Determinate
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Structured_Activity_Node_Must_Isolate then
            --  StructuredActivityNode::mustIsolate : Boolean

            AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Must_Isolate
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Conditional_Nodes.UML_Conditional_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Conditional_Node_Set;

      ------------------------------------------------
      -- Connectable_Element_Template_Parameter_Set --
      ------------------------------------------------

      procedure Connectable_Element_Template_Parameter_Set is
      begin
         if Property = MP_UML_Template_Parameter_Default then
            --  TemplateParameter::default : ParameterableElement

            AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Default
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Template_Parameter_Owned_Default then
            --  TemplateParameter::ownedDefault : ParameterableElement

            AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Default
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Template_Parameter_Owned_Parametered_Element then
            --  TemplateParameter::ownedParameteredElement : ParameterableElement

            AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Parametered_Element
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Connectable_Element_Template_Parameter_Parametered_Element then
            --  ConnectableElementTemplateParameter::parameteredElement : ConnectableElement

            AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Parametered_Element
               (AMF.UML.Connectable_Elements.UML_Connectable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Template_Parameter_Parametered_Element then
            --  TemplateParameter::parameteredElement : ParameterableElement

            AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Parametered_Element
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Template_Parameter_Signature then
            --  TemplateParameter::signature : TemplateSignature

            AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Connectable_Element_Template_Parameter_Set;

      ------------------------------------
      -- Connection_Point_Reference_Set --
      ------------------------------------

      procedure Connection_Point_Reference_Set is
      begin
         if Property = MP_UML_Vertex_Container then
            --  Vertex::container : Region

            AMF.UML.Connection_Point_References.UML_Connection_Point_Reference_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Container
               (AMF.UML.Regions.UML_Region_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Connection_Point_References.UML_Connection_Point_Reference_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Connection_Point_References.UML_Connection_Point_Reference_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Connection_Point_Reference_State then
            --  ConnectionPointReference::state : State

            AMF.UML.Connection_Point_References.UML_Connection_Point_Reference_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_State
               (AMF.UML.States.UML_State_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Connection_Point_References.UML_Connection_Point_Reference_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Connection_Point_Reference_Set;

      -------------------
      -- Connector_Set --
      -------------------

      procedure Connector_Set is
      begin
         if Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Connectors.UML_Connector_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Feature_Is_Static then
            --  Feature::isStatic : Boolean

            AMF.UML.Connectors.UML_Connector_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Static
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Connectors.UML_Connector_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Connectors.UML_Connector_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Connector_Type then
            --  Connector::type : Association

            AMF.UML.Connectors.UML_Connector_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Associations.UML_Association_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Connectors.UML_Connector_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Connector_Set;

      -----------------------
      -- Connector_End_Set --
      -----------------------

      procedure Connector_End_Set is
      begin
         if Property = MP_UML_Multiplicity_Element_Is_Ordered then
            --  MultiplicityElement::isOrdered : Boolean

            AMF.UML.Connector_Ends.UML_Connector_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Ordered
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Multiplicity_Element_Is_Unique then
            --  MultiplicityElement::isUnique : Boolean

            AMF.UML.Connector_Ends.UML_Connector_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Unique
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Multiplicity_Element_Lower_Value then
            --  MultiplicityElement::lowerValue : ValueSpecification

            AMF.UML.Connector_Ends.UML_Connector_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Lower_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Connector_End_Part_With_Port then
            --  ConnectorEnd::partWithPort : Property

            AMF.UML.Connector_Ends.UML_Connector_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Part_With_Port
               (AMF.UML.Properties.UML_Property_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Connector_End_Role then
            --  ConnectorEnd::role : ConnectableElement

            AMF.UML.Connector_Ends.UML_Connector_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Role
               (AMF.UML.Connectable_Elements.UML_Connectable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Multiplicity_Element_Upper_Value then
            --  MultiplicityElement::upperValue : ValueSpecification

            AMF.UML.Connector_Ends.UML_Connector_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Upper_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Connector_End_Set;

      ----------------------------------
      -- Consider_Ignore_Fragment_Set --
      ----------------------------------

      procedure Consider_Ignore_Fragment_Set is
      begin
         if Property = MP_UML_Interaction_Fragment_Enclosing_Interaction then
            --  InteractionFragment::enclosingInteraction : Interaction

            AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Interaction
               (AMF.UML.Interactions.UML_Interaction_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Operand then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Operand
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Combined_Fragment_Interaction_Operator then
            --  CombinedFragment::interactionOperator : InteractionOperatorKind

            AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Interaction_Operator
               (AMF.UML.Holders.Interaction_Operator_Kinds.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Consider_Ignore_Fragments.UML_Consider_Ignore_Fragment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Consider_Ignore_Fragment_Set;

      --------------------
      -- Constraint_Set --
      --------------------

      procedure Constraint_Set is
      begin
         if Property = MP_UML_Constraint_Context then
            --  Constraint::context : Namespace

            AMF.UML.Constraints.UML_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Context
               (AMF.UML.Namespaces.UML_Namespace_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Constraints.UML_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Constraints.UML_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Constraints.UML_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Constraint_Specification then
            --  Constraint::specification : ValueSpecification

            AMF.UML.Constraints.UML_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Specification
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Constraints.UML_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Constraints.UML_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Constraints.UML_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Constraint_Set;

      ----------------------
      -- Continuation_Set --
      ----------------------

      procedure Continuation_Set is
      begin
         if Property = MP_UML_Interaction_Fragment_Enclosing_Interaction then
            --  InteractionFragment::enclosingInteraction : Interaction

            AMF.UML.Continuations.UML_Continuation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Interaction
               (AMF.UML.Interactions.UML_Interaction_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Operand then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            AMF.UML.Continuations.UML_Continuation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Operand
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Continuations.UML_Continuation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Continuations.UML_Continuation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Continuation_Setting then
            --  Continuation::setting : Boolean

            AMF.UML.Continuations.UML_Continuation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Setting
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Continuations.UML_Continuation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Continuation_Set;

      ----------------------
      -- Control_Flow_Set --
      ----------------------

      procedure Control_Flow_Set is
      begin
         if Property = MP_UML_Activity_Edge_Activity then
            --  ActivityEdge::activity : Activity

            AMF.UML.Control_Flows.UML_Control_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Edge_Guard then
            --  ActivityEdge::guard : ValueSpecification

            AMF.UML.Control_Flows.UML_Control_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Guard
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Edge_In_Structured_Node then
            --  ActivityEdge::inStructuredNode : StructuredActivityNode

            AMF.UML.Control_Flows.UML_Control_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Edge_Interrupts then
            --  ActivityEdge::interrupts : InterruptibleActivityRegion

            AMF.UML.Control_Flows.UML_Control_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Interrupts
               (AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Control_Flows.UML_Control_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Control_Flows.UML_Control_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Control_Flows.UML_Control_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Edge_Source then
            --  ActivityEdge::source : ActivityNode

            AMF.UML.Control_Flows.UML_Control_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Source
               (AMF.UML.Activity_Nodes.UML_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Edge_Target then
            --  ActivityEdge::target : ActivityNode

            AMF.UML.Control_Flows.UML_Control_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Target
               (AMF.UML.Activity_Nodes.UML_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Control_Flows.UML_Control_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Activity_Edge_Weight then
            --  ActivityEdge::weight : ValueSpecification

            AMF.UML.Control_Flows.UML_Control_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Weight
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Control_Flow_Set;

      ----------------------------
      -- Create_Link_Action_Set --
      ----------------------------

      procedure Create_Link_Action_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Create_Link_Actions.UML_Create_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Create_Link_Action_Set;

      -----------------------------------
      -- Create_Link_Object_Action_Set --
      -----------------------------------

      procedure Create_Link_Object_Action_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Create_Link_Object_Action_Result then
            --  CreateLinkObjectAction::result : OutputPin

            AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Result
               (AMF.UML.Output_Pins.UML_Output_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Create_Link_Object_Actions.UML_Create_Link_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Create_Link_Object_Action_Set;

      ------------------------------
      -- Create_Object_Action_Set --
      ------------------------------

      procedure Create_Object_Action_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Create_Object_Action_Classifier then
            --  CreateObjectAction::classifier : Classifier

            AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Classifier
               (AMF.UML.Classifiers.UML_Classifier_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Create_Object_Action_Result then
            --  CreateObjectAction::result : OutputPin

            AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Result
               (AMF.UML.Output_Pins.UML_Output_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Create_Object_Actions.UML_Create_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Create_Object_Action_Set;

      -------------------------
      -- Data_Store_Node_Set --
      -------------------------

      procedure Data_Store_Node_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Object_Node_Is_Control_Type then
            --  ObjectNode::isControlType : Boolean

            AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Control_Type
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Object_Node_Ordering then
            --  ObjectNode::ordering : ObjectNodeOrderingKind

            AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Ordering
               (AMF.UML.Holders.Object_Node_Ordering_Kinds.Element (Value));

         elsif Property = MP_UML_Object_Node_Selection then
            --  ObjectNode::selection : Behavior

            AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Selection
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Object_Node_Upper_Bound then
            --  ObjectNode::upperBound : ValueSpecification

            AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Upper_Bound
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Data_Store_Nodes.UML_Data_Store_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Data_Store_Node_Set;

      -------------------
      -- Data_Type_Set --
      -------------------

      procedure Data_Type_Set is
      begin
         if Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Data_Types.UML_Data_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Data_Types.UML_Data_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Data_Types.UML_Data_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Data_Types.UML_Data_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Data_Types.UML_Data_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Data_Types.UML_Data_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Data_Types.UML_Data_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Data_Types.UML_Data_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            AMF.UML.Data_Types.UML_Data_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Data_Types.UML_Data_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Data_Types.UML_Data_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Data_Types.UML_Data_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Data_Types.UML_Data_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Data_Types.UML_Data_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Data_Type_Set;

      -----------------------
      -- Decision_Node_Set --
      -----------------------

      procedure Decision_Node_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Decision_Nodes.UML_Decision_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Decision_Node_Decision_Input then
            --  DecisionNode::decisionInput : Behavior

            AMF.UML.Decision_Nodes.UML_Decision_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Decision_Input
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Decision_Node_Decision_Input_Flow then
            --  DecisionNode::decisionInputFlow : ObjectFlow

            AMF.UML.Decision_Nodes.UML_Decision_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Decision_Input_Flow
               (AMF.UML.Object_Flows.UML_Object_Flow_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Decision_Nodes.UML_Decision_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Decision_Nodes.UML_Decision_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Decision_Nodes.UML_Decision_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Decision_Nodes.UML_Decision_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Decision_Nodes.UML_Decision_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Decision_Node_Set;

      --------------------
      -- Dependency_Set --
      --------------------

      procedure Dependency_Set is
      begin
         if Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Dependencies.UML_Dependency_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Dependencies.UML_Dependency_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Dependencies.UML_Dependency_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Dependencies.UML_Dependency_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Dependencies.UML_Dependency_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Dependencies.UML_Dependency_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Dependency_Set;

      --------------------
      -- Deployment_Set --
      --------------------

      procedure Deployment_Set is
      begin
         if Property = MP_UML_Deployment_Location then
            --  Deployment::location : DeploymentTarget

            AMF.UML.Deployments.UML_Deployment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Location
               (AMF.UML.Deployment_Targets.UML_Deployment_Target_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Deployments.UML_Deployment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Deployments.UML_Deployment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Deployments.UML_Deployment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Deployments.UML_Deployment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Deployments.UML_Deployment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Deployments.UML_Deployment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Deployment_Set;

      ----------------------------------
      -- Deployment_Specification_Set --
      ----------------------------------

      procedure Deployment_Specification_Set is
      begin
         if Property = MP_UML_Deployment_Specification_Deployment then
            --  DeploymentSpecification::deployment : Deployment

            AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Deployment
               (AMF.UML.Deployments.UML_Deployment_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Deployment_Specification_Deployment_Location then
            --  DeploymentSpecification::deploymentLocation : String

            AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Deployment_Location
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Deployment_Specification_Execution_Location then
            --  DeploymentSpecification::executionLocation : String

            AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Execution_Location
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Artifact_File_Name then
            --  Artifact::fileName : String

            AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_File_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Deployment_Specifications.UML_Deployment_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Deployment_Specification_Set;

      -----------------------------
      -- Destroy_Link_Action_Set --
      -----------------------------

      procedure Destroy_Link_Action_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Destroy_Link_Actions.UML_Destroy_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Destroy_Link_Action_Set;

      -------------------------------
      -- Destroy_Object_Action_Set --
      -------------------------------

      procedure Destroy_Object_Action_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Destroy_Object_Action_Is_Destroy_Links then
            --  DestroyObjectAction::isDestroyLinks : Boolean

            AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Destroy_Links
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Destroy_Object_Action_Is_Destroy_Owned_Objects then
            --  DestroyObjectAction::isDestroyOwnedObjects : Boolean

            AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Destroy_Owned_Objects
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Destroy_Object_Action_Target then
            --  DestroyObjectAction::target : InputPin

            AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Target
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Destroy_Object_Actions.UML_Destroy_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Destroy_Object_Action_Set;

      ----------------------------------------------
      -- Destruction_Occurrence_Specification_Set --
      ----------------------------------------------

      procedure Destruction_Occurrence_Specification_Set is
      begin
         if Property = MP_UML_Occurrence_Specification_Covered then
            --  OccurrenceSpecification::covered : Lifeline

            AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Covered
               (AMF.UML.Lifelines.UML_Lifeline_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Interaction then
            --  InteractionFragment::enclosingInteraction : Interaction

            AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Interaction
               (AMF.UML.Interactions.UML_Interaction_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Operand then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Operand
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Message_End_Message then
            --  MessageEnd::message : Message

            AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Message
               (AMF.UML.Messages.UML_Message_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Destruction_Occurrence_Specifications.UML_Destruction_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Destruction_Occurrence_Specification_Set;

      ----------------
      -- Device_Set --
      ----------------

      procedure Device_Set is
      begin
         if Property = MP_UML_Behaviored_Classifier_Classifier_Behavior then
            --  BehavioredClassifier::classifierBehavior : Behavior

            AMF.UML.Devices.UML_Device_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Classifier_Behavior
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            AMF.UML.Devices.UML_Device_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Devices.UML_Device_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            AMF.UML.Devices.UML_Device_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Active
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Devices.UML_Device_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Devices.UML_Device_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Devices.UML_Device_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Devices.UML_Device_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Devices.UML_Device_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Devices.UML_Device_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Devices.UML_Device_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            AMF.UML.Devices.UML_Device_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Devices.UML_Device_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Devices.UML_Device_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Devices.UML_Device_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Devices.UML_Device_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Devices.UML_Device_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Device_Set;

      ------------------
      -- Duration_Set --
      ------------------

      procedure Duration_Set is
      begin
         if Property = MP_UML_Duration_Expr then
            --  Duration::expr : ValueSpecification

            AMF.UML.Durations.UML_Duration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Expr
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Durations.UML_Duration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Durations.UML_Duration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Durations.UML_Duration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Durations.UML_Duration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            AMF.UML.Durations.UML_Duration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Durations.UML_Duration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Durations.UML_Duration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Duration_Set;

      -----------------------------
      -- Duration_Constraint_Set --
      -----------------------------

      procedure Duration_Constraint_Set is
      begin
         if Property = MP_UML_Constraint_Context then
            --  Constraint::context : Namespace

            AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Context
               (AMF.UML.Namespaces.UML_Namespace_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Constraint_Specification then
            --  Constraint::specification : ValueSpecification

            AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Specification
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Duration_Constraint_Specification then
            --  DurationConstraint::specification : DurationInterval

            AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Specification
               (AMF.UML.Duration_Intervals.UML_Duration_Interval_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Interval_Constraint_Specification then
            --  IntervalConstraint::specification : Interval

            AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Specification
               (AMF.UML.Intervals.UML_Interval_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Duration_Constraints.UML_Duration_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Duration_Constraint_Set;

      ---------------------------
      -- Duration_Interval_Set --
      ---------------------------

      procedure Duration_Interval_Set is
      begin
         if Property = MP_UML_Duration_Interval_Max then
            --  DurationInterval::max : Duration

            AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Max
               (AMF.UML.Durations.UML_Duration_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Interval_Max then
            --  Interval::max : ValueSpecification

            AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Max
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Duration_Interval_Min then
            --  DurationInterval::min : Duration

            AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Min
               (AMF.UML.Durations.UML_Duration_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Interval_Min then
            --  Interval::min : ValueSpecification

            AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Min
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Duration_Intervals.UML_Duration_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Duration_Interval_Set;

      ------------------------------
      -- Duration_Observation_Set --
      ------------------------------

      procedure Duration_Observation_Set is
      begin
         if Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Duration_Observations.UML_Duration_Observation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Duration_Observations.UML_Duration_Observation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Duration_Observations.UML_Duration_Observation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Duration_Observations.UML_Duration_Observation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Duration_Observations.UML_Duration_Observation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Duration_Observations.UML_Duration_Observation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Duration_Observation_Set;

      ------------------------
      -- Element_Import_Set --
      ------------------------

      procedure Element_Import_Set is
      begin
         if Property = MP_UML_Element_Import_Alias then
            --  ElementImport::alias : String

            AMF.UML.Element_Imports.UML_Element_Import_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Alias
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Element_Import_Imported_Element then
            --  ElementImport::importedElement : PackageableElement

            AMF.UML.Element_Imports.UML_Element_Import_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Imported_Element
               (AMF.UML.Packageable_Elements.UML_Packageable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Element_Import_Importing_Namespace then
            --  ElementImport::importingNamespace : Namespace

            AMF.UML.Element_Imports.UML_Element_Import_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Importing_Namespace
               (AMF.UML.Namespaces.UML_Namespace_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Element_Import_Visibility then
            --  ElementImport::visibility : VisibilityKind

            AMF.UML.Element_Imports.UML_Element_Import_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Element_Import_Set;

      ---------------------
      -- Enumeration_Set --
      ---------------------

      procedure Enumeration_Set is
      begin
         if Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Enumerations.UML_Enumeration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Enumerations.UML_Enumeration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Enumerations.UML_Enumeration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Enumerations.UML_Enumeration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Enumerations.UML_Enumeration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Enumerations.UML_Enumeration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Enumerations.UML_Enumeration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Enumerations.UML_Enumeration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            AMF.UML.Enumerations.UML_Enumeration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Enumerations.UML_Enumeration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Enumerations.UML_Enumeration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Enumerations.UML_Enumeration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Enumerations.UML_Enumeration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Enumerations.UML_Enumeration_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Enumeration_Set;

      -----------------------------
      -- Enumeration_Literal_Set --
      -----------------------------

      procedure Enumeration_Literal_Set is
      begin
         if Property = MP_UML_Enumeration_Literal_Enumeration then
            --  EnumerationLiteral::enumeration : Enumeration

            AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enumeration
               (AMF.UML.Enumerations.UML_Enumeration_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Instance_Specification_Specification then
            --  InstanceSpecification::specification : ValueSpecification

            AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Specification
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Enumeration_Literals.UML_Enumeration_Literal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Enumeration_Literal_Set;

      ---------------------------
      -- Exception_Handler_Set --
      ---------------------------

      procedure Exception_Handler_Set is
      begin
         if Property = MP_UML_Exception_Handler_Exception_Input then
            --  ExceptionHandler::exceptionInput : ObjectNode

            AMF.UML.Exception_Handlers.UML_Exception_Handler_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Exception_Input
               (AMF.UML.Object_Nodes.UML_Object_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Exception_Handler_Handler_Body then
            --  ExceptionHandler::handlerBody : ExecutableNode

            AMF.UML.Exception_Handlers.UML_Exception_Handler_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Handler_Body
               (AMF.UML.Executable_Nodes.UML_Executable_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Exception_Handler_Protected_Node then
            --  ExceptionHandler::protectedNode : ExecutableNode

            AMF.UML.Exception_Handlers.UML_Exception_Handler_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Protected_Node
               (AMF.UML.Executable_Nodes.UML_Executable_Node_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Exception_Handler_Set;

      -------------------------------
      -- Execution_Environment_Set --
      -------------------------------

      procedure Execution_Environment_Set is
      begin
         if Property = MP_UML_Behaviored_Classifier_Classifier_Behavior then
            --  BehavioredClassifier::classifierBehavior : Behavior

            AMF.UML.Execution_Environments.UML_Execution_Environment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Classifier_Behavior
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            AMF.UML.Execution_Environments.UML_Execution_Environment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Execution_Environments.UML_Execution_Environment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            AMF.UML.Execution_Environments.UML_Execution_Environment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Active
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Execution_Environments.UML_Execution_Environment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Execution_Environments.UML_Execution_Environment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Execution_Environments.UML_Execution_Environment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Execution_Environments.UML_Execution_Environment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Execution_Environments.UML_Execution_Environment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Execution_Environments.UML_Execution_Environment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Execution_Environments.UML_Execution_Environment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            AMF.UML.Execution_Environments.UML_Execution_Environment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Execution_Environments.UML_Execution_Environment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Execution_Environments.UML_Execution_Environment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Execution_Environments.UML_Execution_Environment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Execution_Environments.UML_Execution_Environment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Execution_Environments.UML_Execution_Environment_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Execution_Environment_Set;

      --------------------------------------------
      -- Execution_Occurrence_Specification_Set --
      --------------------------------------------

      procedure Execution_Occurrence_Specification_Set is
      begin
         if Property = MP_UML_Occurrence_Specification_Covered then
            --  OccurrenceSpecification::covered : Lifeline

            AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Covered
               (AMF.UML.Lifelines.UML_Lifeline_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Interaction then
            --  InteractionFragment::enclosingInteraction : Interaction

            AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Interaction
               (AMF.UML.Interactions.UML_Interaction_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Operand then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Operand
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Execution_Occurrence_Specification_Execution then
            --  ExecutionOccurrenceSpecification::execution : ExecutionSpecification

            AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Execution
               (AMF.UML.Execution_Specifications.UML_Execution_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Execution_Occurrence_Specifications.UML_Execution_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Execution_Occurrence_Specification_Set;

      ------------------------
      -- Expansion_Node_Set --
      ------------------------

      procedure Expansion_Node_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Object_Node_Is_Control_Type then
            --  ObjectNode::isControlType : Boolean

            AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Control_Type
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Object_Node_Ordering then
            --  ObjectNode::ordering : ObjectNodeOrderingKind

            AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Ordering
               (AMF.UML.Holders.Object_Node_Ordering_Kinds.Element (Value));

         elsif Property = MP_UML_Expansion_Node_Region_As_Input then
            --  ExpansionNode::regionAsInput : ExpansionRegion

            AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Region_As_Input
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Expansion_Node_Region_As_Output then
            --  ExpansionNode::regionAsOutput : ExpansionRegion

            AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Region_As_Output
               (AMF.UML.Expansion_Regions.UML_Expansion_Region_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Object_Node_Selection then
            --  ObjectNode::selection : Behavior

            AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Selection
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Object_Node_Upper_Bound then
            --  ObjectNode::upperBound : ValueSpecification

            AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Upper_Bound
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Expansion_Nodes.UML_Expansion_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Expansion_Node_Set;

      --------------------------
      -- Expansion_Region_Set --
      --------------------------

      procedure Expansion_Region_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Structured_Activity_Node_Activity then
            --  StructuredActivityNode::activity : Activity

            AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Group_In_Activity then
            --  ActivityGroup::inActivity : Activity

            AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Expansion_Region_Mode then
            --  ExpansionRegion::mode : ExpansionKind

            AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Mode
               (AMF.UML.Holders.Expansion_Kinds.Element (Value));

         elsif Property = MP_UML_Structured_Activity_Node_Must_Isolate then
            --  StructuredActivityNode::mustIsolate : Boolean

            AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Must_Isolate
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Expansion_Regions.UML_Expansion_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Expansion_Region_Set;

      --------------------
      -- Expression_Set --
      --------------------

      procedure Expression_Set is
      begin
         if Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Expressions.UML_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Expressions.UML_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Expressions.UML_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Expression_Symbol then
            --  Expression::symbol : String

            AMF.UML.Expressions.UML_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Symbol
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Expressions.UML_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            AMF.UML.Expressions.UML_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Expressions.UML_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Expressions.UML_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Expression_Set;

      ----------------
      -- Extend_Set --
      ----------------

      procedure Extend_Set is
      begin
         if Property = MP_UML_Extend_Condition then
            --  Extend::condition : Constraint

            AMF.UML.Extends.UML_Extend_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Condition
               (AMF.UML.Constraints.UML_Constraint_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Extend_Extended_Case then
            --  Extend::extendedCase : UseCase

            AMF.UML.Extends.UML_Extend_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Extended_Case
               (AMF.UML.Use_Cases.UML_Use_Case_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Extend_Extension then
            --  Extend::extension : UseCase

            AMF.UML.Extends.UML_Extend_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Extension
               (AMF.UML.Use_Cases.UML_Use_Case_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Extends.UML_Extend_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Extends.UML_Extend_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Extends.UML_Extend_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Extend_Set;

      -------------------
      -- Extension_Set --
      -------------------

      procedure Extension_Set is
      begin
         if Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Extensions.UML_Extension_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Association_Is_Derived then
            --  Association::isDerived : Boolean

            AMF.UML.Extensions.UML_Extension_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Derived
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Extensions.UML_Extension_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Extensions.UML_Extension_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Extensions.UML_Extension_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Extensions.UML_Extension_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Extension_Owned_End then
            --  Extension::ownedEnd : ExtensionEnd

            AMF.UML.Extensions.UML_Extension_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_End
               (AMF.UML.Extension_Ends.UML_Extension_End_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Extensions.UML_Extension_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Extensions.UML_Extension_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Extensions.UML_Extension_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            AMF.UML.Extensions.UML_Extension_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Extensions.UML_Extension_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Extensions.UML_Extension_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Extensions.UML_Extension_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Extensions.UML_Extension_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Extensions.UML_Extension_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Extension_Set;

      -----------------------
      -- Extension_End_Set --
      -----------------------

      procedure Extension_End_Set is
      begin
         if Property = MP_UML_Property_Aggregation then
            --  Property::aggregation : AggregationKind

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Aggregation
               (AMF.UML.Holders.Aggregation_Kinds.Element (Value));

         elsif Property = MP_UML_Property_Association then
            --  Property::association : Association

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Association
               (AMF.UML.Associations.UML_Association_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Property_Association_End then
            --  Property::associationEnd : Property

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Association_End
               (AMF.UML.Properties.UML_Property_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Property_Class then
            --  Property::class : Class

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Class
               (AMF.UML.Classes.UML_Class_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Property_Datatype then
            --  Property::datatype : DataType

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Datatype
               (AMF.UML.Data_Types.UML_Data_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Property_Default_Value then
            --  Property::defaultValue : ValueSpecification

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Default_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Property_Interface then
            --  Property::interface : Interface

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Interface
               (AMF.UML.Interfaces.UML_Interface_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Property_Is_Derived then
            --  Property::isDerived : Boolean

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Derived
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Property_Is_Derived_Union then
            --  Property::isDerivedUnion : Boolean

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Derived_Union
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Property_Is_ID then
            --  Property::isID : Boolean

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_ID
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Multiplicity_Element_Is_Ordered then
            --  MultiplicityElement::isOrdered : Boolean

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Ordered
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Property_Is_Read_Only then
            --  Property::isReadOnly : Boolean

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Read_Only
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Structural_Feature_Is_Read_Only then
            --  StructuralFeature::isReadOnly : Boolean

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Read_Only
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Feature_Is_Static then
            --  Feature::isStatic : Boolean

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Static
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Multiplicity_Element_Is_Unique then
            --  MultiplicityElement::isUnique : Boolean

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Unique
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Multiplicity_Element_Lower_Value then
            --  MultiplicityElement::lowerValue : ValueSpecification

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Lower_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Property_Owning_Association then
            --  Property::owningAssociation : Association

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Association
               (AMF.UML.Associations.UML_Association_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Connectable_Element_Template_Parameter then
            --  ConnectableElement::templateParameter : ConnectableElementTemplateParameter

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Extension_End_Type then
            --  ExtensionEnd::type : Stereotype

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Stereotypes.UML_Stereotype_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Multiplicity_Element_Upper_Value then
            --  MultiplicityElement::upperValue : ValueSpecification

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Upper_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Extension_Ends.UML_Extension_End_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Extension_End_Set;

      -------------------------
      -- Extension_Point_Set --
      -------------------------

      procedure Extension_Point_Set is
      begin
         if Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Extension_Points.UML_Extension_Point_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Extension_Points.UML_Extension_Point_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Extension_Points.UML_Extension_Point_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Extension_Point_Use_Case then
            --  ExtensionPoint::useCase : UseCase

            AMF.UML.Extension_Points.UML_Extension_Point_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Use_Case
               (AMF.UML.Use_Cases.UML_Use_Case_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Extension_Points.UML_Extension_Point_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Extension_Point_Set;

      ---------------------
      -- Final_State_Set --
      ---------------------

      procedure Final_State_Set is
      begin
         if Property = MP_UML_Vertex_Container then
            --  Vertex::container : Region

            AMF.UML.Final_States.UML_Final_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Container
               (AMF.UML.Regions.UML_Region_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_State_Do_Activity then
            --  State::doActivity : Behavior

            AMF.UML.Final_States.UML_Final_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Do_Activity
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_State_Entry then
            --  State::entry : Behavior

            AMF.UML.Final_States.UML_Final_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Entry
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_State_Exit then
            --  State::exit : Behavior

            AMF.UML.Final_States.UML_Final_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Exit
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Final_States.UML_Final_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Final_States.UML_Final_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Final_States.UML_Final_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_State_Redefined_State then
            --  State::redefinedState : State

            AMF.UML.Final_States.UML_Final_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Redefined_State
               (AMF.UML.States.UML_State_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_State_State_Invariant then
            --  State::stateInvariant : Constraint

            AMF.UML.Final_States.UML_Final_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_State_Invariant
               (AMF.UML.Constraints.UML_Constraint_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_State_Submachine then
            --  State::submachine : StateMachine

            AMF.UML.Final_States.UML_Final_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Submachine
               (AMF.UML.State_Machines.UML_State_Machine_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Final_States.UML_Final_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Final_State_Set;

      -------------------------
      -- Flow_Final_Node_Set --
      -------------------------

      procedure Flow_Final_Node_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Flow_Final_Nodes.UML_Flow_Final_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Flow_Final_Node_Set;

      -------------------
      -- Fork_Node_Set --
      -------------------

      procedure Fork_Node_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Fork_Nodes.UML_Fork_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Fork_Nodes.UML_Fork_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Fork_Nodes.UML_Fork_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Fork_Nodes.UML_Fork_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Fork_Nodes.UML_Fork_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Fork_Nodes.UML_Fork_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Fork_Node_Set;

      ---------------------------
      -- Function_Behavior_Set --
      ---------------------------

      procedure Function_Behavior_Set is
      begin
         if Property = MP_UML_Behaviored_Classifier_Classifier_Behavior then
            --  BehavioredClassifier::classifierBehavior : Behavior

            AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Classifier_Behavior
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Active
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Behavior_Is_Reentrant then
            --  Behavior::isReentrant : Boolean

            AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Behavior_Specification then
            --  Behavior::specification : BehavioralFeature

            AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Specification
               (AMF.UML.Behavioral_Features.UML_Behavioral_Feature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Function_Behaviors.UML_Function_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Function_Behavior_Set;

      --------------
      -- Gate_Set --
      --------------

      procedure Gate_Set is
      begin
         if Property = MP_UML_Message_End_Message then
            --  MessageEnd::message : Message

            AMF.UML.Gates.UML_Gate_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Message
               (AMF.UML.Messages.UML_Message_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Gates.UML_Gate_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Gates.UML_Gate_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Gates.UML_Gate_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Gate_Set;

      --------------------------
      -- General_Ordering_Set --
      --------------------------

      procedure General_Ordering_Set is
      begin
         if Property = MP_UML_General_Ordering_After then
            --  GeneralOrdering::after : OccurrenceSpecification

            AMF.UML.General_Orderings.UML_General_Ordering_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_After
               (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_General_Ordering_Before then
            --  GeneralOrdering::before : OccurrenceSpecification

            AMF.UML.General_Orderings.UML_General_Ordering_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Before
               (AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.General_Orderings.UML_General_Ordering_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.General_Orderings.UML_General_Ordering_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.General_Orderings.UML_General_Ordering_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end General_Ordering_Set;

      ------------------------
      -- Generalization_Set --
      ------------------------

      procedure Generalization_Set is
      begin
         if Property = MP_UML_Generalization_General then
            --  Generalization::general : Classifier

            AMF.UML.Generalizations.UML_Generalization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_General
               (AMF.UML.Classifiers.UML_Classifier_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Generalization_Is_Substitutable then
            --  Generalization::isSubstitutable : Boolean

            AMF.UML.Generalizations.UML_Generalization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Substitutable
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Generalization_Specific then
            --  Generalization::specific : Classifier

            AMF.UML.Generalizations.UML_Generalization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Specific
               (AMF.UML.Classifiers.UML_Classifier_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Generalization_Set;

      ----------------------------
      -- Generalization_Set_Set --
      ----------------------------

      procedure Generalization_Set_Set is
      begin
         if Property = MP_UML_Generalization_Set_Is_Covering then
            --  GeneralizationSet::isCovering : Boolean

            AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Covering
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Generalization_Set_Is_Disjoint then
            --  GeneralizationSet::isDisjoint : Boolean

            AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Disjoint
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Generalization_Set_Powertype then
            --  GeneralizationSet::powertype : Classifier

            AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Powertype
               (AMF.UML.Classifiers.UML_Classifier_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Generalization_Sets.UML_Generalization_Set_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Generalization_Set_Set;

      ---------------
      -- Image_Set --
      ---------------

      procedure Image_Set is
      begin
         if Property = MP_UML_Image_Content then
            --  Image::content : String

            AMF.UML.Images.UML_Image_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Content
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Image_Format then
            --  Image::format : String

            AMF.UML.Images.UML_Image_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Format
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Image_Location then
            --  Image::location : String

            AMF.UML.Images.UML_Image_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Location
               (AMF.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Image_Set;

      -----------------
      -- Include_Set --
      -----------------

      procedure Include_Set is
      begin
         if Property = MP_UML_Include_Addition then
            --  Include::addition : UseCase

            AMF.UML.Includes.UML_Include_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Addition
               (AMF.UML.Use_Cases.UML_Use_Case_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Include_Including_Case then
            --  Include::includingCase : UseCase

            AMF.UML.Includes.UML_Include_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Including_Case
               (AMF.UML.Use_Cases.UML_Use_Case_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Includes.UML_Include_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Includes.UML_Include_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Includes.UML_Include_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Include_Set;

      --------------------------
      -- Information_Flow_Set --
      --------------------------

      procedure Information_Flow_Set is
      begin
         if Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Information_Flows.UML_Information_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Information_Flows.UML_Information_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Information_Flows.UML_Information_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Information_Flows.UML_Information_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Information_Flows.UML_Information_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Information_Flows.UML_Information_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Information_Flow_Set;

      --------------------------
      -- Information_Item_Set --
      --------------------------

      procedure Information_Item_Set is
      begin
         if Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Information_Items.UML_Information_Item_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Information_Items.UML_Information_Item_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Information_Items.UML_Information_Item_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Information_Items.UML_Information_Item_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Information_Items.UML_Information_Item_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Information_Items.UML_Information_Item_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Information_Items.UML_Information_Item_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Information_Items.UML_Information_Item_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            AMF.UML.Information_Items.UML_Information_Item_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Information_Items.UML_Information_Item_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Information_Items.UML_Information_Item_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Information_Items.UML_Information_Item_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Information_Items.UML_Information_Item_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Information_Items.UML_Information_Item_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Information_Item_Set;

      ----------------------
      -- Initial_Node_Set --
      ----------------------

      procedure Initial_Node_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Initial_Nodes.UML_Initial_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Initial_Nodes.UML_Initial_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Initial_Nodes.UML_Initial_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Initial_Nodes.UML_Initial_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Initial_Nodes.UML_Initial_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Initial_Nodes.UML_Initial_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Initial_Node_Set;

      -------------------
      -- Input_Pin_Set --
      -------------------

      procedure Input_Pin_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Input_Pins.UML_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Input_Pins.UML_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Pin_Is_Control then
            --  Pin::isControl : Boolean

            AMF.UML.Input_Pins.UML_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Control
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Object_Node_Is_Control_Type then
            --  ObjectNode::isControlType : Boolean

            AMF.UML.Input_Pins.UML_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Control_Type
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Input_Pins.UML_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Multiplicity_Element_Is_Ordered then
            --  MultiplicityElement::isOrdered : Boolean

            AMF.UML.Input_Pins.UML_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Ordered
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Multiplicity_Element_Is_Unique then
            --  MultiplicityElement::isUnique : Boolean

            AMF.UML.Input_Pins.UML_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Unique
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Multiplicity_Element_Lower_Value then
            --  MultiplicityElement::lowerValue : ValueSpecification

            AMF.UML.Input_Pins.UML_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Lower_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Input_Pins.UML_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Input_Pins.UML_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Object_Node_Ordering then
            --  ObjectNode::ordering : ObjectNodeOrderingKind

            AMF.UML.Input_Pins.UML_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Ordering
               (AMF.UML.Holders.Object_Node_Ordering_Kinds.Element (Value));

         elsif Property = MP_UML_Object_Node_Selection then
            --  ObjectNode::selection : Behavior

            AMF.UML.Input_Pins.UML_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Selection
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            AMF.UML.Input_Pins.UML_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Object_Node_Upper_Bound then
            --  ObjectNode::upperBound : ValueSpecification

            AMF.UML.Input_Pins.UML_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Upper_Bound
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Multiplicity_Element_Upper_Value then
            --  MultiplicityElement::upperValue : ValueSpecification

            AMF.UML.Input_Pins.UML_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Upper_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Input_Pins.UML_Input_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Input_Pin_Set;

      --------------------------------
      -- Instance_Specification_Set --
      --------------------------------

      procedure Instance_Specification_Set is
      begin
         if Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Instance_Specification_Specification then
            --  InstanceSpecification::specification : ValueSpecification

            AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Specification
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Instance_Specifications.UML_Instance_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Instance_Specification_Set;

      ------------------------
      -- Instance_Value_Set --
      ------------------------

      procedure Instance_Value_Set is
      begin
         if Property = MP_UML_Instance_Value_Instance then
            --  InstanceValue::instance : InstanceSpecification

            AMF.UML.Instance_Values.UML_Instance_Value_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Instance
               (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Instance_Values.UML_Instance_Value_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Instance_Values.UML_Instance_Value_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Instance_Values.UML_Instance_Value_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Instance_Values.UML_Instance_Value_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            AMF.UML.Instance_Values.UML_Instance_Value_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Instance_Values.UML_Instance_Value_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Instance_Values.UML_Instance_Value_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Instance_Value_Set;

      ---------------------
      -- Interaction_Set --
      ---------------------

      procedure Interaction_Set is
      begin
         if Property = MP_UML_Behaviored_Classifier_Classifier_Behavior then
            --  BehavioredClassifier::classifierBehavior : Behavior

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Classifier_Behavior
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Interaction then
            --  InteractionFragment::enclosingInteraction : Interaction

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Interaction
               (AMF.UML.Interactions.UML_Interaction_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Operand then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Operand
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Active
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Behavior_Is_Reentrant then
            --  Behavior::isReentrant : Boolean

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Behavior_Specification then
            --  Behavior::specification : BehavioralFeature

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Specification
               (AMF.UML.Behavioral_Features.UML_Behavioral_Feature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Interactions.UML_Interaction_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Interaction_Set;

      --------------------------------
      -- Interaction_Constraint_Set --
      --------------------------------

      procedure Interaction_Constraint_Set is
      begin
         if Property = MP_UML_Constraint_Context then
            --  Constraint::context : Namespace

            AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Context
               (AMF.UML.Namespaces.UML_Namespace_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Interaction_Constraint_Maxint then
            --  InteractionConstraint::maxint : ValueSpecification

            AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Maxint
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Interaction_Constraint_Minint then
            --  InteractionConstraint::minint : ValueSpecification

            AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Minint
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Constraint_Specification then
            --  Constraint::specification : ValueSpecification

            AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Specification
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Interaction_Constraint_Set;

      -----------------------------
      -- Interaction_Operand_Set --
      -----------------------------

      procedure Interaction_Operand_Set is
      begin
         if Property = MP_UML_Interaction_Fragment_Enclosing_Interaction then
            --  InteractionFragment::enclosingInteraction : Interaction

            AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Interaction
               (AMF.UML.Interactions.UML_Interaction_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Operand then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Operand
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Interaction_Operand_Guard then
            --  InteractionOperand::guard : InteractionConstraint

            AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Guard
               (AMF.UML.Interaction_Constraints.UML_Interaction_Constraint_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Interaction_Operand_Set;

      -------------------------
      -- Interaction_Use_Set --
      -------------------------

      procedure Interaction_Use_Set is
      begin
         if Property = MP_UML_Interaction_Fragment_Enclosing_Interaction then
            --  InteractionFragment::enclosingInteraction : Interaction

            AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Interaction
               (AMF.UML.Interactions.UML_Interaction_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Operand then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Operand
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Interaction_Use_Refers_To then
            --  InteractionUse::refersTo : Interaction

            AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Refers_To
               (AMF.UML.Interactions.UML_Interaction_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Interaction_Use_Return_Value then
            --  InteractionUse::returnValue : ValueSpecification

            AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Return_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Interaction_Use_Return_Value_Recipient then
            --  InteractionUse::returnValueRecipient : Property

            AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Return_Value_Recipient
               (AMF.UML.Properties.UML_Property_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Interaction_Uses.UML_Interaction_Use_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Interaction_Use_Set;

      -------------------
      -- Interface_Set --
      -------------------

      procedure Interface_Set is
      begin
         if Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Interfaces.UML_Interface_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Interfaces.UML_Interface_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Interfaces.UML_Interface_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Interfaces.UML_Interface_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Interfaces.UML_Interface_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Interfaces.UML_Interface_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Interfaces.UML_Interface_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Interfaces.UML_Interface_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            AMF.UML.Interfaces.UML_Interface_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Interface_Protocol then
            --  Interface::protocol : ProtocolStateMachine

            AMF.UML.Interfaces.UML_Interface_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Protocol
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Interfaces.UML_Interface_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Interfaces.UML_Interface_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Interfaces.UML_Interface_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Interfaces.UML_Interface_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Interfaces.UML_Interface_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Interface_Set;

      -------------------------------
      -- Interface_Realization_Set --
      -------------------------------

      procedure Interface_Realization_Set is
      begin
         if Property = MP_UML_Interface_Realization_Contract then
            --  InterfaceRealization::contract : Interface

            AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Contract
               (AMF.UML.Interfaces.UML_Interface_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Interface_Realization_Implementing_Classifier then
            --  InterfaceRealization::implementingClassifier : BehavioredClassifier

            AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Implementing_Classifier
               (AMF.UML.Behaviored_Classifiers.UML_Behaviored_Classifier_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Abstraction_Mapping then
            --  Abstraction::mapping : OpaqueExpression

            AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Mapping
               (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Interface_Realizations.UML_Interface_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Interface_Realization_Set;

      ---------------------------------------
      -- Interruptible_Activity_Region_Set --
      ---------------------------------------

      procedure Interruptible_Activity_Region_Set is
      begin
         if Property = MP_UML_Activity_Group_In_Activity then
            --  ActivityGroup::inActivity : Activity

            AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Interruptible_Activity_Region_Set;

      ------------------
      -- Interval_Set --
      ------------------

      procedure Interval_Set is
      begin
         if Property = MP_UML_Interval_Max then
            --  Interval::max : ValueSpecification

            AMF.UML.Intervals.UML_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Max
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Interval_Min then
            --  Interval::min : ValueSpecification

            AMF.UML.Intervals.UML_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Min
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Intervals.UML_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Intervals.UML_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Intervals.UML_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Intervals.UML_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            AMF.UML.Intervals.UML_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Intervals.UML_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Intervals.UML_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Interval_Set;

      -----------------------------
      -- Interval_Constraint_Set --
      -----------------------------

      procedure Interval_Constraint_Set is
      begin
         if Property = MP_UML_Constraint_Context then
            --  Constraint::context : Namespace

            AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Context
               (AMF.UML.Namespaces.UML_Namespace_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Constraint_Specification then
            --  Constraint::specification : ValueSpecification

            AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Specification
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Interval_Constraint_Specification then
            --  IntervalConstraint::specification : Interval

            AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Specification
               (AMF.UML.Intervals.UML_Interval_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Interval_Constraints.UML_Interval_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Interval_Constraint_Set;

      -------------------
      -- Join_Node_Set --
      -------------------

      procedure Join_Node_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Join_Nodes.UML_Join_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Join_Nodes.UML_Join_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Join_Node_Is_Combine_Duplicate then
            --  JoinNode::isCombineDuplicate : Boolean

            AMF.UML.Join_Nodes.UML_Join_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Combine_Duplicate
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Join_Nodes.UML_Join_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Join_Node_Join_Spec then
            --  JoinNode::joinSpec : ValueSpecification

            AMF.UML.Join_Nodes.UML_Join_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Join_Spec
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Join_Nodes.UML_Join_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Join_Nodes.UML_Join_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Join_Nodes.UML_Join_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Join_Node_Set;

      ------------------
      -- Lifeline_Set --
      ------------------

      procedure Lifeline_Set is
      begin
         if Property = MP_UML_Lifeline_Decomposed_As then
            --  Lifeline::decomposedAs : PartDecomposition

            AMF.UML.Lifelines.UML_Lifeline_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Decomposed_As
               (AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Lifeline_Interaction then
            --  Lifeline::interaction : Interaction

            AMF.UML.Lifelines.UML_Lifeline_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Interaction
               (AMF.UML.Interactions.UML_Interaction_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Lifelines.UML_Lifeline_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Lifelines.UML_Lifeline_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Lifeline_Represents then
            --  Lifeline::represents : ConnectableElement

            AMF.UML.Lifelines.UML_Lifeline_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Represents
               (AMF.UML.Connectable_Elements.UML_Connectable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Lifeline_Selector then
            --  Lifeline::selector : ValueSpecification

            AMF.UML.Lifelines.UML_Lifeline_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Selector
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Lifelines.UML_Lifeline_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Lifeline_Set;

      --------------------------------
      -- Link_End_Creation_Data_Set --
      --------------------------------

      procedure Link_End_Creation_Data_Set is
      begin
         if Property = MP_UML_Link_End_Data_End then
            --  LinkEndData::end : Property

            AMF.UML.Link_End_Creation_Datas.UML_Link_End_Creation_Data_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_End
               (AMF.UML.Properties.UML_Property_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Link_End_Creation_Data_Insert_At then
            --  LinkEndCreationData::insertAt : InputPin

            AMF.UML.Link_End_Creation_Datas.UML_Link_End_Creation_Data_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Insert_At
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Link_End_Creation_Data_Is_Replace_All then
            --  LinkEndCreationData::isReplaceAll : Boolean

            AMF.UML.Link_End_Creation_Datas.UML_Link_End_Creation_Data_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Replace_All
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Link_End_Data_Value then
            --  LinkEndData::value : InputPin

            AMF.UML.Link_End_Creation_Datas.UML_Link_End_Creation_Data_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Value
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Link_End_Creation_Data_Set;

      -----------------------
      -- Link_End_Data_Set --
      -----------------------

      procedure Link_End_Data_Set is
      begin
         if Property = MP_UML_Link_End_Data_End then
            --  LinkEndData::end : Property

            AMF.UML.Link_End_Datas.UML_Link_End_Data_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_End
               (AMF.UML.Properties.UML_Property_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Link_End_Data_Value then
            --  LinkEndData::value : InputPin

            AMF.UML.Link_End_Datas.UML_Link_End_Data_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Value
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Link_End_Data_Set;

      -----------------------------------
      -- Link_End_Destruction_Data_Set --
      -----------------------------------

      procedure Link_End_Destruction_Data_Set is
      begin
         if Property = MP_UML_Link_End_Destruction_Data_Destroy_At then
            --  LinkEndDestructionData::destroyAt : InputPin

            AMF.UML.Link_End_Destruction_Datas.UML_Link_End_Destruction_Data_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Destroy_At
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Link_End_Data_End then
            --  LinkEndData::end : Property

            AMF.UML.Link_End_Destruction_Datas.UML_Link_End_Destruction_Data_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_End
               (AMF.UML.Properties.UML_Property_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Link_End_Destruction_Data_Is_Destroy_Duplicates then
            --  LinkEndDestructionData::isDestroyDuplicates : Boolean

            AMF.UML.Link_End_Destruction_Datas.UML_Link_End_Destruction_Data_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Destroy_Duplicates
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Link_End_Data_Value then
            --  LinkEndData::value : InputPin

            AMF.UML.Link_End_Destruction_Datas.UML_Link_End_Destruction_Data_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Value
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Link_End_Destruction_Data_Set;

      -------------------------
      -- Literal_Boolean_Set --
      -------------------------

      procedure Literal_Boolean_Set is
      begin
         if Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Literal_Boolean_Value then
            --  LiteralBoolean::value : Boolean

            AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Value
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Literal_Booleans.UML_Literal_Boolean_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Literal_Boolean_Set;

      -------------------------
      -- Literal_Integer_Set --
      -------------------------

      procedure Literal_Integer_Set is
      begin
         if Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Literal_Integers.UML_Literal_Integer_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Literal_Integers.UML_Literal_Integer_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Literal_Integers.UML_Literal_Integer_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Literal_Integers.UML_Literal_Integer_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            AMF.UML.Literal_Integers.UML_Literal_Integer_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Literal_Integer_Value then
            --  LiteralInteger::value : Integer

            AMF.UML.Literal_Integers.UML_Literal_Integer_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Value
               (League.Holders.Integers.Element (Value));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Literal_Integers.UML_Literal_Integer_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Literal_Integers.UML_Literal_Integer_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Literal_Integer_Set;

      ----------------------
      -- Literal_Null_Set --
      ----------------------

      procedure Literal_Null_Set is
      begin
         if Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Literal_Nulls.UML_Literal_Null_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Literal_Nulls.UML_Literal_Null_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Literal_Nulls.UML_Literal_Null_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Literal_Nulls.UML_Literal_Null_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            AMF.UML.Literal_Nulls.UML_Literal_Null_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Literal_Nulls.UML_Literal_Null_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Literal_Nulls.UML_Literal_Null_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Literal_Null_Set;

      ----------------------
      -- Literal_Real_Set --
      ----------------------

      procedure Literal_Real_Set is
      begin
         if Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Literal_Reals.UML_Literal_Real_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Literal_Reals.UML_Literal_Real_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Literal_Reals.UML_Literal_Real_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Literal_Reals.UML_Literal_Real_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            AMF.UML.Literal_Reals.UML_Literal_Real_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Literal_Real_Value then
            --  LiteralReal::value : Real

            AMF.UML.Literal_Reals.UML_Literal_Real_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Value
               (AMF.Holders.Reals.Element (Value));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Literal_Reals.UML_Literal_Real_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Literal_Reals.UML_Literal_Real_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Literal_Real_Set;

      ------------------------
      -- Literal_String_Set --
      ------------------------

      procedure Literal_String_Set is
      begin
         if Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Literal_Strings.UML_Literal_String_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Literal_Strings.UML_Literal_String_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Literal_Strings.UML_Literal_String_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Literal_Strings.UML_Literal_String_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            AMF.UML.Literal_Strings.UML_Literal_String_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Literal_String_Value then
            --  LiteralString::value : String

            AMF.UML.Literal_Strings.UML_Literal_String_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Value
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Literal_Strings.UML_Literal_String_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Literal_Strings.UML_Literal_String_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Literal_String_Set;

      -----------------------------------
      -- Literal_Unlimited_Natural_Set --
      -----------------------------------

      procedure Literal_Unlimited_Natural_Set is
      begin
         if Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Literal_Unlimited_Natural_Value then
            --  LiteralUnlimitedNatural::value : UnlimitedNatural

            AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Value
               (AMF.Holders.Unlimited_Naturals.Element (Value));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Literal_Unlimited_Naturals.UML_Literal_Unlimited_Natural_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Literal_Unlimited_Natural_Set;

      -------------------
      -- Loop_Node_Set --
      -------------------

      procedure Loop_Node_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Loop_Nodes.UML_Loop_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Structured_Activity_Node_Activity then
            --  StructuredActivityNode::activity : Activity

            AMF.UML.Loop_Nodes.UML_Loop_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Loop_Node_Decider then
            --  LoopNode::decider : OutputPin

            AMF.UML.Loop_Nodes.UML_Loop_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Decider
               (AMF.UML.Output_Pins.UML_Output_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Group_In_Activity then
            --  ActivityGroup::inActivity : Activity

            AMF.UML.Loop_Nodes.UML_Loop_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Loop_Nodes.UML_Loop_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Loop_Nodes.UML_Loop_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Loop_Nodes.UML_Loop_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Loop_Node_Is_Tested_First then
            --  LoopNode::isTestedFirst : Boolean

            AMF.UML.Loop_Nodes.UML_Loop_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Tested_First
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Structured_Activity_Node_Must_Isolate then
            --  StructuredActivityNode::mustIsolate : Boolean

            AMF.UML.Loop_Nodes.UML_Loop_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Must_Isolate
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Loop_Nodes.UML_Loop_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Loop_Nodes.UML_Loop_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Loop_Nodes.UML_Loop_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Loop_Node_Set;

      -----------------------
      -- Manifestation_Set --
      -----------------------

      procedure Manifestation_Set is
      begin
         if Property = MP_UML_Abstraction_Mapping then
            --  Abstraction::mapping : OpaqueExpression

            AMF.UML.Manifestations.UML_Manifestation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Mapping
               (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Manifestations.UML_Manifestation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Manifestations.UML_Manifestation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Manifestations.UML_Manifestation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Manifestations.UML_Manifestation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Manifestation_Utilized_Element then
            --  Manifestation::utilizedElement : PackageableElement

            AMF.UML.Manifestations.UML_Manifestation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Utilized_Element
               (AMF.UML.Packageable_Elements.UML_Packageable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Manifestations.UML_Manifestation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Manifestations.UML_Manifestation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Manifestation_Set;

      --------------------
      -- Merge_Node_Set --
      --------------------

      procedure Merge_Node_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Merge_Nodes.UML_Merge_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Merge_Nodes.UML_Merge_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Merge_Nodes.UML_Merge_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Merge_Nodes.UML_Merge_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Merge_Nodes.UML_Merge_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Merge_Nodes.UML_Merge_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Merge_Node_Set;

      -----------------
      -- Message_Set --
      -----------------

      procedure Message_Set is
      begin
         if Property = MP_UML_Message_Connector then
            --  Message::connector : Connector

            AMF.UML.Messages.UML_Message_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Connector
               (AMF.UML.Connectors.UML_Connector_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Message_Interaction then
            --  Message::interaction : Interaction

            AMF.UML.Messages.UML_Message_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Interaction
               (AMF.UML.Interactions.UML_Interaction_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Message_Message_Sort then
            --  Message::messageSort : MessageSort

            AMF.UML.Messages.UML_Message_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Message_Sort
               (AMF.UML.Holders.Message_Sorts.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Messages.UML_Message_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Messages.UML_Message_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Message_Receive_Event then
            --  Message::receiveEvent : MessageEnd

            AMF.UML.Messages.UML_Message_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Receive_Event
               (AMF.UML.Message_Ends.UML_Message_End_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Message_Send_Event then
            --  Message::sendEvent : MessageEnd

            AMF.UML.Messages.UML_Message_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Send_Event
               (AMF.UML.Message_Ends.UML_Message_End_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Message_Signature then
            --  Message::signature : NamedElement

            AMF.UML.Messages.UML_Message_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Signature
               (AMF.UML.Named_Elements.UML_Named_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Messages.UML_Message_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Message_Set;

      ------------------------------------------
      -- Message_Occurrence_Specification_Set --
      ------------------------------------------

      procedure Message_Occurrence_Specification_Set is
      begin
         if Property = MP_UML_Occurrence_Specification_Covered then
            --  OccurrenceSpecification::covered : Lifeline

            AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Covered
               (AMF.UML.Lifelines.UML_Lifeline_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Interaction then
            --  InteractionFragment::enclosingInteraction : Interaction

            AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Interaction
               (AMF.UML.Interactions.UML_Interaction_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Operand then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Operand
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Message_End_Message then
            --  MessageEnd::message : Message

            AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Message
               (AMF.UML.Messages.UML_Message_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Message_Occurrence_Specifications.UML_Message_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Message_Occurrence_Specification_Set;

      ---------------
      -- Model_Set --
      ---------------

      procedure Model_Set is
      begin
         if Property = MP_UML_Package_URI then
            --  Package::URI : String

            AMF.UML.Models.UML_Model_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_URI
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Models.UML_Model_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Models.UML_Model_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Package_Nesting_Package then
            --  Package::nestingPackage : Package

            AMF.UML.Models.UML_Model_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Nesting_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Models.UML_Model_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Models.UML_Model_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Models.UML_Model_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Model_Viewpoint then
            --  Model::viewpoint : String

            AMF.UML.Models.UML_Model_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Viewpoint
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Models.UML_Model_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Models.UML_Model_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Model_Set;

      --------------
      -- Node_Set --
      --------------

      procedure Node_Set is
      begin
         if Property = MP_UML_Behaviored_Classifier_Classifier_Behavior then
            --  BehavioredClassifier::classifierBehavior : Behavior

            AMF.UML.Nodes.UML_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Classifier_Behavior
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            AMF.UML.Nodes.UML_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Nodes.UML_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            AMF.UML.Nodes.UML_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Active
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Nodes.UML_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Nodes.UML_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Nodes.UML_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Nodes.UML_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Nodes.UML_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Nodes.UML_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Nodes.UML_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            AMF.UML.Nodes.UML_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Nodes.UML_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Nodes.UML_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Nodes.UML_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Nodes.UML_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Nodes.UML_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Node_Set;

      ---------------------
      -- Object_Flow_Set --
      ---------------------

      procedure Object_Flow_Set is
      begin
         if Property = MP_UML_Activity_Edge_Activity then
            --  ActivityEdge::activity : Activity

            AMF.UML.Object_Flows.UML_Object_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Edge_Guard then
            --  ActivityEdge::guard : ValueSpecification

            AMF.UML.Object_Flows.UML_Object_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Guard
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Edge_In_Structured_Node then
            --  ActivityEdge::inStructuredNode : StructuredActivityNode

            AMF.UML.Object_Flows.UML_Object_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Edge_Interrupts then
            --  ActivityEdge::interrupts : InterruptibleActivityRegion

            AMF.UML.Object_Flows.UML_Object_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Interrupts
               (AMF.UML.Interruptible_Activity_Regions.UML_Interruptible_Activity_Region_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Object_Flows.UML_Object_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Object_Flow_Is_Multicast then
            --  ObjectFlow::isMulticast : Boolean

            AMF.UML.Object_Flows.UML_Object_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Multicast
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Object_Flow_Is_Multireceive then
            --  ObjectFlow::isMultireceive : Boolean

            AMF.UML.Object_Flows.UML_Object_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Multireceive
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Object_Flows.UML_Object_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Object_Flows.UML_Object_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Object_Flow_Selection then
            --  ObjectFlow::selection : Behavior

            AMF.UML.Object_Flows.UML_Object_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Selection
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Edge_Source then
            --  ActivityEdge::source : ActivityNode

            AMF.UML.Object_Flows.UML_Object_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Source
               (AMF.UML.Activity_Nodes.UML_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Edge_Target then
            --  ActivityEdge::target : ActivityNode

            AMF.UML.Object_Flows.UML_Object_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Target
               (AMF.UML.Activity_Nodes.UML_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Object_Flow_Transformation then
            --  ObjectFlow::transformation : Behavior

            AMF.UML.Object_Flows.UML_Object_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Transformation
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Object_Flows.UML_Object_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Activity_Edge_Weight then
            --  ActivityEdge::weight : ValueSpecification

            AMF.UML.Object_Flows.UML_Object_Flow_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Weight
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Object_Flow_Set;

      ----------------------------------
      -- Occurrence_Specification_Set --
      ----------------------------------

      procedure Occurrence_Specification_Set is
      begin
         if Property = MP_UML_Occurrence_Specification_Covered then
            --  OccurrenceSpecification::covered : Lifeline

            AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Covered
               (AMF.UML.Lifelines.UML_Lifeline_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Interaction then
            --  InteractionFragment::enclosingInteraction : Interaction

            AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Interaction
               (AMF.UML.Interactions.UML_Interaction_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Operand then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Operand
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Occurrence_Specifications.UML_Occurrence_Specification_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Occurrence_Specification_Set;

      -----------------------
      -- Opaque_Action_Set --
      -----------------------

      procedure Opaque_Action_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Opaque_Actions.UML_Opaque_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Opaque_Action_Set;

      -------------------------
      -- Opaque_Behavior_Set --
      -------------------------

      procedure Opaque_Behavior_Set is
      begin
         if Property = MP_UML_Behaviored_Classifier_Classifier_Behavior then
            --  BehavioredClassifier::classifierBehavior : Behavior

            AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Classifier_Behavior
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Active
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Behavior_Is_Reentrant then
            --  Behavior::isReentrant : Boolean

            AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Behavior_Specification then
            --  Behavior::specification : BehavioralFeature

            AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Specification
               (AMF.UML.Behavioral_Features.UML_Behavioral_Feature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Opaque_Behaviors.UML_Opaque_Behavior_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Opaque_Behavior_Set;

      ---------------------------
      -- Opaque_Expression_Set --
      ---------------------------

      procedure Opaque_Expression_Set is
      begin
         if Property = MP_UML_Opaque_Expression_Behavior then
            --  OpaqueExpression::behavior : Behavior

            AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Behavior
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Opaque_Expression_Set;

      -------------------
      -- Operation_Set --
      -------------------

      procedure Operation_Set is
      begin
         if Property = MP_UML_Operation_Body_Condition then
            --  Operation::bodyCondition : Constraint

            AMF.UML.Operations.UML_Operation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Body_Condition
               (AMF.UML.Constraints.UML_Constraint_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Operation_Class then
            --  Operation::class : Class

            AMF.UML.Operations.UML_Operation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Class
               (AMF.UML.Classes.UML_Class_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Behavioral_Feature_Concurrency then
            --  BehavioralFeature::concurrency : CallConcurrencyKind

            AMF.UML.Operations.UML_Operation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Concurrency
               (AMF.UML.Holders.Call_Concurrency_Kinds.Element (Value));

         elsif Property = MP_UML_Operation_Datatype then
            --  Operation::datatype : DataType

            AMF.UML.Operations.UML_Operation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Datatype
               (AMF.UML.Data_Types.UML_Data_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Operation_Interface then
            --  Operation::interface : Interface

            AMF.UML.Operations.UML_Operation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Interface
               (AMF.UML.Interfaces.UML_Interface_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Behavioral_Feature_Is_Abstract then
            --  BehavioralFeature::isAbstract : Boolean

            AMF.UML.Operations.UML_Operation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Operations.UML_Operation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Operation_Is_Query then
            --  Operation::isQuery : Boolean

            AMF.UML.Operations.UML_Operation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Query
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Feature_Is_Static then
            --  Feature::isStatic : Boolean

            AMF.UML.Operations.UML_Operation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Static
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Operations.UML_Operation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Operations.UML_Operation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Operations.UML_Operation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Operations.UML_Operation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Operation_Template_Parameter then
            --  Operation::templateParameter : OperationTemplateParameter

            AMF.UML.Operations.UML_Operation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Operation_Template_Parameters.UML_Operation_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Operations.UML_Operation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Operations.UML_Operation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Operation_Set;

      --------------------------------------
      -- Operation_Template_Parameter_Set --
      --------------------------------------

      procedure Operation_Template_Parameter_Set is
      begin
         if Property = MP_UML_Template_Parameter_Default then
            --  TemplateParameter::default : ParameterableElement

            AMF.UML.Operation_Template_Parameters.UML_Operation_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Default
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Template_Parameter_Owned_Default then
            --  TemplateParameter::ownedDefault : ParameterableElement

            AMF.UML.Operation_Template_Parameters.UML_Operation_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Default
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Template_Parameter_Owned_Parametered_Element then
            --  TemplateParameter::ownedParameteredElement : ParameterableElement

            AMF.UML.Operation_Template_Parameters.UML_Operation_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Parametered_Element
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Operation_Template_Parameter_Parametered_Element then
            --  OperationTemplateParameter::parameteredElement : Operation

            AMF.UML.Operation_Template_Parameters.UML_Operation_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Parametered_Element
               (AMF.UML.Operations.UML_Operation_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Template_Parameter_Parametered_Element then
            --  TemplateParameter::parameteredElement : ParameterableElement

            AMF.UML.Operation_Template_Parameters.UML_Operation_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Parametered_Element
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Template_Parameter_Signature then
            --  TemplateParameter::signature : TemplateSignature

            AMF.UML.Operation_Template_Parameters.UML_Operation_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Operation_Template_Parameter_Set;

      --------------------
      -- Output_Pin_Set --
      --------------------

      procedure Output_Pin_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Output_Pins.UML_Output_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Output_Pins.UML_Output_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Pin_Is_Control then
            --  Pin::isControl : Boolean

            AMF.UML.Output_Pins.UML_Output_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Control
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Object_Node_Is_Control_Type then
            --  ObjectNode::isControlType : Boolean

            AMF.UML.Output_Pins.UML_Output_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Control_Type
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Output_Pins.UML_Output_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Multiplicity_Element_Is_Ordered then
            --  MultiplicityElement::isOrdered : Boolean

            AMF.UML.Output_Pins.UML_Output_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Ordered
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Multiplicity_Element_Is_Unique then
            --  MultiplicityElement::isUnique : Boolean

            AMF.UML.Output_Pins.UML_Output_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Unique
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Multiplicity_Element_Lower_Value then
            --  MultiplicityElement::lowerValue : ValueSpecification

            AMF.UML.Output_Pins.UML_Output_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Lower_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Output_Pins.UML_Output_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Output_Pins.UML_Output_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Object_Node_Ordering then
            --  ObjectNode::ordering : ObjectNodeOrderingKind

            AMF.UML.Output_Pins.UML_Output_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Ordering
               (AMF.UML.Holders.Object_Node_Ordering_Kinds.Element (Value));

         elsif Property = MP_UML_Object_Node_Selection then
            --  ObjectNode::selection : Behavior

            AMF.UML.Output_Pins.UML_Output_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Selection
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            AMF.UML.Output_Pins.UML_Output_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Object_Node_Upper_Bound then
            --  ObjectNode::upperBound : ValueSpecification

            AMF.UML.Output_Pins.UML_Output_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Upper_Bound
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Multiplicity_Element_Upper_Value then
            --  MultiplicityElement::upperValue : ValueSpecification

            AMF.UML.Output_Pins.UML_Output_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Upper_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Output_Pins.UML_Output_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Output_Pin_Set;

      -----------------
      -- Package_Set --
      -----------------

      procedure Package_Set is
      begin
         if Property = MP_UML_Package_URI then
            --  Package::URI : String

            AMF.UML.Packages.UML_Package_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_URI
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Packages.UML_Package_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Packages.UML_Package_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Package_Nesting_Package then
            --  Package::nestingPackage : Package

            AMF.UML.Packages.UML_Package_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Nesting_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Packages.UML_Package_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Packages.UML_Package_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Packages.UML_Package_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Packages.UML_Package_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Packages.UML_Package_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Package_Set;

      ------------------------
      -- Package_Import_Set --
      ------------------------

      procedure Package_Import_Set is
      begin
         if Property = MP_UML_Package_Import_Imported_Package then
            --  PackageImport::importedPackage : Package

            AMF.UML.Package_Imports.UML_Package_Import_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Imported_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Package_Import_Importing_Namespace then
            --  PackageImport::importingNamespace : Namespace

            AMF.UML.Package_Imports.UML_Package_Import_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Importing_Namespace
               (AMF.UML.Namespaces.UML_Namespace_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Package_Import_Visibility then
            --  PackageImport::visibility : VisibilityKind

            AMF.UML.Package_Imports.UML_Package_Import_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Package_Import_Set;

      -----------------------
      -- Package_Merge_Set --
      -----------------------

      procedure Package_Merge_Set is
      begin
         if Property = MP_UML_Package_Merge_Merged_Package then
            --  PackageMerge::mergedPackage : Package

            AMF.UML.Package_Merges.UML_Package_Merge_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Merged_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Package_Merge_Receiving_Package then
            --  PackageMerge::receivingPackage : Package

            AMF.UML.Package_Merges.UML_Package_Merge_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Receiving_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Package_Merge_Set;

      -------------------
      -- Parameter_Set --
      -------------------

      procedure Parameter_Set is
      begin
         if Property = MP_UML_Parameter_Default_Value then
            --  Parameter::defaultValue : ValueSpecification

            AMF.UML.Parameters.UML_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Default_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameter_Direction then
            --  Parameter::direction : ParameterDirectionKind

            AMF.UML.Parameters.UML_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Direction
               (AMF.UML.Holders.Parameter_Direction_Kinds.Element (Value));

         elsif Property = MP_UML_Parameter_Effect then
            --  Parameter::effect : ParameterEffectKind

            AMF.UML.Parameters.UML_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Effect
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Parameter_Is_Exception then
            --  Parameter::isException : Boolean

            AMF.UML.Parameters.UML_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Exception
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Multiplicity_Element_Is_Ordered then
            --  MultiplicityElement::isOrdered : Boolean

            AMF.UML.Parameters.UML_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Ordered
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Parameter_Is_Stream then
            --  Parameter::isStream : Boolean

            AMF.UML.Parameters.UML_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Stream
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Multiplicity_Element_Is_Unique then
            --  MultiplicityElement::isUnique : Boolean

            AMF.UML.Parameters.UML_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Unique
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Multiplicity_Element_Lower_Value then
            --  MultiplicityElement::lowerValue : ValueSpecification

            AMF.UML.Parameters.UML_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Lower_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Parameters.UML_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Parameters.UML_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameter_Operation then
            --  Parameter::operation : Operation

            AMF.UML.Parameters.UML_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Operation
               (AMF.UML.Operations.UML_Operation_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Parameters.UML_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Connectable_Element_Template_Parameter then
            --  ConnectableElement::templateParameter : ConnectableElementTemplateParameter

            AMF.UML.Parameters.UML_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Parameters.UML_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            AMF.UML.Parameters.UML_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Multiplicity_Element_Upper_Value then
            --  MultiplicityElement::upperValue : ValueSpecification

            AMF.UML.Parameters.UML_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Upper_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Parameters.UML_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Parameter_Set;

      -----------------------
      -- Parameter_Set_Set --
      -----------------------

      procedure Parameter_Set_Set is
      begin
         if Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Parameter_Sets.UML_Parameter_Set_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Parameter_Sets.UML_Parameter_Set_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Parameter_Sets.UML_Parameter_Set_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Parameter_Set_Set;

      ----------------------------
      -- Part_Decomposition_Set --
      ----------------------------

      procedure Part_Decomposition_Set is
      begin
         if Property = MP_UML_Interaction_Fragment_Enclosing_Interaction then
            --  InteractionFragment::enclosingInteraction : Interaction

            AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Interaction
               (AMF.UML.Interactions.UML_Interaction_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Operand then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Operand
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Interaction_Use_Refers_To then
            --  InteractionUse::refersTo : Interaction

            AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Refers_To
               (AMF.UML.Interactions.UML_Interaction_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Interaction_Use_Return_Value then
            --  InteractionUse::returnValue : ValueSpecification

            AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Return_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Interaction_Use_Return_Value_Recipient then
            --  InteractionUse::returnValueRecipient : Property

            AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Return_Value_Recipient
               (AMF.UML.Properties.UML_Property_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Part_Decompositions.UML_Part_Decomposition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Part_Decomposition_Set;

      --------------
      -- Port_Set --
      --------------

      procedure Port_Set is
      begin
         if Property = MP_UML_Property_Aggregation then
            --  Property::aggregation : AggregationKind

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Aggregation
               (AMF.UML.Holders.Aggregation_Kinds.Element (Value));

         elsif Property = MP_UML_Property_Association then
            --  Property::association : Association

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Association
               (AMF.UML.Associations.UML_Association_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Property_Association_End then
            --  Property::associationEnd : Property

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Association_End
               (AMF.UML.Properties.UML_Property_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Property_Class then
            --  Property::class : Class

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Class
               (AMF.UML.Classes.UML_Class_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Property_Datatype then
            --  Property::datatype : DataType

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Datatype
               (AMF.UML.Data_Types.UML_Data_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Property_Default_Value then
            --  Property::defaultValue : ValueSpecification

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Default_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Property_Interface then
            --  Property::interface : Interface

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Interface
               (AMF.UML.Interfaces.UML_Interface_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Port_Is_Behavior then
            --  Port::isBehavior : Boolean

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Behavior
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Port_Is_Conjugated then
            --  Port::isConjugated : Boolean

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Conjugated
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Property_Is_Derived then
            --  Property::isDerived : Boolean

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Derived
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Property_Is_Derived_Union then
            --  Property::isDerivedUnion : Boolean

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Derived_Union
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Property_Is_ID then
            --  Property::isID : Boolean

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_ID
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Multiplicity_Element_Is_Ordered then
            --  MultiplicityElement::isOrdered : Boolean

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Ordered
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Property_Is_Read_Only then
            --  Property::isReadOnly : Boolean

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Read_Only
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Structural_Feature_Is_Read_Only then
            --  StructuralFeature::isReadOnly : Boolean

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Read_Only
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Port_Is_Service then
            --  Port::isService : Boolean

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Service
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Feature_Is_Static then
            --  Feature::isStatic : Boolean

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Static
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Multiplicity_Element_Is_Unique then
            --  MultiplicityElement::isUnique : Boolean

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Unique
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Multiplicity_Element_Lower_Value then
            --  MultiplicityElement::lowerValue : ValueSpecification

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Lower_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Property_Owning_Association then
            --  Property::owningAssociation : Association

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Association
               (AMF.UML.Associations.UML_Association_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Port_Protocol then
            --  Port::protocol : ProtocolStateMachine

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Protocol
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Connectable_Element_Template_Parameter then
            --  ConnectableElement::templateParameter : ConnectableElementTemplateParameter

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Multiplicity_Element_Upper_Value then
            --  MultiplicityElement::upperValue : ValueSpecification

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Upper_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Ports.UML_Port_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Port_Set;

      ------------------------
      -- Primitive_Type_Set --
      ------------------------

      procedure Primitive_Type_Set is
      begin
         if Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Primitive_Types.UML_Primitive_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Primitive_Types.UML_Primitive_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Primitive_Types.UML_Primitive_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Primitive_Types.UML_Primitive_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Primitive_Types.UML_Primitive_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Primitive_Types.UML_Primitive_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Primitive_Types.UML_Primitive_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Primitive_Types.UML_Primitive_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            AMF.UML.Primitive_Types.UML_Primitive_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Primitive_Types.UML_Primitive_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Primitive_Types.UML_Primitive_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Primitive_Types.UML_Primitive_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Primitive_Types.UML_Primitive_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Primitive_Types.UML_Primitive_Type_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Primitive_Type_Set;

      -----------------
      -- Profile_Set --
      -----------------

      procedure Profile_Set is
      begin
         if Property = MP_UML_Package_URI then
            --  Package::URI : String

            AMF.UML.Profiles.UML_Profile_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_URI
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Profiles.UML_Profile_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Profiles.UML_Profile_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Package_Nesting_Package then
            --  Package::nestingPackage : Package

            AMF.UML.Profiles.UML_Profile_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Nesting_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Profiles.UML_Profile_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Profiles.UML_Profile_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Profiles.UML_Profile_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Profiles.UML_Profile_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Profiles.UML_Profile_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Profile_Set;

      -----------------------------
      -- Profile_Application_Set --
      -----------------------------

      procedure Profile_Application_Set is
      begin
         if Property = MP_UML_Profile_Application_Applied_Profile then
            --  ProfileApplication::appliedProfile : Profile

            AMF.UML.Profile_Applications.UML_Profile_Application_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Applied_Profile
               (AMF.UML.Profiles.UML_Profile_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Profile_Application_Applying_Package then
            --  ProfileApplication::applyingPackage : Package

            AMF.UML.Profile_Applications.UML_Profile_Application_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Applying_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Profile_Application_Is_Strict then
            --  ProfileApplication::isStrict : Boolean

            AMF.UML.Profile_Applications.UML_Profile_Application_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Strict
               (League.Holders.Booleans.Element (Value));

         else
            raise Program_Error;
         end if;
      end Profile_Application_Set;

      ------------------
      -- Property_Set --
      ------------------

      procedure Property_Set is
      begin
         if Property = MP_UML_Property_Aggregation then
            --  Property::aggregation : AggregationKind

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Aggregation
               (AMF.UML.Holders.Aggregation_Kinds.Element (Value));

         elsif Property = MP_UML_Property_Association then
            --  Property::association : Association

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Association
               (AMF.UML.Associations.UML_Association_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Property_Association_End then
            --  Property::associationEnd : Property

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Association_End
               (AMF.UML.Properties.UML_Property_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Property_Class then
            --  Property::class : Class

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Class
               (AMF.UML.Classes.UML_Class_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Property_Datatype then
            --  Property::datatype : DataType

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Datatype
               (AMF.UML.Data_Types.UML_Data_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Property_Default_Value then
            --  Property::defaultValue : ValueSpecification

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Default_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Property_Interface then
            --  Property::interface : Interface

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Interface
               (AMF.UML.Interfaces.UML_Interface_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Property_Is_Derived then
            --  Property::isDerived : Boolean

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Derived
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Property_Is_Derived_Union then
            --  Property::isDerivedUnion : Boolean

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Derived_Union
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Property_Is_ID then
            --  Property::isID : Boolean

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_ID
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Multiplicity_Element_Is_Ordered then
            --  MultiplicityElement::isOrdered : Boolean

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Ordered
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Property_Is_Read_Only then
            --  Property::isReadOnly : Boolean

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Read_Only
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Structural_Feature_Is_Read_Only then
            --  StructuralFeature::isReadOnly : Boolean

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Read_Only
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Feature_Is_Static then
            --  Feature::isStatic : Boolean

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Static
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Multiplicity_Element_Is_Unique then
            --  MultiplicityElement::isUnique : Boolean

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Unique
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Multiplicity_Element_Lower_Value then
            --  MultiplicityElement::lowerValue : ValueSpecification

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Lower_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Property_Owning_Association then
            --  Property::owningAssociation : Association

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Association
               (AMF.UML.Associations.UML_Association_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Connectable_Element_Template_Parameter then
            --  ConnectableElement::templateParameter : ConnectableElementTemplateParameter

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Multiplicity_Element_Upper_Value then
            --  MultiplicityElement::upperValue : ValueSpecification

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Upper_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Properties.UML_Property_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Property_Set;

      ------------------------------
      -- Protocol_Conformance_Set --
      ------------------------------

      procedure Protocol_Conformance_Set is
      begin
         if Property = MP_UML_Protocol_Conformance_General_Machine then
            --  ProtocolConformance::generalMachine : ProtocolStateMachine

            AMF.UML.Protocol_Conformances.UML_Protocol_Conformance_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_General_Machine
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Protocol_Conformance_Specific_Machine then
            --  ProtocolConformance::specificMachine : ProtocolStateMachine

            AMF.UML.Protocol_Conformances.UML_Protocol_Conformance_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Specific_Machine
               (AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Protocol_Conformance_Set;

      --------------------------------
      -- Protocol_State_Machine_Set --
      --------------------------------

      procedure Protocol_State_Machine_Set is
      begin
         if Property = MP_UML_Behaviored_Classifier_Classifier_Behavior then
            --  BehavioredClassifier::classifierBehavior : Behavior

            AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Classifier_Behavior
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Active
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Behavior_Is_Reentrant then
            --  Behavior::isReentrant : Boolean

            AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Behavior_Specification then
            --  Behavior::specification : BehavioralFeature

            AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Specification
               (AMF.UML.Behavioral_Features.UML_Behavioral_Feature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Protocol_State_Machines.UML_Protocol_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Protocol_State_Machine_Set;

      -----------------------------
      -- Protocol_Transition_Set --
      -----------------------------

      procedure Protocol_Transition_Set is
      begin
         if Property = MP_UML_Transition_Container then
            --  Transition::container : Region

            AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Container
               (AMF.UML.Regions.UML_Region_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Transition_Effect then
            --  Transition::effect : Behavior

            AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Effect
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Transition_Guard then
            --  Transition::guard : Constraint

            AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Guard
               (AMF.UML.Constraints.UML_Constraint_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Transition_Kind then
            --  Transition::kind : TransitionKind

            AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Kind
               (AMF.UML.Holders.Transition_Kinds.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Protocol_Transition_Post_Condition then
            --  ProtocolTransition::postCondition : Constraint

            AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Post_Condition
               (AMF.UML.Constraints.UML_Constraint_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Protocol_Transition_Pre_Condition then
            --  ProtocolTransition::preCondition : Constraint

            AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Pre_Condition
               (AMF.UML.Constraints.UML_Constraint_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Transition_Redefined_Transition then
            --  Transition::redefinedTransition : Transition

            AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Redefined_Transition
               (AMF.UML.Transitions.UML_Transition_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Transition_Source then
            --  Transition::source : Vertex

            AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Source
               (AMF.UML.Vertexs.UML_Vertex_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Transition_Target then
            --  Transition::target : Vertex

            AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Target
               (AMF.UML.Vertexs.UML_Vertex_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Protocol_Transitions.UML_Protocol_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Protocol_Transition_Set;

      ---------------------
      -- Pseudostate_Set --
      ---------------------

      procedure Pseudostate_Set is
      begin
         if Property = MP_UML_Vertex_Container then
            --  Vertex::container : Region

            AMF.UML.Pseudostates.UML_Pseudostate_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Container
               (AMF.UML.Regions.UML_Region_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Pseudostate_Kind then
            --  Pseudostate::kind : PseudostateKind

            AMF.UML.Pseudostates.UML_Pseudostate_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Kind
               (AMF.UML.Holders.Pseudostate_Kinds.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Pseudostates.UML_Pseudostate_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Pseudostates.UML_Pseudostate_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Pseudostate_State then
            --  Pseudostate::state : State

            AMF.UML.Pseudostates.UML_Pseudostate_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_State
               (AMF.UML.States.UML_State_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Pseudostate_State_Machine then
            --  Pseudostate::stateMachine : StateMachine

            AMF.UML.Pseudostates.UML_Pseudostate_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_State_Machine
               (AMF.UML.State_Machines.UML_State_Machine_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Pseudostates.UML_Pseudostate_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Pseudostate_Set;

      -------------------------
      -- Qualifier_Value_Set --
      -------------------------

      procedure Qualifier_Value_Set is
      begin
         if Property = MP_UML_Qualifier_Value_Qualifier then
            --  QualifierValue::qualifier : Property

            AMF.UML.Qualifier_Values.UML_Qualifier_Value_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Qualifier
               (AMF.UML.Properties.UML_Property_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Qualifier_Value_Value then
            --  QualifierValue::value : InputPin

            AMF.UML.Qualifier_Values.UML_Qualifier_Value_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Value
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Qualifier_Value_Set;

      --------------------------------
      -- Raise_Exception_Action_Set --
      --------------------------------

      procedure Raise_Exception_Action_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Raise_Exception_Action_Exception then
            --  RaiseExceptionAction::exception : InputPin

            AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Exception
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Raise_Exception_Actions.UML_Raise_Exception_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Raise_Exception_Action_Set;

      ----------------------------
      -- Read_Extent_Action_Set --
      ----------------------------

      procedure Read_Extent_Action_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Read_Extent_Action_Classifier then
            --  ReadExtentAction::classifier : Classifier

            AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Classifier
               (AMF.UML.Classifiers.UML_Classifier_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Read_Extent_Action_Result then
            --  ReadExtentAction::result : OutputPin

            AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Result
               (AMF.UML.Output_Pins.UML_Output_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Read_Extent_Actions.UML_Read_Extent_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Read_Extent_Action_Set;

      ------------------------------------------
      -- Read_Is_Classified_Object_Action_Set --
      ------------------------------------------

      procedure Read_Is_Classified_Object_Action_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Read_Is_Classified_Object_Action_Classifier then
            --  ReadIsClassifiedObjectAction::classifier : Classifier

            AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Classifier
               (AMF.UML.Classifiers.UML_Classifier_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Read_Is_Classified_Object_Action_Is_Direct then
            --  ReadIsClassifiedObjectAction::isDirect : Boolean

            AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Direct
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Read_Is_Classified_Object_Action_Object then
            --  ReadIsClassifiedObjectAction::object : InputPin

            AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Object
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Read_Is_Classified_Object_Action_Result then
            --  ReadIsClassifiedObjectAction::result : OutputPin

            AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Result
               (AMF.UML.Output_Pins.UML_Output_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Read_Is_Classified_Object_Actions.UML_Read_Is_Classified_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Read_Is_Classified_Object_Action_Set;

      --------------------------
      -- Read_Link_Action_Set --
      --------------------------

      procedure Read_Link_Action_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Read_Link_Action_Result then
            --  ReadLinkAction::result : OutputPin

            AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Result
               (AMF.UML.Output_Pins.UML_Output_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Read_Link_Actions.UML_Read_Link_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Read_Link_Action_Set;

      -------------------------------------
      -- Read_Link_Object_End_Action_Set --
      -------------------------------------

      procedure Read_Link_Object_End_Action_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Read_Link_Object_End_Action_End then
            --  ReadLinkObjectEndAction::end : Property

            AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_End
               (AMF.UML.Properties.UML_Property_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Read_Link_Object_End_Action_Object then
            --  ReadLinkObjectEndAction::object : InputPin

            AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Object
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Read_Link_Object_End_Action_Result then
            --  ReadLinkObjectEndAction::result : OutputPin

            AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Result
               (AMF.UML.Output_Pins.UML_Output_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Read_Link_Object_End_Actions.UML_Read_Link_Object_End_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Read_Link_Object_End_Action_Set;

      -----------------------------------------------
      -- Read_Link_Object_End_Qualifier_Action_Set --
      -----------------------------------------------

      procedure Read_Link_Object_End_Qualifier_Action_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Read_Link_Object_End_Qualifier_Action_Object then
            --  ReadLinkObjectEndQualifierAction::object : InputPin

            AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Object
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Read_Link_Object_End_Qualifier_Action_Qualifier then
            --  ReadLinkObjectEndQualifierAction::qualifier : Property

            AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Qualifier
               (AMF.UML.Properties.UML_Property_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Read_Link_Object_End_Qualifier_Action_Result then
            --  ReadLinkObjectEndQualifierAction::result : OutputPin

            AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Result
               (AMF.UML.Output_Pins.UML_Output_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Read_Link_Object_End_Qualifier_Actions.UML_Read_Link_Object_End_Qualifier_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Read_Link_Object_End_Qualifier_Action_Set;

      --------------------------
      -- Read_Self_Action_Set --
      --------------------------

      procedure Read_Self_Action_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Read_Self_Action_Result then
            --  ReadSelfAction::result : OutputPin

            AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Result
               (AMF.UML.Output_Pins.UML_Output_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Read_Self_Actions.UML_Read_Self_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Read_Self_Action_Set;

      ----------------------------------------
      -- Read_Structural_Feature_Action_Set --
      ----------------------------------------

      procedure Read_Structural_Feature_Action_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Structural_Feature_Action_Object then
            --  StructuralFeatureAction::object : InputPin

            AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Object
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Read_Structural_Feature_Action_Result then
            --  ReadStructuralFeatureAction::result : OutputPin

            AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Result
               (AMF.UML.Output_Pins.UML_Output_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Structural_Feature_Action_Structural_Feature then
            --  StructuralFeatureAction::structuralFeature : StructuralFeature

            AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Structural_Feature
               (AMF.UML.Structural_Features.UML_Structural_Feature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Read_Structural_Feature_Actions.UML_Read_Structural_Feature_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Read_Structural_Feature_Action_Set;

      ------------------------------
      -- Read_Variable_Action_Set --
      ------------------------------

      procedure Read_Variable_Action_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Read_Variable_Action_Result then
            --  ReadVariableAction::result : OutputPin

            AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Result
               (AMF.UML.Output_Pins.UML_Output_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Variable_Action_Variable then
            --  VariableAction::variable : Variable

            AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Variable
               (AMF.UML.Variables.UML_Variable_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Read_Variable_Actions.UML_Read_Variable_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Read_Variable_Action_Set;

      ---------------------
      -- Realization_Set --
      ---------------------

      procedure Realization_Set is
      begin
         if Property = MP_UML_Abstraction_Mapping then
            --  Abstraction::mapping : OpaqueExpression

            AMF.UML.Realizations.UML_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Mapping
               (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Realizations.UML_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Realizations.UML_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Realizations.UML_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Realizations.UML_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Realizations.UML_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Realizations.UML_Realization_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Realization_Set;

      -------------------
      -- Reception_Set --
      -------------------

      procedure Reception_Set is
      begin
         if Property = MP_UML_Behavioral_Feature_Concurrency then
            --  BehavioralFeature::concurrency : CallConcurrencyKind

            AMF.UML.Receptions.UML_Reception_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Concurrency
               (AMF.UML.Holders.Call_Concurrency_Kinds.Element (Value));

         elsif Property = MP_UML_Behavioral_Feature_Is_Abstract then
            --  BehavioralFeature::isAbstract : Boolean

            AMF.UML.Receptions.UML_Reception_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Receptions.UML_Reception_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Feature_Is_Static then
            --  Feature::isStatic : Boolean

            AMF.UML.Receptions.UML_Reception_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Static
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Receptions.UML_Reception_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Receptions.UML_Reception_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Reception_Signal then
            --  Reception::signal : Signal

            AMF.UML.Receptions.UML_Reception_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Signal
               (AMF.UML.Signals.UML_Signal_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Receptions.UML_Reception_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Reception_Set;

      ----------------------------------
      -- Reclassify_Object_Action_Set --
      ----------------------------------

      procedure Reclassify_Object_Action_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Reclassify_Object_Action_Is_Replace_All then
            --  ReclassifyObjectAction::isReplaceAll : Boolean

            AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Replace_All
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Reclassify_Object_Action_Object then
            --  ReclassifyObjectAction::object : InputPin

            AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Object
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Reclassify_Object_Actions.UML_Reclassify_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Reclassify_Object_Action_Set;

      ----------------------------------------
      -- Redefinable_Template_Signature_Set --
      ----------------------------------------

      procedure Redefinable_Template_Signature_Set is
      begin
         if Property = MP_UML_Redefinable_Template_Signature_Classifier then
            --  RedefinableTemplateSignature::classifier : Classifier

            AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Classifier
               (AMF.UML.Classifiers.UML_Classifier_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Template_Signature_Template then
            --  TemplateSignature::template : TemplateableElement

            AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template
               (AMF.UML.Templateable_Elements.UML_Templateable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Redefinable_Template_Signature_Set;

      -----------------------
      -- Reduce_Action_Set --
      -----------------------

      procedure Reduce_Action_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Reduce_Action_Collection then
            --  ReduceAction::collection : InputPin

            AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Collection
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Reduce_Action_Is_Ordered then
            --  ReduceAction::isOrdered : Boolean

            AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Ordered
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Reduce_Action_Reducer then
            --  ReduceAction::reducer : Behavior

            AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Reducer
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Reduce_Action_Result then
            --  ReduceAction::result : OutputPin

            AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Result
               (AMF.UML.Output_Pins.UML_Output_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Reduce_Actions.UML_Reduce_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Reduce_Action_Set;

      ----------------
      -- Region_Set --
      ----------------

      procedure Region_Set is
      begin
         if Property = MP_UML_Region_Extended_Region then
            --  Region::extendedRegion : Region

            AMF.UML.Regions.UML_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Extended_Region
               (AMF.UML.Regions.UML_Region_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Regions.UML_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Regions.UML_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Regions.UML_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Region_State then
            --  Region::state : State

            AMF.UML.Regions.UML_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_State
               (AMF.UML.States.UML_State_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Region_State_Machine then
            --  Region::stateMachine : StateMachine

            AMF.UML.Regions.UML_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_State_Machine
               (AMF.UML.State_Machines.UML_State_Machine_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Regions.UML_Region_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Region_Set;

      ------------------------------------------------
      -- Remove_Structural_Feature_Value_Action_Set --
      ------------------------------------------------

      procedure Remove_Structural_Feature_Value_Action_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Remove_Structural_Feature_Value_Action_Is_Remove_Duplicates then
            --  RemoveStructuralFeatureValueAction::isRemoveDuplicates : Boolean

            AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Remove_Duplicates
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Structural_Feature_Action_Object then
            --  StructuralFeatureAction::object : InputPin

            AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Object
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Remove_Structural_Feature_Value_Action_Remove_At then
            --  RemoveStructuralFeatureValueAction::removeAt : InputPin

            AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Remove_At
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Write_Structural_Feature_Action_Result then
            --  WriteStructuralFeatureAction::result : OutputPin

            AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Result
               (AMF.UML.Output_Pins.UML_Output_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Structural_Feature_Action_Structural_Feature then
            --  StructuralFeatureAction::structuralFeature : StructuralFeature

            AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Structural_Feature
               (AMF.UML.Structural_Features.UML_Structural_Feature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Write_Structural_Feature_Action_Value then
            --  WriteStructuralFeatureAction::value : InputPin

            AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Value
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Remove_Structural_Feature_Value_Actions.UML_Remove_Structural_Feature_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Remove_Structural_Feature_Value_Action_Set;

      --------------------------------------
      -- Remove_Variable_Value_Action_Set --
      --------------------------------------

      procedure Remove_Variable_Value_Action_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Remove_Variable_Value_Action_Is_Remove_Duplicates then
            --  RemoveVariableValueAction::isRemoveDuplicates : Boolean

            AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Remove_Duplicates
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Remove_Variable_Value_Action_Remove_At then
            --  RemoveVariableValueAction::removeAt : InputPin

            AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Remove_At
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Write_Variable_Action_Value then
            --  WriteVariableAction::value : InputPin

            AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Value
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Variable_Action_Variable then
            --  VariableAction::variable : Variable

            AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Variable
               (AMF.UML.Variables.UML_Variable_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Remove_Variable_Value_Actions.UML_Remove_Variable_Value_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Remove_Variable_Value_Action_Set;

      ----------------------
      -- Reply_Action_Set --
      ----------------------

      procedure Reply_Action_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Reply_Actions.UML_Reply_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Reply_Actions.UML_Reply_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Reply_Actions.UML_Reply_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Reply_Actions.UML_Reply_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Reply_Actions.UML_Reply_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Reply_Actions.UML_Reply_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Reply_Action_Reply_To_Call then
            --  ReplyAction::replyToCall : Trigger

            AMF.UML.Reply_Actions.UML_Reply_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Reply_To_Call
               (AMF.UML.Triggers.UML_Trigger_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Reply_Action_Return_Information then
            --  ReplyAction::returnInformation : InputPin

            AMF.UML.Reply_Actions.UML_Reply_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Return_Information
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Reply_Actions.UML_Reply_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Reply_Action_Set;

      ----------------------------
      -- Send_Object_Action_Set --
      ----------------------------

      procedure Send_Object_Action_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Invocation_Action_On_Port then
            --  InvocationAction::onPort : Port

            AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_On_Port
               (AMF.UML.Ports.UML_Port_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Send_Object_Action_Request then
            --  SendObjectAction::request : InputPin

            AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Request
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Send_Object_Action_Target then
            --  SendObjectAction::target : InputPin

            AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Target
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Send_Object_Actions.UML_Send_Object_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Send_Object_Action_Set;

      ----------------------------
      -- Send_Signal_Action_Set --
      ----------------------------

      procedure Send_Signal_Action_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Invocation_Action_On_Port then
            --  InvocationAction::onPort : Port

            AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_On_Port
               (AMF.UML.Ports.UML_Port_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Send_Signal_Action_Signal then
            --  SendSignalAction::signal : Signal

            AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Signal
               (AMF.UML.Signals.UML_Signal_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Send_Signal_Action_Target then
            --  SendSignalAction::target : InputPin

            AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Target
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Send_Signal_Actions.UML_Send_Signal_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Send_Signal_Action_Set;

      -----------------------
      -- Sequence_Node_Set --
      -----------------------

      procedure Sequence_Node_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Structured_Activity_Node_Activity then
            --  StructuredActivityNode::activity : Activity

            AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Group_In_Activity then
            --  ActivityGroup::inActivity : Activity

            AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Structured_Activity_Node_Must_Isolate then
            --  StructuredActivityNode::mustIsolate : Boolean

            AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Must_Isolate
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Sequence_Nodes.UML_Sequence_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Sequence_Node_Set;

      ----------------
      -- Signal_Set --
      ----------------

      procedure Signal_Set is
      begin
         if Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Signals.UML_Signal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Signals.UML_Signal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Signals.UML_Signal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Signals.UML_Signal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Signals.UML_Signal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Signals.UML_Signal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Signals.UML_Signal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Signals.UML_Signal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            AMF.UML.Signals.UML_Signal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Signals.UML_Signal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Signals.UML_Signal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Signals.UML_Signal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Signals.UML_Signal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Signals.UML_Signal_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Signal_Set;

      ----------------------
      -- Signal_Event_Set --
      ----------------------

      procedure Signal_Event_Set is
      begin
         if Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Signal_Events.UML_Signal_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Signal_Events.UML_Signal_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Signal_Events.UML_Signal_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Signal_Event_Signal then
            --  SignalEvent::signal : Signal

            AMF.UML.Signal_Events.UML_Signal_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Signal
               (AMF.UML.Signals.UML_Signal_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Signal_Events.UML_Signal_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Signal_Events.UML_Signal_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Signal_Events.UML_Signal_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Signal_Event_Set;

      --------------
      -- Slot_Set --
      --------------

      procedure Slot_Set is
      begin
         if Property = MP_UML_Slot_Defining_Feature then
            --  Slot::definingFeature : StructuralFeature

            AMF.UML.Slots.UML_Slot_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Defining_Feature
               (AMF.UML.Structural_Features.UML_Structural_Feature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Slot_Owning_Instance then
            --  Slot::owningInstance : InstanceSpecification

            AMF.UML.Slots.UML_Slot_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Instance
               (AMF.UML.Instance_Specifications.UML_Instance_Specification_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Slot_Set;

      ------------------------------------------
      -- Start_Classifier_Behavior_Action_Set --
      ------------------------------------------

      procedure Start_Classifier_Behavior_Action_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Start_Classifier_Behavior_Action_Object then
            --  StartClassifierBehaviorAction::object : InputPin

            AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Object
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Start_Classifier_Behavior_Actions.UML_Start_Classifier_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Start_Classifier_Behavior_Action_Set;

      --------------------------------------
      -- Start_Object_Behavior_Action_Set --
      --------------------------------------

      procedure Start_Object_Behavior_Action_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Call_Action_Is_Synchronous then
            --  CallAction::isSynchronous : Boolean

            AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Synchronous
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Start_Object_Behavior_Action_Object then
            --  StartObjectBehaviorAction::object : InputPin

            AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Object
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Invocation_Action_On_Port then
            --  InvocationAction::onPort : Port

            AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_On_Port
               (AMF.UML.Ports.UML_Port_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Start_Object_Behavior_Actions.UML_Start_Object_Behavior_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Start_Object_Behavior_Action_Set;

      ---------------
      -- State_Set --
      ---------------

      procedure State_Set is
      begin
         if Property = MP_UML_Vertex_Container then
            --  Vertex::container : Region

            AMF.UML.States.UML_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Container
               (AMF.UML.Regions.UML_Region_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_State_Do_Activity then
            --  State::doActivity : Behavior

            AMF.UML.States.UML_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Do_Activity
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_State_Entry then
            --  State::entry : Behavior

            AMF.UML.States.UML_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Entry
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_State_Exit then
            --  State::exit : Behavior

            AMF.UML.States.UML_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Exit
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.States.UML_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.States.UML_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.States.UML_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_State_Redefined_State then
            --  State::redefinedState : State

            AMF.UML.States.UML_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Redefined_State
               (AMF.UML.States.UML_State_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_State_State_Invariant then
            --  State::stateInvariant : Constraint

            AMF.UML.States.UML_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_State_Invariant
               (AMF.UML.Constraints.UML_Constraint_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_State_Submachine then
            --  State::submachine : StateMachine

            AMF.UML.States.UML_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Submachine
               (AMF.UML.State_Machines.UML_State_Machine_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.States.UML_State_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end State_Set;

      -------------------------
      -- State_Invariant_Set --
      -------------------------

      procedure State_Invariant_Set is
      begin
         if Property = MP_UML_State_Invariant_Covered then
            --  StateInvariant::covered : Lifeline

            AMF.UML.State_Invariants.UML_State_Invariant_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Covered
               (AMF.UML.Lifelines.UML_Lifeline_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Interaction then
            --  InteractionFragment::enclosingInteraction : Interaction

            AMF.UML.State_Invariants.UML_State_Invariant_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Interaction
               (AMF.UML.Interactions.UML_Interaction_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Interaction_Fragment_Enclosing_Operand then
            --  InteractionFragment::enclosingOperand : InteractionOperand

            AMF.UML.State_Invariants.UML_State_Invariant_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Enclosing_Operand
               (AMF.UML.Interaction_Operands.UML_Interaction_Operand_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_State_Invariant_Invariant then
            --  StateInvariant::invariant : Constraint

            AMF.UML.State_Invariants.UML_State_Invariant_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Invariant
               (AMF.UML.Constraints.UML_Constraint_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.State_Invariants.UML_State_Invariant_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.State_Invariants.UML_State_Invariant_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.State_Invariants.UML_State_Invariant_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end State_Invariant_Set;

      -----------------------
      -- State_Machine_Set --
      -----------------------

      procedure State_Machine_Set is
      begin
         if Property = MP_UML_Behaviored_Classifier_Classifier_Behavior then
            --  BehavioredClassifier::classifierBehavior : Behavior

            AMF.UML.State_Machines.UML_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Classifier_Behavior
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            AMF.UML.State_Machines.UML_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.State_Machines.UML_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            AMF.UML.State_Machines.UML_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Active
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.State_Machines.UML_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.State_Machines.UML_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Behavior_Is_Reentrant then
            --  Behavior::isReentrant : Boolean

            AMF.UML.State_Machines.UML_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.State_Machines.UML_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.State_Machines.UML_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.State_Machines.UML_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.State_Machines.UML_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.State_Machines.UML_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            AMF.UML.State_Machines.UML_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            AMF.UML.State_Machines.UML_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Behavior_Specification then
            --  Behavior::specification : BehavioralFeature

            AMF.UML.State_Machines.UML_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Specification
               (AMF.UML.Behavioral_Features.UML_Behavioral_Feature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.State_Machines.UML_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.State_Machines.UML_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.State_Machines.UML_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.State_Machines.UML_State_Machine_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end State_Machine_Set;

      --------------------
      -- Stereotype_Set --
      --------------------

      procedure Stereotype_Set is
      begin
         if Property = MP_UML_Behaviored_Classifier_Classifier_Behavior then
            --  BehavioredClassifier::classifierBehavior : Behavior

            AMF.UML.Stereotypes.UML_Stereotype_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Classifier_Behavior
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Class_Is_Abstract then
            --  Class::isAbstract : Boolean

            AMF.UML.Stereotypes.UML_Stereotype_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Stereotypes.UML_Stereotype_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Class_Is_Active then
            --  Class::isActive : Boolean

            AMF.UML.Stereotypes.UML_Stereotype_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Active
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Stereotypes.UML_Stereotype_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Stereotypes.UML_Stereotype_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Stereotypes.UML_Stereotype_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Stereotypes.UML_Stereotype_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Stereotypes.UML_Stereotype_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Stereotypes.UML_Stereotype_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Stereotypes.UML_Stereotype_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            AMF.UML.Stereotypes.UML_Stereotype_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Stereotypes.UML_Stereotype_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Stereotypes.UML_Stereotype_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Stereotypes.UML_Stereotype_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Stereotypes.UML_Stereotype_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Stereotypes.UML_Stereotype_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Stereotype_Set;

      ---------------------------
      -- String_Expression_Set --
      ---------------------------

      procedure String_Expression_Set is
      begin
         if Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.String_Expressions.UML_String_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.String_Expressions.UML_String_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.String_Expressions.UML_String_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_String_Expression_Owning_Expression then
            --  StringExpression::owningExpression : StringExpression

            AMF.UML.String_Expressions.UML_String_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.String_Expressions.UML_String_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Expression_Symbol then
            --  Expression::symbol : String

            AMF.UML.String_Expressions.UML_String_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Symbol
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.String_Expressions.UML_String_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            AMF.UML.String_Expressions.UML_String_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.String_Expressions.UML_String_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.String_Expressions.UML_String_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end String_Expression_Set;

      ----------------------------------
      -- Structured_Activity_Node_Set --
      ----------------------------------

      procedure Structured_Activity_Node_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Structured_Activity_Node_Activity then
            --  StructuredActivityNode::activity : Activity

            AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Group_In_Activity then
            --  ActivityGroup::inActivity : Activity

            AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Structured_Activity_Node_Must_Isolate then
            --  StructuredActivityNode::mustIsolate : Boolean

            AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Must_Isolate
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Structured_Activity_Node_Set;

      ----------------------
      -- Substitution_Set --
      ----------------------

      procedure Substitution_Set is
      begin
         if Property = MP_UML_Substitution_Contract then
            --  Substitution::contract : Classifier

            AMF.UML.Substitutions.UML_Substitution_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Contract
               (AMF.UML.Classifiers.UML_Classifier_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Abstraction_Mapping then
            --  Abstraction::mapping : OpaqueExpression

            AMF.UML.Substitutions.UML_Substitution_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Mapping
               (AMF.UML.Opaque_Expressions.UML_Opaque_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Substitutions.UML_Substitution_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Substitutions.UML_Substitution_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Substitutions.UML_Substitution_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Substitution_Substituting_Classifier then
            --  Substitution::substitutingClassifier : Classifier

            AMF.UML.Substitutions.UML_Substitution_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Substituting_Classifier
               (AMF.UML.Classifiers.UML_Classifier_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Substitutions.UML_Substitution_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Substitutions.UML_Substitution_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Substitutions.UML_Substitution_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Substitution_Set;

      --------------------------
      -- Template_Binding_Set --
      --------------------------

      procedure Template_Binding_Set is
      begin
         if Property = MP_UML_Template_Binding_Bound_Element then
            --  TemplateBinding::boundElement : TemplateableElement

            AMF.UML.Template_Bindings.UML_Template_Binding_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Bound_Element
               (AMF.UML.Templateable_Elements.UML_Templateable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Template_Binding_Signature then
            --  TemplateBinding::signature : TemplateSignature

            AMF.UML.Template_Bindings.UML_Template_Binding_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Template_Binding_Set;

      ----------------------------
      -- Template_Parameter_Set --
      ----------------------------

      procedure Template_Parameter_Set is
      begin
         if Property = MP_UML_Template_Parameter_Default then
            --  TemplateParameter::default : ParameterableElement

            AMF.UML.Template_Parameters.UML_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Default
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Template_Parameter_Owned_Default then
            --  TemplateParameter::ownedDefault : ParameterableElement

            AMF.UML.Template_Parameters.UML_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Default
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Template_Parameter_Owned_Parametered_Element then
            --  TemplateParameter::ownedParameteredElement : ParameterableElement

            AMF.UML.Template_Parameters.UML_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Parametered_Element
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Template_Parameter_Parametered_Element then
            --  TemplateParameter::parameteredElement : ParameterableElement

            AMF.UML.Template_Parameters.UML_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Parametered_Element
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Template_Parameter_Signature then
            --  TemplateParameter::signature : TemplateSignature

            AMF.UML.Template_Parameters.UML_Template_Parameter_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Template_Parameter_Set;

      -----------------------------------------
      -- Template_Parameter_Substitution_Set --
      -----------------------------------------

      procedure Template_Parameter_Substitution_Set is
      begin
         if Property = MP_UML_Template_Parameter_Substitution_Actual then
            --  TemplateParameterSubstitution::actual : ParameterableElement

            AMF.UML.Template_Parameter_Substitutions.UML_Template_Parameter_Substitution_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Actual
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Template_Parameter_Substitution_Formal then
            --  TemplateParameterSubstitution::formal : TemplateParameter

            AMF.UML.Template_Parameter_Substitutions.UML_Template_Parameter_Substitution_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Formal
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Template_Parameter_Substitution_Owned_Actual then
            --  TemplateParameterSubstitution::ownedActual : ParameterableElement

            AMF.UML.Template_Parameter_Substitutions.UML_Template_Parameter_Substitution_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Actual
               (AMF.UML.Parameterable_Elements.UML_Parameterable_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Template_Parameter_Substitution_Template_Binding then
            --  TemplateParameterSubstitution::templateBinding : TemplateBinding

            AMF.UML.Template_Parameter_Substitutions.UML_Template_Parameter_Substitution_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Binding
               (AMF.UML.Template_Bindings.UML_Template_Binding_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Template_Parameter_Substitution_Set;

      ----------------------------
      -- Template_Signature_Set --
      ----------------------------

      procedure Template_Signature_Set is
      begin
         if Property = MP_UML_Template_Signature_Template then
            --  TemplateSignature::template : TemplateableElement

            AMF.UML.Template_Signatures.UML_Template_Signature_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template
               (AMF.UML.Templateable_Elements.UML_Templateable_Element_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Template_Signature_Set;

      ------------------------------
      -- Test_Identity_Action_Set --
      ------------------------------

      procedure Test_Identity_Action_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Test_Identity_Action_First then
            --  TestIdentityAction::first : InputPin

            AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_First
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Test_Identity_Action_Result then
            --  TestIdentityAction::result : OutputPin

            AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Result
               (AMF.UML.Output_Pins.UML_Output_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Test_Identity_Action_Second then
            --  TestIdentityAction::second : InputPin

            AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Second
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Test_Identity_Actions.UML_Test_Identity_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Test_Identity_Action_Set;

      -------------------------
      -- Time_Constraint_Set --
      -------------------------

      procedure Time_Constraint_Set is
      begin
         if Property = MP_UML_Constraint_Context then
            --  Constraint::context : Namespace

            AMF.UML.Time_Constraints.UML_Time_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Context
               (AMF.UML.Namespaces.UML_Namespace_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Time_Constraint_First_Event then
            --  TimeConstraint::firstEvent : Boolean

            AMF.UML.Time_Constraints.UML_Time_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_First_Event
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Time_Constraints.UML_Time_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Time_Constraints.UML_Time_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Time_Constraints.UML_Time_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Constraint_Specification then
            --  Constraint::specification : ValueSpecification

            AMF.UML.Time_Constraints.UML_Time_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Specification
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Interval_Constraint_Specification then
            --  IntervalConstraint::specification : Interval

            AMF.UML.Time_Constraints.UML_Time_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Specification
               (AMF.UML.Intervals.UML_Interval_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Time_Constraint_Specification then
            --  TimeConstraint::specification : TimeInterval

            AMF.UML.Time_Constraints.UML_Time_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Specification
               (AMF.UML.Time_Intervals.UML_Time_Interval_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Time_Constraints.UML_Time_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Time_Constraints.UML_Time_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Time_Constraints.UML_Time_Constraint_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Time_Constraint_Set;

      --------------------
      -- Time_Event_Set --
      --------------------

      procedure Time_Event_Set is
      begin
         if Property = MP_UML_Time_Event_Is_Relative then
            --  TimeEvent::isRelative : Boolean

            AMF.UML.Time_Events.UML_Time_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Relative
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Time_Events.UML_Time_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Time_Events.UML_Time_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Time_Events.UML_Time_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Time_Events.UML_Time_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Time_Events.UML_Time_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Time_Events.UML_Time_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         elsif Property = MP_UML_Time_Event_When then
            --  TimeEvent::when : TimeExpression

            AMF.UML.Time_Events.UML_Time_Event_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_When
               (AMF.UML.Time_Expressions.UML_Time_Expression_Access (AMF.Holders.Elements.Element (Value)));

         else
            raise Program_Error;
         end if;
      end Time_Event_Set;

      -------------------------
      -- Time_Expression_Set --
      -------------------------

      procedure Time_Expression_Set is
      begin
         if Property = MP_UML_Time_Expression_Expr then
            --  TimeExpression::expr : ValueSpecification

            AMF.UML.Time_Expressions.UML_Time_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Expr
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Time_Expressions.UML_Time_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Time_Expressions.UML_Time_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Time_Expressions.UML_Time_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Time_Expressions.UML_Time_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            AMF.UML.Time_Expressions.UML_Time_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Time_Expressions.UML_Time_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Time_Expressions.UML_Time_Expression_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Time_Expression_Set;

      -----------------------
      -- Time_Interval_Set --
      -----------------------

      procedure Time_Interval_Set is
      begin
         if Property = MP_UML_Interval_Max then
            --  Interval::max : ValueSpecification

            AMF.UML.Time_Intervals.UML_Time_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Max
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Time_Interval_Max then
            --  TimeInterval::max : TimeExpression

            AMF.UML.Time_Intervals.UML_Time_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Max
               (AMF.UML.Time_Expressions.UML_Time_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Interval_Min then
            --  Interval::min : ValueSpecification

            AMF.UML.Time_Intervals.UML_Time_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Min
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Time_Interval_Min then
            --  TimeInterval::min : TimeExpression

            AMF.UML.Time_Intervals.UML_Time_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Min
               (AMF.UML.Time_Expressions.UML_Time_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Time_Intervals.UML_Time_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Time_Intervals.UML_Time_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Time_Intervals.UML_Time_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Time_Intervals.UML_Time_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            AMF.UML.Time_Intervals.UML_Time_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Time_Intervals.UML_Time_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Time_Intervals.UML_Time_Interval_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Time_Interval_Set;

      --------------------------
      -- Time_Observation_Set --
      --------------------------

      procedure Time_Observation_Set is
      begin
         if Property = MP_UML_Time_Observation_Event then
            --  TimeObservation::event : NamedElement

            AMF.UML.Time_Observations.UML_Time_Observation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Event
               (AMF.UML.Named_Elements.UML_Named_Element_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Time_Observation_First_Event then
            --  TimeObservation::firstEvent : Boolean

            AMF.UML.Time_Observations.UML_Time_Observation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_First_Event
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Time_Observations.UML_Time_Observation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Time_Observations.UML_Time_Observation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Time_Observations.UML_Time_Observation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Time_Observations.UML_Time_Observation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Time_Observations.UML_Time_Observation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Time_Observations.UML_Time_Observation_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Time_Observation_Set;

      --------------------
      -- Transition_Set --
      --------------------

      procedure Transition_Set is
      begin
         if Property = MP_UML_Transition_Container then
            --  Transition::container : Region

            AMF.UML.Transitions.UML_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Container
               (AMF.UML.Regions.UML_Region_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Transition_Effect then
            --  Transition::effect : Behavior

            AMF.UML.Transitions.UML_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Effect
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Transition_Guard then
            --  Transition::guard : Constraint

            AMF.UML.Transitions.UML_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Guard
               (AMF.UML.Constraints.UML_Constraint_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Transitions.UML_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Transition_Kind then
            --  Transition::kind : TransitionKind

            AMF.UML.Transitions.UML_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Kind
               (AMF.UML.Holders.Transition_Kinds.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Transitions.UML_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Transitions.UML_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Transition_Redefined_Transition then
            --  Transition::redefinedTransition : Transition

            AMF.UML.Transitions.UML_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Redefined_Transition
               (AMF.UML.Transitions.UML_Transition_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Transition_Source then
            --  Transition::source : Vertex

            AMF.UML.Transitions.UML_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Source
               (AMF.UML.Vertexs.UML_Vertex_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Transition_Target then
            --  Transition::target : Vertex

            AMF.UML.Transitions.UML_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Target
               (AMF.UML.Vertexs.UML_Vertex_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Transitions.UML_Transition_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Transition_Set;

      -----------------
      -- Trigger_Set --
      -----------------

      procedure Trigger_Set is
      begin
         if Property = MP_UML_Trigger_Event then
            --  Trigger::event : Event

            AMF.UML.Triggers.UML_Trigger_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Event
               (AMF.UML.Events.UML_Event_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Triggers.UML_Trigger_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Triggers.UML_Trigger_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Triggers.UML_Trigger_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Trigger_Set;

      ---------------------------
      -- Unmarshall_Action_Set --
      ---------------------------

      procedure Unmarshall_Action_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Unmarshall_Action_Object then
            --  UnmarshallAction::object : InputPin

            AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Object
               (AMF.UML.Input_Pins.UML_Input_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Unmarshall_Action_Unmarshall_Type then
            --  UnmarshallAction::unmarshallType : Classifier

            AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Unmarshall_Type
               (AMF.UML.Classifiers.UML_Classifier_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Unmarshall_Actions.UML_Unmarshall_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Unmarshall_Action_Set;

      ---------------
      -- Usage_Set --
      ---------------

      procedure Usage_Set is
      begin
         if Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Usages.UML_Usage_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Usages.UML_Usage_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Usages.UML_Usage_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Usages.UML_Usage_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Usages.UML_Usage_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Usages.UML_Usage_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Usage_Set;

      ------------------
      -- Use_Case_Set --
      ------------------

      procedure Use_Case_Set is
      begin
         if Property = MP_UML_Behaviored_Classifier_Classifier_Behavior then
            --  BehavioredClassifier::classifierBehavior : Behavior

            AMF.UML.Use_Cases.UML_Use_Case_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Classifier_Behavior
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Is_Abstract then
            --  Classifier::isAbstract : Boolean

            AMF.UML.Use_Cases.UML_Use_Case_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Abstract
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Classifier_Is_Final_Specialization then
            --  Classifier::isFinalSpecialization : Boolean

            AMF.UML.Use_Cases.UML_Use_Case_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Final_Specialization
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Use_Cases.UML_Use_Case_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Use_Cases.UML_Use_Case_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Use_Cases.UML_Use_Case_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Owned_Template_Signature then
            --  Classifier::ownedTemplateSignature : RedefinableTemplateSignature

            AMF.UML.Use_Cases.UML_Use_Case_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Redefinable_Template_Signatures.UML_Redefinable_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Templateable_Element_Owned_Template_Signature then
            --  TemplateableElement::ownedTemplateSignature : TemplateSignature

            AMF.UML.Use_Cases.UML_Use_Case_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owned_Template_Signature
               (AMF.UML.Template_Signatures.UML_Template_Signature_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Use_Cases.UML_Use_Case_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Type_Package then
            --  Type::package : Package

            AMF.UML.Use_Cases.UML_Use_Case_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Package
               (AMF.UML.Packages.UML_Package_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Representation then
            --  Classifier::representation : CollaborationUse

            AMF.UML.Use_Cases.UML_Use_Case_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Representation
               (AMF.UML.Collaboration_Uses.UML_Collaboration_Use_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Classifier_Template_Parameter then
            --  Classifier::templateParameter : ClassifierTemplateParameter

            AMF.UML.Use_Cases.UML_Use_Case_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Classifier_Template_Parameters.UML_Classifier_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Use_Cases.UML_Use_Case_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Use_Cases.UML_Use_Case_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         elsif Property = MP_UML_Packageable_Element_Visibility then
            --  PackageableElement::visibility : VisibilityKind

            AMF.UML.Use_Cases.UML_Use_Case_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Visibility_Kinds.Element (Value));

         else
            raise Program_Error;
         end if;
      end Use_Case_Set;

      -------------------
      -- Value_Pin_Set --
      -------------------

      procedure Value_Pin_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Value_Pins.UML_Value_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Value_Pins.UML_Value_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Pin_Is_Control then
            --  Pin::isControl : Boolean

            AMF.UML.Value_Pins.UML_Value_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Control
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Object_Node_Is_Control_Type then
            --  ObjectNode::isControlType : Boolean

            AMF.UML.Value_Pins.UML_Value_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Control_Type
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Value_Pins.UML_Value_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Multiplicity_Element_Is_Ordered then
            --  MultiplicityElement::isOrdered : Boolean

            AMF.UML.Value_Pins.UML_Value_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Ordered
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Multiplicity_Element_Is_Unique then
            --  MultiplicityElement::isUnique : Boolean

            AMF.UML.Value_Pins.UML_Value_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Unique
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Multiplicity_Element_Lower_Value then
            --  MultiplicityElement::lowerValue : ValueSpecification

            AMF.UML.Value_Pins.UML_Value_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Lower_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Value_Pins.UML_Value_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Value_Pins.UML_Value_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Object_Node_Ordering then
            --  ObjectNode::ordering : ObjectNodeOrderingKind

            AMF.UML.Value_Pins.UML_Value_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Ordering
               (AMF.UML.Holders.Object_Node_Ordering_Kinds.Element (Value));

         elsif Property = MP_UML_Object_Node_Selection then
            --  ObjectNode::selection : Behavior

            AMF.UML.Value_Pins.UML_Value_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Selection
               (AMF.UML.Behaviors.UML_Behavior_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            AMF.UML.Value_Pins.UML_Value_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Object_Node_Upper_Bound then
            --  ObjectNode::upperBound : ValueSpecification

            AMF.UML.Value_Pins.UML_Value_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Upper_Bound
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Multiplicity_Element_Upper_Value then
            --  MultiplicityElement::upperValue : ValueSpecification

            AMF.UML.Value_Pins.UML_Value_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Upper_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Value_Pin_Value then
            --  ValuePin::value : ValueSpecification

            AMF.UML.Value_Pins.UML_Value_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Value_Pins.UML_Value_Pin_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Value_Pin_Set;

      ------------------------------------
      -- Value_Specification_Action_Set --
      ------------------------------------

      procedure Value_Specification_Action_Set is
      begin
         if Property = MP_UML_Activity_Node_Activity then
            --  ActivityNode::activity : Activity

            AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Activity_Node_In_Structured_Node then
            --  ActivityNode::inStructuredNode : StructuredActivityNode

            AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_In_Structured_Node
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Redefinable_Element_Is_Leaf then
            --  RedefinableElement::isLeaf : Boolean

            AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Leaf
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Action_Is_Locally_Reentrant then
            --  Action::isLocallyReentrant : Boolean

            AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Locally_Reentrant
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Value_Specification_Action_Result then
            --  ValueSpecificationAction::result : OutputPin

            AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Result
               (AMF.UML.Output_Pins.UML_Output_Pin_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Value_Specification_Action_Value then
            --  ValueSpecificationAction::value : ValueSpecification

            AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Value_Specification_Actions.UML_Value_Specification_Action_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Value_Specification_Action_Set;

      ------------------
      -- Variable_Set --
      ------------------

      procedure Variable_Set is
      begin
         if Property = MP_UML_Variable_Activity_Scope then
            --  Variable::activityScope : Activity

            AMF.UML.Variables.UML_Variable_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Activity_Scope
               (AMF.UML.Activities.UML_Activity_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Multiplicity_Element_Is_Ordered then
            --  MultiplicityElement::isOrdered : Boolean

            AMF.UML.Variables.UML_Variable_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Ordered
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Multiplicity_Element_Is_Unique then
            --  MultiplicityElement::isUnique : Boolean

            AMF.UML.Variables.UML_Variable_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Is_Unique
               (League.Holders.Booleans.Element (Value));

         elsif Property = MP_UML_Multiplicity_Element_Lower_Value then
            --  MultiplicityElement::lowerValue : ValueSpecification

            AMF.UML.Variables.UML_Variable_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Lower_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Name then
            --  NamedElement::name : String

            AMF.UML.Variables.UML_Variable_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name
               (AMF.Holders.Element (Value));

         elsif Property = MP_UML_Named_Element_Name_Expression then
            --  NamedElement::nameExpression : StringExpression

            AMF.UML.Variables.UML_Variable_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Name_Expression
               (AMF.UML.String_Expressions.UML_String_Expression_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Owning_Template_Parameter then
            --  ParameterableElement::owningTemplateParameter : TemplateParameter

            AMF.UML.Variables.UML_Variable_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Owning_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Variable_Scope then
            --  Variable::scope : StructuredActivityNode

            AMF.UML.Variables.UML_Variable_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Scope
               (AMF.UML.Structured_Activity_Nodes.UML_Structured_Activity_Node_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Connectable_Element_Template_Parameter then
            --  ConnectableElement::templateParameter : ConnectableElementTemplateParameter

            AMF.UML.Variables.UML_Variable_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Connectable_Element_Template_Parameters.UML_Connectable_Element_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Parameterable_Element_Template_Parameter then
            --  ParameterableElement::templateParameter : TemplateParameter

            AMF.UML.Variables.UML_Variable_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Template_Parameter
               (AMF.UML.Template_Parameters.UML_Template_Parameter_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Typed_Element_Type then
            --  TypedElement::type : Type

            AMF.UML.Variables.UML_Variable_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Type
               (AMF.UML.Types.UML_Type_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Multiplicity_Element_Upper_Value then
            --  MultiplicityElement::upperValue : ValueSpecification

            AMF.UML.Variables.UML_Variable_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Upper_Value
               (AMF.UML.Value_Specifications.UML_Value_Specification_Access (AMF.Holders.Elements.Element (Value)));

         elsif Property = MP_UML_Named_Element_Visibility then
            --  NamedElement::visibility : VisibilityKind

            AMF.UML.Variables.UML_Variable_Access
             (AMF.Internals.Helpers.To_Element (Self)).Set_Visibility
               (AMF.UML.Holders.Element (Value));

         else
            raise Program_Error;
         end if;
      end Variable_Set;
   begin
      case UML_Element_Table.Table (Self).Kind is
         when E_None =>
            raise Program_Error;

         when E_Abstraction =>
            Abstraction_Set;

         when E_Accept_Call_Action =>
            Accept_Call_Action_Set;

         when E_Accept_Event_Action =>
            Accept_Event_Action_Set;

         when E_Action_Execution_Specification =>
            Action_Execution_Specification_Set;

         when E_Action_Input_Pin =>
            Action_Input_Pin_Set;

         when E_Activity =>
            Activity_Set;

         when E_Activity_Final_Node =>
            Activity_Final_Node_Set;

         when E_Activity_Parameter_Node =>
            Activity_Parameter_Node_Set;

         when E_Activity_Partition =>
            Activity_Partition_Set;

         when E_Actor =>
            Actor_Set;

         when E_Add_Structural_Feature_Value_Action =>
            Add_Structural_Feature_Value_Action_Set;

         when E_Add_Variable_Value_Action =>
            Add_Variable_Value_Action_Set;

         when E_Any_Receive_Event =>
            Any_Receive_Event_Set;

         when E_Artifact =>
            Artifact_Set;

         when E_Association =>
            Association_Set;

         when E_Association_Class =>
            Association_Class_Set;

         when E_Behavior_Execution_Specification =>
            Behavior_Execution_Specification_Set;

         when E_Broadcast_Signal_Action =>
            Broadcast_Signal_Action_Set;

         when E_Call_Behavior_Action =>
            Call_Behavior_Action_Set;

         when E_Call_Event =>
            Call_Event_Set;

         when E_Call_Operation_Action =>
            Call_Operation_Action_Set;

         when E_Central_Buffer_Node =>
            Central_Buffer_Node_Set;

         when E_Change_Event =>
            Change_Event_Set;

         when E_Class =>
            Class_Set;

         when E_Classifier_Template_Parameter =>
            Classifier_Template_Parameter_Set;

         when E_Clause =>
            Clause_Set;

         when E_Clear_Association_Action =>
            Clear_Association_Action_Set;

         when E_Clear_Structural_Feature_Action =>
            Clear_Structural_Feature_Action_Set;

         when E_Clear_Variable_Action =>
            Clear_Variable_Action_Set;

         when E_Collaboration =>
            Collaboration_Set;

         when E_Collaboration_Use =>
            Collaboration_Use_Set;

         when E_Combined_Fragment =>
            Combined_Fragment_Set;

         when E_Comment =>
            Comment_Set;

         when E_Communication_Path =>
            Communication_Path_Set;

         when E_Component =>
            Component_Set;

         when E_Component_Realization =>
            Component_Realization_Set;

         when E_Conditional_Node =>
            Conditional_Node_Set;

         when E_Connectable_Element_Template_Parameter =>
            Connectable_Element_Template_Parameter_Set;

         when E_Connection_Point_Reference =>
            Connection_Point_Reference_Set;

         when E_Connector =>
            Connector_Set;

         when E_Connector_End =>
            Connector_End_Set;

         when E_Consider_Ignore_Fragment =>
            Consider_Ignore_Fragment_Set;

         when E_Constraint =>
            Constraint_Set;

         when E_Continuation =>
            Continuation_Set;

         when E_Control_Flow =>
            Control_Flow_Set;

         when E_Create_Link_Action =>
            Create_Link_Action_Set;

         when E_Create_Link_Object_Action =>
            Create_Link_Object_Action_Set;

         when E_Create_Object_Action =>
            Create_Object_Action_Set;

         when E_Data_Store_Node =>
            Data_Store_Node_Set;

         when E_Data_Type =>
            Data_Type_Set;

         when E_Decision_Node =>
            Decision_Node_Set;

         when E_Dependency =>
            Dependency_Set;

         when E_Deployment =>
            Deployment_Set;

         when E_Deployment_Specification =>
            Deployment_Specification_Set;

         when E_Destroy_Link_Action =>
            Destroy_Link_Action_Set;

         when E_Destroy_Object_Action =>
            Destroy_Object_Action_Set;

         when E_Destruction_Occurrence_Specification =>
            Destruction_Occurrence_Specification_Set;

         when E_Device =>
            Device_Set;

         when E_Duration =>
            Duration_Set;

         when E_Duration_Constraint =>
            Duration_Constraint_Set;

         when E_Duration_Interval =>
            Duration_Interval_Set;

         when E_Duration_Observation =>
            Duration_Observation_Set;

         when E_Element_Import =>
            Element_Import_Set;

         when E_Enumeration =>
            Enumeration_Set;

         when E_Enumeration_Literal =>
            Enumeration_Literal_Set;

         when E_Exception_Handler =>
            Exception_Handler_Set;

         when E_Execution_Environment =>
            Execution_Environment_Set;

         when E_Execution_Occurrence_Specification =>
            Execution_Occurrence_Specification_Set;

         when E_Expansion_Node =>
            Expansion_Node_Set;

         when E_Expansion_Region =>
            Expansion_Region_Set;

         when E_Expression =>
            Expression_Set;

         when E_Extend =>
            Extend_Set;

         when E_Extension =>
            Extension_Set;

         when E_Extension_End =>
            Extension_End_Set;

         when E_Extension_Point =>
            Extension_Point_Set;

         when E_Final_State =>
            Final_State_Set;

         when E_Flow_Final_Node =>
            Flow_Final_Node_Set;

         when E_Fork_Node =>
            Fork_Node_Set;

         when E_Function_Behavior =>
            Function_Behavior_Set;

         when E_Gate =>
            Gate_Set;

         when E_General_Ordering =>
            General_Ordering_Set;

         when E_Generalization =>
            Generalization_Set;

         when E_Generalization_Set =>
            Generalization_Set_Set;

         when E_Image =>
            Image_Set;

         when E_Include =>
            Include_Set;

         when E_Information_Flow =>
            Information_Flow_Set;

         when E_Information_Item =>
            Information_Item_Set;

         when E_Initial_Node =>
            Initial_Node_Set;

         when E_Input_Pin =>
            Input_Pin_Set;

         when E_Instance_Specification =>
            Instance_Specification_Set;

         when E_Instance_Value =>
            Instance_Value_Set;

         when E_Interaction =>
            Interaction_Set;

         when E_Interaction_Constraint =>
            Interaction_Constraint_Set;

         when E_Interaction_Operand =>
            Interaction_Operand_Set;

         when E_Interaction_Use =>
            Interaction_Use_Set;

         when E_Interface =>
            Interface_Set;

         when E_Interface_Realization =>
            Interface_Realization_Set;

         when E_Interruptible_Activity_Region =>
            Interruptible_Activity_Region_Set;

         when E_Interval =>
            Interval_Set;

         when E_Interval_Constraint =>
            Interval_Constraint_Set;

         when E_Join_Node =>
            Join_Node_Set;

         when E_Lifeline =>
            Lifeline_Set;

         when E_Link_End_Creation_Data =>
            Link_End_Creation_Data_Set;

         when E_Link_End_Data =>
            Link_End_Data_Set;

         when E_Link_End_Destruction_Data =>
            Link_End_Destruction_Data_Set;

         when E_Literal_Boolean =>
            Literal_Boolean_Set;

         when E_Literal_Integer =>
            Literal_Integer_Set;

         when E_Literal_Null =>
            Literal_Null_Set;

         when E_Literal_Real =>
            Literal_Real_Set;

         when E_Literal_String =>
            Literal_String_Set;

         when E_Literal_Unlimited_Natural =>
            Literal_Unlimited_Natural_Set;

         when E_Loop_Node =>
            Loop_Node_Set;

         when E_Manifestation =>
            Manifestation_Set;

         when E_Merge_Node =>
            Merge_Node_Set;

         when E_Message =>
            Message_Set;

         when E_Message_Occurrence_Specification =>
            Message_Occurrence_Specification_Set;

         when E_Model =>
            Model_Set;

         when E_Node =>
            Node_Set;

         when E_Object_Flow =>
            Object_Flow_Set;

         when E_Occurrence_Specification =>
            Occurrence_Specification_Set;

         when E_Opaque_Action =>
            Opaque_Action_Set;

         when E_Opaque_Behavior =>
            Opaque_Behavior_Set;

         when E_Opaque_Expression =>
            Opaque_Expression_Set;

         when E_Operation =>
            Operation_Set;

         when E_Operation_Template_Parameter =>
            Operation_Template_Parameter_Set;

         when E_Output_Pin =>
            Output_Pin_Set;

         when E_Package =>
            Package_Set;

         when E_Package_Import =>
            Package_Import_Set;

         when E_Package_Merge =>
            Package_Merge_Set;

         when E_Parameter =>
            Parameter_Set;

         when E_Parameter_Set =>
            Parameter_Set_Set;

         when E_Part_Decomposition =>
            Part_Decomposition_Set;

         when E_Port =>
            Port_Set;

         when E_Primitive_Type =>
            Primitive_Type_Set;

         when E_Profile =>
            Profile_Set;

         when E_Profile_Application =>
            Profile_Application_Set;

         when E_Property =>
            Property_Set;

         when E_Protocol_Conformance =>
            Protocol_Conformance_Set;

         when E_Protocol_State_Machine =>
            Protocol_State_Machine_Set;

         when E_Protocol_Transition =>
            Protocol_Transition_Set;

         when E_Pseudostate =>
            Pseudostate_Set;

         when E_Qualifier_Value =>
            Qualifier_Value_Set;

         when E_Raise_Exception_Action =>
            Raise_Exception_Action_Set;

         when E_Read_Extent_Action =>
            Read_Extent_Action_Set;

         when E_Read_Is_Classified_Object_Action =>
            Read_Is_Classified_Object_Action_Set;

         when E_Read_Link_Action =>
            Read_Link_Action_Set;

         when E_Read_Link_Object_End_Action =>
            Read_Link_Object_End_Action_Set;

         when E_Read_Link_Object_End_Qualifier_Action =>
            Read_Link_Object_End_Qualifier_Action_Set;

         when E_Read_Self_Action =>
            Read_Self_Action_Set;

         when E_Read_Structural_Feature_Action =>
            Read_Structural_Feature_Action_Set;

         when E_Read_Variable_Action =>
            Read_Variable_Action_Set;

         when E_Realization =>
            Realization_Set;

         when E_Reception =>
            Reception_Set;

         when E_Reclassify_Object_Action =>
            Reclassify_Object_Action_Set;

         when E_Redefinable_Template_Signature =>
            Redefinable_Template_Signature_Set;

         when E_Reduce_Action =>
            Reduce_Action_Set;

         when E_Region =>
            Region_Set;

         when E_Remove_Structural_Feature_Value_Action =>
            Remove_Structural_Feature_Value_Action_Set;

         when E_Remove_Variable_Value_Action =>
            Remove_Variable_Value_Action_Set;

         when E_Reply_Action =>
            Reply_Action_Set;

         when E_Send_Object_Action =>
            Send_Object_Action_Set;

         when E_Send_Signal_Action =>
            Send_Signal_Action_Set;

         when E_Sequence_Node =>
            Sequence_Node_Set;

         when E_Signal =>
            Signal_Set;

         when E_Signal_Event =>
            Signal_Event_Set;

         when E_Slot =>
            Slot_Set;

         when E_Start_Classifier_Behavior_Action =>
            Start_Classifier_Behavior_Action_Set;

         when E_Start_Object_Behavior_Action =>
            Start_Object_Behavior_Action_Set;

         when E_State =>
            State_Set;

         when E_State_Invariant =>
            State_Invariant_Set;

         when E_State_Machine =>
            State_Machine_Set;

         when E_Stereotype =>
            Stereotype_Set;

         when E_String_Expression =>
            String_Expression_Set;

         when E_Structured_Activity_Node =>
            Structured_Activity_Node_Set;

         when E_Substitution =>
            Substitution_Set;

         when E_Template_Binding =>
            Template_Binding_Set;

         when E_Template_Parameter =>
            Template_Parameter_Set;

         when E_Template_Parameter_Substitution =>
            Template_Parameter_Substitution_Set;

         when E_Template_Signature =>
            Template_Signature_Set;

         when E_Test_Identity_Action =>
            Test_Identity_Action_Set;

         when E_Time_Constraint =>
            Time_Constraint_Set;

         when E_Time_Event =>
            Time_Event_Set;

         when E_Time_Expression =>
            Time_Expression_Set;

         when E_Time_Interval =>
            Time_Interval_Set;

         when E_Time_Observation =>
            Time_Observation_Set;

         when E_Transition =>
            Transition_Set;

         when E_Trigger =>
            Trigger_Set;

         when E_Unmarshall_Action =>
            Unmarshall_Action_Set;

         when E_Usage =>
            Usage_Set;

         when E_Use_Case =>
            Use_Case_Set;

         when E_Value_Pin =>
            Value_Pin_Set;

         when E_Value_Specification_Action =>
            Value_Specification_Action_Set;

         when E_Variable =>
            Variable_Set;
      end case;
   end Set;

end AMF.Internals.Tables.UML_Reflection;
