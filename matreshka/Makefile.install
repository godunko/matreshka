include Makefile.config
DESTDIR ?=
INSTALL_PROJECT_DIR ?= $(DESTDIR)$(GPRDIR)
INSTALL_INCLUDE_DIR ?= $(DESTDIR)$(PREFIX)/include/matreshka
INSTALL_SHARE_DIR   ?= $(DESTDIR)$(PREFIX)/share/matreshka
INSTALL_EXEC_DIR    ?= $(DESTDIR)$(BINDIR)
INSTALL_LIBRARY_DIR ?= $(DESTDIR)$(LIBDIR)
INSTALL_ALI_DIR ?= ${INSTALL_LIBRARY_DIR}/matreshka
INSTALL_ali = $(INSTALL) -m 444
INSTALL_project = $(INSTALL) -m 644
INSTALL_source = $(INSTALL) -m 644
INSTALL_data = $(INSTALL) -m 644
CHMOD = chmod
LN_S = ln -sf
MKDIR = mkdir -p 

ifeq ($(OPERATING_SYSTEM), POSIX)
LIBEXT = so
else ifeq ($(OPERATING_SYSTEM), Windows)
LIBEXT = dll
endif

INSTALL_TARGETS = league fastcgi sql xml amf uml mofext ocl utp

ifdef HAS_OCI
INSTALL_TARGETS += oci
endif

ifdef HAS_POSTGRESQL
INSTALL_TARGETS += postgresql
endif

ifdef HAS_SQLITE3
INSTALL_TARGETS += sqlite3
endif

ifdef HAS_FIREBIRD
INSTALL_TARGETS += firebird
endif

INSTALL_TARGETS += cleanup

install: $(INSTALL_TARGETS)

league:
ifeq ($(OPERATING_SYSTEM), Windows)
	$(INSTALL) -d $(INSTALL_EXEC_DIR)
endif
	$(INSTALL) -d $(INSTALL_INCLUDE_DIR)/league
	$(INSTALL) -d ${INSTALL_PROJECT_DIR}/matreshka
	$(INSTALL) -d ${INSTALL_ALI_DIR}
	# GNATMAKE doesn't copy matreshka.ali and matreshka-internals.ali into
	# .libs directory
	gnat ls -d -s -P gnat/matreshka_league.gpr | sort | uniq | grep -v '^$$' > league-src.lst
	gnat ls -o -P gnat/matreshka_league.gpr | sort | uniq | sed -e 's/.o$$/.ali/' | grep -v '^$$' > league-ali.lst
	cat league-src.lst | tr '\\' '/' | xargs -I sources $(INSTALL_source) sources $(INSTALL_INCLUDE_DIR)/league
	cat league-ali.lst | tr '\\' '/' | xargs -I alis $(INSTALL_ali) alis $(INSTALL_ALI_DIR)
	$(INSTALL_project) gnat/install/matreshka_config.gpr  $(INSTALL_PROJECT_DIR)/matreshka/matreshka_config.gpr
	$(INSTALL_project) gnat/install/league.gpr  $(INSTALL_PROJECT_DIR)/league.gpr
ifeq ($(OPERATING_SYSTEM), POSIX)
	$(INSTALL) .libs/libleague$(RTL_VERSION).$(LIBEXT).$(VERSION) $(INSTALL_LIBRARY_DIR)/libleague$(RTL_VERSION).$(LIBEXT).$(VERSION)
	cd $(INSTALL_LIBRARY_DIR) && ${LN_S} libleague$(RTL_VERSION).$(LIBEXT).$(VERSION) libleague$(RTL_VERSION).$(LIBEXT)
	echo "%attr(-,root,root) %{_libdir}/libleague$(RTL_VERSION).$(LIBEXT).$(VERSION)" > .objs/league-lib.files
else ifeq ($(OPERATING_SYSTEM), Windows)
	$(INSTALL) .libs/libleague$(RTL_VERSION).$(LIBEXT) $(INSTALL_EXEC_DIR)/libleague$(RTL_VERSION).$(LIBEXT)
	echo "%attr(-,root,root) %{_bindir}/libleague$(RTL_VERSION).$(LIBEXT)" > .objs/league-lib.files
endif
	cat league-src.lst | xargs -I{} basename {} | xargs -I{} echo "%attr(-,root,root) %{_includedir}/matreshka/league/{}" > .objs/league-devel.files
	cat league-ali.lst | xargs -I{} basename {} | xargs -I{} echo "%attr(0444, root, root) %{_libdir}/matreshka/{}" >> .objs/league-devel.files
	echo "%attr(-,root,root) %{_gprdir}/matreshka/matreshka_config.gpr" >> .objs/league-devel.files
	echo "%attr(-,root,root) %{_gprdir}/league.gpr" >> .objs/league-devel.files
	echo "%attr(-,root,root) %{_libdir}/libleague$(RTL_VERSION).$(LIBEXT)" >> .objs/league-devel.files

fastcgi:
	$(INSTALL) -d $(INSTALL_INCLUDE_DIR)/fastcgi
	gnat ls -d -s -P gnat/matreshka_fastcgi.gpr | sort | uniq | grep -v '^$$' > fastcgi-src.aux
	diff -u league-src.lst fastcgi-src.aux | tail -n +4 | grep '^+' | tr -s ' ' | cut -f 2- -d ' ' > fastcgi-src.lst
	gnat ls -o -P gnat/matreshka_fastcgi.gpr | sort | uniq | grep -v '^$$' | sed -e 's/.o$$/.ali/' > fastcgi-ali.lst
	cat fastcgi-src.lst | tr '\\' '/' | xargs -I sources $(INSTALL_source) sources $(INSTALL_INCLUDE_DIR)/fastcgi
	cat fastcgi-ali.lst | tr '\\' '/' | xargs -I alis $(INSTALL_ali) alis $(INSTALL_ALI_DIR)
	$(INSTALL_project) gnat/install/fastcgi.gpr $(INSTALL_PROJECT_DIR)/fastcgi.gpr
ifeq ($(OPERATING_SYSTEM), POSIX)
	$(INSTALL) .libs/libmatreshka-fastcgi$(RTL_VERSION).$(LIBEXT).$(VERSION) $(INSTALL_LIBRARY_DIR)/libmatreshka-fastcgi$(RTL_VERSION).$(LIBEXT).$(VERSION)
	cd $(INSTALL_LIBRARY_DIR) && ${LN_S} libmatreshka-fastcgi$(RTL_VERSION).$(LIBEXT).$(VERSION) libmatreshka-fastcgi$(RTL_VERSION).$(LIBEXT)
	echo "%attr(-,root,root) %{_libdir}/libmatreshka-fastcgi$(RTL_VERSION).$(LIBEXT).$(VERSION)" > .objs/fastcgi-lib.files
else ifeq ($(OPERATING_SYSTEM), Windows)
	$(INSTALL) .libs/libmatreshka-fastcgi$(RTL_VERSION).$(LIBEXT) $(INSTALL_EXEC_DIR)/libmatreshka-fastcgi$(RTL_VERSION).$(LIBEXT)
	echo "%attr(-,root,root) %{_bindir}/libmatreshka-fastcgi$(RTL_VERSION).$(LIBEXT)" > .objs/fastcgi-lib.files
endif
	cat fastcgi-src.lst | xargs -I{} basename {} | xargs -I{} echo "%attr(-,root,root) %{_includedir}/matreshka/fastcgi/{}" > .objs/fastcgi-devel.files
	cat fastcgi-ali.lst | xargs -I{} basename {} | xargs -I{} echo "%attr(0444, root, root) %{_libdir}/matreshka/{}" >> .objs/fastcgi-devel.files
	echo "%attr(-,root,root) %{_gprdir}/fastcgi.gpr" >> .objs/fastcgi-devel.files
	echo "%attr(-,root,root) %{_libdir}/libmatreshka-fastcgi$(RTL_VERSION).$(LIBEXT)" >> .objs/fastcgi-devel.files

sql:
	$(INSTALL) -d $(INSTALL_INCLUDE_DIR)/sql
	gnat ls -d -s -P gnat/matreshka_sql.gpr | sort | uniq | grep -v '^$$' > sql-src.aux
	diff -u league-src.lst sql-src.aux | tail -n +4 | grep '^+' | tr -s ' ' | cut -f 2- -d ' ' > sql-src.lst
	gnat ls -o -P gnat/matreshka_sql.gpr | sort | uniq | grep -v '^$$' | sed -e 's/.o$$/.ali/' > sql-ali.lst
	cat sql-src.lst | tr '\\' '/' | xargs -I sources $(INSTALL_source) sources $(INSTALL_INCLUDE_DIR)/sql
	cat sql-ali.lst | tr '\\' '/' | xargs -I alis $(INSTALL_ali) alis $(INSTALL_ALI_DIR)
	$(INSTALL_project) gnat/install/sql.gpr $(INSTALL_PROJECT_DIR)/sql.gpr
ifeq ($(OPERATING_SYSTEM), POSIX)
	$(INSTALL) .libs/libmatreshka-sql$(RTL_VERSION).$(LIBEXT).$(VERSION) $(INSTALL_LIBRARY_DIR)/libmatreshka-sql$(RTL_VERSION).$(LIBEXT).$(VERSION)
	cd $(INSTALL_LIBRARY_DIR) && ${LN_S} libmatreshka-sql$(RTL_VERSION).$(LIBEXT).$(VERSION) libmatreshka-sql$(RTL_VERSION).$(LIBEXT)
	echo "%attr(-,root,root) %{_libdir}/libmatreshka-sql$(RTL_VERSION).$(LIBEXT).$(VERSION)" > .objs/sql-lib.files
else ifeq ($(OPERATING_SYSTEM), Windows)
	$(INSTALL) .libs/libmatreshka-sql$(RTL_VERSION).$(LIBEXT) $(INSTALL_EXEC_DIR)/libmatreshka-sql$(RTL_VERSION).$(LIBEXT)
	echo "%attr(-,root,root) %{_bindir}/libmatreshka-sql$(RTL_VERSION).$(LIBEXT)" > .objs/sql-lib.files
endif
	cat sql-src.lst | xargs -I{} basename {} | xargs -I{} echo "%attr(-,root,root) %{_includedir}/matreshka/sql/{}" > .objs/sql-devel.files
	cat sql-ali.lst | xargs -I{} basename {} | xargs -I{} echo "%attr(0444, root, root) %{_libdir}/matreshka/{}" >> .objs/sql-devel.files
	echo "%attr(-,root,root) %{_gprdir}/sql.gpr" >> .objs/sql-devel.files
	echo "%attr(-,root,root) %{_libdir}/libmatreshka-sql$(RTL_VERSION).$(LIBEXT)" >> .objs/sql-devel.files

oci:
	$(INSTALL) -d $(INSTALL_INCLUDE_DIR)/sql/oci
	gnat ls -d -s -P gnat/matreshka_sql_oracle.gpr | sort | uniq | grep -v '^$$' > sql_oci-src.aux
	cat league-src.lst sql-src.aux | diff -u - sql_oci-src.aux | tail -n +4 | grep '^+' | tr -s ' ' | cut -f 2- -d ' ' > sql_oci-src.lst
	gnat ls -o -P gnat/matreshka_sql_oracle.gpr | sort | uniq | grep -v '^$$' | sed -e 's/.o$$/.ali/' > sql_oci-ali.lst
	cat sql_oci-src.lst | tr '\\' '/' | xargs -I sources $(INSTALL_source) sources $(INSTALL_INCLUDE_DIR)/sql/oci
	cat sql_oci-ali.lst | tr '\\' '/' | xargs -I alis $(INSTALL_ali) alis $(INSTALL_ALI_DIR)
	$(INSTALL_project) gnat/install/sql_oracle.gpr $(INSTALL_PROJECT_DIR)/sql_oracle.gpr
ifeq ($(OPERATING_SYSTEM), POSIX)
	$(INSTALL) .libs/libmatreshka-sql-oci$(RTL_VERSION).$(LIBEXT).$(VERSION) $(INSTALL_LIBRARY_DIR)/libmatreshka-sql-oci$(RTL_VERSION).$(LIBEXT).$(VERSION)
	cd $(INSTALL_LIBRARY_DIR) && ${LN_S} libmatreshka-sql-oci$(RTL_VERSION).$(LIBEXT).$(VERSION) libmatreshka-sql-oci$(RTL_VERSION).$(LIBEXT)
	echo "%attr(-,root,root) %{_libdir}/libmatreshka-sql-oci$(RTL_VERSION).$(LIBEXT).$(VERSION)" > .objs/sql_oci-lib.files
else ifeq ($(OPERATING_SYSTEM), Windows)
	$(INSTALL) .libs/libmatreshka-sql-oci$(RTL_VERSION).$(LIBEXT) $(INSTALL_EXEC_DIR)/libmatreshka-sql-oci$(RTL_VERSION).$(LIBEXT)
	echo "%attr(-,root,root) %{_bindir}/libmatreshka-sql-oci$(RTL_VERSION).$(LIBEXT)" > .objs/sql_oci-lib.files
endif
	cat sql_oci-src.lst | xargs -I{} basename {} | xargs -I{} echo "%attr(-,root,root) %{_includedir}/matreshka/sql/oci/{}" > .objs/sql_oci-devel.files
	cat sql_oci-ali.lst | xargs -I{} basename {} | xargs -I{} echo "%attr(0444, root, root) %{_libdir}/matreshka/{}" >> .objs/sql_oci-devel.files
	echo "%attr(-,root,root) %{_gprdir}/sql_oci.gpr" >> .objs/sql_oci-devel.files
	echo "%attr(-,root,root) %{_libdir}/libmatreshka-sql-oci$(RTL_VERSION).$(LIBEXT)" >> .objs/sql_oci-devel.files

postgresql:
	$(INSTALL) -d $(INSTALL_INCLUDE_DIR)/sql/postgresql
	gnat ls -d -s -P gnat/matreshka_sql_postgresql.gpr | sort | uniq | grep -v '^$$' > sql_postgresql-src.aux
	cat league-src.lst sql-src.aux | diff -u - sql_postgresql-src.aux | tail -n +4 | grep '^+' | tr -s ' ' | cut -f 2- -d ' ' > sql_postgresql-src.lst
	gnat ls -o -P gnat/matreshka_sql_postgresql.gpr | sort | uniq | grep -v '^$$' | sed -e 's/.o$$/.ali/' > sql_postgresql-ali.lst
	cat sql_postgresql-src.lst | tr '\\' '/' | xargs -I sources $(INSTALL_source) sources $(INSTALL_INCLUDE_DIR)/sql/postgresql
	cat sql_postgresql-ali.lst | tr '\\' '/' | xargs -I alis $(INSTALL_ali) alis $(INSTALL_ALI_DIR)
	$(INSTALL_project) gnat/install/sql_postgresql.gpr $(INSTALL_PROJECT_DIR)/sql_postgresql.gpr
ifeq ($(OPERATING_SYSTEM), POSIX)
	$(INSTALL) .libs/libmatreshka-sql-postgresql$(RTL_VERSION).$(LIBEXT).$(VERSION) $(INSTALL_LIBRARY_DIR)/libmatreshka-sql-postgresql$(RTL_VERSION).$(LIBEXT).$(VERSION)
	cd $(INSTALL_LIBRARY_DIR) && ${LN_S} libmatreshka-sql-postgresql$(RTL_VERSION).$(LIBEXT).$(VERSION) libmatreshka-sql-postgresql$(RTL_VERSION).$(LIBEXT)
	echo "%attr(-,root,root) %{_libdir}/libmatreshka-sql-postgresql$(RTL_VERSION).$(LIBEXT).$(VERSION)" > .objs/sql_postgresql-lib.files
else ifeq ($(OPERATING_SYSTEM), Windows)
	$(INSTALL) .libs/libmatreshka-sql-postgresql$(RTL_VERSION).$(LIBEXT) $(INSTALL_EXEC_DIR)/libmatreshka-sql-postgresql$(RTL_VERSION).$(LIBEXT)
	echo "%attr(-,root,root) %{_bindir}/libmatreshka-sql-postgresql$(RTL_VERSION).$(LIBEXT)" > .objs/sql_postgresql-lib.files
endif
	cat sql_postgresql-src.lst | xargs -I{} basename {} | xargs -I{} echo "%attr(-,root,root) %{_includedir}/matreshka/sql/postgresql/{}" > .objs/sql_postgresql-devel.files
	cat sql_postgresql-ali.lst | xargs -I{} basename {} | xargs -I{} echo "%attr(0444, root, root) %{_libdir}/matreshka/{}" >> .objs/sql_postgresql-devel.files
	echo "%attr(-,root,root) %{_gprdir}/sql_postgresql.gpr" >> .objs/sql_postgresql-devel.files
	echo "%attr(-,root,root) %{_libdir}/libmatreshka-sql-postgresql$(RTL_VERSION).$(LIBEXT)" >> .objs/sql_postgresql-devel.files

sqlite3:
	$(INSTALL) -d $(INSTALL_INCLUDE_DIR)/sql/sqlite3
	gnat ls -d -s -P gnat/matreshka_sql_sqlite3.gpr | sort | uniq | grep -v '^$$' > sql_sqlite3-src.aux
	cat league-src.lst sql-src.aux | diff -u - sql_sqlite3-src.aux | tail -n +4 | grep '^+' | tr -s ' ' | cut -f 2- -d ' ' > sql_sqlite3-src.lst
	gnat ls -o -P gnat/matreshka_sql_sqlite3.gpr | sort | uniq | grep -v '^$$' | sed -e 's/.o$$/.ali/' > sql_sqlite3-ali.lst
	cat sql_sqlite3-src.lst | tr '\\' '/' | xargs -I sources $(INSTALL_source) sources $(INSTALL_INCLUDE_DIR)/sql/sqlite3
	cat sql_sqlite3-ali.lst | tr '\\' '/' | xargs -I alis $(INSTALL_ali) alis $(INSTALL_ALI_DIR)
	$(INSTALL_project) gnat/install/sql_sqlite3.gpr $(INSTALL_PROJECT_DIR)/sql_sqlite3.gpr
ifeq ($(OPERATING_SYSTEM), POSIX)
	$(INSTALL) .libs/libmatreshka-sql-sqlite3$(RTL_VERSION).$(LIBEXT).$(VERSION) $(INSTALL_LIBRARY_DIR)/libmatreshka-sql-sqlite3$(RTL_VERSION).$(LIBEXT).$(VERSION)
	cd $(INSTALL_LIBRARY_DIR) && ${LN_S} libmatreshka-sql-sqlite3$(RTL_VERSION).$(LIBEXT).$(VERSION) libmatreshka-sql-sqlite3$(RTL_VERSION).$(LIBEXT)
	echo "%attr(-,root,root) %{_libdir}/libmatreshka-sql-sqlite3$(RTL_VERSION).$(LIBEXT).$(VERSION)" > .objs/sql_sqlite3-lib.files
else ifeq ($(OPERATING_SYSTEM), Windows)
	$(INSTALL) .libs/libmatreshka-sql-sqlite3$(RTL_VERSION).$(LIBEXT) $(INSTALL_EXEC_DIR)/libmatreshka-sql-sqlite3$(RTL_VERSION).$(LIBEXT)
	echo "%attr(-,root,root) %{_bindir}/libmatreshka-sql-sqlite3$(RTL_VERSION).$(LIBEXT)" > .objs/sql_sqlite3-lib.files
endif
	cat sql_sqlite3-src.lst | xargs -I{} basename {} | xargs -I{} echo "%attr(-,root,root) %{_includedir}/matreshka/sql/sqlite3/{}" > .objs/sql_sqlite3-devel.files
	cat sql_sqlite3-ali.lst | xargs -I{} basename {} | xargs -I{} echo "%attr(0444, root, root) %{_libdir}/matreshka/{}" >> .objs/sql_sqlite3-devel.files
	echo "%attr(-,root,root) %{_gprdir}/sql_sqlite3.gpr" >> .objs/sql_sqlite3-devel.files
	echo "%attr(-,root,root) %{_libdir}/libmatreshka-sql-sqlite3$(RTL_VERSION).$(LIBEXT)" >> .objs/sql_sqlite3-devel.files

firebird:
	$(INSTALL) -d $(INSTALL_INCLUDE_DIR)/sql/firebird
	gnat ls -d -s -P gnat/matreshka_sql_firebird.gpr | sort | uniq | grep -v '^$$' > sql_firebird-src.aux
	cat league-src.lst sql-src.aux | diff -u - sql_firebird-src.aux | tail -n +4 | grep '^+' | tr -s ' ' | cut -f 2- -d ' ' > sql_firebird-src.lst
	gnat ls -o -P gnat/matreshka_sql_firebird.gpr | sort | uniq | grep -v '^$$' | sed -e 's/.o$$/.ali/' > sql_firebird-ali.lst
	cat sql_firebird-src.lst | tr '\\' '/' | xargs -I sources $(INSTALL_source) sources $(INSTALL_INCLUDE_DIR)/sql/firebird
	cat sql_firebird-ali.lst | tr '\\' '/' | xargs -I alis $(INSTALL_ali) alis $(INSTALL_ALI_DIR)
	$(INSTALL_project) gnat/install/sql_firebird.gpr $(INSTALL_PROJECT_DIR)/sql_firebird.gpr
ifeq ($(OPERATING_SYSTEM), POSIX)
	$(INSTALL) .libs/libmatreshka-sql-firebird$(RTL_VERSION).$(LIBEXT).$(VERSION) $(INSTALL_LIBRARY_DIR)/libmatreshka-sql-firebird$(RTL_VERSION).$(LIBEXT).$(VERSION)
	cd $(INSTALL_LIBRARY_DIR) && ${LN_S} libmatreshka-sql-firebird$(RTL_VERSION).$(LIBEXT).$(VERSION) libmatreshka-sql-firebird$(RTL_VERSION).$(LIBEXT)
	echo "%attr(-,root,root) %{_libdir}/libmatreshka-sql-firebird$(RTL_VERSION).$(LIBEXT).$(VERSION)" > .objs/sql_firebird-lib.files
else ifeq ($(OPERATING_SYSTEM), Windows)
	$(INSTALL) .libs/libmatreshka-sql-firebird$(RTL_VERSION).$(LIBEXT) $(INSTALL_EXEC_DIR)/libmatreshka-sql-firebird$(RTL_VERSION).$(LIBEXT)
	echo "%attr(-,root,root) %{_bindir}/libmatreshka-sql-firebird$(RTL_VERSION).$(LIBEXT)" > .objs/sql_firebird-lib.files
endif
	cat sql_firebird-src.lst | xargs -I{} basename {} | xargs -I{} echo "%attr(-,root,root) %{_includedir}/matreshka/sql/firebird/{}" > .objs/sql_firebird-devel.files
	cat sql_firebird-ali.lst | xargs -I{} basename {} | xargs -I{} echo "%attr(0444, root, root) %{_libdir}/matreshka/{}" >> .objs/sql_firebird-devel.files
	echo "%attr(-,root,root) %{_gprdir}/sql_firebird.gpr" >> .objs/sql_firebird-devel.files
	echo "%attr(-,root,root) %{_libdir}/libmatreshka-sql-firebird$(RTL_VERSION).$(LIBEXT)" >> .objs/sql_firebird-devel.files

xml:
	$(INSTALL) -d $(INSTALL_INCLUDE_DIR)/xml
	gnat ls -d -s -P gnat/matreshka_xml.gpr | sort | uniq | grep -v '^$$' > xml-src.aux
	diff -u league-src.lst xml-src.aux | tail -n +4 | grep '^+' | tr -s ' ' | cut -f 2- -d ' ' > xml-src.lst
	gnat ls -o -P gnat/matreshka_xml.gpr | sort | uniq | grep -v '^$$' | sed -e 's/.o$$/.ali/' > xml-ali.lst
	cat xml-src.lst | tr '\\' '/' | xargs -I sources $(INSTALL_source) sources $(INSTALL_INCLUDE_DIR)/xml
	cat xml-ali.lst | tr '\\' '/' | xargs -I alis $(INSTALL_ali) alis $(INSTALL_ALI_DIR)
	$(INSTALL_project) gnat/install/xml.gpr $(INSTALL_PROJECT_DIR)/xml.gpr
ifeq ($(OPERATING_SYSTEM), POSIX)
	$(INSTALL) .libs/libmatreshka-xml$(RTL_VERSION).$(LIBEXT).$(VERSION) $(INSTALL_LIBRARY_DIR)/libmatreshka-xml$(RTL_VERSION).$(LIBEXT).$(VERSION)
	cd $(INSTALL_LIBRARY_DIR) && ${LN_S} libmatreshka-xml$(RTL_VERSION).$(LIBEXT).$(VERSION) libmatreshka-xml$(RTL_VERSION).$(LIBEXT)
	echo "%attr(-,root,root) %{_libdir}/libmatreshka-xml$(RTL_VERSION).$(LIBEXT).$(VERSION)" > .objs/xml-lib.files
else ifeq ($(OPERATING_SYSTEM), Windows)
	$(INSTALL) .libs/libmatreshka-xml$(RTL_VERSION).$(LIBEXT) $(INSTALL_EXEC_DIR)/libmatreshka-xml$(RTL_VERSION).$(LIBEXT)
	echo "%attr(-,root,root) %{_bindir}/libmatreshka-xml$(RTL_VERSION).$(LIBEXT)" > .objs/xml-lib.files
endif
	cat xml-src.lst | xargs -I{} basename {} | xargs -I{} echo "%attr(-,root,root) %{_includedir}/matreshka/xml/{}" > .objs/xml-devel.files
	cat xml-ali.lst | xargs -I{} basename {} | xargs -I{} echo "%attr(0444, root, root) %{_libdir}/matreshka/{}" >> .objs/xml-devel.files
	echo "%attr(-,root,root) %{_gprdir}/xml.gpr" >> .objs/xml-devel.files
	echo "%attr(-,root,root) %{_libdir}/libmatreshka-xml$(RTL_VERSION).$(LIBEXT)" >> .objs/xml-devel.files

amf:
	$(INSTALL) -d $(INSTALL_INCLUDE_DIR)/amf
	$(INSTALL) -d $(INSTALL_SHARE_DIR)/amf/metamodels
	$(INSTALL) -d $(INSTALL_SHARE_DIR)/amf/models
	gnat ls -d -s -P gnat/matreshka_amf.gpr | sort | uniq | grep -v '^$$' > amf-src.aux
	cat league-src.lst xml-src.aux | sort | uniq | diff -u - amf-src.aux | tail -n +4 | grep '^+' | tr -s ' ' | cut -f 2- -d ' ' > amf-src.lst
	gnat ls -o -P gnat/matreshka_amf.gpr | sort | uniq | grep -v '^$$' | sed -e 's/.o$$/.ali/' > amf-ali.lst
	cat amf-src.lst | tr '\\' '/' | xargs -I sources $(INSTALL_source) sources $(INSTALL_INCLUDE_DIR)/amf
	cat amf-ali.lst | tr '\\' '/' | xargs -I alis $(INSTALL_ali) alis $(INSTALL_ALI_DIR)
	$(INSTALL_data) source/amf/mof/metamodels/mapping.xml $(INSTALL_SHARE_DIR)/amf/metamodels/mapping.xml
	$(INSTALL_data) source/amf/mof/metamodels/CMOF24.cmof $(INSTALL_SHARE_DIR)/amf/metamodels/CMOF24.cmof
	$(INSTALL_data) source/amf/mof/models/mapping.xml $(INSTALL_SHARE_DIR)/amf/models/mapping.xml
	$(INSTALL_project) gnat/install/amf.gpr $(INSTALL_PROJECT_DIR)/amf.gpr
ifeq ($(OPERATING_SYSTEM), POSIX)
	$(INSTALL) .libs/libmatreshka-amf$(RTL_VERSION).$(LIBEXT).$(VERSION) $(INSTALL_LIBRARY_DIR)/libmatreshka-amf$(RTL_VERSION).$(LIBEXT).$(VERSION)
	cd $(INSTALL_LIBRARY_DIR) && ${LN_S} libmatreshka-amf$(RTL_VERSION).$(LIBEXT).$(VERSION) libmatreshka-amf$(RTL_VERSION).$(LIBEXT)
	echo "%attr(-,root,root) %{_libdir}/libmatreshka-amf$(RTL_VERSION).$(LIBEXT).$(VERSION)" > .objs/amf-lib.files
else ifeq ($(OPERATING_SYSTEM), Windows)
	$(INSTALL) .libs/libmatreshka-amf$(RTL_VERSION).$(LIBEXT) $(INSTALL_EXEC_DIR)/libmatreshka-amf$(RTL_VERSION).$(LIBEXT)
	echo "%attr(-,root,root) %{_bindir}/libmatreshka-amf$(RTL_VERSION).$(LIBEXT)" > .objs/amf-lib.files
endif
	cat amf-src.lst | xargs -I{} basename {} | xargs -I{} echo "%attr(-,root,root) %{_includedir}/matreshka/amf/{}" > .objs/amf-devel.files
	cat amf-ali.lst | xargs -I{} basename {} | xargs -I{} echo "%attr(0444, root, root) %{_libdir}/matreshka/{}" >> .objs/amf-devel.files
	echo "%attr(-,root,root) %{_datadir}/matreshka/amf/metamodels/mapping.xml" >> .objs/amf-lib.files
	echo "%attr(-,root,root) %{_datadir}/matreshka/amf/metamodels/CMOF24.cmof" >> .objs/amf-lib.files
	echo "%attr(-,root,root) %{_datadir}/matreshka/amf/models/mapping.xml" >> .objs/amf-lib.files
	echo "%attr(-,root,root) %{_gprdir}/amf.gpr" >> .objs/amf-devel.files
	echo "%attr(-,root,root) %{_libdir}/libmatreshka-amf$(RTL_VERSION).$(LIBEXT)" >> .objs/amf-devel.files

uml:
	$(INSTALL) -d $(INSTALL_INCLUDE_DIR)/amf/uml
	$(INSTALL) -d $(INSTALL_SHARE_DIR)/amf/models/UML23
	$(INSTALL) -d $(INSTALL_SHARE_DIR)/amf/models/UML24
	gnat ls -d -s -P gnat/matreshka_amf_uml.gpr | sort | uniq | grep -v '^$$' > amf_uml-src.aux
	cat league-src.lst xml-src.aux amf-src.aux | sort | uniq | diff -u - amf_uml-src.aux | tail -n +4 | grep '^+' | tr -s ' ' | cut -f 2- -d ' ' > amf_uml-src.lst
	gnat ls -o -P gnat/matreshka_amf_uml.gpr | sort | uniq | grep -v '^$$' | sed -e 's/.o$$/.ali/' > amf_uml-ali.lst
	cat amf_uml-src.lst | tr '\\' '/' | xargs -I sources $(INSTALL_source) sources $(INSTALL_INCLUDE_DIR)/amf/uml
	cat amf_uml-ali.lst | tr '\\' '/' | xargs -I alis $(INSTALL_ali) alis $(INSTALL_ALI_DIR)
	$(INSTALL_data) source/amf/uml/metamodels/PrimitiveTypes24.cmof $(INSTALL_SHARE_DIR)/amf/metamodels/PrimitiveTypes24.cmof
	$(INSTALL_data) source/amf/uml/metamodels/StandardProfileL224.cmof $(INSTALL_SHARE_DIR)/amf/metamodels/StandardProfileL224.cmof
	$(INSTALL_data) source/amf/uml/metamodels/StandardProfileL324.cmof $(INSTALL_SHARE_DIR)/amf/metamodels/StandardProfileL324.cmof
	$(INSTALL_data) source/amf/uml/metamodels/UML24.cmof $(INSTALL_SHARE_DIR)/amf/metamodels/UML24.cmof
	$(INSTALL_data) source/amf/uml/models/UML23/UML.xmi $(INSTALL_SHARE_DIR)/amf/models/UML23/UML.xmi
	$(INSTALL_data) source/amf/uml/models/UML24/PrimitiveTypes.xmi $(INSTALL_SHARE_DIR)/amf/models/UML24/PrimitiveTypes.xmi
	$(INSTALL_data) source/amf/uml/models/UML24/StandardProfileL2.xmi $(INSTALL_SHARE_DIR)/amf/models/UML24/StandardProfileL2.xmi
	$(INSTALL_data) source/amf/uml/models/UML24/StandardProfileL3.xmi $(INSTALL_SHARE_DIR)/amf/models/UML24/StandardProfileL3.xmi
	$(INSTALL_data) source/amf/uml/models/UML24/UML.xmi $(INSTALL_SHARE_DIR)/amf/models/UML24/UML.xmi
	$(INSTALL_project) gnat/install/amf_uml.gpr $(INSTALL_PROJECT_DIR)/amf_uml.gpr
ifeq ($(OPERATING_SYSTEM), POSIX)
	$(INSTALL) .libs/libmatreshka-amf-uml$(RTL_VERSION).$(LIBEXT).$(VERSION) $(INSTALL_LIBRARY_DIR)/libmatreshka-amf-uml$(RTL_VERSION).$(LIBEXT).$(VERSION)
	cd $(INSTALL_LIBRARY_DIR) && ${LN_S} libmatreshka-amf-uml$(RTL_VERSION).$(LIBEXT).$(VERSION) libmatreshka-amf-uml$(RTL_VERSION).$(LIBEXT)
	echo "%attr(-,root,root) %{_libdir}/libmatreshka-amf-uml$(RTL_VERSION).$(LIBEXT).$(VERSION)" > .objs/amf_uml-lib.files
else ifeq ($(OPERATING_SYSTEM), Windows)
	$(INSTALL) .libs/libmatreshka-amf-uml$(RTL_VERSION).$(LIBEXT) $(INSTALL_EXEC_DIR)/libmatreshka-amf-uml$(RTL_VERSION).$(LIBEXT)
	echo "%attr(-,root,root) %{_bindir}/libmatreshka-amf-uml$(RTL_VERSION).$(LIBEXT)" > .objs/amf_uml-lib.files
endif
	cat amf_uml-src.lst | xargs -I{} basename {} | xargs -I{} echo "%attr(-,root,root) %{_includedir}/matreshka/amf/uml/{}" > .objs/amf_uml-devel.files
	cat amf_uml-ali.lst | xargs -I{} basename {} | xargs -I{} echo "%attr(0444, root, root) %{_libdir}/matreshka/{}" >> .objs/amf_uml-devel.files
	echo "%attr(-,root,root) %{_datadir}/matreshka/amf/metamodels/PrimitiveTypes24.cmof" >> .objs/amf_uml-lib.files
	echo "%attr(-,root,root) %{_datadir}/matreshka/amf/metamodels/StandardProfileL224.cmof" >> .objs/amf_uml-lib.files
	echo "%attr(-,root,root) %{_datadir}/matreshka/amf/metamodels/StandardProfileL324.cmof" >> .objs/amf_uml-lib.files
	echo "%attr(-,root,root) %{_datadir}/matreshka/amf/metamodels/UML24.cmof" >> .objs/amf_uml-lib.files
	echo "%attr(-,root,root) %{_datadir}/matreshka/amf/models/UML23/UML.xmi" >> .objs/amf_uml-lib.files
	echo "%attr(-,root,root) %{_datadir}/matreshka/amf/models/UML24/PrimitiveTypes.xmi" >> .objs/amf_uml-lib.files
	echo "%attr(-,root,root) %{_datadir}/matreshka/amf/models/UML24/StandardProfileL2.xmi" >> .objs/amf_uml-lib.files
	echo "%attr(-,root,root) %{_datadir}/matreshka/amf/models/UML24/StandardProfileL3.xmi" >> .objs/amf_uml-lib.files
	echo "%attr(-,root,root) %{_datadir}/matreshka/amf/models/UML24/UML.xmi" >> .objs/amf_uml-lib.files
	echo "%attr(-,root,root) %{_gprdir}/amf_uml.gpr" >> .objs/amf_uml-devel.files
	echo "%attr(-,root,root) %{_libdir}/libmatreshka-amf-uml$(RTL_VERSION).$(LIBEXT)" >> .objs/amf_uml-devel.files

ocl:
	$(INSTALL) -d $(INSTALL_INCLUDE_DIR)/amf/ocl
	gnat ls -d -s -P gnat/matreshka_amf_ocl.gpr | sort | uniq | grep -v '^$$' > amf_ocl-src.aux
	cat league-src.lst xml-src.aux amf-src.aux amf_uml-src.aux | sort | uniq | diff -u - amf_ocl-src.aux | tail -n +4 | grep '^+' | tr -s ' ' | cut -f 2- -d ' ' > amf_ocl-src.lst
	gnat ls -o -P gnat/matreshka_amf_ocl.gpr | sort | uniq | grep -v '^$$' | sed -e 's/.o$$/.ali/' > amf_ocl-ali.lst
	cat amf_ocl-src.lst | tr '\\' '/' | xargs -I sources $(INSTALL_source) sources $(INSTALL_INCLUDE_DIR)/amf/ocl
	cat amf_ocl-ali.lst | tr '\\' '/' | xargs -I alis $(INSTALL_ali) alis $(INSTALL_ALI_DIR)
	$(INSTALL_data) source/amf/ocl/metamodels/OCL23.cmof $(INSTALL_SHARE_DIR)/amf/metamodels/OCL23.cmof
	$(INSTALL_project) gnat/install/amf_ocl.gpr $(INSTALL_PROJECT_DIR)/amf_ocl.gpr
ifeq ($(OPERATING_SYSTEM), POSIX)
	$(INSTALL) .libs/libmatreshka-amf-ocl$(RTL_VERSION).$(LIBEXT).$(VERSION) $(INSTALL_LIBRARY_DIR)/libmatreshka-amf-ocl$(RTL_VERSION).$(LIBEXT).$(VERSION)
	cd $(INSTALL_LIBRARY_DIR) && ${LN_S} libmatreshka-amf-ocl$(RTL_VERSION).$(LIBEXT).$(VERSION) libmatreshka-amf-ocl$(RTL_VERSION).$(LIBEXT)
	echo "%attr(-,root,root) %{_libdir}/libmatreshka-amf-ocl$(RTL_VERSION).$(LIBEXT).$(VERSION)" > .objs/amf_ocl-lib.files
else ifeq ($(OPERATING_SYSTEM), Windows)
	$(INSTALL) .libs/libmatreshka-amf-ocl$(RTL_VERSION).$(LIBEXT) $(INSTALL_EXEC_DIR)/libmatreshka-amf-ocl$(RTL_VERSION).$(LIBEXT)
	echo "%attr(-,root,root) %{_bindir}/libmatreshka-amf-ocl$(RTL_VERSION).$(LIBEXT)" > .objs/amf_ocl-lib.files
endif
	cat amf_ocl-src.lst | xargs -I{} basename {} | xargs -I{} echo "%attr(-,root,root) %{_includedir}/matreshka/amf/ocl/{}" > .objs/amf_ocl-devel.files
	cat amf_ocl-ali.lst | xargs -I{} basename {} | xargs -I{} echo "%attr(0444, root, root) %{_libdir}/matreshka/{}" >> .objs/amf_ocl-devel.files
	echo "%attr(-,root,root) %{_datadir}/matreshka/amf/metamodels/OCL23.cmof" >> .objs/amf_ocl-lib.files
	echo "%attr(-,root,root) %{_gprdir}/amf_ocl.gpr" >> .objs/amf_ocl-devel.files
	echo "%attr(-,root,root) %{_libdir}/libmatreshka-amf-ocl$(RTL_VERSION).$(LIBEXT)" >> .objs/amf_ocl-devel.files

utp:
	$(INSTALL) -d $(INSTALL_INCLUDE_DIR)/amf/utp
	gnat ls -d -s -P gnat/matreshka_amf_utp.gpr | sort | uniq | grep -v '^$$' > amf_utp-src.aux
	cat league-src.lst xml-src.aux amf-src.aux amf_uml-src.aux | sort | uniq | diff -u - amf_utp-src.aux | tail -n +4 | grep '^+' | tr -s ' ' | cut -f 2- -d ' ' > amf_utp-src.lst
	gnat ls -o -P gnat/matreshka_amf_utp.gpr | sort | uniq | grep -v '^$$' | sed -e 's/.o$$/.ali/' > amf_utp-ali.lst
	cat amf_utp-src.lst | tr '\\' '/' | xargs -I sources $(INSTALL_source) sources $(INSTALL_INCLUDE_DIR)/amf/utp
	cat amf_utp-ali.lst | tr '\\' '/' | xargs -I alis $(INSTALL_ali) alis $(INSTALL_ALI_DIR)
	$(INSTALL_data) source/amf/utp/metamodels/UTPSA11.cmof $(INSTALL_SHARE_DIR)/amf/metamodels/UTPSA11.cmof
	$(INSTALL_project) gnat/install/amf_utp.gpr $(INSTALL_PROJECT_DIR)/amf_utp.gpr
ifeq ($(OPERATING_SYSTEM), POSIX)
	$(INSTALL) .libs/libmatreshka-amf-utp$(RTL_VERSION).$(LIBEXT).$(VERSION) $(INSTALL_LIBRARY_DIR)/libmatreshka-amf-utp$(RTL_VERSION).$(LIBEXT).$(VERSION)
	cd $(INSTALL_LIBRARY_DIR) && ${LN_S} libmatreshka-amf-utp$(RTL_VERSION).$(LIBEXT).$(VERSION) libmatreshka-amf-utp$(RTL_VERSION).$(LIBEXT)
	echo "%attr(-,root,root) %{_libdir}/libmatreshka-amf-utp$(RTL_VERSION).$(LIBEXT).$(VERSION)" > .objs/amf_utp-lib.files
else ifeq ($(OPERATING_SYSTEM), Windows)
	$(INSTALL) .libs/libmatreshka-amf-utp$(RTL_VERSION).$(LIBEXT) $(INSTALL_EXEC_DIR)/libmatreshka-amf-utp$(RTL_VERSION).$(LIBEXT)
	echo "%attr(-,root,root) %{_bindir}/libmatreshka-amf-utp$(RTL_VERSION).$(LIBEXT)" > .objs/amf_utp-lib.files
endif
	cat amf_utp-src.lst | xargs -I{} basename {} | xargs -I{} echo "%attr(-,root,root) %{_includedir}/matreshka/amf/utp/{}" > .objs/amf_utp-devel.files
	cat amf_utp-ali.lst | xargs -I{} basename {} | xargs -I{} echo "%attr(0444, root, root) %{_libdir}/matreshka/{}" >> .objs/amf_utp-devel.files
	echo "%attr(-,root,root) %{_datadir}/matreshka/amf/metamodels/UTPSA11.cmof" >> .objs/amf_utp-lib.files
	echo "%attr(-,root,root) %{_gprdir}/amf_utp.gpr" >> .objs/amf_utp-devel.files
	echo "%attr(-,root,root) %{_libdir}/libmatreshka-amf-utp$(RTL_VERSION).$(LIBEXT)" >> .objs/amf_utp-devel.files

mofext:
	$(INSTALL) -d $(INSTALL_INCLUDE_DIR)/amf/mofext
	gnat ls -d -s -P gnat/matreshka_amf_mofext.gpr | sort | uniq | grep -v '^$$' > amf_mofext-src.aux
	cat league-src.lst xml-src.aux amf-src.aux amf_uml-src.aux | sort | uniq | diff -u - amf_mofext-src.aux | tail -n +4 | grep '^+' | tr -s ' ' | cut -f 2- -d ' ' > amf_mofext-src.lst
	gnat ls -o -P gnat/matreshka_amf_mofext.gpr | sort | uniq | grep -v '^$$' | sed -e 's/.o$$/.ali/' > amf_mofext-ali.lst
	cat amf_mofext-src.lst | tr '\\' '/' | xargs -I sources $(INSTALL_source) sources $(INSTALL_INCLUDE_DIR)/amf/mofext
	cat amf_mofext-ali.lst | tr '\\' '/' | xargs -I alis $(INSTALL_ali) alis $(INSTALL_ALI_DIR)
	$(INSTALL_data) source/amf/mofext/metamodels/MOFEXT241.cmof $(INSTALL_SHARE_DIR)/amf/metamodels/MOFEXT241.cmof
	$(INSTALL_project) gnat/install/amf_mofext.gpr $(INSTALL_PROJECT_DIR)/amf_mofext.gpr
ifeq ($(OPERATING_SYSTEM), POSIX)
	$(INSTALL) .libs/libmatreshka-amf-mofext$(RTL_VERSION).$(LIBEXT).$(VERSION) $(INSTALL_LIBRARY_DIR)/libmatreshka-amf-mofext$(RTL_VERSION).$(LIBEXT).$(VERSION)
	cd $(INSTALL_LIBRARY_DIR) && ${LN_S} libmatreshka-amf-mofext$(RTL_VERSION).$(LIBEXT).$(VERSION) libmatreshka-amf-mofext$(RTL_VERSION).$(LIBEXT)
	echo "%attr(-,root,root) %{_libdir}/libmatreshka-amf-mofext$(RTL_VERSION).$(LIBEXT).$(VERSION)" > .objs/amf_mofext-lib.files
else ifeq ($(OPERATING_SYSTEM), Windows)
	$(INSTALL) .libs/libmatreshka-amf-mofext$(RTL_VERSION).$(LIBEXT) $(INSTALL_EXEC_DIR)/libmatreshka-amf-mofext$(RTL_VERSION).$(LIBEXT)
	echo "%attr(-,root,root) %{_bindir}/libmatreshka-amf-mofext$(RTL_VERSION).$(LIBEXT)" > .objs/amf_mofext-lib.files
endif
	cat amf_mofext-src.lst | xargs -I{} basename {} | xargs -I{} echo "%attr(-,root,root) %{_includedir}/matreshka/amf/mofext/{}" > .objs/amf_mofext-devel.files
	cat amf_mofext-ali.lst | xargs -I{} basename {} | xargs -I{} echo "%attr(0444, root, root) %{_libdir}/matreshka/{}" >> .objs/amf_mofext-devel.files
	echo "%attr(-,root,root) %{_datadir}/matreshka/amf/metamodels/MOFEXT241.cmof" >> .objs/amf_mofext-lib.files
	echo "%attr(-,root,root) %{_gprdir}/amf_mofext.gpr" >> .objs/amf_mofext-devel.files
	echo "%attr(-,root,root) %{_libdir}/libmatreshka-amf-mofext$(RTL_VERSION).$(LIBEXT)" >> .objs/amf_mofext-devel.files

cleanup:
	rm -f league-src.lst league-ali.lst
	rm -f fastcgi-src.lst fastcgi-ali.lst fastcgi-src.aux
	rm -f sql-src.lst sql-ali.lst sql-src.aux
	rm -f sql_oci-src.lst sql_oci-ali.lst sql_oci-src.aux
	rm -f sql_postgresql-src.lst sql_postgresql-ali.lst sql_postgresql-src.aux
	rm -f sql_sqlite3-src.lst sql_sqlite3-ali.lst sql_sqlite3-src.aux
	rm -f xml-src.lst xml-ali.lst xml-src.aux
	rm -f amf-src.lst amf-ali.lst amf-src.aux
	rm -f amf_uml-src.lst amf_uml-ali.lst amf_uml-src.aux
	rm -f amf_ocl-src.lst amf_ocl-ali.lst amf_ocl-src.aux
