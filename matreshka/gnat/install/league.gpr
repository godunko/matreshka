------------------------------------------------------------------------------
--                                                                          --
--                            Matreshka Project                             --
--                                                                          --
--         Localization, Internationalization, Globalization for Ada        --
--                                                                          --
--                        Runtime Library Component                         --
--                                                                          --
------------------------------------------------------------------------------
--                                                                          --
-- Copyright Â© 2011, Vadim Godunko <vgodunko@gmail.com>                     --
-- All rights reserved.                                                     --
--                                                                          --
-- Redistribution and use in source and binary forms, with or without       --
-- modification, are permitted provided that the following conditions       --
-- are met:                                                                 --
--                                                                          --
--  * Redistributions of source code must retain the above copyright        --
--    notice, this list of conditions and the following disclaimer.         --
--                                                                          --
--  * Redistributions in binary form must reproduce the above copyright     --
--    notice, this list of conditions and the following disclaimer in the   --
--    documentation and/or other materials provided with the distribution.  --
--                                                                          --
--  * Neither the name of the Vadim Godunko, IE nor the names of its        --
--    contributors may be used to endorse or promote products derived from  --
--    this software without specific prior written permission.              --
--                                                                          --
-- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS      --
-- "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT        --
-- LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR    --
-- A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT     --
-- HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,   --
-- SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED --
-- TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR   --
-- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF   --
-- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING     --
-- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS       --
-- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.             --
--                                                                          --
------------------------------------------------------------------------------
--  $Revision$ $Date$
------------------------------------------------------------------------------
with "matreshka/config.gpr";

library project Matreshka_League is

   for Library_Kind use "dynamic";
   for Library_Name use "league";
   for Source_Dir use "../../include/matreshka/league";
   for Library_Dir use "../../lib";
   for Library_ALI_Dir use "../../lib/matreshka";
   for Externally_Built use "True";

   ------------
   -- Naming --
   ------------

   package Naming is

      --  Matreshka.Internals.Atomics.Counters

      for Implementation ("Matreshka.Internals.Atomics.Counters")
        use "matreshka-internals-atomics-counters__gcc.adb";

      case Matreshka_Config.Architecture is
         when "portable_32_be" =>
            for Implementation ("Matreshka.Internals.Atomics.Generic_Test_And_Set")
              use "matreshka-internals-atomics-generic_test_and_set__gcc__32.adb";
            for Specification ("Matreshka.Internals.Strings.Configuration")
              use "matreshka-internals-strings-configuration__portable_32.ads";
            for Specification ("Matreshka.Internals.Strings.Constants")
              use "matreshka-internals-strings-constants__be.ads";

         when "portable_32_le" =>
            for Implementation ("Matreshka.Internals.Atomics.Generic_Test_And_Set")
              use "matreshka-internals-atomics-generic_test_and_set__gcc__32.adb";
            for Specification ("Matreshka.Internals.Strings.Configuration")
              use "matreshka-internals-strings-configuration__portable_32.ads";
            for Specification ("Matreshka.Internals.Strings.Constants")
              use "matreshka-internals-strings-constants__le.ads";

         when "portable_64_be" =>
            for Implementation ("Matreshka.Internals.Atomics.Generic_Test_And_Set")
              use "matreshka-internals-atomics-generic_test_and_set__gcc__64.adb";
            for Specification ("Matreshka.Internals.Strings.Configuration")
              use "matreshka-internals-strings-configuration__portable_64.ads";
            for Specification ("Matreshka.Internals.Strings.Constants")
              use "matreshka-internals-strings-constants__be.ads";

         when "portable_64_le" =>
            for Implementation ("Matreshka.Internals.Atomics.Generic_Test_And_Set")
              use "matreshka-internals-atomics-generic_test_and_set__gcc__64.adb";
            for Specification ("Matreshka.Internals.Strings.Configuration")
              use "matreshka-internals-strings-configuration__portable_64.ads";
            for Specification ("Matreshka.Internals.Strings.Constants")
              use "matreshka-internals-strings-constants__le.ads";

         when "x86" =>
            for Implementation ("Matreshka.Internals.Atomics.Generic_Test_And_Set")
              use "matreshka-internals-atomics-generic_test_and_set__gcc__32.adb";
            for Specification ("Matreshka.Internals.Strings.Configuration")
              use "matreshka-internals-strings-configuration__x86.ads";
            for Implementation ("Matreshka.Internals.Strings.Configuration")
              use "matreshka-internals-strings-configuration__x86.adb";
            for Specification ("Matreshka.Internals.Strings.Constants")
              use "matreshka-internals-strings-constants__x86.ads";

         when "x86_64" =>
            for Implementation ("Matreshka.Internals.Atomics.Generic_Test_And_Set")
              use "matreshka-internals-atomics-generic_test_and_set__gcc__64.adb";
            for Specification ("Matreshka.Internals.Strings.Configuration")
              use "matreshka-internals-strings-configuration__x86_64.ads";
            for Specification ("Matreshka.Internals.Strings.Constants")
              use "matreshka-internals-strings-constants__x86.ads";
      end case;

      case Matreshka_Config.Operating_System is
         when "POSIX" =>
            for Implementation ("League.Application.Initialize_Arguments_Environment")
              use "league-application-initialize_arguments_environment__posix.adb";
            for Implementation ("League.Environment_Variables.To_Key")
              use "league-environment_variables-to_key__posix.adb";

         when "Windows" =>
            for Implementation ("League.Application.Initialize_Arguments_Environment")
              use "league-application-initialize_arguments_environment__windows.adb";
            for Implementation ("League.Environment_Variables.To_Key")
              use "league-environment_variables-to_key__windows.adb";
      end case;

   end Naming;

end League;
