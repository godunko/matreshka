------------------------------------------------------------------------------
--                                                                          --
--                            Matreshka Project                             --
--                                                                          --
--         Localization, Internationalization, Globalization for Ada        --
--                                                                          --
--                        Runtime Library Component                         --
--                                                                          --
------------------------------------------------------------------------------
--                                                                          --
-- Copyright Â© 2009-2010, Vadim Godunko <vgodunko@gmail.com>                --
-- All rights reserved.                                                     --
--                                                                          --
-- Redistribution and use in source and binary forms, with or without       --
-- modification, are permitted provided that the following conditions       --
-- are met:                                                                 --
--                                                                          --
--  * Redistributions of source code must retain the above copyright        --
--    notice, this list of conditions and the following disclaimer.         --
--                                                                          --
--  * Redistributions in binary form must reproduce the above copyright     --
--    notice, this list of conditions and the following disclaimer in the   --
--    documentation and/or other materials provided with the distribution.  --
--                                                                          --
--  * Neither the name of the Vadim Godunko, IE nor the names of its        --
--    contributors may be used to endorse or promote products derived from  --
--    this software without specific prior written permission.              --
--                                                                          --
-- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS      --
-- "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT        --
-- LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR    --
-- A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT     --
-- HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,   --
-- SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED --
-- TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR   --
-- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF   --
-- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING     --
-- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS       --
-- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.             --
--                                                                          --
------------------------------------------------------------------------------
--  $Revision$ $Date$
------------------------------------------------------------------------------
with "matreshka_config";

library project Matreshka_League is

   for Source_Dirs use
    ("../source/league",
     "../source/league/regexp",
     "../source/league/ucd");
   for Object_Dir use "../.objs";
   for Library_Kind use "dynamic";
   for Library_Name use "league";
   for Library_Dir use "../.libs";

   Common_Ada_Switches :=
    ("-g",
     "-gnat05",
     "-gnatn");
   --  Common switches to be used for every unit.

   Optimization_Ada_Switches :=
    ("-O2");
   --  Optimization switches. Optimization is not used for several units, thus
   --  optimization switches are declared by the separate variable.

   Platform_Ada_Switches := ();
   --  Set of platform specific switches. Needed for example on x86 to upgrade
   --  default instructions set to i486 which includes atomic operations.

   Debug_Ada_Switches := ();
   --  Switches to be used in debug mode.

   case Matreshka_Config.Architecture is
      when "x86" =>
         Platform_Ada_Switches := ("-march=i686");

      when "x86_64" =>
         for Source_Dirs use
          ("../source/league",
           "../source/league/ucd",
           "../source/league/regexp",
           "../source/league/arch/x86_64");

      when others =>
         null;
   end case;

   case Matreshka_Config.Build is
      when "RELEASE" =>
         null;

      when "DEBUG" =>
         Debug_Ada_Switches :=
          ("-gnatwa", "-gnatyaAbcdefhiIkmnoOprsStux", "-gnato", "-fstack-check");
   end case;

   -------------
   -- Builder --
   -------------

   package Builder is

      case Matreshka_Config.Build is
         when "RELEASE" =>
            for Global_Configuration_Pragmas
              use "matreshka_league__release.adc";

         when "DEBUG" =>
            for Global_Configuration_Pragmas
              use "matreshka_league__debug.adc";
      end case;

   end Builder;

   --------------
   -- Compiler --
   --------------

   package Compiler is

      for Default_Switches ("Ada") use
        Common_Ada_Switches
          & Platform_Ada_Switches
          & Optimization_Ada_Switches
          & Debug_Ada_Switches;

      for Switches ("matreshka-internals-unicode-ucd-colls.ads") use
        Common_Ada_Switches
          & Platform_Ada_Switches
          & Debug_Ada_Switches;
      for Switches ("matreshka-internals-unicode-ucd-core.ads") use
        Common_Ada_Switches
          & Platform_Ada_Switches
          & Debug_Ada_Switches;

   end Compiler;

   ------------
   -- Naming --
   ------------

   package Naming is

      --  Matreshka.Internals.Atomics.Counters

--      for Implementation ("Matreshka.Internals.Atomics.Counters")
--        use "matreshka-internals-atomics-counters__portable.adb";
--      for Implementation ("Matreshka.Internals.Atomics.Counters")
--        use "matreshka-internals-atomics-counters__i386.adb";
      for Implementation ("Matreshka.Internals.Atomics.Counters")
        use "matreshka-internals-atomics-counters__gcc.adb";

      --  Matreshka.Internals.Atomics.Generic_Test_And_Set

      case Matreshka_Config.Architecture is
         when "portable_32_be" =>
            for Implementation ("Matreshka.Internals.Atomics.Generic_Test_And_Set")
              use "matreshka-internals-atomics-generic_test_and_set__gcc__32.adb";
            for Specification ("Matreshka.Internals.Strings.Constants")
              use "matreshka-internals-strings-constants__be.ads";
            for Implementation ("Matreshka.Internals.Strings.Compare")
              use "matreshka-internals-strings-compare__portable_32.adb";
            for Implementation ("Matreshka.Internals.Strings.Fill_Null_Terminator")
              use "matreshka-internals-strings-fill_null_terminator__portable_32.adb";

         when "portable_32_le" =>
            for Implementation ("Matreshka.Internals.Atomics.Generic_Test_And_Set")
              use "matreshka-internals-atomics-generic_test_and_set__gcc__32.adb";
            for Specification ("Matreshka.Internals.Strings.Constants")
              use "matreshka-internals-strings-constants__le.ads";
            for Implementation ("Matreshka.Internals.Strings.Compare")
              use "matreshka-internals-strings-compare__portable_32.adb";
            for Implementation ("Matreshka.Internals.Strings.Fill_Null_Terminator")
              use "matreshka-internals-strings-fill_null_terminator__portable_32.adb";

         when "portable_64_be" =>
            for Implementation ("Matreshka.Internals.Atomics.Generic_Test_And_Set")
              use "matreshka-internals-atomics-generic_test_and_set__gcc__64.adb";
            for Specification ("Matreshka.Internals.Strings.Constants")
              use "matreshka-internals-strings-constants__be.ads";
            for Implementation ("Matreshka.Internals.Strings.Compare")
              use "matreshka-internals-strings-compare__portable_64.adb";
            for Implementation ("Matreshka.Internals.Strings.Fill_Null_Terminator")
              use "matreshka-internals-strings-fill_null_terminator__portable_64.adb";

         when "portable_64_le" =>
            for Implementation ("Matreshka.Internals.Atomics.Generic_Test_And_Set")
              use "matreshka-internals-atomics-generic_test_and_set__gcc__64.adb";
            for Specification ("Matreshka.Internals.Strings.Constants")
              use "matreshka-internals-strings-constants__le.ads";
            for Implementation ("Matreshka.Internals.Strings.Compare")
              use "matreshka-internals-strings-compare__portable_64.adb";
            for Implementation ("Matreshka.Internals.Strings.Fill_Null_Terminator")
              use "matreshka-internals-strings-fill_null_terminator__portable_64.adb";

         when "x86" =>
            for Implementation ("Matreshka.Internals.Atomics.Generic_Test_And_Set")
              use "matreshka-internals-atomics-generic_test_and_set__gcc__32.adb";
            for Specification ("Matreshka.Internals.Strings.Constants")
              use "matreshka-internals-strings-constants__le.ads";
            for Implementation ("Matreshka.Internals.Strings.Compare")
              use "matreshka-internals-strings-compare__portable_32.adb";
            for Implementation ("Matreshka.Internals.Strings.Fill_Null_Terminator")
              use "matreshka-internals-strings-fill_null_terminator__portable_32.adb";

         when "x86_64" =>
            for Implementation ("Matreshka.Internals.Atomics.Generic_Test_And_Set")
              use "matreshka-internals-atomics-generic_test_and_set__gcc__64.adb";
            for Specification ("Matreshka.Internals.Strings.Constants")
              use "matreshka-internals-strings-constants__x86_64.ads";
            for Implementation ("Matreshka.Internals.Strings.Compare")
              use "matreshka-internals-strings-compare__x86_64.adb";
            for Implementation ("Matreshka.Internals.Strings.Fill_Null_Terminator")
              use "matreshka-internals-strings-fill_null_terminator__x86_64.adb";
      end case;

      --  Matreshka.Internals.Host_Types

--      for Implementation ("Matreshka.Internals.Host_Types")
--        use "matreshka-internals-host_types__32.ads";
--      for Specification ("Matreshka.Internals.Host_Types")
--        use "matreshka-internals-host_types__64.ads";

   end Naming;

end Matreshka_League;
