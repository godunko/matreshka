------------------------------------------------------------------------------
--                                                                          --
--                            Matreshka Project                             --
--                                                                          --
--         Localization, Internationalization, Globalization for Ada        --
--                                                                          --
--                        Runtime Library Component                         --
--                                                                          --
------------------------------------------------------------------------------
--                                                                          --
-- Copyright Â© 2009, 2010 Vadim Godunko <vgodunko@gmail.com>                --
--                                                                          --
-- Matreshka is free software;  you can  redistribute it  and/or modify  it --
-- under terms of the  GNU General Public License as published  by the Free --
-- Software  Foundation;  either version 2,  or (at your option)  any later --
-- version.  Matreshka  is distributed in the hope that it will be  useful, --
-- but   WITHOUT  ANY  WARRANTY;  without  even  the  implied  warranty  of --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General --
-- Public License for more details.  You should have received a copy of the --
-- GNU General Public License distributed with Matreshka; see file COPYING. --
-- If not, write  to  the  Free Software Foundation,  51  Franklin  Street, --
-- Fifth Floor, Boston, MA 02110-1301, USA.                                 --
--                                                                          --
-- As a special exception,  if other files  instantiate  generics from this --
-- unit, or you link  this unit with other files  to produce an executable, --
-- this  unit  does not  by itself cause  the resulting  executable  to  be --
-- covered  by the  GNU  General  Public  License.  This exception does not --
-- however invalidate  any other reasons why  the executable file  might be --
-- covered by the  GNU Public License.                                      --
--                                                                          --
------------------------------------------------------------------------------
--  $Revision$ $Date$
------------------------------------------------------------------------------

library project Matreshka_League is

   type Architectures is
     ("portable_32_be",
      "portable_32_le",
      "portable_64_be",
      "portable_64_le",
      "x86",
      "x86_64");
   Architecture : Architectures := external ("ARCHITECTURE");

   type Build_Type is ("RELEASE", "DEBUG");
   Build : Build_Type := external ("BUILD", "RELEASE");

   for Source_Dirs use
    ("../source/league",
     "../source/league/ucd");
   for Object_Dir use "../.objs";
   for Library_Kind use "dynamic";
   for Library_Name use "league";
   for Library_Dir use "../.libs";

   Common_Ada_Switches :=
    ("-g",
     "-gnat05",
     "-gnatn",
     "-gnatN",
     "-gnato",
     "-fstack-check");
   --  Common switches to be used for every unit.

   Optimization_Ada_Switches :=
    ("-O2");
   --  Optimization switches. Optimization is not used for several units, thus
   --  optimization switches are declared by the separate variable.

   Platform_Ada_Switches := ();
   --  Set of platform specific switches. Needed for example on x86 to upgrade
   --  default instructions set to i486 which includes atomic operations.

   Debug_Ada_Switches := ();
   --  Switches to be used in debug mode.

   case Architecture is
      when "x86" =>
         Platform_Ada_Switches := ("-march=i686");

      when others =>
         null;
   end case;

   case Build is
      when "RELEASE" =>
         null;

      when "DEBUG" =>
         Debug_Ada_Switches :=
          ("-gnatwa", "-gnatyaAbBcdefhiIkmnoOprsStux");
   end case;

   -------------
   -- Builder --
   -------------

   package Builder is

      case Build is
         when "RELEASE" =>
            for Global_Configuration_Pragmas
              use "matreshka_league__release.adc";

         when "DEBUG" =>
            for Global_Configuration_Pragmas
              use "matreshka_league__debug.adc";
      end case;

   end Builder;

   --------------
   -- Compiler --
   --------------

   package Compiler is

      for Default_Switches ("Ada") use
        Common_Ada_Switches
          & Optimization_Ada_Switches
          & Debug_Ada_Switches;

      for Switches ("matreshka-internals-unicode-ucd-colls.ads") use
        Common_Ada_Switches
          & Debug_Ada_Switches;
      for Switches ("matreshka-internals-unicode-ucd-core.ads") use
        Common_Ada_Switches
          & Debug_Ada_Switches;

   end Compiler;

   ------------
   -- Naming --
   ------------

   package Naming is

      --  Matreshka.Internals.Atomics.Counters

--      for Implementation ("Matreshka.Internals.Atomics.Counters")
--        use "matreshka-internals-atomics-counters__portable.adb";
--      for Implementation ("Matreshka.Internals.Atomics.Counters")
--        use "matreshka-internals-atomics-counters__i386.adb";
      for Implementation ("Matreshka.Internals.Atomics.Counters")
        use "matreshka-internals-atomics-counters__gcc.adb";

      --  Matreshka.Internals.Atomics.Generic_Test_And_Set

      case Architecture is
         when "portable_32_be" =>
            for Implementation ("Matreshka.Internals.Atomics.Generic_Test_And_Set")
              use "matreshka-internals-atomics-generic_test_and_set__gcc__32.adb";
            for Specification ("Matreshka.Internals.Strings.Constants")
              use "matreshka-internals-strings-constants__be.ads";
            for Implementation ("Matreshka.Internals.Strings.SIMD")
              use "matreshka-internals-strings-simd__portable_32.adb";

         when "portable_32_le" =>
            for Implementation ("Matreshka.Internals.Atomics.Generic_Test_And_Set")
              use "matreshka-internals-atomics-generic_test_and_set__gcc__32.adb";
            for Specification ("Matreshka.Internals.Strings.Constants")
              use "matreshka-internals-strings-constants__le.ads";
            for Implementation ("Matreshka.Internals.Strings.SIMD")
              use "matreshka-internals-strings-simd__portable_32.adb";

         when "portable_64_be" =>
            for Implementation ("Matreshka.Internals.Atomics.Generic_Test_And_Set")
              use "matreshka-internals-atomics-generic_test_and_set__gcc__64.adb";
            for Specification ("Matreshka.Internals.Strings.Constants")
              use "matreshka-internals-strings-constants__be.ads";
            for Implementation ("Matreshka.Internals.Strings.SIMD")
              use "matreshka-internals-strings-simd__portable_64.adb";

         when "portable_64_le" =>
            for Implementation ("Matreshka.Internals.Atomics.Generic_Test_And_Set")
              use "matreshka-internals-atomics-generic_test_and_set__gcc__64.adb";
            for Specification ("Matreshka.Internals.Strings.Constants")
              use "matreshka-internals-strings-constants__le.ads";
            for Implementation ("Matreshka.Internals.Strings.SIMD")
              use "matreshka-internals-strings-simd__portable_64.adb";

         when "x86" =>
            for Implementation ("Matreshka.Internals.Atomics.Generic_Test_And_Set")
              use "matreshka-internals-atomics-generic_test_and_set__gcc__32.adb";
            for Specification ("Matreshka.Internals.Strings.Constants")
              use "matreshka-internals-strings-constants__le.ads";
            for Implementation ("Matreshka.Internals.Strings.SIMD")
              use "matreshka-internals-strings-simd__portable_32.adb";

         when "x86_64" =>
            for Implementation ("Matreshka.Internals.Atomics.Generic_Test_And_Set")
              use "matreshka-internals-atomics-generic_test_and_set__gcc__64.adb";
            for Implementation ("Matreshka.Internals.Strings.SIMD")
              use "matreshka-internals-strings-simd__x86_64.adb";
      end case;

      --  Matreshka.Internals.Host_Types

--      for Implementation ("Matreshka.Internals.Host_Types")
--        use "matreshka-internals-host_types__32.ads";
--      for Specification ("Matreshka.Internals.Host_Types")
--        use "matreshka-internals-host_types__64.ads";

   end Naming;

end Matreshka_League;
