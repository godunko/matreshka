------------------------------------------------------------------------------
--                                                                          --
--                            Matreshka Project                             --
--                                                                          --
--                              XML Processor                               --
--                                                                          --
--                        Runtime Library Component                         --
--                                                                          --
------------------------------------------------------------------------------
--                                                                          --
-- Copyright Â© 2010, Vadim Godunko <vgodunko@gmail.com>                     --
-- All rights reserved.                                                     --
--                                                                          --
-- Redistribution and use in source and binary forms, with or without       --
-- modification, are permitted provided that the following conditions       --
-- are met:                                                                 --
--                                                                          --
--  * Redistributions of source code must retain the above copyright        --
--    notice, this list of conditions and the following disclaimer.         --
--                                                                          --
--  * Redistributions in binary form must reproduce the above copyright     --
--    notice, this list of conditions and the following disclaimer in the   --
--    documentation and/or other materials provided with the distribution.  --
--                                                                          --
--  * Neither the name of the Vadim Godunko, IE nor the names of its        --
--    contributors may be used to endorse or promote products derived from  --
--    this software without specific prior written permission.              --
--                                                                          --
-- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS      --
-- "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT        --
-- LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR    --
-- A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT     --
-- HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,   --
-- SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED --
-- TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR   --
-- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF   --
-- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING     --
-- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS       --
-- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.             --
--                                                                          --
------------------------------------------------------------------------------
--  $Revision$ $Date$
------------------------------------------------------------------------------

private package Matreshka.SAX.Simple_Readers.Parser.Tables is

   pragma Preelaborate;

   type Goto_Entry is record
      Nonterm  : Integer;
      Newstate : Integer;
   end record;

   type Shift_Reduce_Entry is record
      T   : Integer;
      Act : Integer;
   end record;

   YY_Default           : constant :=    -1;
   YY_First_Shift_Entry : constant :=     0;
   YY_Accept_Code       : constant := -3001;
   YY_Error_Code        : constant := -3000;

   YY_Goto_Matrix : constant array (-1 .. 127) of Goto_Entry :=
    ((   -1,    -1), (   -7,     2), (   -3,     1), (   -2,     4),
     (  -14,     8), (  -13,     6), (   -4,     5), (  -14,     8),
     (  -13,    14), (   -5,    13), (  -17,    21), (  -15,    20),
     (   -6,    23), (  -26,    31), (  -25,    30), (  -24,    29),
     (  -23,    28), (  -22,    27), (  -11,    33), (  -16,    38),
     (  -43,    40), (  -14,     8), (  -13,     6), (   -4,    42),
     (   -8,    43), (  -26,    31), (  -25,    30), (  -24,    29),
     (  -23,    46), (  -11,    33), (  -33,    55), (  -32,    54),
     (  -31,    52), (  -30,    51), (  -29,    56), (  -39,    58),
     (  -38,    57), (  -12,    61), (  -17,    62), (  -21,    63),
     (  -14,     8), (  -13,    14), (   -9,    69), (  -27,    71),
     (  -15,    72), (  -36,    77), (  -34,    78), (  -33,    76),
     (  -32,    75), (  -39,    89), (  -18,   102), (  -14,     8),
     (  -13,     6), (   -4,   103), (  -44,   104), (  -42,   107),
     (  -10,   110), (  -28,   111), (  -27,   116), (  -15,   117),
     (  -35,   129), (  -36,    77), (  -34,    78), (  -33,    76),
     (  -32,    75), (  -37,   131), (  -42,   136), (  -40,   138),
     (  -42,   136), (  -40,   139), (  -42,   136), (  -40,   140),
     (  -42,   136), (  -40,   141), (  -42,   136), (  -40,   142),
     (  -42,   136), (  -40,   143), (  -42,   136), (  -40,   144),
     (  -42,   136), (  -40,   145), (  -26,    31), (  -25,    30),
     (  -24,    29), (  -23,    28), (  -22,   150), (  -19,   151),
     (  -11,    33), (  -14,     8), (  -13,    14), (  -46,   153),
     (  -45,   152), (  -14,   157), (  -11,   158), (   -6,   154),
     (  -42,   159), (  -28,   160), (  -34,   169), (  -33,    76),
     (  -32,    75), (  -34,   172), (  -33,    76), (  -32,    75),
     (  -42,   176), (  -41,   178), (  -26,    31), (  -25,    30),
     (  -24,    29), (  -23,    46), (  -11,    33), (  -46,   183),
     (  -14,   157), (  -11,   158), (   -6,   154), (  -34,   187),
     (  -33,    76), (  -32,    75), (  -41,   190), (  -20,   195),
     (  -42,   136), (  -40,   198), (  -14,     8), (  -13,     6),
     (   -4,   200), (  -42,   136), (  -40,   201), (  -14,     8),
     (  -13,    14));

   YY_Goto_Offset : constant array (0 .. 201) of Integer :=
    (    0,    3,    6,    6,    6,    6,    9,    9,
         9,    9,    9,    9,    9,   11,   12,   12,
        12,   12,   12,   12,   18,   19,   19,   20,
        23,   24,   24,   24,   29,   29,   29,   29,
        29,   29,   29,   29,   34,   36,   37,   38,
        39,   39,   39,   41,   42,   42,   42,   42,
        44,   44,   44,   44,   44,   44,   48,   48,
        48,   48,   49,   49,   49,   49,   49,   50,
        53,   54,   54,   54,   55,   55,   56,   57,
        57,   57,   59,   59,   59,   59,   59,   60,
        64,   65,   65,   65,   65,   65,   65,   65,
        65,   65,   65,   67,   69,   71,   73,   75,
        77,   79,   81,   81,   81,   81,   81,   88,
        90,   95,   96,   97,   97,   97,   97,   97,
        97,   97,   97,   97,   97,   97,   97,   97,
        97,   97,   97,   97,   97,   97,   97,   97,
        97,  100,  100,  103,  103,  103,  103,  103,
       103,  103,  104,  104,  104,  104,  104,  104,
       104,  104,  104,  104,  105,  105,  105,  110,
       110,  114,  114,  114,  114,  114,  114,  114,
       114,  114,  114,  114,  114,  114,  114,  114,
       114,  114,  114,  114,  117,  117,  117,  117,
       117,  117,  118,  118,  118,  118,  119,  119,
       119,  119,  119,  119,  119,  119,  119,  119,
       121,  121,  121,  121,  124,  124,  126,  126,
       126,  128);

   YY_Rule_Length : constant array (0 .. 119) of Integer :=
    (    2,    5,    1,    0,    0,    8,    6,    3,
         0,    3,    0,    3,    0,    2,    1,    0,
         1,    1,    2,    0,    0,    0,    9,    0,
         5,    0,    2,    3,    1,    3,    0,    2,
         1,    0,    1,    1,    1,    1,    1,    4,
         4,    6,    5,    5,    3,    2,    1,    0,
         3,    1,    1,    1,    1,    2,    2,    2,
         1,    2,    2,    2,    1,    4,    3,    3,
         2,    3,    1,    2,    2,    2,    1,    2,
         2,    2,    1,    2,    2,    2,    1,    5,
         3,    3,    2,    0,    3,    2,    1,    0,
         3,    3,    3,    3,    3,    3,    3,    3,
         7,    6,    3,    2,    0,    1,    1,    1,
         2,    0,    7,    3,    2,    1,    0,    1,
         1,    1,    1,    1,    4,    3,    0,    3);

   YY_Get_LHS_Rule : constant array (0 .. 119) of Integer :=
    (   -1,   -2,   -3,   -3,   -8,   -7,  -11,  -12,
       -12,   -9,   -9,  -10,  -10,   -4,   -4,   -4,
       -13,  -13,  -14,  -16,  -18,  -20,   -5,  -21,
        -5,   -5,  -15,  -15,  -19,  -17,  -17,  -22,
       -22,  -22,  -23,  -23,  -23,  -23,  -23,  -24,
       -24,  -24,  -24,  -24,  -27,  -28,  -28,  -28,
       -25,  -29,  -29,  -29,  -29,  -31,  -31,  -31,
       -31,  -31,  -31,  -31,  -31,  -32,  -33,  -35,
       -35,  -36,  -36,  -34,  -34,  -34,  -34,  -34,
       -34,  -34,  -34,  -34,  -34,  -34,  -34,  -30,
       -30,  -37,  -37,  -37,  -26,  -38,  -38,  -38,
       -39,  -39,  -39,  -39,  -39,  -39,  -39,  -39,
       -39,  -39,  -41,  -41,  -41,  -40,  -40,  -40,
       -40,  -44,   -6,   -6,  -45,  -45,  -45,  -46,
       -46,  -46,  -46,  -46,  -43,  -43,  -43,  -42);

   YY_Shift_Reduce_Matrix : constant array (-1 .. 418) of Shift_Reduce_Entry :=
    ((   -1,    -1), (    2,     3), (   -1,    -3), (    3,     9),
     (   22,     7), (   -1,   -15), (   -1,    -2), (   27,    10),
     (   -1, -3000), (    0, -3001), (   -1, -3000), (    3,     9),
     (    6,    12), (   22,     7), (   -1,   -25), (   -1,   -14),
     (   -1,   -16), (   -1,   -17), (    4,    15), (   -1, -3000),
     (   24,    16), (   -1, -3000), (   -1, -3000), (   11,    17),
     (   12,    18), (   15,    19), (   -1,   -30), (   23,    22),
     (   -1, -3000), (   -1,   -13), (   -1,   -18), (   20,    24),
     (   -1, -3000), (   13,    25), (   -1, -3000), (   14,    26),
     (   -1, -3000), (    2,    37), (    7,    34), (    8,    35),
     (   22,    32), (   40,    36), (   -1,   -33), (   -1,   -19),
     (    9,    39), (   -1, -3000), (   10,    41), (   -1,  -118),
     (    3,     9), (   22,     7), (   -1,   -15), (   -1,    -4),
     (   -1,   -26), (   13,    44), (   -1, -3000), (    2,    37),
     (    7,    34), (    8,    35), (   16,    45), (   22,    32),
     (   40,    36), (   -1, -3000), (   -1,   -32), (   -1,   -34),
     (   -1,   -35), (   -1,   -36), (   -1,   -37), (   -1,   -38),
     (   10,    47), (   17,    48), (   -1, -3000), (   30,    49),
     (   31,    50), (   32,    53), (   -1, -3000), (   10,    59),
     (   -1,   -87), (   27,    60), (   -1,    -8), (   15,    19),
     (   -1,   -30), (   -1,   -23), (    9,    64), (   10,    66),
     (   26,    65), (   -1, -3000), (   24,    67), (   -1, -3000),
     (    3,     9), (   22,     7), (   -1,    -1), (   28,    68),
     (   -1,   -10), (   -1,   -27), (   -1,   -29), (   -1,   -31),
     (   11,    17), (   12,    18), (   18,    70), (   -1, -3000),
     (   10,    73), (   -1, -3000), (   -1,   -49), (   -1,   -50),
     (   -1,   -51), (   -1,   -52), (   10,    74), (   32,    79),
     (   39,    80), (   -1, -3000), (   36,    81), (   37,    82),
     (   38,    83), (   -1,   -56), (   36,    84), (   37,    85),
     (   38,    86), (   -1,   -60), (    9,    87), (   -1, -3000),
     (    9,    88), (   10,    59), (   -1, -3000), (   -1,   -86),
     (   32,    99), (   41,    90), (   42,    91), (   43,    92),
     (   44,    93), (   45,    94), (   46,    95), (   47,    96),
     (   48,    97), (   49,    98), (   -1, -3000), (   24,   100),
     (   -1, -3000), (   28,   101), (   -1, -3000), (   -1,   -20),
     (    3,     9), (   22,     7), (   -1,   -15), (   -1,  -105),
     (   -1,  -107), (   24,   105), (   -1, -3000), (   18,   106),
     (   -1, -3000), (   24,   108), (   -1, -3000), (   29,   109),
     (   -1,   -12), (   20,   112), (   -1,   -47), (    9,   113),
     (   -1, -3000), (    9,   114), (   21,   115), (   -1, -3000),
     (   11,    17), (   12,    18), (   18,    70), (   -1, -3000),
     (   36,   118), (   37,   119), (   38,   120), (   -1,   -70),
     (   36,   121), (   37,   122), (   38,   123), (   -1,   -74),
     (   36,   124), (   37,   125), (   38,   126), (   -1,   -78),
     (   33,   127), (   35,   128), (   -1, -3000), (   34,   130),
     (   -1,   -66), (   10,    74), (   32,    79), (   -1, -3000),
     (   33,   133), (   34,   132), (   -1, -3000), (   -1,   -53),
     (   -1,   -54), (   -1,   -55), (   -1,   -57), (   -1,   -58),
     (   -1,   -59), (   -1,   -48), (   -1,   -84), (   -1,   -85),
     (   18,   106), (   50,   134), (   51,   135), (   52,   137),
     (   -1, -3000), (   18,   106), (   50,   134), (   51,   135),
     (   52,   137), (   -1, -3000), (   18,   106), (   50,   134),
     (   51,   135), (   52,   137), (   -1, -3000), (   18,   106),
     (   50,   134), (   51,   135), (   52,   137), (   -1, -3000),
     (   18,   106), (   50,   134), (   51,   135), (   52,   137),
     (   -1, -3000), (   18,   106), (   50,   134), (   51,   135),
     (   52,   137), (   -1, -3000), (   18,   106), (   50,   134),
     (   51,   135), (   52,   137), (   -1, -3000), (   18,   106),
     (   50,   134), (   51,   135), (   52,   137), (   -1, -3000),
     (   32,   146), (   -1, -3000), (   10,   147), (   -1, -3000),
     (   20,   148), (   -1, -3000), (   24,   149), (   -1, -3000),
     (    2,    37), (    7,    34), (    8,    35), (   22,    32),
     (   40,    36), (   -1,   -33), (    3,     9), (   22,     7),
     (   -1,   -24), (    2,    37), (    3,     9), (   20,   155),
     (   22,   156), (   23,    22), (   -1,  -110), (   18,   106),
     (   -1, -3000), (   20,   112), (   -1,   -47), (   -1,  -117),
     (   20,   161), (   -1, -3000), (   24,   162), (   -1, -3000),
     (    4,   163), (   -1, -3000), (   19,   164), (   20,   165),
     (   -1, -3000), (   -1,   -46), (   -1,   -39), (   -1,   -40),
     (   10,   166), (   -1, -3000), (    9,   167), (   -1, -3000),
     (    9,   168), (   -1, -3000), (   -1,   -67), (   -1,   -68),
     (   -1,   -69), (   -1,   -71), (   -1,   -72), (   -1,   -73),
     (   -1,   -75), (   -1,   -76), (   -1,   -77), (   -1,   -62),
     (   10,    74), (   32,    79), (   -1, -3000), (   33,   170),
     (   34,   171), (   -1, -3000), (   10,    74), (   32,    79),
     (   -1, -3000), (   33,   173), (   34,   174), (   -1, -3000),
     (   10,   175), (   -1, -3000), (   -1,   -80), (   -1,  -101),
     (   -1,  -102), (   -1,  -103), (   18,   106), (   -1, -3000),
     (   -1,   -88), (   -1,   -89), (   -1,   -90), (   -1,   -91),
     (   -1,   -92), (   -1,   -93), (   -1,   -94), (   -1,   -95),
     (   10,   177), (   -1, -3000), (   34,   179), (   -1,  -100),
     (   -1,    -7), (   20,   180), (   -1, -3000), (    2,    37),
     (    7,    34), (    8,    35), (   22,    32), (   40,    36),
     (   -1,   -28), (    9,   181), (   -1, -3000), (    2,    37),
     (    3,     9), (   20,   155), (   22,   156), (   23,    22),
     (   25,   182), (   -1, -3000), (   -1,  -109), (   -1,  -111),
     (   -1,  -112), (   -1,  -113), (   -1,  -114), (   -1,  -115),
     (   -1,  -116), (   19,   184), (   20,   165), (   -1, -3000),
     (   -1,    -9), (   20,   185), (   -1, -3000), (   -1,    -5),
     (   -1,   -44), (   -1,   -45), (    9,   186), (   -1, -3000),
     (   -1,   -42), (   -1,   -43), (   -1,   -65), (   -1,   -61),
     (   10,    74), (   32,    79), (   -1, -3000), (   -1,   -64),
     (   37,   188), (   -1, -3000), (   10,   189), (   -1, -3000),
     (   -1,   -82), (   -1,  -104), (   34,   179), (   -1,  -100),
     (   33,   191), (   34,   192), (   -1, -3000), (   10,   193),
     (   -1, -3000), (    4,   194), (   -1, -3000), (   -1,   -21),
     (    9,   196), (   -1, -3000), (   -1,  -108), (   -1,  -119),
     (   -1,   -11), (   -1,   -41), (   -1,   -63), (   -1,   -79),
     (   -1,   -81), (   33,   197), (   34,   192), (   -1, -3000),
     (   18,   106), (   50,   134), (   51,   135), (   52,   137),
     (   -1, -3000), (   10,   199), (   -1, -3000), (   -1,   -99),
     (   -1,    -6), (    3,     9), (   22,     7), (   -1,   -15),
     (   -1,  -106), (   18,   106), (   50,   134), (   51,   135),
     (   52,   137), (   -1, -3000), (   -1,   -97), (   -1,   -98),
     (    3,     9), (   22,     7), (   -1,   -22), (   -1,   -96));

   YY_Shift_Reduce_Offset : constant array (0 .. 201) of Integer :=
    (    0,    2,    5,    6,    8,   10,   14,   15,
        16,   17,   19,   21,   22,   26,   28,   29,
        30,   32,   34,   36,   42,   43,   45,   47,
        50,   51,   52,   54,   61,   62,   63,   64,
        65,   66,   67,   70,   74,   76,   78,   80,
        81,   85,   87,   90,   92,   93,   94,   95,
        99,  101,  102,  103,  104,  105,  109,  113,
       117,  119,  122,  123,  134,  136,  138,  139,
       142,  143,  144,  146,  148,  150,  152,  154,
       156,  159,  163,  167,  171,  175,  178,  180,
       183,  186,  187,  188,  189,  190,  191,  192,
       193,  194,  195,  200,  205,  210,  215,  220,
       225,  230,  235,  237,  239,  241,  243,  249,
       252,  258,  260,  262,  263,  265,  267,  269,
       272,  273,  274,  275,  277,  279,  281,  282,
       283,  284,  285,  286,  287,  288,  289,  290,
       291,  294,  297,  300,  303,  305,  306,  307,
       308,  309,  311,  312,  313,  314,  315,  316,
       317,  318,  319,  321,  323,  324,  326,  332,
       334,  341,  342,  343,  344,  345,  346,  347,
       348,  351,  352,  354,  355,  356,  357,  359,
       360,  361,  362,  363,  366,  367,  369,  371,
       372,  373,  375,  378,  380,  382,  383,  385,
       386,  387,  388,  389,  390,  391,  392,  395,
       400,  402,  403,  404,  407,  408,  413,  414,
       415,  418);

end Matreshka.SAX.Simple_Readers.Parser.Tables;
