------------------------------------------------------------------------------
--                                                                          --
--                            Matreshka Project                             --
--                                                                          --
--                              XML Processor                               --
--                                                                          --
--                        Runtime Library Component                         --
--                                                                          --
------------------------------------------------------------------------------
--                                                                          --
-- Copyright Â© 2010, Vadim Godunko <vgodunko@gmail.com>                     --
-- All rights reserved.                                                     --
--                                                                          --
-- Redistribution and use in source and binary forms, with or without       --
-- modification, are permitted provided that the following conditions       --
-- are met:                                                                 --
--                                                                          --
--  * Redistributions of source code must retain the above copyright        --
--    notice, this list of conditions and the following disclaimer.         --
--                                                                          --
--  * Redistributions in binary form must reproduce the above copyright     --
--    notice, this list of conditions and the following disclaimer in the   --
--    documentation and/or other materials provided with the distribution.  --
--                                                                          --
--  * Neither the name of the Vadim Godunko, IE nor the names of its        --
--    contributors may be used to endorse or promote products derived from  --
--    this software without specific prior written permission.              --
--                                                                          --
-- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS      --
-- "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT        --
-- LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR    --
-- A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT     --
-- HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,   --
-- SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED --
-- TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR   --
-- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF   --
-- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING     --
-- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS       --
-- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.             --
--                                                                          --
------------------------------------------------------------------------------
--  $Revision$ $Date$
------------------------------------------------------------------------------

private package Matreshka.SAX.Simple_Readers.Parser.Tables is

   pragma Preelaborate;

   type Goto_Entry is record
      Nonterm  : Integer;
      Newstate : Integer;
   end record;

   type Shift_Reduce_Entry is record
      T   : Integer;
      Act : Integer;
   end record;

   YY_Default           : constant :=    -1;
   YY_First_Shift_Entry : constant :=     0;
   YY_Accept_Code       : constant := -3001;
   YY_Error_Code        : constant := -3000;

   YY_Goto_Matrix : constant array (-1 .. 130) of Goto_Entry :=
    ((   -1,    -1), (   -7,     2), (   -3,     1), (   -2,     4),
     (  -13,     8), (  -12,     6), (   -4,     5), (  -13,     8),
     (  -12,    14), (   -5,    13), (  -16,    21), (  -14,    20),
     (   -6,    23), (  -25,    31), (  -24,    30), (  -23,    29),
     (  -22,    28), (  -21,    27), (  -13,    33), (  -11,    34),
     (  -15,    39), (  -42,    41), (  -13,     8), (  -12,     6),
     (   -4,    43), (   -8,    44), (  -25,    31), (  -24,    30),
     (  -23,    29), (  -22,    47), (  -13,    33), (  -11,    34),
     (  -32,    56), (  -31,    55), (  -30,    53), (  -29,    52),
     (  -28,    57), (  -38,    59), (  -37,    58), (  -16,    63),
     (  -20,    64), (  -13,     8), (  -12,    14), (   -9,    70),
     (  -26,    72), (  -14,    73), (  -35,    78), (  -33,    79),
     (  -32,    77), (  -31,    76), (  -38,    90), (  -17,   103),
     (  -13,     8), (  -12,     6), (   -4,   104), (  -43,   105),
     (  -41,   108), (  -10,   111), (  -27,   112), (  -26,   117),
     (  -14,   118), (  -34,   130), (  -35,    78), (  -33,    79),
     (  -32,    77), (  -31,    76), (  -36,   132), (  -41,   137),
     (  -39,   139), (  -41,   137), (  -39,   140), (  -41,   137),
     (  -39,   141), (  -41,   137), (  -39,   142), (  -41,   137),
     (  -39,   143), (  -41,   137), (  -39,   144), (  -41,   137),
     (  -39,   145), (  -41,   137), (  -39,   146), (  -25,    31),
     (  -24,    30), (  -23,    29), (  -22,    28), (  -21,   151),
     (  -18,   152), (  -13,    33), (  -11,    34), (  -13,     8),
     (  -12,    14), (  -45,   154), (  -44,   153), (  -13,   158),
     (  -11,   159), (   -6,   155), (  -41,   160), (  -27,   161),
     (  -33,   170), (  -32,    77), (  -31,    76), (  -33,   173),
     (  -32,    77), (  -31,    76), (  -41,   177), (  -40,   179),
     (  -25,    31), (  -24,    30), (  -23,    29), (  -22,    47),
     (  -13,    33), (  -11,    34), (  -45,   185), (  -13,   158),
     (  -11,   159), (   -6,   155), (  -33,   189), (  -32,    77),
     (  -31,    76), (  -40,   192), (  -19,   197), (  -41,   137),
     (  -39,   200), (  -13,     8), (  -12,     6), (   -4,   203),
     (  -41,   137), (  -39,   204), (  -13,     8), (  -12,    14));

   YY_Goto_Offset : constant array (0 .. 205) of Integer :=
    (    0,    3,    6,    6,    6,    6,    9,    9,
         9,    9,    9,    9,    9,   11,   12,   12,
        12,   12,   12,   12,   19,   20,   20,   21,
        24,   25,   25,   25,   31,   31,   31,   31,
        31,   31,   31,   31,   31,   36,   38,   38,
        39,   40,   40,   40,   42,   43,   43,   43,
        43,   45,   45,   45,   45,   45,   45,   49,
        49,   49,   49,   50,   50,   50,   50,   50,
        51,   54,   55,   55,   55,   56,   56,   57,
        58,   58,   58,   60,   60,   60,   60,   60,
        61,   65,   66,   66,   66,   66,   66,   66,
        66,   66,   66,   66,   68,   70,   72,   74,
        76,   78,   80,   82,   82,   82,   82,   82,
        90,   92,   97,   98,   99,   99,   99,   99,
        99,   99,   99,   99,   99,   99,   99,   99,
        99,   99,   99,   99,   99,   99,   99,   99,
        99,   99,  102,  102,  105,  105,  105,  105,
       105,  105,  105,  106,  106,  106,  106,  106,
       106,  106,  106,  106,  106,  107,  107,  107,
       113,  113,  117,  117,  117,  117,  117,  117,
       117,  117,  117,  117,  117,  117,  117,  117,
       117,  117,  117,  117,  117,  120,  120,  120,
       120,  120,  120,  121,  121,  121,  121,  121,
       122,  122,  122,  122,  122,  122,  122,  122,
       122,  122,  124,  124,  124,  124,  127,  127,
       129,  129,  129,  129,  131,  131);

   YY_Rule_Length : constant array (0 .. 119) of Integer :=
    (    2,    5,    1,    0,    0,    8,    8,    5,
         3,    0,    3,    0,    2,    1,    0,    1,
         1,    2,    0,    0,    0,    9,    0,    5,
         0,    2,    3,    1,    3,    0,    2,    1,
         0,    1,    1,    1,    1,    1,    1,    4,
         4,    6,    5,    5,    3,    2,    1,    0,
         3,    1,    1,    1,    1,    2,    2,    2,
         1,    2,    2,    2,    1,    4,    3,    3,
         2,    3,    1,    2,    2,    2,    1,    2,
         2,    2,    1,    2,    2,    2,    1,    5,
         3,    3,    2,    0,    3,    2,    1,    0,
         3,    3,    3,    3,    3,    3,    3,    3,
         7,    6,    3,    2,    0,    1,    1,    1,
         2,    0,    7,    3,    2,    1,    0,    1,
         1,    1,    1,    1,    4,    3,    0,    3);

   YY_Get_LHS_Rule : constant array (0 .. 119) of Integer :=
    (   -1,   -2,   -3,   -3,   -8,   -7,  -11,  -11,
        -9,   -9,  -10,  -10,   -4,   -4,   -4,  -12,
       -12,  -13,  -15,  -17,  -19,   -5,  -20,   -5,
        -5,  -14,  -14,  -18,  -16,  -16,  -21,  -21,
       -21,  -22,  -22,  -22,  -22,  -22,  -22,  -23,
       -23,  -23,  -23,  -23,  -26,  -27,  -27,  -27,
       -24,  -28,  -28,  -28,  -28,  -30,  -30,  -30,
       -30,  -30,  -30,  -30,  -30,  -31,  -32,  -34,
       -34,  -35,  -35,  -33,  -33,  -33,  -33,  -33,
       -33,  -33,  -33,  -33,  -33,  -33,  -33,  -29,
       -29,  -36,  -36,  -36,  -25,  -37,  -37,  -37,
       -38,  -38,  -38,  -38,  -38,  -38,  -38,  -38,
       -38,  -38,  -40,  -40,  -40,  -39,  -39,  -39,
       -39,  -43,   -6,   -6,  -44,  -44,  -44,  -45,
       -45,  -45,  -45,  -45,  -42,  -42,  -42,  -41);

   YY_Shift_Reduce_Matrix : constant array (-1 .. 430) of Shift_Reduce_Entry :=
    ((   -1,    -1), (    2,     3), (   -1,    -3), (    3,     9),
     (   22,     7), (   -1,   -14), (   -1,    -2), (   27,    10),
     (   -1, -3000), (    0, -3001), (   -1, -3000), (    3,     9),
     (    6,    12), (   22,     7), (   -1,   -24), (   -1,   -13),
     (   -1,   -15), (   -1,   -16), (    4,    15), (   -1, -3000),
     (   24,    16), (   -1, -3000), (   -1, -3000), (   11,    17),
     (   12,    18), (   15,    19), (   -1,   -29), (   23,    22),
     (   -1, -3000), (   -1,   -12), (   -1,   -17), (   20,    24),
     (   -1, -3000), (   13,    25), (   -1, -3000), (   14,    26),
     (   -1, -3000), (    2,    38), (    3,     9), (    7,    35),
     (    8,    36), (   22,    32), (   40,    37), (   -1,   -32),
     (   -1,   -18), (    9,    40), (   -1, -3000), (   10,    42),
     (   -1,  -118), (    3,     9), (   22,     7), (   -1,   -14),
     (   -1,    -4), (   -1,   -25), (   13,    45), (   -1, -3000),
     (    2,    38), (    3,     9), (    7,    35), (    8,    36),
     (   16,    46), (   22,    32), (   40,    37), (   -1, -3000),
     (   -1,   -31), (   -1,   -33), (   -1,   -34), (   -1,   -35),
     (   -1,   -36), (   -1,   -37), (   -1,   -38), (   10,    48),
     (   17,    49), (   -1, -3000), (   30,    50), (   31,    51),
     (   32,    54), (   -1, -3000), (   10,    60), (   -1,   -87),
     (   27,    61), (   28,    62), (   -1, -3000), (   15,    19),
     (   -1,   -29), (   -1,   -22), (    9,    65), (   10,    67),
     (   26,    66), (   -1, -3000), (   24,    68), (   -1, -3000),
     (    3,     9), (   22,     7), (   -1,    -1), (   28,    69),
     (   -1,    -9), (   -1,   -26), (   -1,   -28), (   -1,   -30),
     (   11,    17), (   12,    18), (   18,    71), (   -1, -3000),
     (   10,    74), (   -1, -3000), (   -1,   -49), (   -1,   -50),
     (   -1,   -51), (   -1,   -52), (   10,    75), (   32,    80),
     (   39,    81), (   -1, -3000), (   36,    82), (   37,    83),
     (   38,    84), (   -1,   -56), (   36,    85), (   37,    86),
     (   38,    87), (   -1,   -60), (    9,    88), (   -1, -3000),
     (    9,    89), (   10,    60), (   -1, -3000), (   -1,   -86),
     (   32,   100), (   41,    91), (   42,    92), (   43,    93),
     (   44,    94), (   45,    95), (   46,    96), (   47,    97),
     (   48,    98), (   49,    99), (   -1, -3000), (   24,   101),
     (   -1, -3000), (   24,   102), (   -1, -3000), (   -1,   -19),
     (    3,     9), (   22,     7), (   -1,   -14), (   -1,  -105),
     (   -1,  -107), (   24,   106), (   -1, -3000), (   18,   107),
     (   -1, -3000), (   24,   109), (   -1, -3000), (   29,   110),
     (   -1,   -11), (   20,   113), (   -1,   -47), (    9,   114),
     (   -1, -3000), (    9,   115), (   21,   116), (   -1, -3000),
     (   11,    17), (   12,    18), (   18,    71), (   -1, -3000),
     (   36,   119), (   37,   120), (   38,   121), (   -1,   -70),
     (   36,   122), (   37,   123), (   38,   124), (   -1,   -74),
     (   36,   125), (   37,   126), (   38,   127), (   -1,   -78),
     (   33,   128), (   35,   129), (   -1, -3000), (   34,   131),
     (   -1,   -66), (   10,    75), (   32,    80), (   -1, -3000),
     (   33,   134), (   34,   133), (   -1, -3000), (   -1,   -53),
     (   -1,   -54), (   -1,   -55), (   -1,   -57), (   -1,   -58),
     (   -1,   -59), (   -1,   -48), (   -1,   -84), (   -1,   -85),
     (   18,   107), (   50,   135), (   51,   136), (   52,   138),
     (   -1, -3000), (   18,   107), (   50,   135), (   51,   136),
     (   52,   138), (   -1, -3000), (   18,   107), (   50,   135),
     (   51,   136), (   52,   138), (   -1, -3000), (   18,   107),
     (   50,   135), (   51,   136), (   52,   138), (   -1, -3000),
     (   18,   107), (   50,   135), (   51,   136), (   52,   138),
     (   -1, -3000), (   18,   107), (   50,   135), (   51,   136),
     (   52,   138), (   -1, -3000), (   18,   107), (   50,   135),
     (   51,   136), (   52,   138), (   -1, -3000), (   18,   107),
     (   50,   135), (   51,   136), (   52,   138), (   -1, -3000),
     (   32,   147), (   -1, -3000), (   10,   148), (   -1, -3000),
     (   20,   149), (   -1, -3000), (   20,   150), (   -1, -3000),
     (    2,    38), (    3,     9), (    7,    35), (    8,    36),
     (   22,    32), (   40,    37), (   -1,   -32), (    3,     9),
     (   22,     7), (   -1,   -23), (    2,    38), (    3,     9),
     (   20,   156), (   22,   157), (   23,    22), (   -1,  -110),
     (   18,   107), (   -1, -3000), (   20,   113), (   -1,   -47),
     (   -1,  -117), (   20,   162), (   -1, -3000), (   24,   163),
     (   -1, -3000), (    4,   164), (   -1, -3000), (   19,   165),
     (   20,   166), (   -1, -3000), (   -1,   -46), (   -1,   -39),
     (   -1,   -40), (   10,   167), (   -1, -3000), (    9,   168),
     (   -1, -3000), (    9,   169), (   -1, -3000), (   -1,   -67),
     (   -1,   -68), (   -1,   -69), (   -1,   -71), (   -1,   -72),
     (   -1,   -73), (   -1,   -75), (   -1,   -76), (   -1,   -77),
     (   -1,   -62), (   10,    75), (   32,    80), (   -1, -3000),
     (   33,   171), (   34,   172), (   -1, -3000), (   10,    75),
     (   32,    80), (   -1, -3000), (   33,   174), (   34,   175),
     (   -1, -3000), (   10,   176), (   -1, -3000), (   -1,   -80),
     (   -1,  -101), (   -1,  -102), (   -1,  -103), (   18,   107),
     (   -1, -3000), (   -1,   -88), (   -1,   -89), (   -1,   -90),
     (   -1,   -91), (   -1,   -92), (   -1,   -93), (   -1,   -94),
     (   -1,   -95), (   10,   178), (   -1, -3000), (   34,   180),
     (   -1,  -100), (   28,   181), (   -1, -3000), (    4,   182),
     (   -1, -3000), (    2,    38), (    3,     9), (    7,    35),
     (    8,    36), (   22,    32), (   40,    37), (   -1,   -27),
     (    9,   183), (   -1, -3000), (    2,    38), (    3,     9),
     (   20,   156), (   22,   157), (   23,    22), (   25,   184),
     (   -1, -3000), (   -1,  -109), (   -1,  -111), (   -1,  -112),
     (   -1,  -113), (   -1,  -114), (   -1,  -115), (   -1,  -116),
     (   19,   186), (   20,   166), (   -1, -3000), (   -1,    -8),
     (   20,   187), (   -1, -3000), (   -1,    -5), (   -1,   -44),
     (   -1,   -45), (    9,   188), (   -1, -3000), (   -1,   -42),
     (   -1,   -43), (   -1,   -65), (   -1,   -61), (   10,    75),
     (   32,    80), (   -1, -3000), (   -1,   -64), (   37,   190),
     (   -1, -3000), (   10,   191), (   -1, -3000), (   -1,   -82),
     (   -1,  -104), (   34,   180), (   -1,  -100), (   33,   193),
     (   34,   194), (   -1, -3000), (   10,   195), (   -1, -3000),
     (   24,   196), (   -1, -3000), (   -1,    -7), (   -1,   -20),
     (    9,   198), (   -1, -3000), (   -1,  -108), (   -1,  -119),
     (   -1,   -10), (   -1,   -41), (   -1,   -63), (   -1,   -79),
     (   -1,   -81), (   33,   199), (   34,   194), (   -1, -3000),
     (   18,   107), (   50,   135), (   51,   136), (   52,   138),
     (   -1, -3000), (   10,   201), (   -1, -3000), (   -1,   -99),
     (   20,   202), (   -1, -3000), (    3,     9), (   22,     7),
     (   -1,   -14), (   -1,  -106), (   18,   107), (   50,   135),
     (   51,   136), (   52,   138), (   -1, -3000), (   -1,   -97),
     (   -1,   -98), (    4,   205), (   -1, -3000), (    3,     9),
     (   22,     7), (   -1,   -21), (   -1,   -96), (   -1,    -6));

   YY_Shift_Reduce_Offset : constant array (0 .. 205) of Integer :=
    (    0,    2,    5,    6,    8,   10,   14,   15,
        16,   17,   19,   21,   22,   26,   28,   29,
        30,   32,   34,   36,   43,   44,   46,   48,
        51,   52,   53,   55,   63,   64,   65,   66,
        67,   68,   69,   70,   73,   77,   79,   82,
        84,   85,   89,   91,   94,   96,   97,   98,
        99,  103,  105,  106,  107,  108,  109,  113,
       117,  121,  123,  126,  127,  138,  140,  142,
       143,  146,  147,  148,  150,  152,  154,  156,
       158,  160,  163,  167,  171,  175,  179,  182,
       184,  187,  190,  191,  192,  193,  194,  195,
       196,  197,  198,  199,  204,  209,  214,  219,
       224,  229,  234,  239,  241,  243,  245,  247,
       254,  257,  263,  265,  267,  268,  270,  272,
       274,  277,  278,  279,  280,  282,  284,  286,
       287,  288,  289,  290,  291,  292,  293,  294,
       295,  296,  299,  302,  305,  308,  310,  311,
       312,  313,  314,  316,  317,  318,  319,  320,
       321,  322,  323,  324,  326,  328,  330,  332,
       339,  341,  348,  349,  350,  351,  352,  353,
       354,  355,  358,  359,  361,  362,  363,  364,
       366,  367,  368,  369,  370,  373,  374,  376,
       378,  379,  380,  382,  385,  387,  389,  390,
       391,  393,  394,  395,  396,  397,  398,  399,
       400,  403,  408,  410,  411,  413,  416,  417,
       422,  423,  424,  426,  429,  430);

end Matreshka.SAX.Simple_Readers.Parser.Tables;
