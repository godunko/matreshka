------------------------------------------------------------------------------
--                                                                          --
--                            Matreshka Project                             --
--                                                                          --
--                              XML Processor                               --
--                                                                          --
--                        Runtime Library Component                         --
--                                                                          --
------------------------------------------------------------------------------
--                                                                          --
-- Copyright Â© 2010, Vadim Godunko <vgodunko@gmail.com>                     --
-- All rights reserved.                                                     --
--                                                                          --
-- Redistribution and use in source and binary forms, with or without       --
-- modification, are permitted provided that the following conditions       --
-- are met:                                                                 --
--                                                                          --
--  * Redistributions of source code must retain the above copyright        --
--    notice, this list of conditions and the following disclaimer.         --
--                                                                          --
--  * Redistributions in binary form must reproduce the above copyright     --
--    notice, this list of conditions and the following disclaimer in the   --
--    documentation and/or other materials provided with the distribution.  --
--                                                                          --
--  * Neither the name of the Vadim Godunko, IE nor the names of its        --
--    contributors may be used to endorse or promote products derived from  --
--    this software without specific prior written permission.              --
--                                                                          --
-- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS      --
-- "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT        --
-- LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR    --
-- A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT     --
-- HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,   --
-- SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED --
-- TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR   --
-- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF   --
-- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING     --
-- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS       --
-- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.             --
--                                                                          --
------------------------------------------------------------------------------
--  $Revision$ $Date$
------------------------------------------------------------------------------

private package Matreshka.SAX.Simple_Readers.Parser.Tables is

   pragma Preelaborate;

   type Goto_Entry is record
      Nonterm  : Integer;
      Newstate : Integer;
   end record;

   type Shift_Reduce_Entry is record
      T   : Integer;
      Act : Integer;
   end record;

   YY_Default           : constant :=    -1;
   YY_First_Shift_Entry : constant :=     0;
   YY_Accept_Code       : constant := -3001;
   YY_Error_Code        : constant := -3000;

   YY_Goto_Matrix : constant array (-1 .. 131) of Goto_Entry :=
    ((   -1,    -1), (   -7,     2), (   -3,     1), (   -2,     4),
     (  -14,     8), (  -13,     6), (   -4,     5), (  -14,     8),
     (  -13,    14), (   -5,    13), (  -17,    21), (  -15,    20),
     (   -6,    23), (  -26,    31), (  -25,    30), (  -24,    29),
     (  -23,    28), (  -22,    27), (  -14,    33), (  -11,    34),
     (  -16,    39), (  -43,    41), (  -14,     8), (  -13,     6),
     (   -4,    43), (   -8,    44), (  -26,    31), (  -25,    30),
     (  -24,    29), (  -23,    47), (  -14,    33), (  -11,    34),
     (  -33,    56), (  -32,    55), (  -31,    53), (  -30,    52),
     (  -29,    57), (  -39,    59), (  -38,    58), (  -12,    62),
     (  -17,    63), (  -21,    64), (  -14,     8), (  -13,    14),
     (   -9,    70), (  -27,    72), (  -15,    73), (  -36,    78),
     (  -34,    79), (  -33,    77), (  -32,    76), (  -39,    90),
     (  -18,   103), (  -14,     8), (  -13,     6), (   -4,   104),
     (  -44,   105), (  -42,   108), (  -10,   111), (  -28,   112),
     (  -27,   117), (  -15,   118), (  -35,   130), (  -36,    78),
     (  -34,    79), (  -33,    77), (  -32,    76), (  -37,   132),
     (  -42,   137), (  -40,   139), (  -42,   137), (  -40,   140),
     (  -42,   137), (  -40,   141), (  -42,   137), (  -40,   142),
     (  -42,   137), (  -40,   143), (  -42,   137), (  -40,   144),
     (  -42,   137), (  -40,   145), (  -42,   137), (  -40,   146),
     (  -26,    31), (  -25,    30), (  -24,    29), (  -23,    28),
     (  -22,   151), (  -19,   152), (  -14,    33), (  -11,    34),
     (  -14,     8), (  -13,    14), (  -46,   154), (  -45,   153),
     (  -14,   158), (  -11,   159), (   -6,   155), (  -42,   160),
     (  -28,   161), (  -34,   170), (  -33,    77), (  -32,    76),
     (  -34,   173), (  -33,    77), (  -32,    76), (  -42,   177),
     (  -41,   179), (  -26,    31), (  -25,    30), (  -24,    29),
     (  -23,    47), (  -14,    33), (  -11,    34), (  -46,   184),
     (  -14,   158), (  -11,   159), (   -6,   155), (  -34,   188),
     (  -33,    77), (  -32,    76), (  -41,   191), (  -20,   196),
     (  -42,   137), (  -40,   199), (  -14,     8), (  -13,     6),
     (   -4,   201), (  -42,   137), (  -40,   202), (  -14,     8),
     (  -13,    14));

   YY_Goto_Offset : constant array (0 .. 202) of Integer :=
    (    0,    3,    6,    6,    6,    6,    9,    9,
         9,    9,    9,    9,    9,   11,   12,   12,
        12,   12,   12,   12,   19,   20,   20,   21,
        24,   25,   25,   25,   31,   31,   31,   31,
        31,   31,   31,   31,   31,   36,   38,   39,
        40,   41,   41,   41,   43,   44,   44,   44,
        44,   46,   46,   46,   46,   46,   46,   50,
        50,   50,   50,   51,   51,   51,   51,   51,
        52,   55,   56,   56,   56,   57,   57,   58,
        59,   59,   59,   61,   61,   61,   61,   61,
        62,   66,   67,   67,   67,   67,   67,   67,
        67,   67,   67,   67,   69,   71,   73,   75,
        77,   79,   81,   83,   83,   83,   83,   83,
        91,   93,   98,   99,  100,  100,  100,  100,
       100,  100,  100,  100,  100,  100,  100,  100,
       100,  100,  100,  100,  100,  100,  100,  100,
       100,  100,  103,  103,  106,  106,  106,  106,
       106,  106,  106,  107,  107,  107,  107,  107,
       107,  107,  107,  107,  107,  108,  108,  108,
       114,  114,  118,  118,  118,  118,  118,  118,
       118,  118,  118,  118,  118,  118,  118,  118,
       118,  118,  118,  118,  118,  121,  121,  121,
       121,  121,  121,  122,  122,  122,  122,  123,
       123,  123,  123,  123,  123,  123,  123,  123,
       123,  125,  125,  125,  125,  128,  128,  130,
       130,  130,  132);

   YY_Rule_Length : constant array (0 .. 120) of Integer :=
    (    2,    5,    1,    0,    0,    8,    6,    3,
         0,    3,    0,    3,    0,    2,    1,    0,
         1,    1,    2,    0,    0,    0,    9,    0,
         5,    0,    2,    3,    1,    3,    0,    2,
         1,    0,    1,    1,    1,    1,    1,    1,
         4,    4,    6,    5,    5,    3,    2,    1,
         0,    3,    1,    1,    1,    1,    2,    2,
         2,    1,    2,    2,    2,    1,    4,    3,
         3,    2,    3,    1,    2,    2,    2,    1,
         2,    2,    2,    1,    2,    2,    2,    1,
         5,    3,    3,    2,    0,    3,    2,    1,
         0,    3,    3,    3,    3,    3,    3,    3,
         3,    7,    6,    3,    2,    0,    1,    1,
         1,    2,    0,    7,    3,    2,    1,    0,
         1,    1,    1,    1,    1,    4,    3,    0,
         3);

   YY_Get_LHS_Rule : constant array (0 .. 120) of Integer :=
    (   -1,   -2,   -3,   -3,   -8,   -7,  -11,  -12,
       -12,   -9,   -9,  -10,  -10,   -4,   -4,   -4,
       -13,  -13,  -14,  -16,  -18,  -20,   -5,  -21,
        -5,   -5,  -15,  -15,  -19,  -17,  -17,  -22,
       -22,  -22,  -23,  -23,  -23,  -23,  -23,  -23,
       -24,  -24,  -24,  -24,  -24,  -27,  -28,  -28,
       -28,  -25,  -29,  -29,  -29,  -29,  -31,  -31,
       -31,  -31,  -31,  -31,  -31,  -31,  -32,  -33,
       -35,  -35,  -36,  -36,  -34,  -34,  -34,  -34,
       -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,
       -30,  -30,  -37,  -37,  -37,  -26,  -38,  -38,
       -38,  -39,  -39,  -39,  -39,  -39,  -39,  -39,
       -39,  -39,  -39,  -41,  -41,  -41,  -40,  -40,
       -40,  -40,  -44,   -6,   -6,  -45,  -45,  -45,
       -46,  -46,  -46,  -46,  -46,  -43,  -43,  -43,
       -42);

   YY_Shift_Reduce_Matrix : constant array (-1 .. 423) of Shift_Reduce_Entry :=
    ((   -1,    -1), (    2,     3), (   -1,    -3), (    3,     9),
     (   22,     7), (   -1,   -15), (   -1,    -2), (   27,    10),
     (   -1, -3000), (    0, -3001), (   -1, -3000), (    3,     9),
     (    6,    12), (   22,     7), (   -1,   -25), (   -1,   -14),
     (   -1,   -16), (   -1,   -17), (    4,    15), (   -1, -3000),
     (   24,    16), (   -1, -3000), (   -1, -3000), (   11,    17),
     (   12,    18), (   15,    19), (   -1,   -30), (   23,    22),
     (   -1, -3000), (   -1,   -13), (   -1,   -18), (   20,    24),
     (   -1, -3000), (   13,    25), (   -1, -3000), (   14,    26),
     (   -1, -3000), (    2,    38), (    3,     9), (    7,    35),
     (    8,    36), (   22,    32), (   40,    37), (   -1,   -33),
     (   -1,   -19), (    9,    40), (   -1, -3000), (   10,    42),
     (   -1,  -119), (    3,     9), (   22,     7), (   -1,   -15),
     (   -1,    -4), (   -1,   -26), (   13,    45), (   -1, -3000),
     (    2,    38), (    3,     9), (    7,    35), (    8,    36),
     (   16,    46), (   22,    32), (   40,    37), (   -1, -3000),
     (   -1,   -32), (   -1,   -34), (   -1,   -35), (   -1,   -36),
     (   -1,   -37), (   -1,   -38), (   -1,   -39), (   10,    48),
     (   17,    49), (   -1, -3000), (   30,    50), (   31,    51),
     (   32,    54), (   -1, -3000), (   10,    60), (   -1,   -88),
     (   27,    61), (   -1,    -8), (   15,    19), (   -1,   -30),
     (   -1,   -23), (    9,    65), (   10,    67), (   26,    66),
     (   -1, -3000), (   24,    68), (   -1, -3000), (    3,     9),
     (   22,     7), (   -1,    -1), (   28,    69), (   -1,   -10),
     (   -1,   -27), (   -1,   -29), (   -1,   -31), (   11,    17),
     (   12,    18), (   18,    71), (   -1, -3000), (   10,    74),
     (   -1, -3000), (   -1,   -50), (   -1,   -51), (   -1,   -52),
     (   -1,   -53), (   10,    75), (   32,    80), (   39,    81),
     (   -1, -3000), (   36,    82), (   37,    83), (   38,    84),
     (   -1,   -57), (   36,    85), (   37,    86), (   38,    87),
     (   -1,   -61), (    9,    88), (   -1, -3000), (    9,    89),
     (   10,    60), (   -1, -3000), (   -1,   -87), (   32,   100),
     (   41,    91), (   42,    92), (   43,    93), (   44,    94),
     (   45,    95), (   46,    96), (   47,    97), (   48,    98),
     (   49,    99), (   -1, -3000), (   24,   101), (   -1, -3000),
     (   28,   102), (   -1, -3000), (   -1,   -20), (    3,     9),
     (   22,     7), (   -1,   -15), (   -1,  -106), (   -1,  -108),
     (   24,   106), (   -1, -3000), (   18,   107), (   -1, -3000),
     (   24,   109), (   -1, -3000), (   29,   110), (   -1,   -12),
     (   20,   113), (   -1,   -48), (    9,   114), (   -1, -3000),
     (    9,   115), (   21,   116), (   -1, -3000), (   11,    17),
     (   12,    18), (   18,    71), (   -1, -3000), (   36,   119),
     (   37,   120), (   38,   121), (   -1,   -71), (   36,   122),
     (   37,   123), (   38,   124), (   -1,   -75), (   36,   125),
     (   37,   126), (   38,   127), (   -1,   -79), (   33,   128),
     (   35,   129), (   -1, -3000), (   34,   131), (   -1,   -67),
     (   10,    75), (   32,    80), (   -1, -3000), (   33,   134),
     (   34,   133), (   -1, -3000), (   -1,   -54), (   -1,   -55),
     (   -1,   -56), (   -1,   -58), (   -1,   -59), (   -1,   -60),
     (   -1,   -49), (   -1,   -85), (   -1,   -86), (   18,   107),
     (   50,   135), (   51,   136), (   52,   138), (   -1, -3000),
     (   18,   107), (   50,   135), (   51,   136), (   52,   138),
     (   -1, -3000), (   18,   107), (   50,   135), (   51,   136),
     (   52,   138), (   -1, -3000), (   18,   107), (   50,   135),
     (   51,   136), (   52,   138), (   -1, -3000), (   18,   107),
     (   50,   135), (   51,   136), (   52,   138), (   -1, -3000),
     (   18,   107), (   50,   135), (   51,   136), (   52,   138),
     (   -1, -3000), (   18,   107), (   50,   135), (   51,   136),
     (   52,   138), (   -1, -3000), (   18,   107), (   50,   135),
     (   51,   136), (   52,   138), (   -1, -3000), (   32,   147),
     (   -1, -3000), (   10,   148), (   -1, -3000), (   20,   149),
     (   -1, -3000), (   24,   150), (   -1, -3000), (    2,    38),
     (    3,     9), (    7,    35), (    8,    36), (   22,    32),
     (   40,    37), (   -1,   -33), (    3,     9), (   22,     7),
     (   -1,   -24), (    2,    38), (    3,     9), (   20,   156),
     (   22,   157), (   23,    22), (   -1,  -111), (   18,   107),
     (   -1, -3000), (   20,   113), (   -1,   -48), (   -1,  -118),
     (   20,   162), (   -1, -3000), (   24,   163), (   -1, -3000),
     (    4,   164), (   -1, -3000), (   19,   165), (   20,   166),
     (   -1, -3000), (   -1,   -47), (   -1,   -40), (   -1,   -41),
     (   10,   167), (   -1, -3000), (    9,   168), (   -1, -3000),
     (    9,   169), (   -1, -3000), (   -1,   -68), (   -1,   -69),
     (   -1,   -70), (   -1,   -72), (   -1,   -73), (   -1,   -74),
     (   -1,   -76), (   -1,   -77), (   -1,   -78), (   -1,   -63),
     (   10,    75), (   32,    80), (   -1, -3000), (   33,   171),
     (   34,   172), (   -1, -3000), (   10,    75), (   32,    80),
     (   -1, -3000), (   33,   174), (   34,   175), (   -1, -3000),
     (   10,   176), (   -1, -3000), (   -1,   -81), (   -1,  -102),
     (   -1,  -103), (   -1,  -104), (   18,   107), (   -1, -3000),
     (   -1,   -89), (   -1,   -90), (   -1,   -91), (   -1,   -92),
     (   -1,   -93), (   -1,   -94), (   -1,   -95), (   -1,   -96),
     (   10,   178), (   -1, -3000), (   34,   180), (   -1,  -101),
     (   -1,    -7), (   20,   181), (   -1, -3000), (    2,    38),
     (    3,     9), (    7,    35), (    8,    36), (   22,    32),
     (   40,    37), (   -1,   -28), (    9,   182), (   -1, -3000),
     (    2,    38), (    3,     9), (   20,   156), (   22,   157),
     (   23,    22), (   25,   183), (   -1, -3000), (   -1,  -110),
     (   -1,  -112), (   -1,  -113), (   -1,  -114), (   -1,  -115),
     (   -1,  -116), (   -1,  -117), (   19,   185), (   20,   166),
     (   -1, -3000), (   -1,    -9), (   20,   186), (   -1, -3000),
     (   -1,    -5), (   -1,   -45), (   -1,   -46), (    9,   187),
     (   -1, -3000), (   -1,   -43), (   -1,   -44), (   -1,   -66),
     (   -1,   -62), (   10,    75), (   32,    80), (   -1, -3000),
     (   -1,   -65), (   37,   189), (   -1, -3000), (   10,   190),
     (   -1, -3000), (   -1,   -83), (   -1,  -105), (   34,   180),
     (   -1,  -101), (   33,   192), (   34,   193), (   -1, -3000),
     (   10,   194), (   -1, -3000), (    4,   195), (   -1, -3000),
     (   -1,   -21), (    9,   197), (   -1, -3000), (   -1,  -109),
     (   -1,  -120), (   -1,   -11), (   -1,   -42), (   -1,   -64),
     (   -1,   -80), (   -1,   -82), (   33,   198), (   34,   193),
     (   -1, -3000), (   18,   107), (   50,   135), (   51,   136),
     (   52,   138), (   -1, -3000), (   10,   200), (   -1, -3000),
     (   -1,  -100), (   -1,    -6), (    3,     9), (   22,     7),
     (   -1,   -15), (   -1,  -107), (   18,   107), (   50,   135),
     (   51,   136), (   52,   138), (   -1, -3000), (   -1,   -98),
     (   -1,   -99), (    3,     9), (   22,     7), (   -1,   -22),
     (   -1,   -97));

   YY_Shift_Reduce_Offset : constant array (0 .. 202) of Integer :=
    (    0,    2,    5,    6,    8,   10,   14,   15,
        16,   17,   19,   21,   22,   26,   28,   29,
        30,   32,   34,   36,   43,   44,   46,   48,
        51,   52,   53,   55,   63,   64,   65,   66,
        67,   68,   69,   70,   73,   77,   79,   81,
        83,   84,   88,   90,   93,   95,   96,   97,
        98,  102,  104,  105,  106,  107,  108,  112,
       116,  120,  122,  125,  126,  137,  139,  141,
       142,  145,  146,  147,  149,  151,  153,  155,
       157,  159,  162,  166,  170,  174,  178,  181,
       183,  186,  189,  190,  191,  192,  193,  194,
       195,  196,  197,  198,  203,  208,  213,  218,
       223,  228,  233,  238,  240,  242,  244,  246,
       253,  256,  262,  264,  266,  267,  269,  271,
       273,  276,  277,  278,  279,  281,  283,  285,
       286,  287,  288,  289,  290,  291,  292,  293,
       294,  295,  298,  301,  304,  307,  309,  310,
       311,  312,  313,  315,  316,  317,  318,  319,
       320,  321,  322,  323,  325,  327,  328,  330,
       337,  339,  346,  347,  348,  349,  350,  351,
       352,  353,  356,  357,  359,  360,  361,  362,
       364,  365,  366,  367,  368,  371,  372,  374,
       376,  377,  378,  380,  383,  385,  387,  388,
       390,  391,  392,  393,  394,  395,  396,  397,
       400,  405,  407,  408,  409,  412,  413,  418,
       419,  420,  423);

end Matreshka.SAX.Simple_Readers.Parser.Tables;
