------------------------------------------------------------------------------
--                                                                          --
--                            Matreshka Project                             --
--                                                                          --
--                              XML Processor                               --
--                                                                          --
--                        Runtime Library Component                         --
--                                                                          --
------------------------------------------------------------------------------
--                                                                          --
-- Copyright Â© 2010, Vadim Godunko <vgodunko@gmail.com>                     --
-- All rights reserved.                                                     --
--                                                                          --
-- Redistribution and use in source and binary forms, with or without       --
-- modification, are permitted provided that the following conditions       --
-- are met:                                                                 --
--                                                                          --
--  * Redistributions of source code must retain the above copyright        --
--    notice, this list of conditions and the following disclaimer.         --
--                                                                          --
--  * Redistributions in binary form must reproduce the above copyright     --
--    notice, this list of conditions and the following disclaimer in the   --
--    documentation and/or other materials provided with the distribution.  --
--                                                                          --
--  * Neither the name of the Vadim Godunko, IE nor the names of its        --
--    contributors may be used to endorse or promote products derived from  --
--    this software without specific prior written permission.              --
--                                                                          --
-- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS      --
-- "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT        --
-- LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR    --
-- A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT     --
-- HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,   --
-- SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED --
-- TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR   --
-- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF   --
-- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING     --
-- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS       --
-- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.             --
--                                                                          --
------------------------------------------------------------------------------
--  $Revision$ $Date$
------------------------------------------------------------------------------
pragma Style_Checks ("-t");
--  GNAT: Disable check for token separation rules, because format of the
--  tables is not compatible with them.

private package XML.SAX.Simple_Readers.Parser.Tables is

   pragma Preelaborate;

   type Goto_Entry is record
      Nonterm  : Integer;
      Newstate : Integer;
   end record;

   type Shift_Reduce_Entry is record
      T   : Integer;
      Act : Integer;
   end record;

   YY_Default           : constant :=    -1;
   YY_First_Shift_Entry : constant :=     0;
   YY_Accept_Code       : constant := -3001;
   YY_Error_Code        : constant := -3000;

   YY_Goto_Matrix : constant array (-1 .. 160) of Goto_Entry :=
    ((   -1,    -1), (   -3,     1), (   -2,     2), (  -13,     9),
     (  -12,     7), (   -7,     6), (   -6,     4), (   -5,     3),
     (   -4,    11), (  -13,     9), (  -12,     7), (   -7,     6),
     (   -6,    13), (  -13,     9), (  -12,    17), (   -8,    16),
     (  -19,    23), (  -14,    22), (   -9,    25), (  -15,    29),
     (  -16,    31), (  -54,    32), (  -13,     9), (  -12,     7),
     (   -7,    33), (  -10,    36), (  -16,    38), (  -26,    44),
     (  -25,    43), (  -24,    42), (  -23,    41), (  -22,    40),
     (  -21,    39), (  -13,    46), (  -11,    47), (  -56,    55),
     (  -55,    57), (  -13,     9), (  -12,    17), (  -26,    44),
     (  -25,    43), (  -24,    42), (  -23,    41), (  -22,    40),
     (  -21,    61), (  -17,    62), (  -13,    46), (  -11,    47),
     (  -26,    44), (  -25,    43), (  -24,    42), (  -23,    41),
     (  -22,    64), (  -13,    46), (  -11,    47), (  -26,    44),
     (  -25,    43), (  -24,    42), (  -23,    41), (  -22,    40),
     (  -21,    61), (  -17,    65), (  -13,    46), (  -11,    47),
     (  -20,    74), (  -62,    78), (  -26,    44), (  -25,    43),
     (  -24,    42), (  -23,    41), (  -22,    64), (  -13,    46),
     (  -11,    47), (  -27,    84), (  -14,    85), (  -29,    87),
     (  -39,    88), (  -13,     9), (  -12,     7), (   -7,    93),
     (  -57,    94), (  -61,    95), (  -10,    97), (  -18,    98),
     (  -28,    99), (  -27,   104), (  -14,   105), (  -34,   112),
     (  -33,   111), (  -32,   109), (  -31,   108), (  -30,   113),
     (  -41,   115), (  -40,   114), (  -13,     9), (  -12,    17),
     (  -59,   123), (  -58,   122), (  -13,   128), (  -11,   129),
     (   -9,   124), (  -13,     9), (  -12,     7), (   -7,   134),
     (  -37,   143), (  -35,   144), (  -34,   142), (  -33,   141),
     (  -41,   155), (  -53,   165), (  -59,   170), (  -13,   128),
     (  -11,   129), (   -9,   124), (  -59,   123), (  -58,   173),
     (  -13,   128), (  -11,   129), (   -9,   124), (  -13,     9),
     (  -12,    17), (  -36,   187), (  -37,   143), (  -35,   144),
     (  -34,   142), (  -33,   141), (  -38,   189), (  -42,   191),
     (  -44,   192), (  -45,   193), (  -46,   194), (  -47,   195),
     (  -48,   196), (  -49,   197), (  -50,   198), (  -51,   199),
     (  -60,   203), (  -59,   170), (  -13,   128), (  -11,   129),
     (   -9,   124), (  -35,   205), (  -34,   142), (  -33,   141),
     (  -35,   208), (  -34,   142), (  -33,   141), (  -43,   216),
     (  -43,   217), (  -43,   218), (  -43,   219), (  -43,   220),
     (  -43,   221), (  -43,   222), (  -43,   223), (  -52,   225),
     (  -35,   238), (  -34,   142), (  -33,   141), (  -52,   242),
     (  -43,   247), (  -43,   258));

   YY_Goto_Offset : constant array (0 .. 258) of Integer :=
    (    0,    2,    8,    8,   12,   12,   12,   15,
        15,   15,   15,   15,   15,   15,   15,   15,
        17,   18,   18,   18,   18,   18,   18,   19,
        20,   21,   24,   25,   25,   25,   26,   34,
        34,   36,   38,   38,   38,   38,   38,   47,
        54,   54,   54,   54,   54,   54,   54,   54,
        54,   63,   63,   63,   63,   63,   63,   64,
        64,   65,   65,   65,   65,   65,   72,   72,
        72,   72,   72,   74,   74,   75,   76,   76,
        76,   76,   76,   79,   80,   80,   81,   81,
        81,   82,   83,   83,   84,   84,   84,   86,
        91,   93,   93,   93,   93,   93,   95,  100,
       100,  100,  100,  103,  103,  103,  103,  103,
       103,  103,  103,  103,  103,  103,  103,  107,
       107,  107,  107,  108,  108,  109,  109,  109,
       109,  109,  109,  113,  113,  113,  113,  113,
       113,  113,  113,  118,  118,  118,  118,  120,
       120,  120,  120,  120,  120,  120,  120,  120,
       120,  121,  125,  126,  126,  126,  126,  126,
       126,  126,  126,  126,  126,  127,  128,  129,
       130,  131,  132,  133,  134,  135,  135,  135,
       135,  135,  135,  135,  136,  136,  140,  140,
       140,  140,  140,  140,  140,  140,  140,  140,
       140,  140,  140,  143,  143,  146,  146,  146,
       147,  148,  149,  150,  151,  152,  153,  154,
       154,  155,  155,  155,  155,  155,  155,  155,
       158,  158,  158,  158,  158,  158,  158,  158,
       158,  158,  158,  158,  158,  158,  158,  158,
       158,  159,  159,  159,  159,  159,  159,  159,
       159,  159,  159,  159,  159,  159,  159,  159,
       159,  159,  159,  159,  160,  160,  160,  161,
       161,  161,  161,  161,  161,  161,  161,  161,
       161,  161,  161);

   YY_Rule_Length : constant array (0 .. 160) of Integer :=
    (    2,    0,    2,    2,    1,    4,    9,    6,
         8,    5,    3,    0,    2,    1,    0,    1,
         1,    2,    0,    0,    8,    0,    0,    6,
         0,    2,    3,    1,    3,    0,    2,    1,
         0,    1,    1,    1,    1,    1,    1,    1,
         3,    4,    4,    5,    4,    4,    6,    5,
         5,    3,    2,    1,    0,    0,    5,    1,
         1,    1,    1,    2,    2,    2,    1,    2,
         2,    2,    1,    4,    3,    3,    2,    3,
         1,    2,    2,    2,    1,    2,    2,    2,
         1,    2,    2,    2,    1,    5,    4,    3,
         2,    0,    0,    5,    2,    1,    0,    0,
         4,    0,    4,    0,    4,    0,    4,    0,
         4,    0,    4,    0,    4,    0,    4,    0,
         7,    0,    6,    3,    3,    3,    3,    3,
         3,    3,    3,    3,    3,    1,    1,    1,
         1,    1,    1,    1,    1,    1,    1,    1,
         1,    2,    1,    0,    3,    0,    6,    2,
         2,    1,    0,    1,    1,    0,    4,    2,
         1,    1,    1,    3,    0,    5,    0,    4,
         0);

   YY_Get_LHS_Rule : constant array (0 .. 160) of Integer :=
    (   -1,   -3,   -2,   -4,   -4,   -6,   -5,   -5,
       -11,  -11,  -10,  -10,   -7,   -7,   -7,  -12,
       -12,  -13,  -15,  -18,   -8,  -19,  -20,   -8,
        -8,  -14,  -14,  -17,  -16,  -16,  -21,  -21,
       -21,  -22,  -22,  -22,  -22,  -22,  -22,  -22,
       -22,  -26,  -26,  -26,  -23,  -23,  -23,  -23,
       -23,  -27,  -28,  -28,  -28,  -29,  -24,  -30,
       -30,  -30,  -30,  -32,  -32,  -32,  -32,  -32,
       -32,  -32,  -32,  -33,  -34,  -36,  -36,  -37,
       -37,  -35,  -35,  -35,  -35,  -35,  -35,  -35,
       -35,  -35,  -35,  -35,  -35,  -31,  -31,  -38,
       -38,  -38,  -39,  -25,  -40,  -40,  -40,  -42,
       -41,  -44,  -41,  -45,  -41,  -46,  -41,  -47,
       -41,  -48,  -41,  -49,  -41,  -50,  -41,  -51,
       -41,  -53,  -41,  -52,  -52,  -52,  -52,  -52,
       -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,
       -52,  -52,  -52,  -52,  -52,  -52,  -52,  -43,
       -43,  -43,  -43,  -54,   -9,  -57,  -55,  -55,
       -58,  -58,  -58,  -59,  -59,  -60,  -59,  -59,
       -59,  -59,  -59,  -59,  -61,  -56,  -62,  -56,
       -56);

   YY_Shift_Reduce_Matrix : constant array (-1 .. 556) of Shift_Reduce_Entry :=
    ((   -1,    -1), (   -1,    -1), (    3,     5), (    4,    10),
     (   24,     8), (   -1,   -14), (    0, -3001), (   -1, -3000),
     (    4,    10), (   24,     8), (   -1,   -14), (   -1,    -4),
     (   29,    14), (   -1, -3000), (    4,    10), (    7,    15),
     (   24,     8), (   -1,   -24), (   -1,   -13), (   -1,   -15),
     (   -1,   -16), (    5,    18), (   -1, -3000), (   -1,    -2),
     (   -1, -3000), (   -1,    -3), (   26,    19), (   -1, -3000),
     (   13,    20), (   14,    21), (   -1,   -21), (   25,    24),
     (   -1, -3000), (   -1,   -12), (   -1,   -17), (   22,    26),
     (   -1, -3000), (   15,    27), (   -1, -3000), (   16,    28),
     (   -1, -3000), (   -1,   -18), (   17,    30), (   -1,   -29),
     (   -1,  -139), (    4,    10), (   24,     8), (   -1,   -14),
     (   30,    35), (   31,    34), (   -1,   -11), (   -1,   -25),
     (   15,    37), (   -1, -3000), (   17,    30), (   -1,   -29),
     (    3,    53), (    4,    10), (    8,    49), (    9,    50),
     (   10,    52), (   24,    45), (   42,    51), (   57,    48),
     (   -1,   -32), (   11,    54), (   -1, -3000), (   12,    56),
     (   -1,  -160), (    4,    10), (   24,     8), (   -1,    -5),
     (   26,    58), (   -1, -3000), (   26,    59), (   -1, -3000),
     (    5,    60), (   -1, -3000), (   -1,   -26), (    3,    53),
     (    4,    10), (    8,    49), (    9,    50), (   10,    52),
     (   24,    45), (   42,    51), (   57,    48), (   -1,   -32),
     (    3,    53), (    4,    10), (    8,    49), (    9,    50),
     (   10,    52), (   18,    63), (   24,    45), (   42,    51),
     (   57,    48), (   -1, -3000), (   -1,   -31), (   -1,   -33),
     (   -1,   -34), (   -1,   -35), (   -1,   -36), (   -1,   -37),
     (   -1,   -38), (   -1,   -39), (    3,    53), (    4,    10),
     (    8,    49), (    9,    50), (   10,    52), (   24,    45),
     (   42,    51), (   57,    48), (   -1,   -32), (   12,    66),
     (   19,    67), (   -1, -3000), (   12,    68), (   -1, -3000),
     (   12,    69), (   -1, -3000), (   13,    70), (   14,    71),
     (   -1, -3000), (   29,    72), (   30,    73), (   -1, -3000),
     (   -1,   -22), (   11,    75), (   12,    77), (   28,    76),
     (   -1, -3000), (   -1,  -158), (   -1,  -140), (   22,    79),
     (   -1, -3000), (   22,    80), (   -1, -3000), (   -1,    -7),
     (    3,    53), (    4,    10), (    8,    49), (    9,    50),
     (   10,    52), (   24,    45), (   42,    51), (   57,    48),
     (   -1,   -27), (   11,    81), (   -1, -3000), (   -1,   -28),
     (   -1,   -30), (   58,    82), (   -1, -3000), (   13,    20),
     (   14,    21), (   20,    83), (   -1, -3000), (   12,    86),
     (   -1, -3000), (   -1,   -53), (   -1,   -90), (   15,    89),
     (   -1, -3000), (   16,    90), (   -1, -3000), (   26,    91),
     (   -1, -3000), (   26,    92), (   -1, -3000), (    4,    10),
     (   24,     8), (   -1,   -14), (   -1,  -141), (   -1,  -143),
     (   -1,  -156), (   26,    96), (   -1, -3000), (   -1,   -10),
     (   31,    34), (   -1,   -11), (   -1,   -19), (   -1,   -40),
     (   22,   100), (   -1,   -52), (   11,   101), (   -1, -3000),
     (   11,   102), (   23,   103), (   -1, -3000), (   13,    20),
     (   14,    21), (   20,    83), (   -1, -3000), (   32,   106),
     (   33,   107), (   34,   110), (   -1, -3000), (   12,   116),
     (   -1,   -94), (   11,   117), (   -1, -3000), (   11,   118),
     (   15,   119), (   -1, -3000), (   22,   120), (   -1, -3000),
     (   22,   121), (   -1, -3000), (    4,    10), (   24,     8),
     (   -1,   -23), (    3,    53), (    4,    10), (   22,   125),
     (   24,   127), (   25,    24), (   55,   130), (   59,   126),
     (   -1,  -146), (   26,   131), (   -1, -3000), (   22,   132),
     (   -1, -3000), (    5,   133), (   -1, -3000), (    4,    10),
     (   24,     8), (   -1,   -14), (   21,   135), (   22,   136),
     (   -1, -3000), (   -1,   -51), (   -1,   -44), (   -1,   -45),
     (   12,   137), (   -1, -3000), (   11,   138), (   -1, -3000),
     (   11,   139), (   -1, -3000), (   -1,   -55), (   -1,   -56),
     (   -1,   -57), (   -1,   -58), (   12,   140), (   34,   145),
     (   41,   146), (   -1, -3000), (   38,   147), (   39,   148),
     (   40,   149), (   -1,   -62), (   38,   150), (   39,   151),
     (   40,   152), (   -1,   -66), (   11,   153), (   -1, -3000),
     (   11,   154), (   12,   116), (   -1, -3000), (   -1,   -93),
     (   43,   156), (   44,   157), (   45,   158), (   46,   159),
     (   47,   160), (   48,   161), (   49,   162), (   50,   163),
     (   51,   164), (   -1,  -113), (   -1,   -41), (   -1,   -42),
     (   11,   166), (   -1, -3000), (   30,   167), (   -1, -3000),
     (    5,   168), (   -1, -3000), (    3,    53), (    4,    10),
     (   22,   125), (   24,   127), (   25,    24), (   27,   169),
     (   55,   130), (   59,   126), (   -1, -3000), (   -1,  -145),
     (   -1,  -147), (   -1,  -148), (   22,   171), (   60,   172),
     (   -1, -3000), (   -1,  -152), (   -1,  -153), (   -1,  -154),
     (    3,    53), (    4,    10), (   22,   125), (   24,   127),
     (   25,    24), (   55,   130), (   59,   126), (   -1,  -146),
     (   22,   174), (   -1, -3000), (   -1,  -159), (   -1,    -6),
     (    4,    10), (   24,     8), (   -1,   -20), (   -1,   -49),
     (   -1,   -50), (   11,   175), (   -1, -3000), (   -1,   -47),
     (   -1,   -48), (   38,   176), (   39,   177), (   40,   178),
     (   -1,   -76), (   38,   179), (   39,   180), (   40,   181),
     (   -1,   -80), (   38,   182), (   39,   183), (   40,   184),
     (   -1,   -84), (   35,   185), (   37,   186), (   -1, -3000),
     (   36,   188), (   -1,   -72), (   12,   140), (   34,   145),
     (   -1, -3000), (   36,   190), (   -1,   -89), (   -1,   -59),
     (   -1,   -60), (   -1,   -61), (   -1,   -63), (   -1,   -64),
     (   -1,   -65), (   -1,   -54), (   -1,   -91), (   -1,   -92),
     (   -1,   -95), (   -1,   -97), (   -1,   -99), (   -1,  -101),
     (   -1,  -103), (   -1,  -105), (   -1,  -107), (   -1,  -109),
     (   -1,  -111), (   34,   200), (   -1, -3000), (   -1,   -43),
     (   26,   201), (   -1, -3000), (   -1,    -9), (   11,   202),
     (   -1, -3000), (   -1,  -144), (   -1,  -149), (   -1,  -151),
     (    3,    53), (    4,    10), (   22,   125), (   24,   127),
     (   25,    24), (   55,   130), (   56,   204), (   59,   126),
     (   -1, -3000), (   -1,  -157), (   -1,   -46), (   -1,   -73),
     (   -1,   -74), (   -1,   -75), (   -1,   -77), (   -1,   -78),
     (   -1,   -79), (   -1,   -81), (   -1,   -82), (   -1,   -83),
     (   -1,   -68), (   12,   140), (   34,   145), (   -1, -3000),
     (   35,   206), (   36,   207), (   -1, -3000), (   12,   140),
     (   34,   145), (   -1, -3000), (   35,   209), (   36,   210),
     (   -1, -3000), (   12,   211), (   -1, -3000), (   22,   215),
     (   52,   212), (   53,   213), (   54,   214), (   -1, -3000),
     (   22,   215), (   52,   212), (   53,   213), (   54,   214),
     (   -1, -3000), (   22,   215), (   52,   212), (   53,   213),
     (   54,   214), (   -1, -3000), (   22,   215), (   52,   212),
     (   53,   213), (   54,   214), (   -1, -3000), (   22,   215),
     (   52,   212), (   53,   213), (   54,   214), (   -1, -3000),
     (   22,   215), (   52,   212), (   53,   213), (   54,   214),
     (   -1, -3000), (   22,   215), (   52,   212), (   53,   213),
     (   54,   214), (   -1, -3000), (   22,   215), (   52,   212),
     (   53,   213), (   54,   214), (   -1, -3000), (   34,   224),
     (   -1, -3000), (   12,   226), (   43,   227), (   44,   228),
     (   45,   229), (   46,   230), (   47,   231), (   48,   232),
     (   49,   233), (   50,   234), (   51,   235), (   -1, -3000),
     (   22,   236), (   -1, -3000), (   -1,  -142), (   60,   237),
     (   -1, -3000), (   -1,  -155), (   -1,   -71), (   -1,   -67),
     (   12,   140), (   34,   145), (   -1, -3000), (   -1,   -70),
     (   39,   239), (   -1,   -86), (   12,   240), (   -1, -3000),
     (   -1,   -88), (   -1,  -135), (   -1,  -136), (   22,   241),
     (   -1, -3000), (   -1,  -138), (   -1,   -96), (   -1,   -98),
     (   -1,  -100), (   -1,  -102), (   -1,  -104), (   -1,  -106),
     (   -1,  -108), (   -1,  -110), (   12,   226), (   43,   227),
     (   44,   228), (   45,   229), (   46,   230), (   47,   231),
     (   48,   232), (   49,   233), (   50,   234), (   51,   235),
     (   -1, -3000), (   35,   243), (   36,   244), (   -1, -3000),
     (   -1,  -125), (   -1,  -126), (   -1,  -127), (   -1,  -128),
     (   -1,  -129), (   -1,  -130), (   -1,  -131), (   -1,  -132),
     (   -1,  -133), (   -1,  -134), (    5,   245), (   -1, -3000),
     (   -1,  -150), (   -1,   -69), (   -1,   -85), (   -1,   -87),
     (   -1,  -137), (   35,   246), (   36,   244), (   -1, -3000),
     (   22,   215), (   52,   212), (   53,   213), (   54,   214),
     (   -1, -3000), (   12,   248), (   43,   249), (   44,   250),
     (   45,   251), (   46,   252), (   47,   253), (   48,   254),
     (   49,   255), (   50,   256), (   51,   257), (   -1, -3000),
     (   -1,    -8), (   22,   215), (   52,   212), (   53,   213),
     (   54,   214), (   -1, -3000), (   -1,  -114), (   -1,  -115),
     (   -1,  -116), (   -1,  -117), (   -1,  -118), (   -1,  -119),
     (   -1,  -120), (   -1,  -121), (   -1,  -122), (   -1,  -123),
     (   -1,  -124), (   -1,  -112));

   YY_Shift_Reduce_Offset : constant array (0 .. 258) of Integer :=
    (    0,    1,    5,    7,   10,   11,   13,   17,
        18,   19,   20,   22,   23,   24,   25,   27,
        30,   32,   33,   34,   36,   38,   40,   41,
        43,   44,   47,   50,   51,   53,   55,   64,
        66,   68,   71,   73,   75,   77,   78,   87,
        97,   98,   99,  100,  101,  102,  103,  104,
       105,  114,  117,  119,  121,  124,  127,  128,
       132,  133,  134,  136,  138,  139,  148,  150,
       151,  152,  154,  158,  160,  161,  162,  164,
       166,  168,  170,  173,  174,  175,  176,  178,
       179,  181,  182,  183,  185,  187,  190,  194,
       198,  200,  202,  205,  207,  209,  212,  220,
       222,  224,  226,  229,  232,  233,  234,  235,
       237,  239,  241,  242,  243,  244,  245,  249,
       253,  257,  259,  262,  263,  273,  274,  275,
       277,  279,  281,  290,  291,  292,  293,  296,
       297,  298,  299,  307,  309,  310,  311,  314,
       315,  316,  318,  319,  320,  324,  328,  332,
       335,  337,  340,  342,  343,  344,  345,  346,
       347,  348,  349,  350,  351,  352,  353,  354,
       355,  356,  357,  358,  359,  360,  362,  363,
       365,  366,  368,  369,  370,  371,  380,  381,
       382,  383,  384,  385,  386,  387,  388,  389,
       390,  391,  392,  395,  398,  401,  404,  406,
       411,  416,  421,  426,  431,  436,  441,  446,
       448,  459,  461,  462,  464,  465,  466,  467,
       470,  471,  473,  475,  476,  477,  478,  480,
       481,  482,  483,  484,  485,  486,  487,  488,
       489,  500,  503,  504,  505,  506,  507,  508,
       509,  510,  511,  512,  513,  515,  516,  517,
       518,  519,  520,  523,  528,  539,  540,  545,
       546,  547,  548,  549,  550,  551,  552,  553,
       554,  555,  556);

end XML.SAX.Simple_Readers.Parser.Tables;
