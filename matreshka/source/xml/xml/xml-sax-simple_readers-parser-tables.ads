------------------------------------------------------------------------------
--                                                                          --
--                            Matreshka Project                             --
--                                                                          --
--                              XML Processor                               --
--                                                                          --
--                        Runtime Library Component                         --
--                                                                          --
------------------------------------------------------------------------------
--                                                                          --
-- Copyright Â© 2010, Vadim Godunko <vgodunko@gmail.com>                     --
-- All rights reserved.                                                     --
--                                                                          --
-- Redistribution and use in source and binary forms, with or without       --
-- modification, are permitted provided that the following conditions       --
-- are met:                                                                 --
--                                                                          --
--  * Redistributions of source code must retain the above copyright        --
--    notice, this list of conditions and the following disclaimer.         --
--                                                                          --
--  * Redistributions in binary form must reproduce the above copyright     --
--    notice, this list of conditions and the following disclaimer in the   --
--    documentation and/or other materials provided with the distribution.  --
--                                                                          --
--  * Neither the name of the Vadim Godunko, IE nor the names of its        --
--    contributors may be used to endorse or promote products derived from  --
--    this software without specific prior written permission.              --
--                                                                          --
-- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS      --
-- "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT        --
-- LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR    --
-- A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT     --
-- HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,   --
-- SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED --
-- TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR   --
-- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF   --
-- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING     --
-- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS       --
-- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.             --
--                                                                          --
------------------------------------------------------------------------------
--  $Revision$ $Date$
------------------------------------------------------------------------------

private package XML.SAX.Simple_Readers.Parser.Tables is

   pragma Preelaborate;

   type Goto_Entry is record
      Nonterm  : Integer;
      Newstate : Integer;
   end record;

   type Shift_Reduce_Entry is record
      T   : Integer;
      Act : Integer;
   end record;

   YY_Default           : constant :=    -1;
   YY_First_Shift_Entry : constant :=     0;
   YY_Accept_Code       : constant := -3001;
   YY_Error_Code        : constant := -3000;

   YY_Goto_Matrix : constant array (-1 .. 135) of Goto_Entry :=
    ((   -1,    -1), (   -8,     2), (   -3,     1), (   -2,     4),
     (   -4,     5), (  -14,    11), (  -13,     9), (   -5,     8),
     (  -14,    11), (  -13,    16), (   -6,    15), (  -17,    23),
     (  -15,    22), (   -7,    25), (   -9,    26), (  -27,    34),
     (  -26,    33), (  -25,    32), (  -24,    31), (  -23,    30),
     (  -22,    29), (  -14,    36), (  -12,    37), (  -16,    43),
     (  -44,    45), (  -14,    11), (  -13,     9), (   -5,    47),
     (  -10,    49), (  -27,    34), (  -26,    33), (  -25,    32),
     (  -24,    31), (  -23,    52), (  -14,    36), (  -12,    37),
     (  -34,    61), (  -33,    60), (  -32,    58), (  -31,    57),
     (  -30,    62), (  -40,    64), (  -39,    63), (  -17,    70),
     (  -21,    71), (  -14,    11), (  -13,    16), (  -11,    78),
     (  -28,    80), (  -15,    81), (  -37,    86), (  -35,    87),
     (  -34,    85), (  -33,    84), (  -40,    98), (  -18,   113),
     (  -14,    11), (  -13,     9), (   -5,   114), (  -45,   115),
     (  -43,   118), (  -29,   122), (  -28,   127), (  -15,   128),
     (  -36,   140), (  -37,    86), (  -35,    87), (  -34,    85),
     (  -33,    84), (  -38,   142), (  -43,   147), (  -41,   149),
     (  -43,   147), (  -41,   150), (  -43,   147), (  -41,   151),
     (  -43,   147), (  -41,   152), (  -43,   147), (  -41,   153),
     (  -43,   147), (  -41,   154), (  -43,   147), (  -41,   155),
     (  -43,   147), (  -41,   156), (  -27,    34), (  -26,    33),
     (  -25,    32), (  -24,    31), (  -23,    30), (  -22,   164),
     (  -19,   165), (  -14,    36), (  -12,    37), (  -14,    11),
     (  -13,    16), (  -47,   167), (  -46,   166), (  -14,   171),
     (  -12,   172), (   -7,   168), (  -43,   173), (  -29,   174),
     (  -35,   181), (  -34,    85), (  -33,    84), (  -35,   184),
     (  -34,    85), (  -33,    84), (  -43,   188), (  -42,   190),
     (  -27,    34), (  -26,    33), (  -25,    32), (  -24,    31),
     (  -23,    52), (  -14,    36), (  -12,    37), (  -47,   197),
     (  -14,   171), (  -12,   172), (   -7,   168), (  -35,   200),
     (  -34,    85), (  -33,    84), (  -42,   203), (  -20,   208),
     (  -43,   147), (  -41,   211), (  -14,    11), (  -13,     9),
     (   -5,   214), (  -43,   147), (  -41,   215), (  -14,    11),
     (  -13,    16));

   YY_Goto_Offset : constant array (0 .. 216) of Integer :=
    (    0,    3,    4,    4,    4,    4,    7,    7,
         7,   10,   10,   10,   10,   10,   10,   12,
        13,   13,   13,   14,   14,   14,   22,   23,
        23,   24,   27,   28,   28,   28,   35,   35,
        35,   35,   35,   35,   35,   35,   35,   35,
        40,   42,   42,   42,   43,   44,   44,   44,
        46,   46,   47,   47,   47,   47,   49,   49,
        49,   49,   49,   49,   53,   53,   53,   53,
        54,   54,   54,   54,   54,   54,   54,   55,
        58,   59,   59,   59,   60,   60,   60,   60,
        61,   61,   61,   63,   63,   63,   63,   63,
        64,   68,   69,   69,   69,   69,   69,   69,
        69,   69,   69,   69,   71,   73,   75,   77,
        79,   81,   83,   85,   85,   85,   85,   85,
        85,   85,   94,   96,  101,  102,  103,  103,
       103,  103,  103,  103,  103,  103,  103,  103,
       103,  103,  103,  103,  103,  103,  103,  103,
       103,  103,  103,  103,  106,  106,  109,  109,
       109,  109,  109,  109,  109,  110,  110,  110,
       110,  110,  110,  110,  110,  110,  110,  111,
       111,  111,  111,  111,  111,  118,  118,  122,
       122,  122,  122,  122,  122,  122,  122,  122,
       122,  122,  122,  122,  122,  122,  122,  122,
       125,  125,  125,  125,  125,  125,  126,  126,
       126,  126,  126,  126,  127,  127,  127,  127,
       127,  127,  127,  127,  127,  129,  129,  129,
       129,  132,  132,  134,  134,  134,  134,  136,
       136);

   YY_Rule_Length : constant array (0 .. 124) of Integer :=
    (    2,    0,    6,    1,    0,    0,    8,    8,
         5,    3,    0,    3,    0,    2,    1,    0,
         1,    1,    2,    0,    0,    0,    9,    0,
         5,    0,    2,    3,    1,    3,    0,    2,
         1,    0,    1,    1,    1,    1,    1,    1,
         1,    4,    4,    5,    4,    4,    6,    5,
         5,    3,    2,    1,    0,    3,    1,    1,
         1,    1,    2,    2,    2,    1,    2,    2,
         2,    1,    4,    3,    3,    2,    3,    1,
         2,    2,    2,    1,    2,    2,    2,    1,
         2,    2,    2,    1,    5,    3,    3,    2,
         0,    3,    2,    1,    0,    3,    3,    3,
         3,    3,    3,    3,    3,    7,    6,    3,
         2,    0,    1,    1,    1,    2,    0,    7,
         3,    2,    1,    0,    1,    1,    1,    1,
         1,    4,    3,    0,    3);

   YY_Get_LHS_Rule : constant array (0 .. 124) of Integer :=
    (   -1,   -4,   -2,   -3,   -3,   -9,   -8,  -12,
       -12,  -10,  -10,  -11,  -11,   -5,   -5,   -5,
       -13,  -13,  -14,  -16,  -18,  -20,   -6,  -21,
        -6,   -6,  -15,  -15,  -19,  -17,  -17,  -22,
       -22,  -22,  -23,  -23,  -23,  -23,  -23,  -23,
       -23,  -27,  -27,  -27,  -24,  -24,  -24,  -24,
       -24,  -28,  -29,  -29,  -29,  -25,  -30,  -30,
       -30,  -30,  -32,  -32,  -32,  -32,  -32,  -32,
       -32,  -32,  -33,  -34,  -36,  -36,  -37,  -37,
       -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,
       -35,  -35,  -35,  -35,  -31,  -31,  -38,  -38,
       -38,  -26,  -39,  -39,  -39,  -40,  -40,  -40,
       -40,  -40,  -40,  -40,  -40,  -40,  -40,  -42,
       -42,  -42,  -41,  -41,  -41,  -41,  -45,   -7,
        -7,  -46,  -46,  -46,  -47,  -47,  -47,  -47,
       -47,  -44,  -44,  -44,  -43);

   YY_Shift_Reduce_Matrix : constant array (-1 .. 453) of Shift_Reduce_Entry :=
    ((   -1,    -1), (    2,     3), (   -1,    -4), (   -1,    -1),
     (   -1,    -3), (   28,     6), (   -1, -3000), (    0, -3001),
     (   -1, -3000), (    3,    12), (   23,    10), (   -1,   -15),
     (   25,    13), (   -1, -3000), (   -1, -3000), (    3,    12),
     (    6,    14), (   23,    10), (   -1,   -25), (   -1,   -14),
     (   -1,   -16), (   -1,   -17), (    4,    17), (   -1, -3000),
     (   21,    18), (   -1, -3000), (   12,    19), (   13,    20),
     (   16,    21), (   -1,   -30), (   24,    24), (   -1, -3000),
     (   -1,   -13), (   -1,   -18), (   -1,    -5), (   14,    27),
     (   -1, -3000), (   15,    28), (   -1, -3000), (    2,    42),
     (    3,    12), (    7,    38), (    8,    39), (    9,    41),
     (   23,    35), (   41,    40), (   -1,   -33), (   -1,   -19),
     (   10,    44), (   -1, -3000), (   11,    46), (   -1,  -123),
     (    3,    12), (   23,    10), (   -1,   -15), (   29,    48),
     (   -1,   -10), (   -1,   -26), (   14,    50), (   -1, -3000),
     (    2,    42), (    3,    12), (    7,    38), (    8,    39),
     (    9,    41), (   17,    51), (   23,    35), (   41,    40),
     (   -1, -3000), (   -1,   -32), (   -1,   -34), (   -1,   -35),
     (   -1,   -36), (   -1,   -37), (   -1,   -38), (   -1,   -39),
     (   -1,   -40), (   11,    53), (   18,    54), (   -1, -3000),
     (   31,    55), (   32,    56), (   33,    59), (   -1, -3000),
     (   11,    65), (   -1,   -92), (   12,    66), (   13,    67),
     (   -1, -3000), (   28,    68), (   29,    69), (   -1, -3000),
     (   16,    21), (   -1,   -30), (   -1,   -23), (   10,    72),
     (   11,    74), (   27,    73), (   -1, -3000), (   25,    75),
     (   -1, -3000), (    3,    12), (   23,    10), (   -1,    -2),
     (   25,    76), (   -1, -3000), (   30,    77), (   -1,   -12),
     (   -1,   -27), (   -1,   -29), (   -1,   -31), (   12,    19),
     (   13,    20), (   19,    79), (   -1, -3000), (   11,    82),
     (   -1, -3000), (   -1,   -54), (   -1,   -55), (   -1,   -56),
     (   -1,   -57), (   11,    83), (   33,    88), (   40,    89),
     (   -1, -3000), (   37,    90), (   38,    91), (   39,    92),
     (   -1,   -61), (   37,    93), (   38,    94), (   39,    95),
     (   -1,   -65), (   10,    96), (   -1, -3000), (   10,    97),
     (   11,    65), (   -1, -3000), (   -1,   -91), (   33,   108),
     (   42,    99), (   43,   100), (   44,   101), (   45,   102),
     (   46,   103), (   47,   104), (   48,   105), (   49,   106),
     (   50,   107), (   -1, -3000), (   14,   109), (   -1, -3000),
     (   15,   110), (   -1, -3000), (   25,   111), (   -1, -3000),
     (   25,   112), (   -1, -3000), (   -1,   -20), (    3,    12),
     (   23,    10), (   -1,   -15), (   -1,  -110), (   -1,  -112),
     (   25,   116), (   -1, -3000), (   19,   117), (   -1, -3000),
     (   21,   119), (   -1, -3000), (   25,   120), (   -1, -3000),
     (    4,   121), (   -1, -3000), (   21,   123), (   -1,   -52),
     (   10,   124), (   -1, -3000), (   10,   125), (   22,   126),
     (   -1, -3000), (   12,    19), (   13,    20), (   19,    79),
     (   -1, -3000), (   37,   129), (   38,   130), (   39,   131),
     (   -1,   -75), (   37,   132), (   38,   133), (   39,   134),
     (   -1,   -79), (   37,   135), (   38,   136), (   39,   137),
     (   -1,   -83), (   34,   138), (   36,   139), (   -1, -3000),
     (   35,   141), (   -1,   -71), (   11,    83), (   33,    88),
     (   -1, -3000), (   34,   144), (   35,   143), (   -1, -3000),
     (   -1,   -58), (   -1,   -59), (   -1,   -60), (   -1,   -62),
     (   -1,   -63), (   -1,   -64), (   -1,   -53), (   -1,   -89),
     (   -1,   -90), (   19,   117), (   51,   145), (   52,   146),
     (   53,   148), (   -1, -3000), (   19,   117), (   51,   145),
     (   52,   146), (   53,   148), (   -1, -3000), (   19,   117),
     (   51,   145), (   52,   146), (   53,   148), (   -1, -3000),
     (   19,   117), (   51,   145), (   52,   146), (   53,   148),
     (   -1, -3000), (   19,   117), (   51,   145), (   52,   146),
     (   53,   148), (   -1, -3000), (   19,   117), (   51,   145),
     (   52,   146), (   53,   148), (   -1, -3000), (   19,   117),
     (   51,   145), (   52,   146), (   53,   148), (   -1, -3000),
     (   19,   117), (   51,   145), (   52,   146), (   53,   148),
     (   -1, -3000), (   33,   157), (   -1, -3000), (   11,   158),
     (   -1, -3000), (   10,   159), (   -1, -3000), (   10,   160),
     (   14,   161), (   -1, -3000), (   21,   162), (   -1, -3000),
     (   21,   163), (   -1, -3000), (    2,    42), (    3,    12),
     (    7,    38), (    8,    39), (    9,    41), (   23,    35),
     (   41,    40), (   -1,   -33), (    3,    12), (   23,    10),
     (   -1,   -24), (    2,    42), (    3,    12), (   21,   169),
     (   23,   170), (   24,    24), (   -1,  -115), (   19,   117),
     (   -1, -3000), (   21,   123), (   -1,   -52), (   -1,  -122),
     (   -1,    -9), (   21,   175), (   -1, -3000), (   -1,    -6),
     (   20,   176), (   21,   177), (   -1, -3000), (   -1,   -51),
     (   -1,   -44), (   -1,   -45), (   11,   178), (   -1, -3000),
     (   10,   179), (   -1, -3000), (   10,   180), (   -1, -3000),
     (   -1,   -72), (   -1,   -73), (   -1,   -74), (   -1,   -76),
     (   -1,   -77), (   -1,   -78), (   -1,   -80), (   -1,   -81),
     (   -1,   -82), (   -1,   -67), (   11,    83), (   33,    88),
     (   -1, -3000), (   34,   182), (   35,   183), (   -1, -3000),
     (   11,    83), (   33,    88), (   -1, -3000), (   34,   185),
     (   35,   186), (   -1, -3000), (   11,   187), (   -1, -3000),
     (   -1,   -85), (   -1,  -106), (   -1,  -107), (   -1,  -108),
     (   19,   117), (   -1, -3000), (   -1,   -93), (   -1,   -94),
     (   -1,   -95), (   -1,   -96), (   -1,   -97), (   -1,   -98),
     (   -1,   -99), (   -1,  -100), (   11,   189), (   -1, -3000),
     (   35,   191), (   -1,  -105), (   -1,   -41), (   -1,   -42),
     (   10,   192), (   -1, -3000), (   29,   193), (   -1, -3000),
     (    4,   194), (   -1, -3000), (    2,    42), (    3,    12),
     (    7,    38), (    8,    39), (    9,    41), (   23,    35),
     (   41,    40), (   -1,   -28), (   10,   195), (   -1, -3000),
     (    2,    42), (    3,    12), (   21,   169), (   23,   170),
     (   24,    24), (   26,   196), (   -1, -3000), (   -1,  -114),
     (   -1,  -116), (   -1,  -117), (   -1,  -118), (   -1,  -119),
     (   -1,  -120), (   -1,  -121), (   20,   198), (   21,   177),
     (   -1, -3000), (   -1,   -11), (   -1,   -49), (   -1,   -50),
     (   10,   199), (   -1, -3000), (   -1,   -47), (   -1,   -48),
     (   -1,   -70), (   -1,   -66), (   11,    83), (   33,    88),
     (   -1, -3000), (   -1,   -69), (   38,   201), (   -1, -3000),
     (   11,   202), (   -1, -3000), (   -1,   -87), (   -1,  -109),
     (   35,   191), (   -1,  -105), (   34,   204), (   35,   205),
     (   -1, -3000), (   11,   206), (   -1, -3000), (   -1,   -43),
     (   25,   207), (   -1, -3000), (   -1,    -8), (   -1,   -21),
     (   10,   209), (   -1, -3000), (   -1,  -113), (   -1,  -124),
     (   -1,   -46), (   -1,   -68), (   -1,   -84), (   -1,   -86),
     (   34,   210), (   35,   205), (   -1, -3000), (   19,   117),
     (   51,   145), (   52,   146), (   53,   148), (   -1, -3000),
     (   11,   212), (   -1, -3000), (   -1,  -104), (   21,   213),
     (   -1, -3000), (    3,    12), (   23,    10), (   -1,   -15),
     (   -1,  -111), (   19,   117), (   51,   145), (   52,   146),
     (   53,   148), (   -1, -3000), (   -1,  -102), (   -1,  -103),
     (    4,   216), (   -1, -3000), (    3,    12), (   23,    10),
     (   -1,   -22), (   -1,  -101), (   -1,    -7));

   YY_Shift_Reduce_Offset : constant array (0 .. 216) of Integer :=
    (    0,    2,    3,    4,    6,    8,   11,   13,
        14,   18,   19,   20,   21,   23,   25,   29,
        31,   32,   33,   34,   36,   38,   46,   47,
        49,   51,   54,   56,   57,   59,   68,   69,
        70,   71,   72,   73,   74,   75,   76,   79,
        83,   85,   88,   91,   93,   94,   98,  100,
       103,  105,  107,  108,  109,  110,  114,  116,
       117,  118,  119,  120,  124,  128,  132,  134,
       137,  138,  149,  151,  153,  155,  157,  158,
       161,  162,  163,  165,  167,  169,  171,  173,
       175,  177,  180,  184,  188,  192,  196,  199,
       201,  204,  207,  208,  209,  210,  211,  212,
       213,  214,  215,  216,  221,  226,  231,  236,
       241,  246,  251,  256,  258,  260,  262,  265,
       267,  269,  277,  280,  286,  288,  290,  291,
       292,  294,  295,  298,  299,  300,  301,  303,
       305,  307,  308,  309,  310,  311,  312,  313,
       314,  315,  316,  317,  320,  323,  326,  329,
       331,  332,  333,  334,  335,  337,  338,  339,
       340,  341,  342,  343,  344,  345,  347,  349,
       350,  351,  353,  355,  357,  365,  367,  374,
       375,  376,  377,  378,  379,  380,  381,  384,
       385,  386,  387,  389,  390,  391,  392,  393,
       396,  397,  399,  401,  402,  403,  405,  408,
       410,  411,  413,  414,  415,  417,  418,  419,
       420,  421,  422,  423,  426,  431,  433,  434,
       436,  439,  440,  445,  446,  447,  449,  452,
       453);

end XML.SAX.Simple_Readers.Parser.Tables;
