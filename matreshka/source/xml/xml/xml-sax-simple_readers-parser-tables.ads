------------------------------------------------------------------------------
--                                                                          --
--                            Matreshka Project                             --
--                                                                          --
--                              XML Processor                               --
--                                                                          --
--                        Runtime Library Component                         --
--                                                                          --
------------------------------------------------------------------------------
--                                                                          --
-- Copyright Â© 2010, Vadim Godunko <vgodunko@gmail.com>                     --
-- All rights reserved.                                                     --
--                                                                          --
-- Redistribution and use in source and binary forms, with or without       --
-- modification, are permitted provided that the following conditions       --
-- are met:                                                                 --
--                                                                          --
--  * Redistributions of source code must retain the above copyright        --
--    notice, this list of conditions and the following disclaimer.         --
--                                                                          --
--  * Redistributions in binary form must reproduce the above copyright     --
--    notice, this list of conditions and the following disclaimer in the   --
--    documentation and/or other materials provided with the distribution.  --
--                                                                          --
--  * Neither the name of the Vadim Godunko, IE nor the names of its        --
--    contributors may be used to endorse or promote products derived from  --
--    this software without specific prior written permission.              --
--                                                                          --
-- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS      --
-- "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT        --
-- LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR    --
-- A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT     --
-- HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,   --
-- SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED --
-- TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR   --
-- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF   --
-- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING     --
-- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS       --
-- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.             --
--                                                                          --
------------------------------------------------------------------------------
--  $Revision$ $Date$
------------------------------------------------------------------------------

private package XML.SAX.Simple_Readers.Parser.Tables is

   pragma Preelaborate;

   type Goto_Entry is record
      Nonterm  : Integer;
      Newstate : Integer;
   end record;

   type Shift_Reduce_Entry is record
      T   : Integer;
      Act : Integer;
   end record;

   YY_Default           : constant :=    -1;
   YY_First_Shift_Entry : constant :=     0;
   YY_Accept_Code       : constant := -3001;
   YY_Error_Code        : constant := -3000;

   YY_Goto_Matrix : constant array (-1 .. 137) of Goto_Entry :=
    ((   -1,    -1), (  -10,     2), (   -3,     1), (   -2,     4),
     (   -4,     5), (  -16,    12), (  -15,    10), (   -6,     8),
     (   -5,    14), (  -16,    12), (  -15,    18), (   -7,    17),
     (  -19,    25), (  -17,    24), (   -8,    27), (  -11,    28),
     (  -29,    36), (  -28,    35), (  -27,    34), (  -26,    33),
     (  -25,    32), (  -24,    31), (  -16,    38), (  -14,    39),
     (  -18,    45), (  -46,    47), (  -16,    12), (  -15,    10),
     (   -6,    49), (  -12,    51), (  -29,    36), (  -28,    35),
     (  -27,    34), (  -26,    33), (  -25,    54), (  -16,    38),
     (  -14,    39), (  -36,    63), (  -35,    62), (  -34,    60),
     (  -33,    59), (  -32,    64), (  -42,    66), (  -41,    65),
     (  -19,    72), (  -23,    73), (  -16,    12), (  -15,    18),
     (   -9,    81), (  -13,    84), (  -30,    86), (  -17,    87),
     (  -39,    92), (  -37,    93), (  -36,    91), (  -35,    90),
     (  -42,   104), (  -20,   119), (  -16,    12), (  -15,    10),
     (   -6,   120), (  -47,   121), (  -45,   124), (  -31,   128),
     (  -30,   133), (  -17,   134), (  -38,   146), (  -39,    92),
     (  -37,    93), (  -36,    91), (  -35,    90), (  -40,   148),
     (  -45,   153), (  -43,   155), (  -45,   153), (  -43,   156),
     (  -45,   153), (  -43,   157), (  -45,   153), (  -43,   158),
     (  -45,   153), (  -43,   159), (  -45,   153), (  -43,   160),
     (  -45,   153), (  -43,   161), (  -45,   153), (  -43,   162),
     (  -29,    36), (  -28,    35), (  -27,    34), (  -26,    33),
     (  -25,    32), (  -24,   170), (  -21,   171), (  -16,    38),
     (  -14,    39), (  -16,    12), (  -15,    18), (  -49,   173),
     (  -48,   172), (  -16,   177), (  -14,   178), (   -8,   174),
     (  -45,   179), (  -31,   180), (  -37,   187), (  -36,    91),
     (  -35,    90), (  -37,   190), (  -36,    91), (  -35,    90),
     (  -45,   194), (  -44,   196), (  -29,    36), (  -28,    35),
     (  -27,    34), (  -26,    33), (  -25,    54), (  -16,    38),
     (  -14,    39), (  -49,   203), (  -16,   177), (  -14,   178),
     (   -8,   174), (  -37,   206), (  -36,    91), (  -35,    90),
     (  -44,   209), (  -22,   214), (  -45,   153), (  -43,   217),
     (  -16,    12), (  -15,    10), (   -6,   220), (  -45,   153),
     (  -43,   221), (  -16,    12), (  -15,    18));

   YY_Goto_Offset : constant array (0 .. 222) of Integer :=
    (    0,    3,    4,    4,    4,    4,    8,    8,
         8,   11,   11,   11,   11,   11,   11,   11,
        11,   13,   14,   14,   14,   15,   15,   15,
        23,   24,   24,   25,   28,   29,   29,   29,
        36,   36,   36,   36,   36,   36,   36,   36,
        36,   36,   41,   43,   43,   43,   44,   45,
        45,   45,   48,   48,   49,   49,   49,   49,
        51,   51,   51,   51,   51,   51,   55,   55,
        55,   55,   56,   56,   56,   56,   56,   56,
        56,   57,   60,   61,   61,   61,   62,   62,
        62,   62,   62,   62,   62,   62,   63,   63,
        63,   65,   65,   65,   65,   65,   66,   70,
        71,   71,   71,   71,   71,   71,   71,   71,
        71,   71,   73,   75,   77,   79,   81,   83,
        85,   87,   87,   87,   87,   87,   87,   87,
        96,   98,  103,  104,  105,  105,  105,  105,
       105,  105,  105,  105,  105,  105,  105,  105,
       105,  105,  105,  105,  105,  105,  105,  105,
       105,  105,  108,  108,  111,  111,  111,  111,
       111,  111,  111,  112,  112,  112,  112,  112,
       112,  112,  112,  112,  112,  113,  113,  113,
       113,  113,  113,  120,  120,  124,  124,  124,
       124,  124,  124,  124,  124,  124,  124,  124,
       124,  124,  124,  124,  124,  124,  127,  127,
       127,  127,  127,  127,  128,  128,  128,  128,
       128,  128,  129,  129,  129,  129,  129,  129,
       129,  129,  129,  131,  131,  131,  131,  134,
       134,  136,  136,  136,  136,  138,  138);

   YY_Rule_Length : constant array (0 .. 130) of Integer :=
    (    2,    0,    3,    4,    5,    5,    1,    1,
         1,    1,    0,    0,    8,    8,    5,    3,
         0,    3,    0,    2,    1,    0,    1,    1,
         2,    0,    0,    0,    9,    0,    5,    0,
         2,    3,    1,    3,    0,    2,    1,    0,
         1,    1,    1,    1,    1,    1,    1,    4,
         4,    5,    4,    4,    6,    5,    5,    3,
         2,    1,    0,    3,    1,    1,    1,    1,
         2,    2,    2,    1,    2,    2,    2,    1,
         4,    3,    3,    2,    3,    1,    2,    2,
         2,    1,    2,    2,    2,    1,    2,    2,
         2,    1,    5,    3,    3,    2,    0,    3,
         2,    1,    0,    3,    3,    3,    3,    3,
         3,    3,    3,    7,    6,    3,    2,    0,
         1,    1,    1,    2,    0,    7,    3,    2,
         1,    0,    1,    1,    1,    1,    1,    4,
         3,    0,    3);

   YY_Get_LHS_Rule : constant array (0 .. 130) of Integer :=
    (   -1,   -4,   -2,   -5,   -5,   -5,   -5,   -9,
        -9,   -3,   -3,  -11,  -10,  -14,  -14,  -12,
       -12,  -13,  -13,   -6,   -6,   -6,  -15,  -15,
       -16,  -18,  -20,  -22,   -7,  -23,   -7,   -7,
       -17,  -17,  -21,  -19,  -19,  -24,  -24,  -24,
       -25,  -25,  -25,  -25,  -25,  -25,  -25,  -29,
       -29,  -29,  -26,  -26,  -26,  -26,  -26,  -30,
       -31,  -31,  -31,  -27,  -32,  -32,  -32,  -32,
       -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,
       -35,  -36,  -38,  -38,  -39,  -39,  -37,  -37,
       -37,  -37,  -37,  -37,  -37,  -37,  -37,  -37,
       -37,  -37,  -33,  -33,  -40,  -40,  -40,  -28,
       -41,  -41,  -41,  -42,  -42,  -42,  -42,  -42,
       -42,  -42,  -42,  -42,  -42,  -44,  -44,  -44,
       -43,  -43,  -43,  -43,  -47,   -8,   -8,  -48,
       -48,  -48,  -49,  -49,  -49,  -49,  -49,  -46,
       -46,  -46,  -45);

   YY_Shift_Reduce_Matrix : constant array (-1 .. 463) of Shift_Reduce_Entry :=
    ((   -1,    -1), (    2,     3), (   -1,   -10), (   -1,    -1),
     (   -1,    -9), (   28,     6), (   -1, -3000), (    0, -3001),
     (   -1, -3000), (    1,     9), (    3,    13), (   23,    11),
     (   -1,   -21), (   25,    15), (   -1, -3000), (   -1, -3000),
     (    3,    13), (    6,    16), (   23,    11), (   -1,   -31),
     (   -1,    -6), (   -1,   -20), (   -1,   -22), (   -1,   -23),
     (    4,    19), (   -1, -3000), (   -1,    -2), (   21,    20),
     (   -1, -3000), (   12,    21), (   13,    22), (   16,    23),
     (   -1,   -36), (   24,    26), (   -1, -3000), (   -1,   -19),
     (   -1,   -24), (   -1,   -11), (   14,    29), (   -1, -3000),
     (   15,    30), (   -1, -3000), (    2,    44), (    3,    13),
     (    7,    40), (    8,    41), (    9,    43), (   23,    37),
     (   41,    42), (   -1,   -39), (   -1,   -25), (   10,    46),
     (   -1, -3000), (   11,    48), (   -1,  -129), (    3,    13),
     (   23,    11), (   -1,   -21), (   29,    50), (   -1,   -16),
     (   -1,   -32), (   14,    52), (   -1, -3000), (    2,    44),
     (    3,    13), (    7,    40), (    8,    41), (    9,    43),
     (   17,    53), (   23,    37), (   41,    42), (   -1, -3000),
     (   -1,   -38), (   -1,   -40), (   -1,   -41), (   -1,   -42),
     (   -1,   -43), (   -1,   -44), (   -1,   -45), (   -1,   -46),
     (   11,    55), (   18,    56), (   -1, -3000), (   31,    57),
     (   32,    58), (   33,    61), (   -1, -3000), (   11,    67),
     (   -1,   -98), (   12,    68), (   13,    69), (   -1, -3000),
     (   28,    70), (   29,    71), (   -1, -3000), (   16,    23),
     (   -1,   -36), (   -1,   -29), (   10,    74), (   11,    76),
     (   27,    75), (   -1, -3000), (   25,    77), (   -1, -3000),
     (    1,    80), (    3,    13), (   21,    78), (   23,    11),
     (   24,    79), (   -1,    -3), (   25,    82), (   -1, -3000),
     (   30,    83), (   -1,   -18), (   -1,   -33), (   -1,   -35),
     (   -1,   -37), (   12,    21), (   13,    22), (   19,    85),
     (   -1, -3000), (   11,    88), (   -1, -3000), (   -1,   -60),
     (   -1,   -61), (   -1,   -62), (   -1,   -63), (   11,    89),
     (   33,    94), (   40,    95), (   -1, -3000), (   37,    96),
     (   38,    97), (   39,    98), (   -1,   -67), (   37,    99),
     (   38,   100), (   39,   101), (   -1,   -71), (   10,   102),
     (   -1, -3000), (   10,   103), (   11,    67), (   -1, -3000),
     (   -1,   -97), (   33,   114), (   42,   105), (   43,   106),
     (   44,   107), (   45,   108), (   46,   109), (   47,   110),
     (   48,   111), (   49,   112), (   50,   113), (   -1, -3000),
     (   14,   115), (   -1, -3000), (   15,   116), (   -1, -3000),
     (   25,   117), (   -1, -3000), (   25,   118), (   -1, -3000),
     (   -1,   -26), (    3,    13), (   23,    11), (   -1,   -21),
     (   -1,  -116), (   -1,  -118), (   25,   122), (   -1, -3000),
     (   19,   123), (   -1, -3000), (   -1,    -7), (   -1,    -8),
     (   -1,    -4), (   -1,    -5), (   21,   125), (   -1, -3000),
     (   25,   126), (   -1, -3000), (    4,   127), (   -1, -3000),
     (   21,   129), (   -1,   -58), (   10,   130), (   -1, -3000),
     (   10,   131), (   22,   132), (   -1, -3000), (   12,    21),
     (   13,    22), (   19,    85), (   -1, -3000), (   37,   135),
     (   38,   136), (   39,   137), (   -1,   -81), (   37,   138),
     (   38,   139), (   39,   140), (   -1,   -85), (   37,   141),
     (   38,   142), (   39,   143), (   -1,   -89), (   34,   144),
     (   36,   145), (   -1, -3000), (   35,   147), (   -1,   -77),
     (   11,    89), (   33,    94), (   -1, -3000), (   34,   150),
     (   35,   149), (   -1, -3000), (   -1,   -64), (   -1,   -65),
     (   -1,   -66), (   -1,   -68), (   -1,   -69), (   -1,   -70),
     (   -1,   -59), (   -1,   -95), (   -1,   -96), (   19,   123),
     (   51,   151), (   52,   152), (   53,   154), (   -1, -3000),
     (   19,   123), (   51,   151), (   52,   152), (   53,   154),
     (   -1, -3000), (   19,   123), (   51,   151), (   52,   152),
     (   53,   154), (   -1, -3000), (   19,   123), (   51,   151),
     (   52,   152), (   53,   154), (   -1, -3000), (   19,   123),
     (   51,   151), (   52,   152), (   53,   154), (   -1, -3000),
     (   19,   123), (   51,   151), (   52,   152), (   53,   154),
     (   -1, -3000), (   19,   123), (   51,   151), (   52,   152),
     (   53,   154), (   -1, -3000), (   19,   123), (   51,   151),
     (   52,   152), (   53,   154), (   -1, -3000), (   33,   163),
     (   -1, -3000), (   11,   164), (   -1, -3000), (   10,   165),
     (   -1, -3000), (   10,   166), (   14,   167), (   -1, -3000),
     (   21,   168), (   -1, -3000), (   21,   169), (   -1, -3000),
     (    2,    44), (    3,    13), (    7,    40), (    8,    41),
     (    9,    43), (   23,    37), (   41,    42), (   -1,   -39),
     (    3,    13), (   23,    11), (   -1,   -30), (    2,    44),
     (    3,    13), (   21,   175), (   23,   176), (   24,    26),
     (   -1,  -121), (   19,   123), (   -1, -3000), (   21,   129),
     (   -1,   -58), (   -1,  -128), (   -1,   -15), (   21,   181),
     (   -1, -3000), (   -1,   -12), (   20,   182), (   21,   183),
     (   -1, -3000), (   -1,   -57), (   -1,   -50), (   -1,   -51),
     (   11,   184), (   -1, -3000), (   10,   185), (   -1, -3000),
     (   10,   186), (   -1, -3000), (   -1,   -78), (   -1,   -79),
     (   -1,   -80), (   -1,   -82), (   -1,   -83), (   -1,   -84),
     (   -1,   -86), (   -1,   -87), (   -1,   -88), (   -1,   -73),
     (   11,    89), (   33,    94), (   -1, -3000), (   34,   188),
     (   35,   189), (   -1, -3000), (   11,    89), (   33,    94),
     (   -1, -3000), (   34,   191), (   35,   192), (   -1, -3000),
     (   11,   193), (   -1, -3000), (   -1,   -91), (   -1,  -112),
     (   -1,  -113), (   -1,  -114), (   19,   123), (   -1, -3000),
     (   -1,   -99), (   -1,  -100), (   -1,  -101), (   -1,  -102),
     (   -1,  -103), (   -1,  -104), (   -1,  -105), (   -1,  -106),
     (   11,   195), (   -1, -3000), (   35,   197), (   -1,  -111),
     (   -1,   -47), (   -1,   -48), (   10,   198), (   -1, -3000),
     (   29,   199), (   -1, -3000), (    4,   200), (   -1, -3000),
     (    2,    44), (    3,    13), (    7,    40), (    8,    41),
     (    9,    43), (   23,    37), (   41,    42), (   -1,   -34),
     (   10,   201), (   -1, -3000), (    2,    44), (    3,    13),
     (   21,   175), (   23,   176), (   24,    26), (   26,   202),
     (   -1, -3000), (   -1,  -120), (   -1,  -122), (   -1,  -123),
     (   -1,  -124), (   -1,  -125), (   -1,  -126), (   -1,  -127),
     (   20,   204), (   21,   183), (   -1, -3000), (   -1,   -17),
     (   -1,   -55), (   -1,   -56), (   10,   205), (   -1, -3000),
     (   -1,   -53), (   -1,   -54), (   -1,   -76), (   -1,   -72),
     (   11,    89), (   33,    94), (   -1, -3000), (   -1,   -75),
     (   38,   207), (   -1, -3000), (   11,   208), (   -1, -3000),
     (   -1,   -93), (   -1,  -115), (   35,   197), (   -1,  -111),
     (   34,   210), (   35,   211), (   -1, -3000), (   11,   212),
     (   -1, -3000), (   -1,   -49), (   25,   213), (   -1, -3000),
     (   -1,   -14), (   -1,   -27), (   10,   215), (   -1, -3000),
     (   -1,  -119), (   -1,  -130), (   -1,   -52), (   -1,   -74),
     (   -1,   -90), (   -1,   -92), (   34,   216), (   35,   211),
     (   -1, -3000), (   19,   123), (   51,   151), (   52,   152),
     (   53,   154), (   -1, -3000), (   11,   218), (   -1, -3000),
     (   -1,  -110), (   21,   219), (   -1, -3000), (    3,    13),
     (   23,    11), (   -1,   -21), (   -1,  -117), (   19,   123),
     (   51,   151), (   52,   152), (   53,   154), (   -1, -3000),
     (   -1,  -108), (   -1,  -109), (    4,   222), (   -1, -3000),
     (    3,    13), (   23,    11), (   -1,   -28), (   -1,  -107),
     (   -1,   -13));

   YY_Shift_Reduce_Offset : constant array (0 .. 222) of Integer :=
    (    0,    2,    3,    4,    6,    8,   12,   14,
        15,   19,   20,   21,   22,   23,   25,   26,
        28,   32,   34,   35,   36,   37,   39,   41,
        49,   50,   52,   54,   57,   59,   60,   62,
        71,   72,   73,   74,   75,   76,   77,   78,
        79,   82,   86,   88,   91,   94,   96,   97,
       101,  103,  109,  111,  113,  114,  115,  116,
       120,  122,  123,  124,  125,  126,  130,  134,
       138,  140,  143,  144,  155,  157,  159,  161,
       163,  164,  167,  168,  169,  171,  173,  174,
       175,  176,  177,  179,  181,  183,  185,  187,
       190,  194,  198,  202,  206,  209,  211,  214,
       217,  218,  219,  220,  221,  222,  223,  224,
       225,  226,  231,  236,  241,  246,  251,  256,
       261,  266,  268,  270,  272,  275,  277,  279,
       287,  290,  296,  298,  300,  301,  302,  304,
       305,  308,  309,  310,  311,  313,  315,  317,
       318,  319,  320,  321,  322,  323,  324,  325,
       326,  327,  330,  333,  336,  339,  341,  342,
       343,  344,  345,  347,  348,  349,  350,  351,
       352,  353,  354,  355,  357,  359,  360,  361,
       363,  365,  367,  375,  377,  384,  385,  386,
       387,  388,  389,  390,  391,  394,  395,  396,
       397,  399,  400,  401,  402,  403,  406,  407,
       409,  411,  412,  413,  415,  418,  420,  421,
       423,  424,  425,  427,  428,  429,  430,  431,
       432,  433,  436,  441,  443,  444,  446,  449,
       450,  455,  456,  457,  459,  462,  463);

end XML.SAX.Simple_Readers.Parser.Tables;
