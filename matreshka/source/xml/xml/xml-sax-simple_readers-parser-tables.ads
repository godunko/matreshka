------------------------------------------------------------------------------
--                                                                          --
--                            Matreshka Project                             --
--                                                                          --
--                              XML Processor                               --
--                                                                          --
--                        Runtime Library Component                         --
--                                                                          --
------------------------------------------------------------------------------
--                                                                          --
-- Copyright Â© 2010, Vadim Godunko <vgodunko@gmail.com>                     --
-- All rights reserved.                                                     --
--                                                                          --
-- Redistribution and use in source and binary forms, with or without       --
-- modification, are permitted provided that the following conditions       --
-- are met:                                                                 --
--                                                                          --
--  * Redistributions of source code must retain the above copyright        --
--    notice, this list of conditions and the following disclaimer.         --
--                                                                          --
--  * Redistributions in binary form must reproduce the above copyright     --
--    notice, this list of conditions and the following disclaimer in the   --
--    documentation and/or other materials provided with the distribution.  --
--                                                                          --
--  * Neither the name of the Vadim Godunko, IE nor the names of its        --
--    contributors may be used to endorse or promote products derived from  --
--    this software without specific prior written permission.              --
--                                                                          --
-- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS      --
-- "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT        --
-- LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR    --
-- A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT     --
-- HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,   --
-- SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED --
-- TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR   --
-- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF   --
-- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING     --
-- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS       --
-- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.             --
--                                                                          --
------------------------------------------------------------------------------
--  $Revision$ $Date$
------------------------------------------------------------------------------

private package XML.SAX.Simple_Readers.Parser.Tables is

   pragma Preelaborate;

   type Goto_Entry is record
      Nonterm  : Integer;
      Newstate : Integer;
   end record;

   type Shift_Reduce_Entry is record
      T   : Integer;
      Act : Integer;
   end record;

   YY_Default           : constant :=    -1;
   YY_First_Shift_Entry : constant :=     0;
   YY_Accept_Code       : constant := -3001;
   YY_Error_Code        : constant := -3000;

   YY_Goto_Matrix : constant array (-1 .. 135) of Goto_Entry :=
    ((   -1,    -1), (   -3,     1), (   -2,     2), (  -10,     3),
     (   -4,     5), (  -16,    12), (  -15,    10), (   -6,     8),
     (   -5,    14), (  -16,    12), (  -15,    18), (   -7,    17),
     (  -19,    25), (  -17,    24), (   -8,    27), (  -11,    28),
     (  -29,    36), (  -28,    35), (  -27,    34), (  -26,    33),
     (  -25,    32), (  -24,    31), (  -16,    38), (  -14,    39),
     (  -18,    45), (  -55,    47), (  -16,    12), (  -15,    10),
     (   -6,    49), (  -12,    51), (  -29,    36), (  -28,    35),
     (  -27,    34), (  -26,    33), (  -25,    54), (  -16,    38),
     (  -14,    39), (  -32,    57), (  -42,    58), (  -19,    63),
     (  -23,    64), (  -60,    68), (  -16,    12), (  -15,    18),
     (   -9,    73), (  -13,    76), (  -30,    78), (  -17,    79),
     (  -37,    87), (  -36,    86), (  -35,    84), (  -34,    83),
     (  -33,    88), (  -44,    90), (  -43,    89), (  -20,    96),
     (  -16,    12), (  -15,    10), (   -6,    97), (  -56,    98),
     (  -59,    99), (  -31,   104), (  -30,   109), (  -17,   110),
     (  -40,   114), (  -38,   115), (  -37,   113), (  -36,   112),
     (  -44,   126), (  -29,    36), (  -28,    35), (  -27,    34),
     (  -26,    33), (  -25,    32), (  -24,   142), (  -21,   143),
     (  -16,    38), (  -14,    39), (  -16,    12), (  -15,    18),
     (  -58,   145), (  -57,   144), (  -16,   149), (  -14,   150),
     (   -8,   146), (  -39,   170), (  -40,   114), (  -38,   115),
     (  -37,   113), (  -36,   112), (  -41,   172), (  -45,   175),
     (  -47,   176), (  -48,   177), (  -49,   178), (  -50,   179),
     (  -51,   180), (  -52,   181), (  -53,   182), (  -29,    36),
     (  -28,    35), (  -27,    34), (  -26,    33), (  -25,    54),
     (  -16,    38), (  -14,    39), (  -58,   190), (  -16,   149),
     (  -14,   150), (   -8,   146), (  -38,   193), (  -37,   113),
     (  -36,   112), (  -38,   196), (  -37,   113), (  -36,   112),
     (  -46,   204), (  -46,   205), (  -46,   206), (  -46,   207),
     (  -46,   208), (  -46,   209), (  -46,   210), (  -46,   211),
     (  -54,   213), (  -22,   216), (  -38,   218), (  -37,   113),
     (  -36,   112), (  -54,   222), (  -16,    12), (  -15,    10),
     (   -6,   227), (  -46,   229), (  -16,    12), (  -15,    18),
     (  -46,   232));

   YY_Goto_Offset : constant array (0 .. 232) of Integer :=
    (    0,    2,    4,    4,    4,    4,    8,    8,
         8,   11,   11,   11,   11,   11,   11,   11,
        11,   13,   14,   14,   14,   15,   15,   15,
        23,   24,   24,   25,   28,   29,   29,   29,
        36,   36,   36,   36,   36,   36,   36,   36,
        36,   36,   37,   38,   38,   38,   39,   40,
        40,   41,   44,   44,   45,   45,   45,   45,
        47,   47,   52,   54,   54,   54,   54,   54,
        55,   58,   59,   59,   60,   60,   60,   60,
        60,   60,   60,   60,   60,   60,   61,   61,
        61,   63,   63,   63,   63,   63,   67,   67,
        67,   67,   68,   68,   68,   68,   68,   68,
        68,   77,   79,   84,   84,   84,   84,   84,
        84,   84,   84,   84,   84,   84,   84,   84,
        84,   84,   84,   84,   85,   89,   90,   90,
        90,   90,   90,   90,   90,   90,   90,   90,
        91,   92,   93,   94,   95,   96,   97,   98,
        98,   98,   98,   98,   98,   98,   98,  105,
       105,  109,  109,  109,  109,  109,  109,  109,
       109,  109,  109,  109,  109,  109,  109,  109,
       109,  109,  109,  109,  109,  109,  109,  109,
       109,  109,  112,  112,  115,  115,  115,  115,
       116,  117,  118,  119,  120,  121,  122,  123,
       123,  124,  124,  124,  124,  125,  125,  125,
       125,  125,  125,  125,  128,  128,  128,  128,
       128,  128,  128,  128,  128,  128,  128,  128,
       128,  128,  128,  128,  128,  129,  129,  129,
       129,  132,  132,  132,  132,  132,  132,  132,
       133,  133,  133,  133,  135,  136,  136,  136,
       136);

   YY_Rule_Length : constant array (0 .. 142) of Integer :=
    (    2,    0,    3,    4,    5,    5,    1,    1,
         1,    1,    1,    0,    0,    8,    8,    5,
         3,    0,    3,    0,    2,    1,    0,    1,
         1,    2,    0,    0,    0,    9,    0,    5,
         0,    2,    3,    1,    3,    0,    2,    1,
         0,    1,    1,    1,    1,    1,    1,    1,
         4,    4,    5,    4,    4,    6,    5,    5,
         3,    2,    1,    0,    0,    4,    1,    1,
         1,    1,    2,    2,    2,    1,    2,    2,
         2,    1,    4,    3,    3,    2,    3,    1,
         2,    2,    2,    1,    2,    2,    2,    1,
         2,    2,    2,    1,    5,    3,    3,    2,
         0,    0,    4,    2,    1,    0,    0,    4,
         0,    4,    0,    4,    0,    4,    0,    4,
         0,    4,    0,    4,    0,    4,    7,    6,
         3,    2,    0,    1,    1,    2,    1,    0,
         7,    3,    2,    1,    0,    1,    1,    1,
         1,    1,    0,    5,    0,    4,    0);

   YY_Get_LHS_Rule : constant array (0 .. 142) of Integer :=
    (   -1,   -3,   -2,   -5,   -5,   -5,   -5,   -9,
        -9,   -9,   -4,   -4,  -11,  -10,  -14,  -14,
       -12,  -12,  -13,  -13,   -6,   -6,   -6,  -15,
       -15,  -16,  -18,  -20,  -22,   -7,  -23,   -7,
        -7,  -17,  -17,  -21,  -19,  -19,  -24,  -24,
       -24,  -25,  -25,  -25,  -25,  -25,  -25,  -25,
       -29,  -29,  -29,  -26,  -26,  -26,  -26,  -26,
       -30,  -31,  -31,  -31,  -32,  -27,  -33,  -33,
       -33,  -33,  -35,  -35,  -35,  -35,  -35,  -35,
       -35,  -35,  -36,  -37,  -39,  -39,  -40,  -40,
       -38,  -38,  -38,  -38,  -38,  -38,  -38,  -38,
       -38,  -38,  -38,  -38,  -34,  -34,  -41,  -41,
       -41,  -42,  -28,  -43,  -43,  -43,  -45,  -44,
       -47,  -44,  -48,  -44,  -49,  -44,  -50,  -44,
       -51,  -44,  -52,  -44,  -53,  -44,  -44,  -44,
       -54,  -54,  -54,  -46,  -46,  -46,  -46,  -56,
        -8,   -8,  -57,  -57,  -57,  -58,  -58,  -58,
       -58,  -58,  -59,  -55,  -60,  -55,  -55);

   YY_Shift_Reduce_Matrix : constant array (-1 .. 471) of Shift_Reduce_Entry :=
    ((   -1,    -1), (   -1,    -1), (    2,     4), (   -1,   -11),
     (    0, -3001), (   -1, -3000), (   -1,   -10), (   28,     7),
     (   -1, -3000), (    1,     9), (    3,    13), (   23,    11),
     (   -1,   -22), (   -1, -3000), (   25,    15), (   -1, -3000),
     (    3,    13), (    6,    16), (   23,    11), (   -1,   -32),
     (   -1,    -6), (   -1,   -21), (   -1,   -23), (   -1,   -24),
     (    4,    19), (   -1, -3000), (   -1,    -2), (   21,    20),
     (   -1, -3000), (   12,    21), (   13,    22), (   16,    23),
     (   -1,   -37), (   24,    26), (   -1, -3000), (   -1,   -20),
     (   -1,   -25), (   -1,   -12), (   14,    29), (   -1, -3000),
     (   15,    30), (   -1, -3000), (    2,    44), (    3,    13),
     (    7,    40), (    8,    41), (    9,    43), (   23,    37),
     (   41,    42), (   -1,   -40), (   -1,   -26), (   10,    46),
     (   -1, -3000), (   11,    48), (   -1,  -142), (    3,    13),
     (   23,    11), (   -1,   -22), (   29,    50), (   -1,   -17),
     (   -1,   -33), (   14,    52), (   -1, -3000), (    2,    44),
     (    3,    13), (    7,    40), (    8,    41), (    9,    43),
     (   17,    53), (   23,    37), (   41,    42), (   -1, -3000),
     (   -1,   -39), (   -1,   -41), (   -1,   -42), (   -1,   -43),
     (   -1,   -44), (   -1,   -45), (   -1,   -46), (   -1,   -47),
     (   11,    55), (   18,    56), (   -1, -3000), (   -1,   -60),
     (   -1,   -97), (   12,    59), (   13,    60), (   -1, -3000),
     (   28,    61), (   29,    62), (   -1, -3000), (   16,    23),
     (   -1,   -37), (   -1,   -30), (   10,    65), (   11,    67),
     (   27,    66), (   -1, -3000), (   -1,  -140), (    1,    72),
     (    3,    13), (   21,    69), (   23,    11), (   24,    71),
     (   26,    70), (   -1,    -3), (   25,    74), (   -1, -3000),
     (   30,    75), (   -1,   -19), (   -1,   -34), (   -1,   -36),
     (   -1,   -38), (   12,    21), (   13,    22), (   19,    77),
     (   -1, -3000), (   11,    80), (   -1, -3000), (   31,    81),
     (   32,    82), (   33,    85), (   -1, -3000), (   11,    91),
     (   -1,  -101), (   14,    92), (   -1, -3000), (   15,    93),
     (   -1, -3000), (   25,    94), (   -1, -3000), (   25,    95),
     (   -1, -3000), (   -1,   -27), (    3,    13), (   23,    11),
     (   -1,   -22), (   -1,  -127), (   -1,  -129), (   -1,  -138),
     (   25,   100), (   -1, -3000), (   -1,    -7), (   -1,    -8),
     (   -1,    -9), (   -1,    -4), (   -1,    -5), (   21,   101),
     (   -1, -3000), (   25,   102), (   -1, -3000), (    4,   103),
     (   -1, -3000), (   21,   105), (   -1,   -59), (   10,   106),
     (   -1, -3000), (   10,   107), (   22,   108), (   -1, -3000),
     (   12,    21), (   13,    22), (   19,    77), (   -1, -3000),
     (   -1,   -62), (   -1,   -63), (   -1,   -64), (   -1,   -65),
     (   11,   111), (   33,   116), (   40,   117), (   -1, -3000),
     (   37,   118), (   38,   119), (   39,   120), (   -1,   -69),
     (   37,   121), (   38,   122), (   39,   123), (   -1,   -73),
     (   10,   124), (   -1, -3000), (   10,   125), (   11,    91),
     (   -1, -3000), (   -1,  -100), (   33,   136), (   42,   127),
     (   43,   128), (   44,   129), (   45,   130), (   46,   131),
     (   47,   132), (   48,   133), (   49,   134), (   50,   135),
     (   -1, -3000), (   10,   137), (   -1, -3000), (   10,   138),
     (   14,   139), (   -1, -3000), (   21,   140), (   -1, -3000),
     (   21,   141), (   -1, -3000), (    2,    44), (    3,    13),
     (    7,    40), (    8,    41), (    9,    43), (   23,    37),
     (   41,    42), (   -1,   -40), (    3,    13), (   23,    11),
     (   -1,   -31), (    2,    44), (    3,    13), (   21,   147),
     (   23,   148), (   24,    26), (   -1,  -132), (   25,   151),
     (   -1, -3000), (   21,   152), (   -1, -3000), (   -1,   -16),
     (   21,   153), (   -1, -3000), (   -1,   -13), (   20,   154),
     (   21,   155), (   -1, -3000), (   -1,   -58), (   -1,   -51),
     (   -1,   -52), (   11,   156), (   -1, -3000), (   10,   157),
     (   -1, -3000), (   10,   158), (   -1, -3000), (   37,   159),
     (   38,   160), (   39,   161), (   -1,   -83), (   37,   162),
     (   38,   163), (   39,   164), (   -1,   -87), (   37,   165),
     (   38,   166), (   39,   167), (   -1,   -91), (   34,   168),
     (   36,   169), (   -1, -3000), (   35,   171), (   -1,   -79),
     (   11,   111), (   33,   116), (   -1, -3000), (   34,   174),
     (   35,   173), (   -1, -3000), (   -1,   -66), (   -1,   -67),
     (   -1,   -68), (   -1,   -70), (   -1,   -71), (   -1,   -72),
     (   -1,   -61), (   -1,   -98), (   -1,   -99), (   -1,  -102),
     (   -1,  -104), (   -1,  -106), (   -1,  -108), (   -1,  -110),
     (   -1,  -112), (   -1,  -114), (   -1,  -116), (   33,   183),
     (   -1, -3000), (   11,   184), (   -1, -3000), (   -1,   -48),
     (   -1,   -49), (   10,   185), (   -1, -3000), (   29,   186),
     (   -1, -3000), (    4,   187), (   -1, -3000), (    2,    44),
     (    3,    13), (    7,    40), (    8,    41), (    9,    43),
     (   23,    37), (   41,    42), (   -1,   -35), (   10,   188),
     (   -1, -3000), (    2,    44), (    3,    13), (   21,   147),
     (   23,   148), (   24,    26), (   26,   189), (   -1, -3000),
     (   -1,  -131), (   -1,  -133), (   -1,  -134), (   -1,  -135),
     (   -1,  -136), (   -1,  -137), (   21,   191), (   -1, -3000),
     (   -1,  -141), (   -1,   -18), (   -1,   -56), (   -1,   -57),
     (   10,   192), (   -1, -3000), (   -1,   -54), (   -1,   -55),
     (   -1,   -80), (   -1,   -81), (   -1,   -82), (   -1,   -84),
     (   -1,   -85), (   -1,   -86), (   -1,   -88), (   -1,   -89),
     (   -1,   -90), (   -1,   -75), (   11,   111), (   33,   116),
     (   -1, -3000), (   34,   194), (   35,   195), (   -1, -3000),
     (   11,   111), (   33,   116), (   -1, -3000), (   34,   197),
     (   35,   198), (   -1, -3000), (   11,   199), (   -1, -3000),
     (   -1,   -93), (   21,   203), (   51,   200), (   52,   201),
     (   53,   202), (   -1, -3000), (   21,   203), (   51,   200),
     (   52,   201), (   53,   202), (   -1, -3000), (   21,   203),
     (   51,   200), (   52,   201), (   53,   202), (   -1, -3000),
     (   21,   203), (   51,   200), (   52,   201), (   53,   202),
     (   -1, -3000), (   21,   203), (   51,   200), (   52,   201),
     (   53,   202), (   -1, -3000), (   21,   203), (   51,   200),
     (   52,   201), (   53,   202), (   -1, -3000), (   21,   203),
     (   51,   200), (   52,   201), (   53,   202), (   -1, -3000),
     (   21,   203), (   51,   200), (   52,   201), (   53,   202),
     (   -1, -3000), (   11,   212), (   -1, -3000), (   35,   214),
     (   -1,  -122), (   -1,   -50), (   25,   215), (   -1, -3000),
     (   -1,   -15), (   -1,   -28), (   10,   217), (   -1, -3000),
     (   -1,  -130), (   -1,  -139), (   -1,   -53), (   -1,   -78),
     (   -1,   -74), (   11,   111), (   33,   116), (   -1, -3000),
     (   -1,   -77), (   38,   219), (   -1, -3000), (   11,   220),
     (   -1, -3000), (   -1,   -95), (   -1,  -123), (   -1,  -124),
     (   21,   221), (   -1, -3000), (   -1,  -126), (   -1,  -103),
     (   -1,  -105), (   -1,  -107), (   -1,  -109), (   -1,  -111),
     (   -1,  -113), (   -1,  -115), (   -1,  -117), (   35,   214),
     (   -1,  -122), (   34,   223), (   35,   224), (   -1, -3000),
     (   11,   225), (   -1, -3000), (   21,   226), (   -1, -3000),
     (    3,    13), (   23,    11), (   -1,   -22), (   -1,  -128),
     (   -1,   -76), (   -1,   -92), (   -1,   -94), (   -1,  -125),
     (   34,   228), (   35,   224), (   -1, -3000), (   21,   203),
     (   51,   200), (   52,   201), (   53,   202), (   -1, -3000),
     (   11,   230), (   -1, -3000), (   -1,  -121), (    4,   231),
     (   -1, -3000), (    3,    13), (   23,    11), (   -1,   -29),
     (   21,   203), (   51,   200), (   52,   201), (   53,   202),
     (   -1, -3000), (   -1,  -119), (   -1,  -120), (   -1,   -14),
     (   -1,  -118));

   YY_Shift_Reduce_Offset : constant array (0 .. 232) of Integer :=
    (    0,    1,    3,    5,    6,    8,   12,   13,
        15,   19,   20,   21,   22,   23,   25,   26,
        28,   32,   34,   35,   36,   37,   39,   41,
        49,   50,   52,   54,   57,   59,   60,   62,
        71,   72,   73,   74,   75,   76,   77,   78,
        79,   82,   83,   84,   87,   90,   92,   93,
        97,   98,  105,  107,  109,  110,  111,  112,
       116,  118,  122,  124,  126,  128,  130,  132,
       133,  136,  137,  138,  139,  141,  142,  143,
       144,  145,  146,  148,  150,  152,  154,  156,
       159,  163,  164,  165,  166,  167,  171,  175,
       179,  181,  184,  185,  196,  198,  201,  203,
       205,  213,  216,  222,  224,  226,  227,  229,
       230,  233,  234,  235,  236,  238,  240,  242,
       246,  250,  254,  257,  259,  262,  265,  266,
       267,  268,  269,  270,  271,  272,  273,  274,
       275,  276,  277,  278,  279,  280,  281,  282,
       284,  286,  287,  288,  290,  292,  294,  302,
       304,  311,  312,  313,  314,  315,  316,  317,
       319,  320,  321,  322,  323,  325,  326,  327,
       328,  329,  330,  331,  332,  333,  334,  335,
       336,  337,  340,  343,  346,  349,  351,  352,
       357,  362,  367,  372,  377,  382,  387,  392,
       394,  396,  397,  399,  400,  401,  403,  404,
       405,  406,  407,  408,  411,  412,  414,  416,
       417,  418,  419,  421,  422,  423,  424,  425,
       426,  427,  428,  429,  430,  432,  435,  437,
       439,  442,  443,  444,  445,  446,  447,  450,
       455,  457,  458,  460,  463,  468,  469,  470,
       471);

end XML.SAX.Simple_Readers.Parser.Tables;
