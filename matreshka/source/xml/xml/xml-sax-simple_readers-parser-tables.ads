------------------------------------------------------------------------------
--                                                                          --
--                            Matreshka Project                             --
--                                                                          --
--                              XML Processor                               --
--                                                                          --
--                        Runtime Library Component                         --
--                                                                          --
------------------------------------------------------------------------------
--                                                                          --
-- Copyright Â© 2010, Vadim Godunko <vgodunko@gmail.com>                     --
-- All rights reserved.                                                     --
--                                                                          --
-- Redistribution and use in source and binary forms, with or without       --
-- modification, are permitted provided that the following conditions       --
-- are met:                                                                 --
--                                                                          --
--  * Redistributions of source code must retain the above copyright        --
--    notice, this list of conditions and the following disclaimer.         --
--                                                                          --
--  * Redistributions in binary form must reproduce the above copyright     --
--    notice, this list of conditions and the following disclaimer in the   --
--    documentation and/or other materials provided with the distribution.  --
--                                                                          --
--  * Neither the name of the Vadim Godunko, IE nor the names of its        --
--    contributors may be used to endorse or promote products derived from  --
--    this software without specific prior written permission.              --
--                                                                          --
-- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS      --
-- "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT        --
-- LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR    --
-- A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT     --
-- HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,   --
-- SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED --
-- TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR   --
-- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF   --
-- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING     --
-- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS       --
-- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.             --
--                                                                          --
------------------------------------------------------------------------------
--  $Revision$ $Date$
------------------------------------------------------------------------------

private package XML.SAX.Simple_Readers.Parser.Tables is

   pragma Preelaborate;

   type Goto_Entry is record
      Nonterm  : Integer;
      Newstate : Integer;
   end record;

   type Shift_Reduce_Entry is record
      T   : Integer;
      Act : Integer;
   end record;

   YY_Default           : constant :=    -1;
   YY_First_Shift_Entry : constant :=     0;
   YY_Accept_Code       : constant := -3001;
   YY_Error_Code        : constant := -3000;

   YY_Goto_Matrix : constant array (-1 .. 134) of Goto_Entry :=
    ((   -1,    -1), (   -7,     2), (   -3,     1), (   -2,     4),
     (  -13,     8), (  -12,     6), (   -4,     5), (  -13,     8),
     (  -12,    14), (   -5,    13), (  -16,    21), (  -14,    20),
     (   -6,    23), (  -26,    32), (  -25,    31), (  -24,    30),
     (  -23,    29), (  -22,    28), (  -21,    27), (  -13,    34),
     (  -11,    35), (  -15,    41), (  -43,    43), (  -13,     8),
     (  -12,     6), (   -4,    45), (   -8,    46), (  -26,    32),
     (  -25,    31), (  -24,    30), (  -23,    29), (  -22,    49),
     (  -13,    34), (  -11,    35), (  -33,    58), (  -32,    57),
     (  -31,    55), (  -30,    54), (  -29,    59), (  -39,    61),
     (  -38,    60), (  -16,    67), (  -20,    68), (  -13,     8),
     (  -12,    14), (   -9,    74), (  -27,    76), (  -14,    77),
     (  -36,    82), (  -34,    83), (  -33,    81), (  -32,    80),
     (  -39,    94), (  -17,   109), (  -13,     8), (  -12,     6),
     (   -4,   110), (  -44,   111), (  -42,   114), (  -10,   117),
     (  -28,   118), (  -27,   123), (  -14,   124), (  -35,   136),
     (  -36,    82), (  -34,    83), (  -33,    81), (  -32,    80),
     (  -37,   138), (  -42,   143), (  -40,   145), (  -42,   143),
     (  -40,   146), (  -42,   143), (  -40,   147), (  -42,   143),
     (  -40,   148), (  -42,   143), (  -40,   149), (  -42,   143),
     (  -40,   150), (  -42,   143), (  -40,   151), (  -42,   143),
     (  -40,   152), (  -26,    32), (  -25,    31), (  -24,    30),
     (  -23,    29), (  -22,    28), (  -21,   160), (  -18,   161),
     (  -13,    34), (  -11,    35), (  -13,     8), (  -12,    14),
     (  -46,   163), (  -45,   162), (  -13,   167), (  -11,   168),
     (   -6,   164), (  -42,   169), (  -28,   170), (  -34,   179),
     (  -33,    81), (  -32,    80), (  -34,   182), (  -33,    81),
     (  -32,    80), (  -42,   186), (  -41,   188), (  -26,    32),
     (  -25,    31), (  -24,    30), (  -23,    29), (  -22,    49),
     (  -13,    34), (  -11,    35), (  -46,   195), (  -13,   167),
     (  -11,   168), (   -6,   164), (  -34,   199), (  -33,    81),
     (  -32,    80), (  -41,   202), (  -19,   207), (  -42,   143),
     (  -40,   210), (  -13,     8), (  -12,     6), (   -4,   213),
     (  -42,   143), (  -40,   214), (  -13,     8), (  -12,    14));

   YY_Goto_Offset : constant array (0 .. 215) of Integer :=
    (    0,    3,    6,    6,    6,    6,    9,    9,
         9,    9,    9,    9,    9,   11,   12,   12,
        12,   12,   12,   12,   20,   21,   21,   22,
        25,   26,   26,   26,   33,   33,   33,   33,
        33,   33,   33,   33,   33,   33,   38,   40,
        40,   40,   41,   42,   42,   42,   44,   45,
        45,   45,   45,   47,   47,   47,   47,   47,
        47,   51,   51,   51,   51,   52,   52,   52,
        52,   52,   52,   52,   53,   56,   57,   57,
        57,   58,   58,   59,   60,   60,   60,   62,
        62,   62,   62,   62,   63,   67,   68,   68,
        68,   68,   68,   68,   68,   68,   68,   68,
        70,   72,   74,   76,   78,   80,   82,   84,
        84,   84,   84,   84,   84,   84,   93,   95,
       100,  101,  102,  102,  102,  102,  102,  102,
       102,  102,  102,  102,  102,  102,  102,  102,
       102,  102,  102,  102,  102,  102,  102,  102,
       105,  105,  108,  108,  108,  108,  108,  108,
       108,  109,  109,  109,  109,  109,  109,  109,
       109,  109,  109,  110,  110,  110,  110,  110,
       110,  117,  117,  121,  121,  121,  121,  121,
       121,  121,  121,  121,  121,  121,  121,  121,
       121,  121,  121,  121,  121,  121,  124,  124,
       124,  124,  124,  124,  125,  125,  125,  125,
       125,  125,  126,  126,  126,  126,  126,  126,
       126,  126,  126,  126,  128,  128,  128,  128,
       131,  131,  133,  133,  133,  133,  135,  135);

   YY_Rule_Length : constant array (0 .. 123) of Integer :=
    (    2,    5,    1,    0,    0,    8,    8,    5,
         3,    0,    3,    0,    2,    1,    0,    1,
         1,    2,    0,    0,    0,    9,    0,    5,
         0,    2,    3,    1,    3,    0,    2,    1,
         0,    1,    1,    1,    1,    1,    1,    1,
         4,    4,    5,    4,    4,    6,    5,    5,
         3,    2,    1,    0,    3,    1,    1,    1,
         1,    2,    2,    2,    1,    2,    2,    2,
         1,    4,    3,    3,    2,    3,    1,    2,
         2,    2,    1,    2,    2,    2,    1,    2,
         2,    2,    1,    5,    3,    3,    2,    0,
         3,    2,    1,    0,    3,    3,    3,    3,
         3,    3,    3,    3,    7,    6,    3,    2,
         0,    1,    1,    1,    2,    0,    7,    3,
         2,    1,    0,    1,    1,    1,    1,    1,
         4,    3,    0,    3);

   YY_Get_LHS_Rule : constant array (0 .. 123) of Integer :=
    (   -1,   -2,   -3,   -3,   -8,   -7,  -11,  -11,
        -9,   -9,  -10,  -10,   -4,   -4,   -4,  -12,
       -12,  -13,  -15,  -17,  -19,   -5,  -20,   -5,
        -5,  -14,  -14,  -18,  -16,  -16,  -21,  -21,
       -21,  -22,  -22,  -22,  -22,  -22,  -22,  -22,
       -26,  -26,  -26,  -23,  -23,  -23,  -23,  -23,
       -27,  -28,  -28,  -28,  -24,  -29,  -29,  -29,
       -29,  -31,  -31,  -31,  -31,  -31,  -31,  -31,
       -31,  -32,  -33,  -35,  -35,  -36,  -36,  -34,
       -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,
       -34,  -34,  -34,  -30,  -30,  -37,  -37,  -37,
       -25,  -38,  -38,  -38,  -39,  -39,  -39,  -39,
       -39,  -39,  -39,  -39,  -39,  -39,  -41,  -41,
       -41,  -40,  -40,  -40,  -40,  -44,   -6,   -6,
       -45,  -45,  -45,  -46,  -46,  -46,  -46,  -46,
       -43,  -43,  -43,  -42);

   YY_Shift_Reduce_Matrix : constant array (-1 .. 452) of Shift_Reduce_Entry :=
    ((   -1,    -1), (    2,     3), (   -1,    -3), (    3,     9),
     (   23,     7), (   -1,   -14), (   -1,    -2), (   28,    10),
     (   -1, -3000), (    0, -3001), (   -1, -3000), (    3,     9),
     (    6,    12), (   23,     7), (   -1,   -24), (   -1,   -13),
     (   -1,   -15), (   -1,   -16), (    4,    15), (   -1, -3000),
     (   25,    16), (   -1, -3000), (   -1, -3000), (   12,    17),
     (   13,    18), (   16,    19), (   -1,   -29), (   24,    22),
     (   -1, -3000), (   -1,   -12), (   -1,   -17), (   21,    24),
     (   -1, -3000), (   14,    25), (   -1, -3000), (   15,    26),
     (   -1, -3000), (    2,    40), (    3,     9), (    7,    36),
     (    8,    37), (    9,    39), (   23,    33), (   41,    38),
     (   -1,   -32), (   -1,   -18), (   10,    42), (   -1, -3000),
     (   11,    44), (   -1,  -122), (    3,     9), (   23,     7),
     (   -1,   -14), (   -1,    -4), (   -1,   -25), (   14,    47),
     (   -1, -3000), (    2,    40), (    3,     9), (    7,    36),
     (    8,    37), (    9,    39), (   17,    48), (   23,    33),
     (   41,    38), (   -1, -3000), (   -1,   -31), (   -1,   -33),
     (   -1,   -34), (   -1,   -35), (   -1,   -36), (   -1,   -37),
     (   -1,   -38), (   -1,   -39), (   11,    50), (   18,    51),
     (   -1, -3000), (   31,    52), (   32,    53), (   33,    56),
     (   -1, -3000), (   11,    62), (   -1,   -91), (   12,    63),
     (   13,    64), (   -1, -3000), (   28,    65), (   29,    66),
     (   -1, -3000), (   16,    19), (   -1,   -29), (   -1,   -22),
     (   10,    69), (   11,    71), (   27,    70), (   -1, -3000),
     (   25,    72), (   -1, -3000), (    3,     9), (   23,     7),
     (   -1,    -1), (   29,    73), (   -1,    -9), (   -1,   -26),
     (   -1,   -28), (   -1,   -30), (   12,    17), (   13,    18),
     (   19,    75), (   -1, -3000), (   11,    78), (   -1, -3000),
     (   -1,   -53), (   -1,   -54), (   -1,   -55), (   -1,   -56),
     (   11,    79), (   33,    84), (   40,    85), (   -1, -3000),
     (   37,    86), (   38,    87), (   39,    88), (   -1,   -60),
     (   37,    89), (   38,    90), (   39,    91), (   -1,   -64),
     (   10,    92), (   -1, -3000), (   10,    93), (   11,    62),
     (   -1, -3000), (   -1,   -90), (   33,   104), (   42,    95),
     (   43,    96), (   44,    97), (   45,    98), (   46,    99),
     (   47,   100), (   48,   101), (   49,   102), (   50,   103),
     (   -1, -3000), (   14,   105), (   -1, -3000), (   15,   106),
     (   -1, -3000), (   25,   107), (   -1, -3000), (   25,   108),
     (   -1, -3000), (   -1,   -19), (    3,     9), (   23,     7),
     (   -1,   -14), (   -1,  -109), (   -1,  -111), (   25,   112),
     (   -1, -3000), (   19,   113), (   -1, -3000), (   25,   115),
     (   -1, -3000), (   30,   116), (   -1,   -11), (   21,   119),
     (   -1,   -51), (   10,   120), (   -1, -3000), (   10,   121),
     (   22,   122), (   -1, -3000), (   12,    17), (   13,    18),
     (   19,    75), (   -1, -3000), (   37,   125), (   38,   126),
     (   39,   127), (   -1,   -74), (   37,   128), (   38,   129),
     (   39,   130), (   -1,   -78), (   37,   131), (   38,   132),
     (   39,   133), (   -1,   -82), (   34,   134), (   36,   135),
     (   -1, -3000), (   35,   137), (   -1,   -70), (   11,    79),
     (   33,    84), (   -1, -3000), (   34,   140), (   35,   139),
     (   -1, -3000), (   -1,   -57), (   -1,   -58), (   -1,   -59),
     (   -1,   -61), (   -1,   -62), (   -1,   -63), (   -1,   -52),
     (   -1,   -88), (   -1,   -89), (   19,   113), (   51,   141),
     (   52,   142), (   53,   144), (   -1, -3000), (   19,   113),
     (   51,   141), (   52,   142), (   53,   144), (   -1, -3000),
     (   19,   113), (   51,   141), (   52,   142), (   53,   144),
     (   -1, -3000), (   19,   113), (   51,   141), (   52,   142),
     (   53,   144), (   -1, -3000), (   19,   113), (   51,   141),
     (   52,   142), (   53,   144), (   -1, -3000), (   19,   113),
     (   51,   141), (   52,   142), (   53,   144), (   -1, -3000),
     (   19,   113), (   51,   141), (   52,   142), (   53,   144),
     (   -1, -3000), (   19,   113), (   51,   141), (   52,   142),
     (   53,   144), (   -1, -3000), (   33,   153), (   -1, -3000),
     (   11,   154), (   -1, -3000), (   10,   155), (   -1, -3000),
     (   10,   156), (   14,   157), (   -1, -3000), (   21,   158),
     (   -1, -3000), (   21,   159), (   -1, -3000), (    2,    40),
     (    3,     9), (    7,    36), (    8,    37), (    9,    39),
     (   23,    33), (   41,    38), (   -1,   -32), (    3,     9),
     (   23,     7), (   -1,   -23), (    2,    40), (    3,     9),
     (   21,   165), (   23,   166), (   24,    22), (   -1,  -114),
     (   19,   113), (   -1, -3000), (   21,   119), (   -1,   -51),
     (   -1,  -121), (   21,   171), (   -1, -3000), (   25,   172),
     (   -1, -3000), (    4,   173), (   -1, -3000), (   20,   174),
     (   21,   175), (   -1, -3000), (   -1,   -50), (   -1,   -43),
     (   -1,   -44), (   11,   176), (   -1, -3000), (   10,   177),
     (   -1, -3000), (   10,   178), (   -1, -3000), (   -1,   -71),
     (   -1,   -72), (   -1,   -73), (   -1,   -75), (   -1,   -76),
     (   -1,   -77), (   -1,   -79), (   -1,   -80), (   -1,   -81),
     (   -1,   -66), (   11,    79), (   33,    84), (   -1, -3000),
     (   34,   180), (   35,   181), (   -1, -3000), (   11,    79),
     (   33,    84), (   -1, -3000), (   34,   183), (   35,   184),
     (   -1, -3000), (   11,   185), (   -1, -3000), (   -1,   -84),
     (   -1,  -105), (   -1,  -106), (   -1,  -107), (   19,   113),
     (   -1, -3000), (   -1,   -92), (   -1,   -93), (   -1,   -94),
     (   -1,   -95), (   -1,   -96), (   -1,   -97), (   -1,   -98),
     (   -1,   -99), (   11,   187), (   -1, -3000), (   35,   189),
     (   -1,  -104), (   -1,   -40), (   -1,   -41), (   10,   190),
     (   -1, -3000), (   29,   191), (   -1, -3000), (    4,   192),
     (   -1, -3000), (    2,    40), (    3,     9), (    7,    36),
     (    8,    37), (    9,    39), (   23,    33), (   41,    38),
     (   -1,   -27), (   10,   193), (   -1, -3000), (    2,    40),
     (    3,     9), (   21,   165), (   23,   166), (   24,    22),
     (   26,   194), (   -1, -3000), (   -1,  -113), (   -1,  -115),
     (   -1,  -116), (   -1,  -117), (   -1,  -118), (   -1,  -119),
     (   -1,  -120), (   20,   196), (   21,   175), (   -1, -3000),
     (   -1,    -8), (   21,   197), (   -1, -3000), (   -1,    -5),
     (   -1,   -48), (   -1,   -49), (   10,   198), (   -1, -3000),
     (   -1,   -46), (   -1,   -47), (   -1,   -69), (   -1,   -65),
     (   11,    79), (   33,    84), (   -1, -3000), (   -1,   -68),
     (   38,   200), (   -1, -3000), (   11,   201), (   -1, -3000),
     (   -1,   -86), (   -1,  -108), (   35,   189), (   -1,  -104),
     (   34,   203), (   35,   204), (   -1, -3000), (   11,   205),
     (   -1, -3000), (   -1,   -42), (   25,   206), (   -1, -3000),
     (   -1,    -7), (   -1,   -20), (   10,   208), (   -1, -3000),
     (   -1,  -112), (   -1,  -123), (   -1,   -10), (   -1,   -45),
     (   -1,   -67), (   -1,   -83), (   -1,   -85), (   34,   209),
     (   35,   204), (   -1, -3000), (   19,   113), (   51,   141),
     (   52,   142), (   53,   144), (   -1, -3000), (   11,   211),
     (   -1, -3000), (   -1,  -103), (   21,   212), (   -1, -3000),
     (    3,     9), (   23,     7), (   -1,   -14), (   -1,  -110),
     (   19,   113), (   51,   141), (   52,   142), (   53,   144),
     (   -1, -3000), (   -1,  -101), (   -1,  -102), (    4,   215),
     (   -1, -3000), (    3,     9), (   23,     7), (   -1,   -21),
     (   -1,  -100), (   -1,    -6));

   YY_Shift_Reduce_Offset : constant array (0 .. 215) of Integer :=
    (    0,    2,    5,    6,    8,   10,   14,   15,
        16,   17,   19,   21,   22,   26,   28,   29,
        30,   32,   34,   36,   44,   45,   47,   49,
        52,   53,   54,   56,   65,   66,   67,   68,
        69,   70,   71,   72,   73,   76,   80,   82,
        85,   88,   90,   91,   95,   97,  100,  102,
       103,  104,  105,  109,  111,  112,  113,  114,
       115,  119,  123,  127,  129,  132,  133,  144,
       146,  148,  150,  152,  153,  156,  157,  158,
       160,  162,  164,  166,  168,  170,  173,  177,
       181,  185,  189,  192,  194,  197,  200,  201,
       202,  203,  204,  205,  206,  207,  208,  209,
       214,  219,  224,  229,  234,  239,  244,  249,
       251,  253,  255,  258,  260,  262,  270,  273,
       279,  281,  283,  284,  286,  288,  290,  293,
       294,  295,  296,  298,  300,  302,  303,  304,
       305,  306,  307,  308,  309,  310,  311,  312,
       315,  318,  321,  324,  326,  327,  328,  329,
       330,  332,  333,  334,  335,  336,  337,  338,
       339,  340,  342,  344,  345,  346,  348,  350,
       352,  360,  362,  369,  370,  371,  372,  373,
       374,  375,  376,  379,  380,  382,  383,  384,
       385,  387,  388,  389,  390,  391,  394,  395,
       397,  399,  400,  401,  403,  406,  408,  409,
       411,  412,  413,  415,  416,  417,  418,  419,
       420,  421,  422,  425,  430,  432,  433,  435,
       438,  439,  444,  445,  446,  448,  451,  452);

end XML.SAX.Simple_Readers.Parser.Tables;
