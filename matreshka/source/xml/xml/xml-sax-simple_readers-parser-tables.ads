------------------------------------------------------------------------------
--                                                                          --
--                            Matreshka Project                             --
--                                                                          --
--                              XML Processor                               --
--                                                                          --
--                        Runtime Library Component                         --
--                                                                          --
------------------------------------------------------------------------------
--                                                                          --
-- Copyright Â© 2010, Vadim Godunko <vgodunko@gmail.com>                     --
-- All rights reserved.                                                     --
--                                                                          --
-- Redistribution and use in source and binary forms, with or without       --
-- modification, are permitted provided that the following conditions       --
-- are met:                                                                 --
--                                                                          --
--  * Redistributions of source code must retain the above copyright        --
--    notice, this list of conditions and the following disclaimer.         --
--                                                                          --
--  * Redistributions in binary form must reproduce the above copyright     --
--    notice, this list of conditions and the following disclaimer in the   --
--    documentation and/or other materials provided with the distribution.  --
--                                                                          --
--  * Neither the name of the Vadim Godunko, IE nor the names of its        --
--    contributors may be used to endorse or promote products derived from  --
--    this software without specific prior written permission.              --
--                                                                          --
-- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS      --
-- "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT        --
-- LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR    --
-- A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT     --
-- HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,   --
-- SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED --
-- TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR   --
-- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF   --
-- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING     --
-- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS       --
-- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.             --
--                                                                          --
------------------------------------------------------------------------------
--  $Revision$ $Date$
------------------------------------------------------------------------------

private package XML.SAX.Simple_Readers.Parser.Tables is

   pragma Preelaborate;

   type Goto_Entry is record
      Nonterm  : Integer;
      Newstate : Integer;
   end record;

   type Shift_Reduce_Entry is record
      T   : Integer;
      Act : Integer;
   end record;

   YY_Default           : constant :=    -1;
   YY_First_Shift_Entry : constant :=     0;
   YY_Accept_Code       : constant := -3001;
   YY_Error_Code        : constant := -3000;

   YY_Goto_Matrix : constant array (-1 .. 147) of Goto_Entry :=
    ((   -1,    -1), (   -3,     1), (   -2,     2), (  -10,     3),
     (   -4,     5), (  -16,    12), (  -15,    10), (   -6,     8),
     (   -5,    14), (  -16,    12), (  -15,    18), (   -7,    17),
     (  -19,    25), (  -17,    24), (   -8,    27), (  -11,    28),
     (  -29,    36), (  -28,    35), (  -27,    34), (  -26,    33),
     (  -25,    32), (  -24,    31), (  -16,    38), (  -14,    39),
     (  -18,    45), (  -56,    47), (  -16,    12), (  -15,    10),
     (   -6,    49), (  -12,    51), (  -29,    36), (  -28,    35),
     (  -27,    34), (  -26,    33), (  -25,    54), (  -16,    38),
     (  -14,    39), (  -32,    57), (  -42,    58), (  -19,    63),
     (  -23,    64), (  -16,    12), (  -15,    18), (   -9,    73),
     (  -13,    76), (  -30,    78), (  -17,    79), (  -37,    87),
     (  -36,    86), (  -35,    84), (  -34,    83), (  -33,    88),
     (  -44,    90), (  -43,    89), (  -20,    96), (  -16,    12),
     (  -15,    10), (   -6,    97), (  -57,    98), (  -55,   101),
     (  -31,   105), (  -30,   110), (  -17,   111), (  -40,   115),
     (  -38,   116), (  -37,   114), (  -36,   113), (  -44,   127),
     (  -29,    36), (  -28,    35), (  -27,    34), (  -26,    33),
     (  -25,    32), (  -24,   143), (  -21,   144), (  -16,    38),
     (  -14,    39), (  -16,    12), (  -15,    18), (  -59,   146),
     (  -58,   145), (  -16,   150), (  -14,   151), (   -8,   147),
     (  -55,   152), (  -31,   153), (  -39,   171), (  -40,   115),
     (  -38,   116), (  -37,   114), (  -36,   113), (  -41,   173),
     (  -45,   176), (  -47,   177), (  -48,   178), (  -49,   179),
     (  -50,   180), (  -51,   181), (  -52,   182), (  -53,   183),
     (  -29,    36), (  -28,    35), (  -27,    34), (  -26,    33),
     (  -25,    54), (  -16,    38), (  -14,    39), (  -59,   191),
     (  -16,   150), (  -14,   151), (   -8,   147), (  -38,   194),
     (  -37,   114), (  -36,   113), (  -38,   197), (  -37,   114),
     (  -36,   113), (  -55,   204), (  -46,   205), (  -55,   204),
     (  -46,   206), (  -55,   204), (  -46,   207), (  -55,   204),
     (  -46,   208), (  -55,   204), (  -46,   209), (  -55,   204),
     (  -46,   210), (  -55,   204), (  -46,   211), (  -55,   204),
     (  -46,   212), (  -54,   214), (  -22,   217), (  -38,   219),
     (  -37,   114), (  -36,   113), (  -55,   222), (  -54,   223),
     (  -16,    12), (  -15,    10), (   -6,   228), (  -55,   204),
     (  -46,   230), (  -16,    12), (  -15,    18), (  -55,   204),
     (  -46,   233));

   YY_Goto_Offset : constant array (0 .. 233) of Integer :=
    (    0,    2,    4,    4,    4,    4,    8,    8,
         8,   11,   11,   11,   11,   11,   11,   11,
        11,   13,   14,   14,   14,   15,   15,   15,
        23,   24,   24,   25,   28,   29,   29,   29,
        36,   36,   36,   36,   36,   36,   36,   36,
        36,   36,   37,   38,   38,   38,   39,   40,
        40,   40,   43,   43,   44,   44,   44,   44,
        46,   46,   51,   53,   53,   53,   53,   53,
        54,   57,   58,   58,   58,   59,   59,   59,
        59,   59,   59,   59,   59,   59,   60,   60,
        60,   62,   62,   62,   62,   62,   66,   66,
        66,   66,   67,   67,   67,   67,   67,   67,
        67,   76,   78,   83,   84,   85,   85,   85,
        85,   85,   85,   85,   85,   85,   85,   85,
        85,   85,   85,   85,   85,   86,   90,   91,
        91,   91,   91,   91,   91,   91,   91,   91,
        91,   92,   93,   94,   95,   96,   97,   98,
        99,   99,   99,   99,   99,   99,   99,   99,
       106,  106,  110,  110,  110,  110,  110,  110,
       110,  110,  110,  110,  110,  110,  110,  110,
       110,  110,  110,  110,  110,  110,  110,  110,
       110,  110,  110,  113,  113,  116,  116,  116,
       116,  118,  120,  122,  124,  126,  128,  130,
       132,  132,  133,  133,  133,  133,  134,  134,
       134,  134,  134,  134,  134,  137,  137,  137,
       137,  137,  137,  137,  138,  138,  138,  138,
       138,  138,  138,  138,  138,  138,  139,  139,
       139,  139,  142,  142,  142,  142,  142,  142,
       142,  144,  144,  144,  144,  146,  148,  148,
       148,  148);

   YY_Rule_Length : constant array (0 .. 141) of Integer :=
    (    2,    0,    3,    4,    5,    5,    1,    1,
         1,    1,    1,    0,    0,    8,    8,    5,
         3,    0,    3,    0,    2,    1,    0,    1,
         1,    2,    0,    0,    0,    9,    0,    5,
         0,    2,    3,    1,    3,    0,    2,    1,
         0,    1,    1,    1,    1,    1,    1,    1,
         4,    4,    5,    4,    4,    6,    5,    5,
         3,    2,    1,    0,    0,    4,    1,    1,
         1,    1,    2,    2,    2,    1,    2,    2,
         2,    1,    4,    3,    3,    2,    3,    1,
         2,    2,    2,    1,    2,    2,    2,    1,
         2,    2,    2,    1,    5,    3,    3,    2,
         0,    0,    4,    2,    1,    0,    0,    4,
         0,    4,    0,    4,    0,    4,    0,    4,
         0,    4,    0,    4,    0,    4,    7,    6,
         3,    2,    0,    1,    1,    2,    1,    0,
         7,    3,    2,    1,    0,    1,    1,    1,
         1,    1,    4,    3,    0,    3);

   YY_Get_LHS_Rule : constant array (0 .. 141) of Integer :=
    (   -1,   -3,   -2,   -5,   -5,   -5,   -5,   -9,
        -9,   -9,   -4,   -4,  -11,  -10,  -14,  -14,
       -12,  -12,  -13,  -13,   -6,   -6,   -6,  -15,
       -15,  -16,  -18,  -20,  -22,   -7,  -23,   -7,
        -7,  -17,  -17,  -21,  -19,  -19,  -24,  -24,
       -24,  -25,  -25,  -25,  -25,  -25,  -25,  -25,
       -29,  -29,  -29,  -26,  -26,  -26,  -26,  -26,
       -30,  -31,  -31,  -31,  -32,  -27,  -33,  -33,
       -33,  -33,  -35,  -35,  -35,  -35,  -35,  -35,
       -35,  -35,  -36,  -37,  -39,  -39,  -40,  -40,
       -38,  -38,  -38,  -38,  -38,  -38,  -38,  -38,
       -38,  -38,  -38,  -38,  -34,  -34,  -41,  -41,
       -41,  -42,  -28,  -43,  -43,  -43,  -45,  -44,
       -47,  -44,  -48,  -44,  -49,  -44,  -50,  -44,
       -51,  -44,  -52,  -44,  -53,  -44,  -44,  -44,
       -54,  -54,  -54,  -46,  -46,  -46,  -46,  -57,
        -8,   -8,  -58,  -58,  -58,  -59,  -59,  -59,
       -59,  -59,  -56,  -56,  -56,  -55);

   YY_Shift_Reduce_Matrix : constant array (-1 .. 475) of Shift_Reduce_Entry :=
    ((   -1,    -1), (   -1,    -1), (    2,     4), (   -1,   -11),
     (    0, -3001), (   -1, -3000), (   -1,   -10), (   28,     7),
     (   -1, -3000), (    1,     9), (    3,    13), (   23,    11),
     (   -1,   -22), (   -1, -3000), (   25,    15), (   -1, -3000),
     (    3,    13), (    6,    16), (   23,    11), (   -1,   -32),
     (   -1,    -6), (   -1,   -21), (   -1,   -23), (   -1,   -24),
     (    4,    19), (   -1, -3000), (   -1,    -2), (   21,    20),
     (   -1, -3000), (   12,    21), (   13,    22), (   16,    23),
     (   -1,   -37), (   24,    26), (   -1, -3000), (   -1,   -20),
     (   -1,   -25), (   -1,   -12), (   14,    29), (   -1, -3000),
     (   15,    30), (   -1, -3000), (    2,    44), (    3,    13),
     (    7,    40), (    8,    41), (    9,    43), (   23,    37),
     (   41,    42), (   -1,   -40), (   -1,   -26), (   10,    46),
     (   -1, -3000), (   11,    48), (   -1,  -140), (    3,    13),
     (   23,    11), (   -1,   -22), (   29,    50), (   -1,   -17),
     (   -1,   -33), (   14,    52), (   -1, -3000), (    2,    44),
     (    3,    13), (    7,    40), (    8,    41), (    9,    43),
     (   17,    53), (   23,    37), (   41,    42), (   -1, -3000),
     (   -1,   -39), (   -1,   -41), (   -1,   -42), (   -1,   -43),
     (   -1,   -44), (   -1,   -45), (   -1,   -46), (   -1,   -47),
     (   11,    55), (   18,    56), (   -1, -3000), (   -1,   -60),
     (   -1,   -97), (   12,    59), (   13,    60), (   -1, -3000),
     (   28,    61), (   29,    62), (   -1, -3000), (   16,    23),
     (   -1,   -37), (   -1,   -30), (   10,    65), (   11,    67),
     (   27,    66), (   -1, -3000), (   25,    68), (   -1, -3000),
     (    1,    72), (    3,    13), (   21,    69), (   23,    11),
     (   24,    71), (   26,    70), (   -1,    -3), (   25,    74),
     (   -1, -3000), (   30,    75), (   -1,   -19), (   -1,   -34),
     (   -1,   -36), (   -1,   -38), (   12,    21), (   13,    22),
     (   19,    77), (   -1, -3000), (   11,    80), (   -1, -3000),
     (   31,    81), (   32,    82), (   33,    85), (   -1, -3000),
     (   11,    91), (   -1,  -101), (   14,    92), (   -1, -3000),
     (   15,    93), (   -1, -3000), (   25,    94), (   -1, -3000),
     (   25,    95), (   -1, -3000), (   -1,   -27), (    3,    13),
     (   23,    11), (   -1,   -22), (   -1,  -127), (   -1,  -129),
     (   25,    99), (   -1, -3000), (   19,   100), (   -1, -3000),
     (   -1,    -7), (   -1,    -8), (   -1,    -9), (   -1,    -4),
     (   -1,    -5), (   21,   102), (   -1, -3000), (   25,   103),
     (   -1, -3000), (    4,   104), (   -1, -3000), (   21,   106),
     (   -1,   -59), (   10,   107), (   -1, -3000), (   10,   108),
     (   22,   109), (   -1, -3000), (   12,    21), (   13,    22),
     (   19,    77), (   -1, -3000), (   -1,   -62), (   -1,   -63),
     (   -1,   -64), (   -1,   -65), (   11,   112), (   33,   117),
     (   40,   118), (   -1, -3000), (   37,   119), (   38,   120),
     (   39,   121), (   -1,   -69), (   37,   122), (   38,   123),
     (   39,   124), (   -1,   -73), (   10,   125), (   -1, -3000),
     (   10,   126), (   11,    91), (   -1, -3000), (   -1,  -100),
     (   33,   137), (   42,   128), (   43,   129), (   44,   130),
     (   45,   131), (   46,   132), (   47,   133), (   48,   134),
     (   49,   135), (   50,   136), (   -1, -3000), (   10,   138),
     (   -1, -3000), (   10,   139), (   14,   140), (   -1, -3000),
     (   21,   141), (   -1, -3000), (   21,   142), (   -1, -3000),
     (    2,    44), (    3,    13), (    7,    40), (    8,    41),
     (    9,    43), (   23,    37), (   41,    42), (   -1,   -40),
     (    3,    13), (   23,    11), (   -1,   -31), (    2,    44),
     (    3,    13), (   21,   148), (   23,   149), (   24,    26),
     (   -1,  -132), (   19,   100), (   -1, -3000), (   21,   106),
     (   -1,   -59), (   -1,  -139), (   -1,   -16), (   21,   154),
     (   -1, -3000), (   -1,   -13), (   20,   155), (   21,   156),
     (   -1, -3000), (   -1,   -58), (   -1,   -51), (   -1,   -52),
     (   11,   157), (   -1, -3000), (   10,   158), (   -1, -3000),
     (   10,   159), (   -1, -3000), (   37,   160), (   38,   161),
     (   39,   162), (   -1,   -83), (   37,   163), (   38,   164),
     (   39,   165), (   -1,   -87), (   37,   166), (   38,   167),
     (   39,   168), (   -1,   -91), (   34,   169), (   36,   170),
     (   -1, -3000), (   35,   172), (   -1,   -79), (   11,   112),
     (   33,   117), (   -1, -3000), (   34,   175), (   35,   174),
     (   -1, -3000), (   -1,   -66), (   -1,   -67), (   -1,   -68),
     (   -1,   -70), (   -1,   -71), (   -1,   -72), (   -1,   -61),
     (   -1,   -98), (   -1,   -99), (   -1,  -102), (   -1,  -104),
     (   -1,  -106), (   -1,  -108), (   -1,  -110), (   -1,  -112),
     (   -1,  -114), (   -1,  -116), (   33,   184), (   -1, -3000),
     (   11,   185), (   -1, -3000), (   -1,   -48), (   -1,   -49),
     (   10,   186), (   -1, -3000), (   29,   187), (   -1, -3000),
     (    4,   188), (   -1, -3000), (    2,    44), (    3,    13),
     (    7,    40), (    8,    41), (    9,    43), (   23,    37),
     (   41,    42), (   -1,   -35), (   10,   189), (   -1, -3000),
     (    2,    44), (    3,    13), (   21,   148), (   23,   149),
     (   24,    26), (   26,   190), (   -1, -3000), (   -1,  -131),
     (   -1,  -133), (   -1,  -134), (   -1,  -135), (   -1,  -136),
     (   -1,  -137), (   -1,  -138), (   20,   192), (   21,   156),
     (   -1, -3000), (   -1,   -18), (   -1,   -56), (   -1,   -57),
     (   10,   193), (   -1, -3000), (   -1,   -54), (   -1,   -55),
     (   -1,   -80), (   -1,   -81), (   -1,   -82), (   -1,   -84),
     (   -1,   -85), (   -1,   -86), (   -1,   -88), (   -1,   -89),
     (   -1,   -90), (   -1,   -75), (   11,   112), (   33,   117),
     (   -1, -3000), (   34,   195), (   35,   196), (   -1, -3000),
     (   11,   112), (   33,   117), (   -1, -3000), (   34,   198),
     (   35,   199), (   -1, -3000), (   11,   200), (   -1, -3000),
     (   -1,   -93), (   19,   100), (   51,   201), (   52,   202),
     (   53,   203), (   -1, -3000), (   19,   100), (   51,   201),
     (   52,   202), (   53,   203), (   -1, -3000), (   19,   100),
     (   51,   201), (   52,   202), (   53,   203), (   -1, -3000),
     (   19,   100), (   51,   201), (   52,   202), (   53,   203),
     (   -1, -3000), (   19,   100), (   51,   201), (   52,   202),
     (   53,   203), (   -1, -3000), (   19,   100), (   51,   201),
     (   52,   202), (   53,   203), (   -1, -3000), (   19,   100),
     (   51,   201), (   52,   202), (   53,   203), (   -1, -3000),
     (   19,   100), (   51,   201), (   52,   202), (   53,   203),
     (   -1, -3000), (   11,   213), (   -1, -3000), (   35,   215),
     (   -1,  -122), (   -1,   -50), (   25,   216), (   -1, -3000),
     (   -1,   -15), (   -1,   -28), (   10,   218), (   -1, -3000),
     (   -1,  -130), (   -1,  -141), (   -1,   -53), (   -1,   -78),
     (   -1,   -74), (   11,   112), (   33,   117), (   -1, -3000),
     (   -1,   -77), (   38,   220), (   -1, -3000), (   11,   221),
     (   -1, -3000), (   -1,   -95), (   -1,  -123), (   -1,  -124),
     (   19,   100), (   -1, -3000), (   -1,  -126), (   -1,  -103),
     (   -1,  -105), (   -1,  -107), (   -1,  -109), (   -1,  -111),
     (   -1,  -113), (   -1,  -115), (   -1,  -117), (   35,   215),
     (   -1,  -122), (   34,   224), (   35,   225), (   -1, -3000),
     (   11,   226), (   -1, -3000), (   21,   227), (   -1, -3000),
     (    3,    13), (   23,    11), (   -1,   -22), (   -1,  -128),
     (   -1,   -76), (   -1,   -92), (   -1,   -94), (   -1,  -125),
     (   34,   229), (   35,   225), (   -1, -3000), (   19,   100),
     (   51,   201), (   52,   202), (   53,   203), (   -1, -3000),
     (   11,   231), (   -1, -3000), (   -1,  -121), (    4,   232),
     (   -1, -3000), (    3,    13), (   23,    11), (   -1,   -29),
     (   19,   100), (   51,   201), (   52,   202), (   53,   203),
     (   -1, -3000), (   -1,  -119), (   -1,  -120), (   -1,   -14),
     (   -1,  -118));

   YY_Shift_Reduce_Offset : constant array (0 .. 233) of Integer :=
    (    0,    1,    3,    5,    6,    8,   12,   13,
        15,   19,   20,   21,   22,   23,   25,   26,
        28,   32,   34,   35,   36,   37,   39,   41,
        49,   50,   52,   54,   57,   59,   60,   62,
        71,   72,   73,   74,   75,   76,   77,   78,
        79,   82,   83,   84,   87,   90,   92,   93,
        97,   99,  106,  108,  110,  111,  112,  113,
       117,  119,  123,  125,  127,  129,  131,  133,
       134,  137,  138,  139,  141,  143,  144,  145,
       146,  147,  148,  150,  152,  154,  156,  158,
       161,  165,  166,  167,  168,  169,  173,  177,
       181,  183,  186,  187,  198,  200,  203,  205,
       207,  215,  218,  224,  226,  228,  229,  230,
       232,  233,  236,  237,  238,  239,  241,  243,
       245,  249,  253,  257,  260,  262,  265,  268,
       269,  270,  271,  272,  273,  274,  275,  276,
       277,  278,  279,  280,  281,  282,  283,  284,
       285,  287,  289,  290,  291,  293,  295,  297,
       305,  307,  314,  315,  316,  317,  318,  319,
       320,  321,  324,  325,  326,  327,  329,  330,
       331,  332,  333,  334,  335,  336,  337,  338,
       339,  340,  341,  344,  347,  350,  353,  355,
       356,  361,  366,  371,  376,  381,  386,  391,
       396,  398,  400,  401,  403,  404,  405,  407,
       408,  409,  410,  411,  412,  415,  416,  418,
       420,  421,  422,  423,  425,  426,  427,  428,
       429,  430,  431,  432,  433,  434,  436,  439,
       441,  443,  446,  447,  448,  449,  450,  451,
       454,  459,  461,  462,  464,  467,  472,  473,
       474,  475);

end XML.SAX.Simple_Readers.Parser.Tables;
