------------------------------------------------------------------------------
--                                                                          --
--                            Matreshka Project                             --
--                                                                          --
--                              XML Processor                               --
--                                                                          --
--                        Runtime Library Component                         --
--                                                                          --
------------------------------------------------------------------------------
--                                                                          --
-- Copyright Â© 2010, Vadim Godunko <vgodunko@gmail.com>                     --
-- All rights reserved.                                                     --
--                                                                          --
-- Redistribution and use in source and binary forms, with or without       --
-- modification, are permitted provided that the following conditions       --
-- are met:                                                                 --
--                                                                          --
--  * Redistributions of source code must retain the above copyright        --
--    notice, this list of conditions and the following disclaimer.         --
--                                                                          --
--  * Redistributions in binary form must reproduce the above copyright     --
--    notice, this list of conditions and the following disclaimer in the   --
--    documentation and/or other materials provided with the distribution.  --
--                                                                          --
--  * Neither the name of the Vadim Godunko, IE nor the names of its        --
--    contributors may be used to endorse or promote products derived from  --
--    this software without specific prior written permission.              --
--                                                                          --
-- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS      --
-- "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT        --
-- LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR    --
-- A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT     --
-- HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,   --
-- SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED --
-- TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR   --
-- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF   --
-- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING     --
-- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS       --
-- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.             --
--                                                                          --
------------------------------------------------------------------------------
--  $Revision$ $Date$
------------------------------------------------------------------------------
pragma Style_Checks ("-t");
--  GNAT: Disable check for token separation rules, because format of the
--  tables is not compatible with them.

private package XML.SAX.Simple_Readers.Parser.Tables is

   pragma Preelaborate;

   type Goto_Entry is record
      Nonterm  : Integer;
      Newstate : Integer;
   end record;

   type Shift_Reduce_Entry is record
      T   : Integer;
      Act : Integer;
   end record;

   YY_Default           : constant :=    -1;
   YY_First_Shift_Entry : constant :=     0;
   YY_Accept_Code       : constant := -3001;
   YY_Error_Code        : constant := -3000;

   YY_Goto_Matrix : constant array (-1 .. 137) of Goto_Entry :=
    ((   -1,    -1), (   -3,     1), (   -2,     2), (   -4,     4),
     (  -13,    11), (  -12,     9), (   -6,     7), (   -5,    13),
     (  -13,    11), (  -12,    17), (   -7,    16), (  -19,    23),
     (  -14,    22), (   -8,    25), (  -10,    28), (  -15,    31),
     (  -16,    33), (  -54,    34), (  -13,    11), (  -12,     9),
     (   -6,    35), (  -16,    40), (  -26,    46), (  -25,    45),
     (  -24,    44), (  -23,    43), (  -22,    42), (  -21,    41),
     (  -13,    48), (  -11,    49), (  -56,    56), (  -55,    58),
     (  -13,    11), (  -12,    17), (   -9,    63), (  -26,    46),
     (  -25,    45), (  -24,    44), (  -23,    43), (  -22,    42),
     (  -21,    66), (  -17,    67), (  -13,    48), (  -11,    49),
     (  -26,    46), (  -25,    45), (  -24,    44), (  -23,    43),
     (  -22,    69), (  -13,    48), (  -11,    49), (  -29,    72),
     (  -20,    78), (  -61,    82), (  -10,    83), (  -26,    46),
     (  -25,    45), (  -24,    44), (  -23,    43), (  -22,    69),
     (  -13,    48), (  -11,    49), (  -27,    86), (  -14,    87),
     (  -34,    95), (  -33,    94), (  -32,    92), (  -31,    91),
     (  -30,    96), (  -39,    97), (  -13,    11), (  -12,     9),
     (   -6,   102), (  -57,   103), (  -60,   104), (  -18,   107),
     (  -28,   108), (  -27,   113), (  -14,   114), (  -37,   118),
     (  -35,   119), (  -34,   117), (  -33,   116), (  -41,   130),
     (  -40,   129), (  -13,    11), (  -12,    17), (  -59,   138),
     (  -58,   137), (  -13,   142), (  -11,   143), (   -8,   139),
     (  -13,    11), (  -12,     9), (   -6,   146), (  -36,   163),
     (  -37,   118), (  -35,   119), (  -34,   117), (  -33,   116),
     (  -38,   165), (  -41,   168), (  -53,   178), (  -59,   183),
     (  -13,   142), (  -11,   143), (   -8,   139), (  -13,    11),
     (  -12,    17), (  -35,   186), (  -34,   117), (  -33,   116),
     (  -35,   189), (  -34,   117), (  -33,   116), (  -42,   193),
     (  -44,   194), (  -45,   195), (  -46,   196), (  -47,   197),
     (  -48,   198), (  -49,   199), (  -50,   200), (  -51,   201),
     (  -35,   205), (  -34,   117), (  -33,   116), (  -43,   212),
     (  -43,   213), (  -43,   214), (  -43,   215), (  -43,   216),
     (  -43,   217), (  -43,   218), (  -43,   219), (  -52,   225),
     (  -52,   228), (  -43,   233), (  -43,   235));

   YY_Goto_Offset : constant array (0 .. 235) of Integer :=
    (    0,    2,    3,    3,    3,    7,    7,    7,
        10,   10,   10,   10,   10,   10,   10,   10,
        12,   13,   13,   13,   14,   14,   14,   15,
        16,   17,   20,   20,   20,   20,   20,   20,
        21,   29,   29,   31,   34,   34,   34,   34,
        34,   43,   50,   50,   50,   50,   50,   50,
        50,   50,   50,   50,   51,   51,   51,   51,
        52,   52,   53,   53,   53,   53,   53,   53,
        53,   53,   54,   61,   61,   61,   61,   63,
        63,   68,   69,   69,   69,   69,   69,   72,
        73,   73,   74,   74,   74,   75,   76,   76,
        76,   78,   78,   78,   78,   78,   82,   82,
        82,   82,   84,   84,   84,   84,   84,   86,
        91,   91,   91,   91,   94,   94,   94,   94,
        94,   94,   94,   94,   94,   94,   94,   94,
        95,   99,  100,  100,  100,  100,  100,  100,
       100,  100,  101,  101,  102,  102,  102,  102,
       102,  102,  106,  106,  106,  106,  106,  106,
       106,  106,  106,  108,  108,  108,  108,  108,
       108,  108,  108,  108,  108,  108,  108,  108,
       108,  108,  108,  111,  111,  114,  114,  114,
       114,  114,  115,  116,  117,  118,  119,  120,
       121,  122,  123,  123,  123,  123,  123,  123,
       123,  123,  123,  123,  123,  126,  126,  126,
       126,  126,  127,  128,  129,  130,  131,  132,
       133,  134,  134,  134,  134,  134,  134,  134,
       134,  134,  134,  134,  134,  134,  134,  134,
       134,  134,  134,  134,  134,  134,  135,  135,
       135,  136,  136,  136,  136,  136,  137,  137,
       137,  138,  138,  138);

   YY_Rule_Length : constant array (0 .. 143) of Integer :=
    (    2,    0,    3,    4,    5,    5,    1,    1,
         1,    1,    9,    6,    0,    8,    5,    3,
         0,    2,    1,    0,    1,    1,    2,    0,
         0,    8,    0,    0,    6,    0,    2,    3,
         1,    3,    0,    2,    1,    0,    1,    1,
         1,    1,    1,    1,    1,    4,    4,    5,
         4,    4,    6,    5,    5,    3,    2,    1,
         0,    0,    4,    1,    1,    1,    1,    2,
         2,    2,    1,    2,    2,    2,    1,    4,
         3,    3,    2,    3,    1,    2,    2,    2,
         1,    2,    2,    2,    1,    2,    2,    2,
         1,    5,    4,    3,    2,    0,    0,    5,
         2,    1,    0,    0,    4,    0,    4,    0,
         4,    0,    4,    0,    4,    0,    4,    0,
         4,    0,    4,    0,    8,    0,    7,    3,
         2,    0,    1,    1,    2,    1,    0,    3,
         0,    6,    2,    2,    1,    0,    1,    1,
         1,    1,    1,    0,    5,    0,    4,    0);

   YY_Get_LHS_Rule : constant array (0 .. 143) of Integer :=
    (   -1,   -3,   -2,   -5,   -5,   -5,   -5,   -9,
        -9,   -9,   -4,   -4,   -4,  -11,  -11,  -10,
       -10,   -6,   -6,   -6,  -12,  -12,  -13,  -15,
       -18,   -7,  -19,  -20,   -7,   -7,  -14,  -14,
       -17,  -16,  -16,  -21,  -21,  -21,  -22,  -22,
       -22,  -22,  -22,  -22,  -22,  -26,  -26,  -26,
       -23,  -23,  -23,  -23,  -23,  -27,  -28,  -28,
       -28,  -29,  -24,  -30,  -30,  -30,  -30,  -32,
       -32,  -32,  -32,  -32,  -32,  -32,  -32,  -33,
       -34,  -36,  -36,  -37,  -37,  -35,  -35,  -35,
       -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,
       -35,  -31,  -31,  -38,  -38,  -38,  -39,  -25,
       -40,  -40,  -40,  -42,  -41,  -44,  -41,  -45,
       -41,  -46,  -41,  -47,  -41,  -48,  -41,  -49,
       -41,  -50,  -41,  -51,  -41,  -53,  -41,  -52,
       -52,  -52,  -43,  -43,  -43,  -43,  -54,   -8,
       -57,  -55,  -55,  -58,  -58,  -58,  -59,  -59,
       -59,  -59,  -59,  -60,  -56,  -61,  -56,  -56);

   YY_Shift_Reduce_Matrix : constant array (-1 .. 476) of Shift_Reduce_Entry :=
    ((   -1,    -1), (   -1,    -1), (    3,     3), (   -1,   -12),
     (    0, -3001), (   -1, -3000), (   29,     6), (   -1, -3000),
     (    1,     8), (    4,    12), (   24,    10), (   -1,   -19),
     (   -1, -3000), (   26,    14), (   -1, -3000), (    4,    12),
     (    7,    15), (   24,    10), (   -1,   -29), (   -1,    -6),
     (   -1,   -18), (   -1,   -20), (   -1,   -21), (    5,    18),
     (   -1, -3000), (   -1,    -2), (   22,    19), (   -1, -3000),
     (   13,    20), (   14,    21), (   -1,   -26), (   25,    24),
     (   -1, -3000), (   -1,   -17), (   -1,   -22), (   30,    27),
     (   31,    26), (   -1,   -16), (   15,    29), (   -1, -3000),
     (   16,    30), (   -1, -3000), (   -1,   -23), (   17,    32),
     (   -1,   -34), (   -1,  -126), (    4,    12), (   24,    10),
     (   -1,   -19), (   26,    36), (   -1, -3000), (   26,    37),
     (   -1, -3000), (    5,    38), (   -1, -3000), (   -1,   -30),
     (   15,    39), (   -1, -3000), (   17,    32), (   -1,   -34),
     (    3,    54), (    4,    12), (    8,    50), (    9,    51),
     (   10,    53), (   24,    47), (   42,    52), (   -1,   -37),
     (   11,    55), (   -1, -3000), (   12,    57), (   -1,  -143),
     (    1,    62), (    4,    12), (   22,    59), (   24,    10),
     (   25,    61), (   27,    60), (   -1,    -3), (   22,    64),
     (   -1, -3000), (   22,    65), (   -1, -3000), (   -1,   -11),
     (   -1,   -31), (    3,    54), (    4,    12), (    8,    50),
     (    9,    51), (   10,    53), (   24,    47), (   42,    52),
     (   -1,   -37), (    3,    54), (    4,    12), (    8,    50),
     (    9,    51), (   10,    53), (   18,    68), (   24,    47),
     (   42,    52), (   -1, -3000), (   -1,   -36), (   -1,   -38),
     (   -1,   -39), (   -1,   -40), (   -1,   -41), (   -1,   -42),
     (   -1,   -43), (   -1,   -44), (   12,    70), (   19,    71),
     (   -1, -3000), (   -1,   -57), (   12,    73), (   -1, -3000),
     (   13,    74), (   14,    75), (   -1, -3000), (   29,    76),
     (   30,    77), (   -1, -3000), (   -1,   -27), (   11,    79),
     (   12,    81), (   28,    80), (   -1, -3000), (   -1,  -141),
     (   -1,  -127), (   -1,    -7), (   -1,    -8), (   -1,    -9),
     (   -1,    -4), (   -1,    -5), (   -1,   -15), (   31,    26),
     (   -1,   -16), (    3,    54), (    4,    12), (    8,    50),
     (    9,    51), (   10,    53), (   24,    47), (   42,    52),
     (   -1,   -32), (   11,    84), (   -1, -3000), (   -1,   -33),
     (   -1,   -35), (   13,    20), (   14,    21), (   20,    85),
     (   -1, -3000), (   12,    88), (   -1, -3000), (   32,    89),
     (   33,    90), (   34,    93), (   -1, -3000), (   -1,   -94),
     (   15,    98), (   -1, -3000), (   16,    99), (   -1, -3000),
     (   26,   100), (   -1, -3000), (   26,   101), (   -1, -3000),
     (    4,    12), (   24,    10), (   -1,   -19), (   -1,  -128),
     (   -1,  -130), (   -1,  -139), (   26,   105), (   -1, -3000),
     (    5,   106), (   -1, -3000), (   -1,   -24), (   22,   109),
     (   -1,   -56), (   11,   110), (   -1, -3000), (   11,   111),
     (   23,   112), (   -1, -3000), (   13,    20), (   14,    21),
     (   20,    85), (   -1, -3000), (   -1,   -59), (   -1,   -60),
     (   -1,   -61), (   -1,   -62), (   12,   115), (   34,   120),
     (   41,   121), (   -1, -3000), (   38,   122), (   39,   123),
     (   40,   124), (   -1,   -66), (   38,   125), (   39,   126),
     (   40,   127), (   -1,   -70), (   11,   128), (   -1, -3000),
     (   12,   131), (   -1,   -98), (   11,   132), (   -1, -3000),
     (   11,   133), (   15,   134), (   -1, -3000), (   22,   135),
     (   -1, -3000), (   22,   136), (   -1, -3000), (    4,    12),
     (   24,    10), (   -1,   -28), (    3,    54), (    4,    12),
     (   22,   140), (   24,   141), (   25,    24), (   -1,  -133),
     (   26,   144), (   -1, -3000), (   22,   145), (   -1, -3000),
     (   -1,   -10), (    4,    12), (   24,    10), (   -1,   -19),
     (   21,   147), (   22,   148), (   -1, -3000), (   -1,   -55),
     (   -1,   -48), (   -1,   -49), (   12,   149), (   -1, -3000),
     (   11,   150), (   -1, -3000), (   11,   151), (   -1, -3000),
     (   38,   152), (   39,   153), (   40,   154), (   -1,   -80),
     (   38,   155), (   39,   156), (   40,   157), (   -1,   -84),
     (   38,   158), (   39,   159), (   40,   160), (   -1,   -88),
     (   35,   161), (   37,   162), (   -1, -3000), (   36,   164),
     (   -1,   -76), (   12,   115), (   34,   120), (   -1, -3000),
     (   36,   166), (   -1,   -93), (   -1,   -63), (   -1,   -64),
     (   -1,   -65), (   -1,   -67), (   -1,   -68), (   -1,   -69),
     (   -1,   -58), (   11,   167), (   12,   131), (   -1, -3000),
     (   -1,   -97), (   43,   169), (   44,   170), (   45,   171),
     (   46,   172), (   47,   173), (   48,   174), (   49,   175),
     (   50,   176), (   51,   177), (   -1,  -117), (   -1,   -45),
     (   -1,   -46), (   11,   179), (   -1, -3000), (   30,   180),
     (   -1, -3000), (    5,   181), (   -1, -3000), (    3,    54),
     (    4,    12), (   22,   140), (   24,   141), (   25,    24),
     (   27,   182), (   -1, -3000), (   -1,  -132), (   -1,  -134),
     (   -1,  -135), (   -1,  -136), (   -1,  -137), (   -1,  -138),
     (   22,   184), (   -1, -3000), (   -1,  -142), (    4,    12),
     (   24,    10), (   -1,   -25), (   -1,   -53), (   -1,   -54),
     (   11,   185), (   -1, -3000), (   -1,   -51), (   -1,   -52),
     (   -1,   -77), (   -1,   -78), (   -1,   -79), (   -1,   -81),
     (   -1,   -82), (   -1,   -83), (   -1,   -85), (   -1,   -86),
     (   -1,   -87), (   -1,   -72), (   12,   115), (   34,   120),
     (   -1, -3000), (   35,   187), (   36,   188), (   -1, -3000),
     (   12,   115), (   34,   120), (   -1, -3000), (   35,   190),
     (   36,   191), (   -1, -3000), (   12,   192), (   -1, -3000),
     (   -1,   -95), (   -1,   -96), (   -1,   -99), (   -1,  -101),
     (   -1,  -103), (   -1,  -105), (   -1,  -107), (   -1,  -109),
     (   -1,  -111), (   -1,  -113), (   -1,  -115), (   34,   202),
     (   -1, -3000), (   -1,   -47), (   26,   203), (   -1, -3000),
     (   -1,   -14), (   11,   204), (   -1, -3000), (   -1,  -131),
     (   -1,  -140), (   -1,   -50), (   -1,   -75), (   -1,   -71),
     (   12,   115), (   34,   120), (   -1, -3000), (   -1,   -74),
     (   39,   206), (   -1,   -90), (   12,   207), (   -1, -3000),
     (   -1,   -92), (   22,   211), (   52,   208), (   53,   209),
     (   54,   210), (   -1, -3000), (   22,   211), (   52,   208),
     (   53,   209), (   54,   210), (   -1, -3000), (   22,   211),
     (   52,   208), (   53,   209), (   54,   210), (   -1, -3000),
     (   22,   211), (   52,   208), (   53,   209), (   54,   210),
     (   -1, -3000), (   22,   211), (   52,   208), (   53,   209),
     (   54,   210), (   -1, -3000), (   22,   211), (   52,   208),
     (   53,   209), (   54,   210), (   -1, -3000), (   22,   211),
     (   52,   208), (   53,   209), (   54,   210), (   -1, -3000),
     (   22,   211), (   52,   208), (   53,   209), (   54,   210),
     (   -1, -3000), (   34,   220), (   -1, -3000), (   12,   221),
     (   -1, -3000), (   22,   222), (   -1, -3000), (   -1,  -129),
     (   -1,   -73), (   -1,   -89), (   -1,   -91), (   -1,  -122),
     (   -1,  -123), (   22,   223), (   -1, -3000), (   -1,  -125),
     (   -1,  -100), (   -1,  -102), (   -1,  -104), (   -1,  -106),
     (   -1,  -108), (   -1,  -110), (   -1,  -112), (   -1,  -114),
     (   12,   224), (   -1, -3000), (   36,   226), (   -1,  -121),
     (    5,   227), (   -1, -3000), (   -1,  -124), (   36,   226),
     (   -1,  -121), (   35,   229), (   36,   230), (   -1, -3000),
     (   12,   231), (   -1, -3000), (   -1,   -13), (   35,   232),
     (   36,   230), (   -1, -3000), (   22,   211), (   52,   208),
     (   53,   209), (   54,   210), (   -1, -3000), (   12,   234),
     (   -1, -3000), (   -1,  -120), (   22,   211), (   52,   208),
     (   53,   209), (   54,   210), (   -1, -3000), (   -1,  -118),
     (   -1,  -119), (   -1,  -116));

   YY_Shift_Reduce_Offset : constant array (0 .. 235) of Integer :=
    (    0,    1,    3,    5,    7,   11,   12,   14,
        18,   19,   20,   21,   22,   24,   25,   27,
        30,   32,   33,   34,   37,   39,   41,   42,
        44,   45,   48,   50,   52,   54,   55,   57,
        59,   67,   69,   71,   78,   80,   82,   83,
        84,   92,  101,  102,  103,  104,  105,  106,
       107,  108,  109,  112,  113,  115,  118,  121,
       122,  126,  127,  128,  129,  130,  131,  132,
       133,  134,  136,  144,  146,  147,  148,  152,
       154,  158,  159,  161,  163,  165,  167,  170,
       171,  172,  173,  175,  177,  178,  180,  182,
       185,  189,  190,  191,  192,  193,  197,  201,
       205,  207,  209,  211,  214,  216,  218,  221,
       227,  229,  231,  232,  235,  238,  239,  240,
       241,  243,  245,  247,  251,  255,  259,  262,
       264,  267,  269,  270,  271,  272,  273,  274,
       275,  276,  279,  280,  290,  291,  292,  294,
       296,  298,  305,  306,  307,  308,  309,  310,
       311,  313,  314,  317,  318,  319,  321,  322,
       323,  324,  325,  326,  327,  328,  329,  330,
       331,  332,  333,  336,  339,  342,  345,  347,
       348,  349,  350,  351,  352,  353,  354,  355,
       356,  357,  358,  360,  361,  363,  364,  366,
       367,  368,  369,  370,  371,  374,  375,  377,
       379,  380,  385,  390,  395,  400,  405,  410,
       415,  420,  422,  424,  426,  427,  428,  429,
       430,  431,  432,  434,  435,  436,  437,  438,
       439,  440,  441,  442,  443,  445,  447,  449,
       450,  452,  455,  457,  458,  461,  466,  468,
       469,  474,  475,  476);

end XML.SAX.Simple_Readers.Parser.Tables;
