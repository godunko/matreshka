------------------------------------------------------------------------------
--                                                                          --
--                            Matreshka Project                             --
--                                                                          --
--                              XML Processor                               --
--                                                                          --
--                        Runtime Library Component                         --
--                                                                          --
------------------------------------------------------------------------------
--                                                                          --
-- Copyright Â© 2010, Vadim Godunko <vgodunko@gmail.com>                     --
-- All rights reserved.                                                     --
--                                                                          --
-- Redistribution and use in source and binary forms, with or without       --
-- modification, are permitted provided that the following conditions       --
-- are met:                                                                 --
--                                                                          --
--  * Redistributions of source code must retain the above copyright        --
--    notice, this list of conditions and the following disclaimer.         --
--                                                                          --
--  * Redistributions in binary form must reproduce the above copyright     --
--    notice, this list of conditions and the following disclaimer in the   --
--    documentation and/or other materials provided with the distribution.  --
--                                                                          --
--  * Neither the name of the Vadim Godunko, IE nor the names of its        --
--    contributors may be used to endorse or promote products derived from  --
--    this software without specific prior written permission.              --
--                                                                          --
-- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS      --
-- "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT        --
-- LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR    --
-- A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT     --
-- HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,   --
-- SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED --
-- TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR   --
-- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF   --
-- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING     --
-- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS       --
-- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.             --
--                                                                          --
------------------------------------------------------------------------------
--  $Revision$ $Date$
------------------------------------------------------------------------------

private package XML.SAX.Simple_Readers.Parser.Tables is

   pragma Preelaborate;

   type Goto_Entry is record
      Nonterm  : Integer;
      Newstate : Integer;
   end record;

   type Shift_Reduce_Entry is record
      T   : Integer;
      Act : Integer;
   end record;

   YY_Default           : constant :=    -1;
   YY_First_Shift_Entry : constant :=     0;
   YY_Accept_Code       : constant := -3001;
   YY_Error_Code        : constant := -3000;

   YY_Goto_Matrix : constant array (-1 .. 137) of Goto_Entry :=
    ((   -1,    -1), (   -3,     1), (   -2,     2), (  -10,     3),
     (   -4,     5), (  -16,    12), (  -15,    10), (   -6,     8),
     (   -5,    14), (  -16,    12), (  -15,    18), (   -7,    17),
     (  -19,    25), (  -17,    24), (   -8,    27), (  -11,    28),
     (  -29,    36), (  -28,    35), (  -27,    34), (  -26,    33),
     (  -25,    32), (  -24,    31), (  -16,    38), (  -14,    39),
     (  -18,    45), (  -46,    47), (  -16,    12), (  -15,    10),
     (   -6,    49), (  -12,    51), (  -29,    36), (  -28,    35),
     (  -27,    34), (  -26,    33), (  -25,    54), (  -16,    38),
     (  -14,    39), (  -36,    63), (  -35,    62), (  -34,    60),
     (  -33,    59), (  -32,    64), (  -42,    66), (  -41,    65),
     (  -19,    72), (  -23,    73), (  -16,    12), (  -15,    18),
     (   -9,    82), (  -13,    85), (  -30,    87), (  -17,    88),
     (  -39,    93), (  -37,    94), (  -36,    92), (  -35,    91),
     (  -42,   105), (  -20,   120), (  -16,    12), (  -15,    10),
     (   -6,   121), (  -47,   122), (  -45,   125), (  -31,   129),
     (  -30,   134), (  -17,   135), (  -38,   147), (  -39,    93),
     (  -37,    94), (  -36,    92), (  -35,    91), (  -40,   149),
     (  -45,   154), (  -43,   156), (  -45,   154), (  -43,   157),
     (  -45,   154), (  -43,   158), (  -45,   154), (  -43,   159),
     (  -45,   154), (  -43,   160), (  -45,   154), (  -43,   161),
     (  -45,   154), (  -43,   162), (  -45,   154), (  -43,   163),
     (  -29,    36), (  -28,    35), (  -27,    34), (  -26,    33),
     (  -25,    32), (  -24,   171), (  -21,   172), (  -16,    38),
     (  -14,    39), (  -16,    12), (  -15,    18), (  -49,   174),
     (  -48,   173), (  -16,   178), (  -14,   179), (   -8,   175),
     (  -45,   180), (  -31,   181), (  -37,   188), (  -36,    92),
     (  -35,    91), (  -37,   191), (  -36,    92), (  -35,    91),
     (  -45,   195), (  -44,   197), (  -29,    36), (  -28,    35),
     (  -27,    34), (  -26,    33), (  -25,    54), (  -16,    38),
     (  -14,    39), (  -49,   204), (  -16,   178), (  -14,   179),
     (   -8,   175), (  -37,   207), (  -36,    92), (  -35,    91),
     (  -44,   210), (  -22,   215), (  -45,   154), (  -43,   218),
     (  -16,    12), (  -15,    10), (   -6,   221), (  -45,   154),
     (  -43,   222), (  -16,    12), (  -15,    18));

   YY_Goto_Offset : constant array (0 .. 223) of Integer :=
    (    0,    2,    4,    4,    4,    4,    8,    8,
         8,   11,   11,   11,   11,   11,   11,   11,
        11,   13,   14,   14,   14,   15,   15,   15,
        23,   24,   24,   25,   28,   29,   29,   29,
        36,   36,   36,   36,   36,   36,   36,   36,
        36,   36,   41,   43,   43,   43,   44,   45,
        45,   45,   48,   48,   49,   49,   49,   49,
        51,   51,   51,   51,   51,   51,   55,   55,
        55,   55,   56,   56,   56,   56,   56,   56,
        56,   57,   60,   61,   61,   61,   62,   62,
        62,   62,   62,   62,   62,   62,   62,   63,
        63,   63,   65,   65,   65,   65,   65,   66,
        70,   71,   71,   71,   71,   71,   71,   71,
        71,   71,   71,   73,   75,   77,   79,   81,
        83,   85,   87,   87,   87,   87,   87,   87,
        87,   96,   98,  103,  104,  105,  105,  105,
       105,  105,  105,  105,  105,  105,  105,  105,
       105,  105,  105,  105,  105,  105,  105,  105,
       105,  105,  105,  108,  108,  111,  111,  111,
       111,  111,  111,  111,  112,  112,  112,  112,
       112,  112,  112,  112,  112,  112,  113,  113,
       113,  113,  113,  113,  120,  120,  124,  124,
       124,  124,  124,  124,  124,  124,  124,  124,
       124,  124,  124,  124,  124,  124,  124,  127,
       127,  127,  127,  127,  127,  128,  128,  128,
       128,  128,  128,  129,  129,  129,  129,  129,
       129,  129,  129,  129,  131,  131,  131,  131,
       134,  134,  136,  136,  136,  136,  138,  138);

   YY_Rule_Length : constant array (0 .. 131) of Integer :=
    (    2,    0,    3,    4,    5,    5,    1,    1,
         1,    1,    1,    0,    0,    8,    8,    5,
         3,    0,    3,    0,    2,    1,    0,    1,
         1,    2,    0,    0,    0,    9,    0,    5,
         0,    2,    3,    1,    3,    0,    2,    1,
         0,    1,    1,    1,    1,    1,    1,    1,
         4,    4,    5,    4,    4,    6,    5,    5,
         3,    2,    1,    0,    3,    1,    1,    1,
         1,    2,    2,    2,    1,    2,    2,    2,
         1,    4,    3,    3,    2,    3,    1,    2,
         2,    2,    1,    2,    2,    2,    1,    2,
         2,    2,    1,    5,    3,    3,    2,    0,
         3,    2,    1,    0,    3,    3,    3,    3,
         3,    3,    3,    3,    7,    6,    3,    2,
         0,    1,    1,    1,    2,    0,    7,    3,
         2,    1,    0,    1,    1,    1,    1,    1,
         4,    3,    0,    3);

   YY_Get_LHS_Rule : constant array (0 .. 131) of Integer :=
    (   -1,   -3,   -2,   -5,   -5,   -5,   -5,   -9,
        -9,   -9,   -4,   -4,  -11,  -10,  -14,  -14,
       -12,  -12,  -13,  -13,   -6,   -6,   -6,  -15,
       -15,  -16,  -18,  -20,  -22,   -7,  -23,   -7,
        -7,  -17,  -17,  -21,  -19,  -19,  -24,  -24,
       -24,  -25,  -25,  -25,  -25,  -25,  -25,  -25,
       -29,  -29,  -29,  -26,  -26,  -26,  -26,  -26,
       -30,  -31,  -31,  -31,  -27,  -32,  -32,  -32,
       -32,  -34,  -34,  -34,  -34,  -34,  -34,  -34,
       -34,  -35,  -36,  -38,  -38,  -39,  -39,  -37,
       -37,  -37,  -37,  -37,  -37,  -37,  -37,  -37,
       -37,  -37,  -37,  -33,  -33,  -40,  -40,  -40,
       -28,  -41,  -41,  -41,  -42,  -42,  -42,  -42,
       -42,  -42,  -42,  -42,  -42,  -42,  -44,  -44,
       -44,  -43,  -43,  -43,  -43,  -47,   -8,   -8,
       -48,  -48,  -48,  -49,  -49,  -49,  -49,  -49,
       -46,  -46,  -46,  -45);

   YY_Shift_Reduce_Matrix : constant array (-1 .. 465) of Shift_Reduce_Entry :=
    ((   -1,    -1), (   -1,    -1), (    2,     4), (   -1,   -11),
     (    0, -3001), (   -1, -3000), (   -1,   -10), (   28,     7),
     (   -1, -3000), (    1,     9), (    3,    13), (   23,    11),
     (   -1,   -22), (   -1, -3000), (   25,    15), (   -1, -3000),
     (    3,    13), (    6,    16), (   23,    11), (   -1,   -32),
     (   -1,    -6), (   -1,   -21), (   -1,   -23), (   -1,   -24),
     (    4,    19), (   -1, -3000), (   -1,    -2), (   21,    20),
     (   -1, -3000), (   12,    21), (   13,    22), (   16,    23),
     (   -1,   -37), (   24,    26), (   -1, -3000), (   -1,   -20),
     (   -1,   -25), (   -1,   -12), (   14,    29), (   -1, -3000),
     (   15,    30), (   -1, -3000), (    2,    44), (    3,    13),
     (    7,    40), (    8,    41), (    9,    43), (   23,    37),
     (   41,    42), (   -1,   -40), (   -1,   -26), (   10,    46),
     (   -1, -3000), (   11,    48), (   -1,  -130), (    3,    13),
     (   23,    11), (   -1,   -22), (   29,    50), (   -1,   -17),
     (   -1,   -33), (   14,    52), (   -1, -3000), (    2,    44),
     (    3,    13), (    7,    40), (    8,    41), (    9,    43),
     (   17,    53), (   23,    37), (   41,    42), (   -1, -3000),
     (   -1,   -39), (   -1,   -41), (   -1,   -42), (   -1,   -43),
     (   -1,   -44), (   -1,   -45), (   -1,   -46), (   -1,   -47),
     (   11,    55), (   18,    56), (   -1, -3000), (   31,    57),
     (   32,    58), (   33,    61), (   -1, -3000), (   11,    67),
     (   -1,   -99), (   12,    68), (   13,    69), (   -1, -3000),
     (   28,    70), (   29,    71), (   -1, -3000), (   16,    23),
     (   -1,   -37), (   -1,   -30), (   10,    74), (   11,    76),
     (   27,    75), (   -1, -3000), (   25,    77), (   -1, -3000),
     (    1,    81), (    3,    13), (   21,    78), (   23,    11),
     (   24,    80), (   26,    79), (   -1,    -3), (   25,    83),
     (   -1, -3000), (   30,    84), (   -1,   -19), (   -1,   -34),
     (   -1,   -36), (   -1,   -38), (   12,    21), (   13,    22),
     (   19,    86), (   -1, -3000), (   11,    89), (   -1, -3000),
     (   -1,   -61), (   -1,   -62), (   -1,   -63), (   -1,   -64),
     (   11,    90), (   33,    95), (   40,    96), (   -1, -3000),
     (   37,    97), (   38,    98), (   39,    99), (   -1,   -68),
     (   37,   100), (   38,   101), (   39,   102), (   -1,   -72),
     (   10,   103), (   -1, -3000), (   10,   104), (   11,    67),
     (   -1, -3000), (   -1,   -98), (   33,   115), (   42,   106),
     (   43,   107), (   44,   108), (   45,   109), (   46,   110),
     (   47,   111), (   48,   112), (   49,   113), (   50,   114),
     (   -1, -3000), (   14,   116), (   -1, -3000), (   15,   117),
     (   -1, -3000), (   25,   118), (   -1, -3000), (   25,   119),
     (   -1, -3000), (   -1,   -27), (    3,    13), (   23,    11),
     (   -1,   -22), (   -1,  -117), (   -1,  -119), (   25,   123),
     (   -1, -3000), (   19,   124), (   -1, -3000), (   -1,    -7),
     (   -1,    -8), (   -1,    -9), (   -1,    -4), (   -1,    -5),
     (   21,   126), (   -1, -3000), (   25,   127), (   -1, -3000),
     (    4,   128), (   -1, -3000), (   21,   130), (   -1,   -59),
     (   10,   131), (   -1, -3000), (   10,   132), (   22,   133),
     (   -1, -3000), (   12,    21), (   13,    22), (   19,    86),
     (   -1, -3000), (   37,   136), (   38,   137), (   39,   138),
     (   -1,   -82), (   37,   139), (   38,   140), (   39,   141),
     (   -1,   -86), (   37,   142), (   38,   143), (   39,   144),
     (   -1,   -90), (   34,   145), (   36,   146), (   -1, -3000),
     (   35,   148), (   -1,   -78), (   11,    90), (   33,    95),
     (   -1, -3000), (   34,   151), (   35,   150), (   -1, -3000),
     (   -1,   -65), (   -1,   -66), (   -1,   -67), (   -1,   -69),
     (   -1,   -70), (   -1,   -71), (   -1,   -60), (   -1,   -96),
     (   -1,   -97), (   19,   124), (   51,   152), (   52,   153),
     (   53,   155), (   -1, -3000), (   19,   124), (   51,   152),
     (   52,   153), (   53,   155), (   -1, -3000), (   19,   124),
     (   51,   152), (   52,   153), (   53,   155), (   -1, -3000),
     (   19,   124), (   51,   152), (   52,   153), (   53,   155),
     (   -1, -3000), (   19,   124), (   51,   152), (   52,   153),
     (   53,   155), (   -1, -3000), (   19,   124), (   51,   152),
     (   52,   153), (   53,   155), (   -1, -3000), (   19,   124),
     (   51,   152), (   52,   153), (   53,   155), (   -1, -3000),
     (   19,   124), (   51,   152), (   52,   153), (   53,   155),
     (   -1, -3000), (   33,   164), (   -1, -3000), (   11,   165),
     (   -1, -3000), (   10,   166), (   -1, -3000), (   10,   167),
     (   14,   168), (   -1, -3000), (   21,   169), (   -1, -3000),
     (   21,   170), (   -1, -3000), (    2,    44), (    3,    13),
     (    7,    40), (    8,    41), (    9,    43), (   23,    37),
     (   41,    42), (   -1,   -40), (    3,    13), (   23,    11),
     (   -1,   -31), (    2,    44), (    3,    13), (   21,   176),
     (   23,   177), (   24,    26), (   -1,  -122), (   19,   124),
     (   -1, -3000), (   21,   130), (   -1,   -59), (   -1,  -129),
     (   -1,   -16), (   21,   182), (   -1, -3000), (   -1,   -13),
     (   20,   183), (   21,   184), (   -1, -3000), (   -1,   -58),
     (   -1,   -51), (   -1,   -52), (   11,   185), (   -1, -3000),
     (   10,   186), (   -1, -3000), (   10,   187), (   -1, -3000),
     (   -1,   -79), (   -1,   -80), (   -1,   -81), (   -1,   -83),
     (   -1,   -84), (   -1,   -85), (   -1,   -87), (   -1,   -88),
     (   -1,   -89), (   -1,   -74), (   11,    90), (   33,    95),
     (   -1, -3000), (   34,   189), (   35,   190), (   -1, -3000),
     (   11,    90), (   33,    95), (   -1, -3000), (   34,   192),
     (   35,   193), (   -1, -3000), (   11,   194), (   -1, -3000),
     (   -1,   -92), (   -1,  -113), (   -1,  -114), (   -1,  -115),
     (   19,   124), (   -1, -3000), (   -1,  -100), (   -1,  -101),
     (   -1,  -102), (   -1,  -103), (   -1,  -104), (   -1,  -105),
     (   -1,  -106), (   -1,  -107), (   11,   196), (   -1, -3000),
     (   35,   198), (   -1,  -112), (   -1,   -48), (   -1,   -49),
     (   10,   199), (   -1, -3000), (   29,   200), (   -1, -3000),
     (    4,   201), (   -1, -3000), (    2,    44), (    3,    13),
     (    7,    40), (    8,    41), (    9,    43), (   23,    37),
     (   41,    42), (   -1,   -35), (   10,   202), (   -1, -3000),
     (    2,    44), (    3,    13), (   21,   176), (   23,   177),
     (   24,    26), (   26,   203), (   -1, -3000), (   -1,  -121),
     (   -1,  -123), (   -1,  -124), (   -1,  -125), (   -1,  -126),
     (   -1,  -127), (   -1,  -128), (   20,   205), (   21,   184),
     (   -1, -3000), (   -1,   -18), (   -1,   -56), (   -1,   -57),
     (   10,   206), (   -1, -3000), (   -1,   -54), (   -1,   -55),
     (   -1,   -77), (   -1,   -73), (   11,    90), (   33,    95),
     (   -1, -3000), (   -1,   -76), (   38,   208), (   -1, -3000),
     (   11,   209), (   -1, -3000), (   -1,   -94), (   -1,  -116),
     (   35,   198), (   -1,  -112), (   34,   211), (   35,   212),
     (   -1, -3000), (   11,   213), (   -1, -3000), (   -1,   -50),
     (   25,   214), (   -1, -3000), (   -1,   -15), (   -1,   -28),
     (   10,   216), (   -1, -3000), (   -1,  -120), (   -1,  -131),
     (   -1,   -53), (   -1,   -75), (   -1,   -91), (   -1,   -93),
     (   34,   217), (   35,   212), (   -1, -3000), (   19,   124),
     (   51,   152), (   52,   153), (   53,   155), (   -1, -3000),
     (   11,   219), (   -1, -3000), (   -1,  -111), (   21,   220),
     (   -1, -3000), (    3,    13), (   23,    11), (   -1,   -22),
     (   -1,  -118), (   19,   124), (   51,   152), (   52,   153),
     (   53,   155), (   -1, -3000), (   -1,  -109), (   -1,  -110),
     (    4,   223), (   -1, -3000), (    3,    13), (   23,    11),
     (   -1,   -29), (   -1,  -108), (   -1,   -14));

   YY_Shift_Reduce_Offset : constant array (0 .. 223) of Integer :=
    (    0,    1,    3,    5,    6,    8,   12,   13,
        15,   19,   20,   21,   22,   23,   25,   26,
        28,   32,   34,   35,   36,   37,   39,   41,
        49,   50,   52,   54,   57,   59,   60,   62,
        71,   72,   73,   74,   75,   76,   77,   78,
        79,   82,   86,   88,   91,   94,   96,   97,
       101,  103,  110,  112,  114,  115,  116,  117,
       121,  123,  124,  125,  126,  127,  131,  135,
       139,  141,  144,  145,  156,  158,  160,  162,
       164,  165,  168,  169,  170,  172,  174,  175,
       176,  177,  178,  179,  181,  183,  185,  187,
       189,  192,  196,  200,  204,  208,  211,  213,
       216,  219,  220,  221,  222,  223,  224,  225,
       226,  227,  228,  233,  238,  243,  248,  253,
       258,  263,  268,  270,  272,  274,  277,  279,
       281,  289,  292,  298,  300,  302,  303,  304,
       306,  307,  310,  311,  312,  313,  315,  317,
       319,  320,  321,  322,  323,  324,  325,  326,
       327,  328,  329,  332,  335,  338,  341,  343,
       344,  345,  346,  347,  349,  350,  351,  352,
       353,  354,  355,  356,  357,  359,  361,  362,
       363,  365,  367,  369,  377,  379,  386,  387,
       388,  389,  390,  391,  392,  393,  396,  397,
       398,  399,  401,  402,  403,  404,  405,  408,
       409,  411,  413,  414,  415,  417,  420,  422,
       423,  425,  426,  427,  429,  430,  431,  432,
       433,  434,  435,  438,  443,  445,  446,  448,
       451,  452,  457,  458,  459,  461,  464,  465);

end XML.SAX.Simple_Readers.Parser.Tables;
