------------------------------------------------------------------------------
--                                                                          --
--                            Matreshka Project                             --
--                                                                          --
--                              XML Processor                               --
--                                                                          --
--                        Runtime Library Component                         --
--                                                                          --
------------------------------------------------------------------------------
--                                                                          --
-- Copyright Â© 2010, Vadim Godunko <vgodunko@gmail.com>                     --
-- All rights reserved.                                                     --
--                                                                          --
-- Redistribution and use in source and binary forms, with or without       --
-- modification, are permitted provided that the following conditions       --
-- are met:                                                                 --
--                                                                          --
--  * Redistributions of source code must retain the above copyright        --
--    notice, this list of conditions and the following disclaimer.         --
--                                                                          --
--  * Redistributions in binary form must reproduce the above copyright     --
--    notice, this list of conditions and the following disclaimer in the   --
--    documentation and/or other materials provided with the distribution.  --
--                                                                          --
--  * Neither the name of the Vadim Godunko, IE nor the names of its        --
--    contributors may be used to endorse or promote products derived from  --
--    this software without specific prior written permission.              --
--                                                                          --
-- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS      --
-- "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT        --
-- LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR    --
-- A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT     --
-- HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,   --
-- SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED --
-- TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR   --
-- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF   --
-- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING     --
-- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS       --
-- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.             --
--                                                                          --
------------------------------------------------------------------------------
--  $Revision$ $Date$
------------------------------------------------------------------------------
pragma Style_Checks ("-t");
--  GNAT: Disable check for token separation rules, because format of the
--  tables is not compatible with them.

private package XML.SAX.Simple_Readers.Parser.Tables is

   pragma Preelaborate;

   type Goto_Entry is record
      Nonterm  : Integer;
      Newstate : Integer;
   end record;

   type Shift_Reduce_Entry is record
      T   : Integer;
      Act : Integer;
   end record;

   YY_Default           : constant :=    -1;
   YY_First_Shift_Entry : constant :=     0;
   YY_Accept_Code       : constant := -3001;
   YY_Error_Code        : constant := -3000;

   YY_Goto_Matrix : constant array (-1 .. 141) of Goto_Entry :=
    ((   -1,    -1), (   -3,     1), (   -2,     2), (  -13,     9),
     (  -12,     7), (   -7,     6), (   -6,     4), (   -5,     3),
     (   -4,    11), (  -13,     9), (  -12,     7), (   -7,     6),
     (   -6,    13), (  -13,     9), (  -12,    17), (   -8,    16),
     (  -19,    23), (  -14,    22), (   -9,    25), (  -15,    29),
     (  -16,    31), (  -54,    32), (  -13,     9), (  -12,     7),
     (   -7,    33), (  -10,    36), (  -16,    38), (  -26,    44),
     (  -25,    43), (  -24,    42), (  -23,    41), (  -22,    40),
     (  -21,    39), (  -13,    46), (  -11,    47), (  -56,    54),
     (  -55,    56), (  -13,     9), (  -12,    17), (  -26,    44),
     (  -25,    43), (  -24,    42), (  -23,    41), (  -22,    40),
     (  -21,    60), (  -17,    61), (  -13,    46), (  -11,    47),
     (  -26,    44), (  -25,    43), (  -24,    42), (  -23,    41),
     (  -22,    63), (  -13,    46), (  -11,    47), (  -20,    72),
     (  -61,    76), (  -26,    44), (  -25,    43), (  -24,    42),
     (  -23,    41), (  -22,    63), (  -13,    46), (  -11,    47),
     (  -27,    81), (  -14,    82), (  -29,    84), (  -39,    85),
     (  -13,     9), (  -12,     7), (   -7,    90), (  -57,    91),
     (  -60,    92), (  -10,    94), (  -18,    95), (  -28,    96),
     (  -27,   101), (  -14,   102), (  -34,   109), (  -33,   108),
     (  -32,   106), (  -31,   105), (  -30,   110), (  -41,   112),
     (  -40,   111), (  -13,     9), (  -12,    17), (  -59,   120),
     (  -58,   119), (  -13,   124), (  -11,   125), (   -9,   121),
     (  -13,     9), (  -12,     7), (   -7,   129), (  -37,   138),
     (  -35,   139), (  -34,   137), (  -33,   136), (  -41,   150),
     (  -53,   160), (  -59,   165), (  -13,   124), (  -11,   125),
     (   -9,   121), (  -13,     9), (  -12,    17), (  -36,   179),
     (  -37,   138), (  -35,   139), (  -34,   137), (  -33,   136),
     (  -38,   181), (  -42,   183), (  -44,   184), (  -45,   185),
     (  -46,   186), (  -47,   187), (  -48,   188), (  -49,   189),
     (  -50,   190), (  -51,   191), (  -35,   195), (  -34,   137),
     (  -33,   136), (  -35,   198), (  -34,   137), (  -33,   136),
     (  -43,   206), (  -43,   207), (  -43,   208), (  -43,   209),
     (  -43,   210), (  -43,   211), (  -43,   212), (  -43,   213),
     (  -52,   215), (  -35,   227), (  -34,   137), (  -33,   136),
     (  -52,   231), (  -43,   236), (  -43,   247));

   YY_Goto_Offset : constant array (0 .. 247) of Integer :=
    (    0,    2,    8,    8,   12,   12,   12,   15,
        15,   15,   15,   15,   15,   15,   15,   15,
        17,   18,   18,   18,   18,   18,   18,   19,
        20,   21,   24,   25,   25,   25,   26,   34,
        34,   36,   38,   38,   38,   38,   38,   47,
        54,   54,   54,   54,   54,   54,   54,   54,
        54,   54,   54,   54,   54,   54,   55,   55,
        56,   56,   56,   56,   56,   63,   63,   63,
        63,   65,   65,   66,   67,   67,   67,   67,
        67,   70,   71,   71,   72,   72,   72,   73,
        74,   75,   75,   75,   77,   82,   84,   84,
        84,   84,   84,   86,   91,   91,   91,   91,
        94,   94,   94,   94,   94,   94,   94,   94,
        94,   94,   94,   94,   98,   98,   98,   98,
        99,   99,  100,  100,  100,  100,  100,  100,
       104,  104,  104,  104,  104,  104,  104,  104,
       104,  104,  106,  106,  106,  106,  106,  106,
       106,  106,  106,  106,  107,  111,  112,  112,
       112,  112,  112,  112,  112,  112,  112,  112,
       113,  114,  115,  116,  117,  118,  119,  120,
       121,  121,  121,  121,  121,  121,  121,  121,
       121,  121,  121,  121,  121,  121,  121,  121,
       121,  121,  121,  124,  124,  127,  127,  127,
       128,  129,  130,  131,  132,  133,  134,  135,
       135,  136,  136,  136,  136,  136,  139,  139,
       139,  139,  139,  139,  139,  139,  139,  139,
       139,  139,  139,  139,  139,  139,  139,  140,
       140,  140,  140,  140,  140,  140,  140,  140,
       140,  140,  140,  140,  140,  140,  140,  140,
       140,  141,  141,  141,  142,  142,  142,  142,
       142,  142,  142,  142,  142,  142,  142,  142);

   YY_Rule_Length : constant array (0 .. 155) of Integer :=
    (    2,    0,    2,    2,    1,    4,    9,    6,
         8,    5,    3,    0,    2,    1,    0,    1,
         1,    2,    0,    0,    8,    0,    0,    6,
         0,    2,    3,    1,    3,    0,    2,    1,
         0,    1,    1,    1,    1,    1,    1,    1,
         4,    4,    5,    4,    4,    6,    5,    5,
         3,    2,    1,    0,    0,    5,    1,    1,
         1,    1,    2,    2,    2,    1,    2,    2,
         2,    1,    4,    3,    3,    2,    3,    1,
         2,    2,    2,    1,    2,    2,    2,    1,
         2,    2,    2,    1,    5,    4,    3,    2,
         0,    0,    5,    2,    1,    0,    0,    4,
         0,    4,    0,    4,    0,    4,    0,    4,
         0,    4,    0,    4,    0,    4,    0,    7,
         0,    6,    3,    3,    3,    3,    3,    3,
         3,    3,    3,    3,    1,    1,    1,    1,
         1,    1,    1,    1,    1,    1,    1,    1,
         2,    1,    0,    3,    0,    6,    2,    2,
         1,    0,    1,    1,    1,    1,    1,    0,
         5,    0,    4,    0);

   YY_Get_LHS_Rule : constant array (0 .. 155) of Integer :=
    (   -1,   -3,   -2,   -4,   -4,   -6,   -5,   -5,
       -11,  -11,  -10,  -10,   -7,   -7,   -7,  -12,
       -12,  -13,  -15,  -18,   -8,  -19,  -20,   -8,
        -8,  -14,  -14,  -17,  -16,  -16,  -21,  -21,
       -21,  -22,  -22,  -22,  -22,  -22,  -22,  -22,
       -26,  -26,  -26,  -23,  -23,  -23,  -23,  -23,
       -27,  -28,  -28,  -28,  -29,  -24,  -30,  -30,
       -30,  -30,  -32,  -32,  -32,  -32,  -32,  -32,
       -32,  -32,  -33,  -34,  -36,  -36,  -37,  -37,
       -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,
       -35,  -35,  -35,  -35,  -31,  -31,  -38,  -38,
       -38,  -39,  -25,  -40,  -40,  -40,  -42,  -41,
       -44,  -41,  -45,  -41,  -46,  -41,  -47,  -41,
       -48,  -41,  -49,  -41,  -50,  -41,  -51,  -41,
       -53,  -41,  -52,  -52,  -52,  -52,  -52,  -52,
       -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,
       -52,  -52,  -52,  -52,  -52,  -52,  -43,  -43,
       -43,  -43,  -54,   -9,  -57,  -55,  -55,  -58,
       -58,  -58,  -59,  -59,  -59,  -59,  -59,  -60,
       -56,  -61,  -56,  -56);

   YY_Shift_Reduce_Matrix : constant array (-1 .. 510) of Shift_Reduce_Entry :=
    ((   -1,    -1), (   -1,    -1), (    3,     5), (    4,    10),
     (   24,     8), (   -1,   -14), (    0, -3001), (   -1, -3000),
     (    4,    10), (   24,     8), (   -1,   -14), (   -1,    -4),
     (   29,    14), (   -1, -3000), (    4,    10), (    7,    15),
     (   24,     8), (   -1,   -24), (   -1,   -13), (   -1,   -15),
     (   -1,   -16), (    5,    18), (   -1, -3000), (   -1,    -2),
     (   -1, -3000), (   -1,    -3), (   26,    19), (   -1, -3000),
     (   13,    20), (   14,    21), (   -1,   -21), (   25,    24),
     (   -1, -3000), (   -1,   -12), (   -1,   -17), (   22,    26),
     (   -1, -3000), (   15,    27), (   -1, -3000), (   16,    28),
     (   -1, -3000), (   -1,   -18), (   17,    30), (   -1,   -29),
     (   -1,  -138), (    4,    10), (   24,     8), (   -1,   -14),
     (   30,    35), (   31,    34), (   -1,   -11), (   -1,   -25),
     (   15,    37), (   -1, -3000), (   17,    30), (   -1,   -29),
     (    3,    52), (    4,    10), (    8,    48), (    9,    49),
     (   10,    51), (   24,    45), (   42,    50), (   -1,   -32),
     (   11,    53), (   -1, -3000), (   12,    55), (   -1,  -155),
     (    4,    10), (   24,     8), (   -1,    -5), (   26,    57),
     (   -1, -3000), (   26,    58), (   -1, -3000), (    5,    59),
     (   -1, -3000), (   -1,   -26), (    3,    52), (    4,    10),
     (    8,    48), (    9,    49), (   10,    51), (   24,    45),
     (   42,    50), (   -1,   -32), (    3,    52), (    4,    10),
     (    8,    48), (    9,    49), (   10,    51), (   18,    62),
     (   24,    45), (   42,    50), (   -1, -3000), (   -1,   -31),
     (   -1,   -33), (   -1,   -34), (   -1,   -35), (   -1,   -36),
     (   -1,   -37), (   -1,   -38), (   -1,   -39), (   12,    64),
     (   19,    65), (   -1, -3000), (   12,    66), (   -1, -3000),
     (   12,    67), (   -1, -3000), (   13,    68), (   14,    69),
     (   -1, -3000), (   29,    70), (   30,    71), (   -1, -3000),
     (   -1,   -22), (   11,    73), (   12,    75), (   28,    74),
     (   -1, -3000), (   -1,  -153), (   -1,  -139), (   22,    77),
     (   -1, -3000), (   22,    78), (   -1, -3000), (   -1,    -7),
     (    3,    52), (    4,    10), (    8,    48), (    9,    49),
     (   10,    51), (   24,    45), (   42,    50), (   -1,   -27),
     (   11,    79), (   -1, -3000), (   -1,   -28), (   -1,   -30),
     (   13,    20), (   14,    21), (   20,    80), (   -1, -3000),
     (   12,    83), (   -1, -3000), (   -1,   -52), (   -1,   -89),
     (   15,    86), (   -1, -3000), (   16,    87), (   -1, -3000),
     (   26,    88), (   -1, -3000), (   26,    89), (   -1, -3000),
     (    4,    10), (   24,     8), (   -1,   -14), (   -1,  -140),
     (   -1,  -142), (   -1,  -151), (   26,    93), (   -1, -3000),
     (   -1,   -10), (   31,    34), (   -1,   -11), (   -1,   -19),
     (   22,    97), (   -1,   -51), (   11,    98), (   -1, -3000),
     (   11,    99), (   23,   100), (   -1, -3000), (   13,    20),
     (   14,    21), (   20,    80), (   -1, -3000), (   32,   103),
     (   33,   104), (   34,   107), (   -1, -3000), (   12,   113),
     (   -1,   -93), (   11,   114), (   -1, -3000), (   11,   115),
     (   15,   116), (   -1, -3000), (   22,   117), (   -1, -3000),
     (   22,   118), (   -1, -3000), (    4,    10), (   24,     8),
     (   -1,   -23), (    3,    52), (    4,    10), (   22,   122),
     (   24,   123), (   25,    24), (   -1,  -145), (   26,   126),
     (   -1, -3000), (   22,   127), (   -1, -3000), (    5,   128),
     (   -1, -3000), (    4,    10), (   24,     8), (   -1,   -14),
     (   21,   130), (   22,   131), (   -1, -3000), (   -1,   -50),
     (   -1,   -43), (   -1,   -44), (   12,   132), (   -1, -3000),
     (   11,   133), (   -1, -3000), (   11,   134), (   -1, -3000),
     (   -1,   -54), (   -1,   -55), (   -1,   -56), (   -1,   -57),
     (   12,   135), (   34,   140), (   41,   141), (   -1, -3000),
     (   38,   142), (   39,   143), (   40,   144), (   -1,   -61),
     (   38,   145), (   39,   146), (   40,   147), (   -1,   -65),
     (   11,   148), (   -1, -3000), (   11,   149), (   12,   113),
     (   -1, -3000), (   -1,   -92), (   43,   151), (   44,   152),
     (   45,   153), (   46,   154), (   47,   155), (   48,   156),
     (   49,   157), (   50,   158), (   51,   159), (   -1,  -112),
     (   -1,   -40), (   -1,   -41), (   11,   161), (   -1, -3000),
     (   30,   162), (   -1, -3000), (    5,   163), (   -1, -3000),
     (    3,    52), (    4,    10), (   22,   122), (   24,   123),
     (   25,    24), (   27,   164), (   -1, -3000), (   -1,  -144),
     (   -1,  -146), (   -1,  -147), (   -1,  -148), (   -1,  -149),
     (   -1,  -150), (   22,   166), (   -1, -3000), (   -1,  -154),
     (   -1,    -6), (    4,    10), (   24,     8), (   -1,   -20),
     (   -1,   -48), (   -1,   -49), (   11,   167), (   -1, -3000),
     (   -1,   -46), (   -1,   -47), (   38,   168), (   39,   169),
     (   40,   170), (   -1,   -75), (   38,   171), (   39,   172),
     (   40,   173), (   -1,   -79), (   38,   174), (   39,   175),
     (   40,   176), (   -1,   -83), (   35,   177), (   37,   178),
     (   -1, -3000), (   36,   180), (   -1,   -71), (   12,   135),
     (   34,   140), (   -1, -3000), (   36,   182), (   -1,   -88),
     (   -1,   -58), (   -1,   -59), (   -1,   -60), (   -1,   -62),
     (   -1,   -63), (   -1,   -64), (   -1,   -53), (   -1,   -90),
     (   -1,   -91), (   -1,   -94), (   -1,   -96), (   -1,   -98),
     (   -1,  -100), (   -1,  -102), (   -1,  -104), (   -1,  -106),
     (   -1,  -108), (   -1,  -110), (   34,   192), (   -1, -3000),
     (   -1,   -42), (   26,   193), (   -1, -3000), (   -1,    -9),
     (   11,   194), (   -1, -3000), (   -1,  -143), (   -1,  -152),
     (   -1,   -45), (   -1,   -72), (   -1,   -73), (   -1,   -74),
     (   -1,   -76), (   -1,   -77), (   -1,   -78), (   -1,   -80),
     (   -1,   -81), (   -1,   -82), (   -1,   -67), (   12,   135),
     (   34,   140), (   -1, -3000), (   35,   196), (   36,   197),
     (   -1, -3000), (   12,   135), (   34,   140), (   -1, -3000),
     (   35,   199), (   36,   200), (   -1, -3000), (   12,   201),
     (   -1, -3000), (   22,   205), (   52,   202), (   53,   203),
     (   54,   204), (   -1, -3000), (   22,   205), (   52,   202),
     (   53,   203), (   54,   204), (   -1, -3000), (   22,   205),
     (   52,   202), (   53,   203), (   54,   204), (   -1, -3000),
     (   22,   205), (   52,   202), (   53,   203), (   54,   204),
     (   -1, -3000), (   22,   205), (   52,   202), (   53,   203),
     (   54,   204), (   -1, -3000), (   22,   205), (   52,   202),
     (   53,   203), (   54,   204), (   -1, -3000), (   22,   205),
     (   52,   202), (   53,   203), (   54,   204), (   -1, -3000),
     (   22,   205), (   52,   202), (   53,   203), (   54,   204),
     (   -1, -3000), (   34,   214), (   -1, -3000), (   12,   216),
     (   43,   217), (   44,   218), (   45,   219), (   46,   220),
     (   47,   221), (   48,   222), (   49,   223), (   50,   224),
     (   51,   225), (   -1, -3000), (   22,   226), (   -1, -3000),
     (   -1,  -141), (   -1,   -70), (   -1,   -66), (   12,   135),
     (   34,   140), (   -1, -3000), (   -1,   -69), (   39,   228),
     (   -1,   -85), (   12,   229), (   -1, -3000), (   -1,   -87),
     (   -1,  -134), (   -1,  -135), (   22,   230), (   -1, -3000),
     (   -1,  -137), (   -1,   -95), (   -1,   -97), (   -1,   -99),
     (   -1,  -101), (   -1,  -103), (   -1,  -105), (   -1,  -107),
     (   -1,  -109), (   12,   216), (   43,   217), (   44,   218),
     (   45,   219), (   46,   220), (   47,   221), (   48,   222),
     (   49,   223), (   50,   224), (   51,   225), (   -1, -3000),
     (   35,   232), (   36,   233), (   -1, -3000), (   -1,  -124),
     (   -1,  -125), (   -1,  -126), (   -1,  -127), (   -1,  -128),
     (   -1,  -129), (   -1,  -130), (   -1,  -131), (   -1,  -132),
     (   -1,  -133), (    5,   234), (   -1, -3000), (   -1,   -68),
     (   -1,   -84), (   -1,   -86), (   -1,  -136), (   35,   235),
     (   36,   233), (   -1, -3000), (   22,   205), (   52,   202),
     (   53,   203), (   54,   204), (   -1, -3000), (   12,   237),
     (   43,   238), (   44,   239), (   45,   240), (   46,   241),
     (   47,   242), (   48,   243), (   49,   244), (   50,   245),
     (   51,   246), (   -1, -3000), (   -1,    -8), (   22,   205),
     (   52,   202), (   53,   203), (   54,   204), (   -1, -3000),
     (   -1,  -113), (   -1,  -114), (   -1,  -115), (   -1,  -116),
     (   -1,  -117), (   -1,  -118), (   -1,  -119), (   -1,  -120),
     (   -1,  -121), (   -1,  -122), (   -1,  -123), (   -1,  -111));

   YY_Shift_Reduce_Offset : constant array (0 .. 247) of Integer :=
    (    0,    1,    5,    7,   10,   11,   13,   17,
        18,   19,   20,   22,   23,   24,   25,   27,
        30,   32,   33,   34,   36,   38,   40,   41,
        43,   44,   47,   50,   51,   53,   55,   63,
        65,   67,   70,   72,   74,   76,   77,   85,
        94,   95,   96,   97,   98,   99,  100,  101,
       102,  105,  107,  109,  112,  115,  116,  120,
       121,  122,  124,  126,  127,  135,  137,  138,
       139,  143,  145,  146,  147,  149,  151,  153,
       155,  158,  159,  160,  161,  163,  164,  166,
       167,  169,  171,  174,  178,  182,  184,  186,
       189,  191,  193,  196,  202,  204,  206,  208,
       211,  214,  215,  216,  217,  219,  221,  223,
       224,  225,  226,  227,  231,  235,  239,  241,
       244,  245,  255,  256,  257,  259,  261,  263,
       270,  271,  272,  273,  274,  275,  276,  278,
       279,  280,  283,  284,  285,  287,  288,  289,
       293,  297,  301,  304,  306,  309,  311,  312,
       313,  314,  315,  316,  317,  318,  319,  320,
       321,  322,  323,  324,  325,  326,  327,  328,
       329,  331,  332,  334,  335,  337,  338,  339,
       340,  341,  342,  343,  344,  345,  346,  347,
       348,  349,  350,  353,  356,  359,  362,  364,
       369,  374,  379,  384,  389,  394,  399,  404,
       406,  417,  419,  420,  421,  422,  425,  426,
       428,  430,  431,  432,  433,  435,  436,  437,
       438,  439,  440,  441,  442,  443,  444,  455,
       458,  459,  460,  461,  462,  463,  464,  465,
       466,  467,  468,  470,  471,  472,  473,  474,
       477,  482,  493,  494,  499,  500,  501,  502,
       503,  504,  505,  506,  507,  508,  509,  510);

end XML.SAX.Simple_Readers.Parser.Tables;
