------------------------------------------------------------------------------
--                                                                          --
--                            Matreshka Project                             --
--                                                                          --
--                              XML Processor                               --
--                                                                          --
--                        Runtime Library Component                         --
--                                                                          --
------------------------------------------------------------------------------
--                                                                          --
-- Copyright Â© 2010, Vadim Godunko <vgodunko@gmail.com>                     --
-- All rights reserved.                                                     --
--                                                                          --
-- Redistribution and use in source and binary forms, with or without       --
-- modification, are permitted provided that the following conditions       --
-- are met:                                                                 --
--                                                                          --
--  * Redistributions of source code must retain the above copyright        --
--    notice, this list of conditions and the following disclaimer.         --
--                                                                          --
--  * Redistributions in binary form must reproduce the above copyright     --
--    notice, this list of conditions and the following disclaimer in the   --
--    documentation and/or other materials provided with the distribution.  --
--                                                                          --
--  * Neither the name of the Vadim Godunko, IE nor the names of its        --
--    contributors may be used to endorse or promote products derived from  --
--    this software without specific prior written permission.              --
--                                                                          --
-- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS      --
-- "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT        --
-- LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR    --
-- A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT     --
-- HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,   --
-- SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED --
-- TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR   --
-- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF   --
-- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING     --
-- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS       --
-- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.             --
--                                                                          --
------------------------------------------------------------------------------
--  $Revision$ $Date$
------------------------------------------------------------------------------

private package XML.SAX.Simple_Readers.Parser.Tables is

   pragma Preelaborate;

   type Goto_Entry is record
      Nonterm  : Integer;
      Newstate : Integer;
   end record;

   type Shift_Reduce_Entry is record
      T   : Integer;
      Act : Integer;
   end record;

   YY_Default           : constant :=    -1;
   YY_First_Shift_Entry : constant :=     0;
   YY_Accept_Code       : constant := -3001;
   YY_Error_Code        : constant := -3000;

   YY_Goto_Matrix : constant array (-1 .. 137) of Goto_Entry :=
    ((   -1,    -1), (  -10,     2), (   -3,     1), (   -2,     4),
     (   -4,     5), (  -16,    12), (  -15,    10), (   -6,     8),
     (   -5,    14), (  -16,    12), (  -15,    18), (   -7,    17),
     (  -19,    25), (  -17,    24), (   -8,    27), (  -11,    28),
     (  -29,    36), (  -28,    35), (  -27,    34), (  -26,    33),
     (  -25,    32), (  -24,    31), (  -16,    38), (  -14,    39),
     (  -18,    45), (  -46,    47), (  -16,    12), (  -15,    10),
     (   -6,    49), (  -12,    51), (  -29,    36), (  -28,    35),
     (  -27,    34), (  -26,    33), (  -25,    54), (  -16,    38),
     (  -14,    39), (  -36,    63), (  -35,    62), (  -34,    60),
     (  -33,    59), (  -32,    64), (  -42,    66), (  -41,    65),
     (  -19,    72), (  -23,    73), (  -16,    12), (  -15,    18),
     (   -9,    80), (  -13,    83), (  -30,    85), (  -17,    86),
     (  -39,    91), (  -37,    92), (  -36,    90), (  -35,    89),
     (  -42,   103), (  -20,   118), (  -16,    12), (  -15,    10),
     (   -6,   119), (  -47,   120), (  -45,   123), (  -31,   127),
     (  -30,   132), (  -17,   133), (  -38,   145), (  -39,    91),
     (  -37,    92), (  -36,    90), (  -35,    89), (  -40,   147),
     (  -45,   152), (  -43,   154), (  -45,   152), (  -43,   155),
     (  -45,   152), (  -43,   156), (  -45,   152), (  -43,   157),
     (  -45,   152), (  -43,   158), (  -45,   152), (  -43,   159),
     (  -45,   152), (  -43,   160), (  -45,   152), (  -43,   161),
     (  -29,    36), (  -28,    35), (  -27,    34), (  -26,    33),
     (  -25,    32), (  -24,   169), (  -21,   170), (  -16,    38),
     (  -14,    39), (  -16,    12), (  -15,    18), (  -49,   172),
     (  -48,   171), (  -16,   176), (  -14,   177), (   -8,   173),
     (  -45,   178), (  -31,   179), (  -37,   186), (  -36,    90),
     (  -35,    89), (  -37,   189), (  -36,    90), (  -35,    89),
     (  -45,   193), (  -44,   195), (  -29,    36), (  -28,    35),
     (  -27,    34), (  -26,    33), (  -25,    54), (  -16,    38),
     (  -14,    39), (  -49,   202), (  -16,   176), (  -14,   177),
     (   -8,   173), (  -37,   205), (  -36,    90), (  -35,    89),
     (  -44,   208), (  -22,   213), (  -45,   152), (  -43,   216),
     (  -16,    12), (  -15,    10), (   -6,   219), (  -45,   152),
     (  -43,   220), (  -16,    12), (  -15,    18));

   YY_Goto_Offset : constant array (0 .. 221) of Integer :=
    (    0,    3,    4,    4,    4,    4,    8,    8,
         8,   11,   11,   11,   11,   11,   11,   11,
        11,   13,   14,   14,   14,   15,   15,   15,
        23,   24,   24,   25,   28,   29,   29,   29,
        36,   36,   36,   36,   36,   36,   36,   36,
        36,   36,   41,   43,   43,   43,   44,   45,
        45,   45,   48,   48,   49,   49,   49,   49,
        51,   51,   51,   51,   51,   51,   55,   55,
        55,   55,   56,   56,   56,   56,   56,   56,
        56,   57,   60,   61,   61,   61,   62,   62,
        62,   62,   62,   62,   62,   63,   63,   63,
        65,   65,   65,   65,   65,   66,   70,   71,
        71,   71,   71,   71,   71,   71,   71,   71,
        71,   73,   75,   77,   79,   81,   83,   85,
        87,   87,   87,   87,   87,   87,   87,   96,
        98,  103,  104,  105,  105,  105,  105,  105,
       105,  105,  105,  105,  105,  105,  105,  105,
       105,  105,  105,  105,  105,  105,  105,  105,
       105,  108,  108,  111,  111,  111,  111,  111,
       111,  111,  112,  112,  112,  112,  112,  112,
       112,  112,  112,  112,  113,  113,  113,  113,
       113,  113,  120,  120,  124,  124,  124,  124,
       124,  124,  124,  124,  124,  124,  124,  124,
       124,  124,  124,  124,  124,  127,  127,  127,
       127,  127,  127,  128,  128,  128,  128,  128,
       128,  129,  129,  129,  129,  129,  129,  129,
       129,  129,  131,  131,  131,  131,  134,  134,
       136,  136,  136,  136,  138,  138);

   YY_Rule_Length : constant array (0 .. 129) of Integer :=
    (    2,    0,    3,    4,    5,    5,    1,    1,
         1,    0,    0,    8,    8,    5,    3,    0,
         3,    0,    2,    1,    0,    1,    1,    2,
         0,    0,    0,    9,    0,    5,    0,    2,
         3,    1,    3,    0,    2,    1,    0,    1,
         1,    1,    1,    1,    1,    1,    4,    4,
         5,    4,    4,    6,    5,    5,    3,    2,
         1,    0,    3,    1,    1,    1,    1,    2,
         2,    2,    1,    2,    2,    2,    1,    4,
         3,    3,    2,    3,    1,    2,    2,    2,
         1,    2,    2,    2,    1,    2,    2,    2,
         1,    5,    3,    3,    2,    0,    3,    2,
         1,    0,    3,    3,    3,    3,    3,    3,
         3,    3,    7,    6,    3,    2,    0,    1,
         1,    1,    2,    0,    7,    3,    2,    1,
         0,    1,    1,    1,    1,    1,    4,    3,
         0,    3);

   YY_Get_LHS_Rule : constant array (0 .. 129) of Integer :=
    (   -1,   -4,   -2,   -5,   -5,   -5,   -5,   -9,
        -3,   -3,  -11,  -10,  -14,  -14,  -12,  -12,
       -13,  -13,   -6,   -6,   -6,  -15,  -15,  -16,
       -18,  -20,  -22,   -7,  -23,   -7,   -7,  -17,
       -17,  -21,  -19,  -19,  -24,  -24,  -24,  -25,
       -25,  -25,  -25,  -25,  -25,  -25,  -29,  -29,
       -29,  -26,  -26,  -26,  -26,  -26,  -30,  -31,
       -31,  -31,  -27,  -32,  -32,  -32,  -32,  -34,
       -34,  -34,  -34,  -34,  -34,  -34,  -34,  -35,
       -36,  -38,  -38,  -39,  -39,  -37,  -37,  -37,
       -37,  -37,  -37,  -37,  -37,  -37,  -37,  -37,
       -37,  -33,  -33,  -40,  -40,  -40,  -28,  -41,
       -41,  -41,  -42,  -42,  -42,  -42,  -42,  -42,
       -42,  -42,  -42,  -42,  -44,  -44,  -44,  -43,
       -43,  -43,  -43,  -47,   -8,   -8,  -48,  -48,
       -48,  -49,  -49,  -49,  -49,  -49,  -46,  -46,
       -46,  -45);

   YY_Shift_Reduce_Matrix : constant array (-1 .. 461) of Shift_Reduce_Entry :=
    ((   -1,    -1), (    2,     3), (   -1,    -9), (   -1,    -1),
     (   -1,    -8), (   28,     6), (   -1, -3000), (    0, -3001),
     (   -1, -3000), (    1,     9), (    3,    13), (   23,    11),
     (   -1,   -20), (   25,    15), (   -1, -3000), (   -1, -3000),
     (    3,    13), (    6,    16), (   23,    11), (   -1,   -30),
     (   -1,    -6), (   -1,   -19), (   -1,   -21), (   -1,   -22),
     (    4,    19), (   -1, -3000), (   -1,    -2), (   21,    20),
     (   -1, -3000), (   12,    21), (   13,    22), (   16,    23),
     (   -1,   -35), (   24,    26), (   -1, -3000), (   -1,   -18),
     (   -1,   -23), (   -1,   -10), (   14,    29), (   -1, -3000),
     (   15,    30), (   -1, -3000), (    2,    44), (    3,    13),
     (    7,    40), (    8,    41), (    9,    43), (   23,    37),
     (   41,    42), (   -1,   -38), (   -1,   -24), (   10,    46),
     (   -1, -3000), (   11,    48), (   -1,  -128), (    3,    13),
     (   23,    11), (   -1,   -20), (   29,    50), (   -1,   -15),
     (   -1,   -31), (   14,    52), (   -1, -3000), (    2,    44),
     (    3,    13), (    7,    40), (    8,    41), (    9,    43),
     (   17,    53), (   23,    37), (   41,    42), (   -1, -3000),
     (   -1,   -37), (   -1,   -39), (   -1,   -40), (   -1,   -41),
     (   -1,   -42), (   -1,   -43), (   -1,   -44), (   -1,   -45),
     (   11,    55), (   18,    56), (   -1, -3000), (   31,    57),
     (   32,    58), (   33,    61), (   -1, -3000), (   11,    67),
     (   -1,   -97), (   12,    68), (   13,    69), (   -1, -3000),
     (   28,    70), (   29,    71), (   -1, -3000), (   16,    23),
     (   -1,   -35), (   -1,   -28), (   10,    74), (   11,    76),
     (   27,    75), (   -1, -3000), (   25,    77), (   -1, -3000),
     (    1,    79), (    3,    13), (   21,    78), (   23,    11),
     (   -1,    -3), (   25,    81), (   -1, -3000), (   30,    82),
     (   -1,   -17), (   -1,   -32), (   -1,   -34), (   -1,   -36),
     (   12,    21), (   13,    22), (   19,    84), (   -1, -3000),
     (   11,    87), (   -1, -3000), (   -1,   -59), (   -1,   -60),
     (   -1,   -61), (   -1,   -62), (   11,    88), (   33,    93),
     (   40,    94), (   -1, -3000), (   37,    95), (   38,    96),
     (   39,    97), (   -1,   -66), (   37,    98), (   38,    99),
     (   39,   100), (   -1,   -70), (   10,   101), (   -1, -3000),
     (   10,   102), (   11,    67), (   -1, -3000), (   -1,   -96),
     (   33,   113), (   42,   104), (   43,   105), (   44,   106),
     (   45,   107), (   46,   108), (   47,   109), (   48,   110),
     (   49,   111), (   50,   112), (   -1, -3000), (   14,   114),
     (   -1, -3000), (   15,   115), (   -1, -3000), (   25,   116),
     (   -1, -3000), (   25,   117), (   -1, -3000), (   -1,   -25),
     (    3,    13), (   23,    11), (   -1,   -20), (   -1,  -115),
     (   -1,  -117), (   25,   121), (   -1, -3000), (   19,   122),
     (   -1, -3000), (   -1,    -7), (   -1,    -4), (   -1,    -5),
     (   21,   124), (   -1, -3000), (   25,   125), (   -1, -3000),
     (    4,   126), (   -1, -3000), (   21,   128), (   -1,   -57),
     (   10,   129), (   -1, -3000), (   10,   130), (   22,   131),
     (   -1, -3000), (   12,    21), (   13,    22), (   19,    84),
     (   -1, -3000), (   37,   134), (   38,   135), (   39,   136),
     (   -1,   -80), (   37,   137), (   38,   138), (   39,   139),
     (   -1,   -84), (   37,   140), (   38,   141), (   39,   142),
     (   -1,   -88), (   34,   143), (   36,   144), (   -1, -3000),
     (   35,   146), (   -1,   -76), (   11,    88), (   33,    93),
     (   -1, -3000), (   34,   149), (   35,   148), (   -1, -3000),
     (   -1,   -63), (   -1,   -64), (   -1,   -65), (   -1,   -67),
     (   -1,   -68), (   -1,   -69), (   -1,   -58), (   -1,   -94),
     (   -1,   -95), (   19,   122), (   51,   150), (   52,   151),
     (   53,   153), (   -1, -3000), (   19,   122), (   51,   150),
     (   52,   151), (   53,   153), (   -1, -3000), (   19,   122),
     (   51,   150), (   52,   151), (   53,   153), (   -1, -3000),
     (   19,   122), (   51,   150), (   52,   151), (   53,   153),
     (   -1, -3000), (   19,   122), (   51,   150), (   52,   151),
     (   53,   153), (   -1, -3000), (   19,   122), (   51,   150),
     (   52,   151), (   53,   153), (   -1, -3000), (   19,   122),
     (   51,   150), (   52,   151), (   53,   153), (   -1, -3000),
     (   19,   122), (   51,   150), (   52,   151), (   53,   153),
     (   -1, -3000), (   33,   162), (   -1, -3000), (   11,   163),
     (   -1, -3000), (   10,   164), (   -1, -3000), (   10,   165),
     (   14,   166), (   -1, -3000), (   21,   167), (   -1, -3000),
     (   21,   168), (   -1, -3000), (    2,    44), (    3,    13),
     (    7,    40), (    8,    41), (    9,    43), (   23,    37),
     (   41,    42), (   -1,   -38), (    3,    13), (   23,    11),
     (   -1,   -29), (    2,    44), (    3,    13), (   21,   174),
     (   23,   175), (   24,    26), (   -1,  -120), (   19,   122),
     (   -1, -3000), (   21,   128), (   -1,   -57), (   -1,  -127),
     (   -1,   -14), (   21,   180), (   -1, -3000), (   -1,   -11),
     (   20,   181), (   21,   182), (   -1, -3000), (   -1,   -56),
     (   -1,   -49), (   -1,   -50), (   11,   183), (   -1, -3000),
     (   10,   184), (   -1, -3000), (   10,   185), (   -1, -3000),
     (   -1,   -77), (   -1,   -78), (   -1,   -79), (   -1,   -81),
     (   -1,   -82), (   -1,   -83), (   -1,   -85), (   -1,   -86),
     (   -1,   -87), (   -1,   -72), (   11,    88), (   33,    93),
     (   -1, -3000), (   34,   187), (   35,   188), (   -1, -3000),
     (   11,    88), (   33,    93), (   -1, -3000), (   34,   190),
     (   35,   191), (   -1, -3000), (   11,   192), (   -1, -3000),
     (   -1,   -90), (   -1,  -111), (   -1,  -112), (   -1,  -113),
     (   19,   122), (   -1, -3000), (   -1,   -98), (   -1,   -99),
     (   -1,  -100), (   -1,  -101), (   -1,  -102), (   -1,  -103),
     (   -1,  -104), (   -1,  -105), (   11,   194), (   -1, -3000),
     (   35,   196), (   -1,  -110), (   -1,   -46), (   -1,   -47),
     (   10,   197), (   -1, -3000), (   29,   198), (   -1, -3000),
     (    4,   199), (   -1, -3000), (    2,    44), (    3,    13),
     (    7,    40), (    8,    41), (    9,    43), (   23,    37),
     (   41,    42), (   -1,   -33), (   10,   200), (   -1, -3000),
     (    2,    44), (    3,    13), (   21,   174), (   23,   175),
     (   24,    26), (   26,   201), (   -1, -3000), (   -1,  -119),
     (   -1,  -121), (   -1,  -122), (   -1,  -123), (   -1,  -124),
     (   -1,  -125), (   -1,  -126), (   20,   203), (   21,   182),
     (   -1, -3000), (   -1,   -16), (   -1,   -54), (   -1,   -55),
     (   10,   204), (   -1, -3000), (   -1,   -52), (   -1,   -53),
     (   -1,   -75), (   -1,   -71), (   11,    88), (   33,    93),
     (   -1, -3000), (   -1,   -74), (   38,   206), (   -1, -3000),
     (   11,   207), (   -1, -3000), (   -1,   -92), (   -1,  -114),
     (   35,   196), (   -1,  -110), (   34,   209), (   35,   210),
     (   -1, -3000), (   11,   211), (   -1, -3000), (   -1,   -48),
     (   25,   212), (   -1, -3000), (   -1,   -13), (   -1,   -26),
     (   10,   214), (   -1, -3000), (   -1,  -118), (   -1,  -129),
     (   -1,   -51), (   -1,   -73), (   -1,   -89), (   -1,   -91),
     (   34,   215), (   35,   210), (   -1, -3000), (   19,   122),
     (   51,   150), (   52,   151), (   53,   153), (   -1, -3000),
     (   11,   217), (   -1, -3000), (   -1,  -109), (   21,   218),
     (   -1, -3000), (    3,    13), (   23,    11), (   -1,   -20),
     (   -1,  -116), (   19,   122), (   51,   150), (   52,   151),
     (   53,   153), (   -1, -3000), (   -1,  -107), (   -1,  -108),
     (    4,   221), (   -1, -3000), (    3,    13), (   23,    11),
     (   -1,   -27), (   -1,  -106), (   -1,   -12));

   YY_Shift_Reduce_Offset : constant array (0 .. 221) of Integer :=
    (    0,    2,    3,    4,    6,    8,   12,   14,
        15,   19,   20,   21,   22,   23,   25,   26,
        28,   32,   34,   35,   36,   37,   39,   41,
        49,   50,   52,   54,   57,   59,   60,   62,
        71,   72,   73,   74,   75,   76,   77,   78,
        79,   82,   86,   88,   91,   94,   96,   97,
       101,  103,  108,  110,  112,  113,  114,  115,
       119,  121,  122,  123,  124,  125,  129,  133,
       137,  139,  142,  143,  154,  156,  158,  160,
       162,  163,  166,  167,  168,  170,  172,  173,
       174,  175,  177,  179,  181,  183,  185,  188,
       192,  196,  200,  204,  207,  209,  212,  215,
       216,  217,  218,  219,  220,  221,  222,  223,
       224,  229,  234,  239,  244,  249,  254,  259,
       264,  266,  268,  270,  273,  275,  277,  285,
       288,  294,  296,  298,  299,  300,  302,  303,
       306,  307,  308,  309,  311,  313,  315,  316,
       317,  318,  319,  320,  321,  322,  323,  324,
       325,  328,  331,  334,  337,  339,  340,  341,
       342,  343,  345,  346,  347,  348,  349,  350,
       351,  352,  353,  355,  357,  358,  359,  361,
       363,  365,  373,  375,  382,  383,  384,  385,
       386,  387,  388,  389,  392,  393,  394,  395,
       397,  398,  399,  400,  401,  404,  405,  407,
       409,  410,  411,  413,  416,  418,  419,  421,
       422,  423,  425,  426,  427,  428,  429,  430,
       431,  434,  439,  441,  442,  444,  447,  448,
       453,  454,  455,  457,  460,  461);

end XML.SAX.Simple_Readers.Parser.Tables;
