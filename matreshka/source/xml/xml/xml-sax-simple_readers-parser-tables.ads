------------------------------------------------------------------------------
--                                                                          --
--                            Matreshka Project                             --
--                                                                          --
--                              XML Processor                               --
--                                                                          --
--                        Runtime Library Component                         --
--                                                                          --
------------------------------------------------------------------------------
--                                                                          --
-- Copyright Â© 2010, Vadim Godunko <vgodunko@gmail.com>                     --
-- All rights reserved.                                                     --
--                                                                          --
-- Redistribution and use in source and binary forms, with or without       --
-- modification, are permitted provided that the following conditions       --
-- are met:                                                                 --
--                                                                          --
--  * Redistributions of source code must retain the above copyright        --
--    notice, this list of conditions and the following disclaimer.         --
--                                                                          --
--  * Redistributions in binary form must reproduce the above copyright     --
--    notice, this list of conditions and the following disclaimer in the   --
--    documentation and/or other materials provided with the distribution.  --
--                                                                          --
--  * Neither the name of the Vadim Godunko, IE nor the names of its        --
--    contributors may be used to endorse or promote products derived from  --
--    this software without specific prior written permission.              --
--                                                                          --
-- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS      --
-- "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT        --
-- LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR    --
-- A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT     --
-- HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,   --
-- SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED --
-- TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR   --
-- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF   --
-- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING     --
-- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS       --
-- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.             --
--                                                                          --
------------------------------------------------------------------------------
--  $Revision$ $Date$
------------------------------------------------------------------------------
pragma Style_Checks ("-t");
--  GNAT: Disable check for token separation rules, because format of the
--  tables is not compatible with them.

private package XML.SAX.Simple_Readers.Parser.Tables is

   pragma Preelaborate;

   type Goto_Entry is record
      Nonterm  : Integer;
      Newstate : Integer;
   end record;

   type Shift_Reduce_Entry is record
      T   : Integer;
      Act : Integer;
   end record;

   YY_Default           : constant :=    -1;
   YY_First_Shift_Entry : constant :=     0;
   YY_Accept_Code       : constant := -3001;
   YY_Error_Code        : constant := -3000;

   YY_Goto_Matrix : constant array (-1 .. 137) of Goto_Entry :=
    ((   -1,    -1), (   -3,     1), (   -2,     2), (   -4,     4),
     (  -13,    11), (  -12,     9), (   -6,     7), (   -5,    13),
     (  -13,    11), (  -12,    17), (   -7,    16), (  -19,    23),
     (  -14,    22), (   -8,    25), (  -10,    28), (  -15,    31),
     (  -16,    33), (  -54,    34), (  -13,    11), (  -12,     9),
     (   -6,    35), (  -16,    40), (  -26,    46), (  -25,    45),
     (  -24,    44), (  -23,    43), (  -22,    42), (  -21,    41),
     (  -13,    48), (  -11,    49), (  -56,    56), (  -55,    58),
     (  -13,    11), (  -12,    17), (   -9,    63), (  -26,    46),
     (  -25,    45), (  -24,    44), (  -23,    43), (  -22,    42),
     (  -21,    66), (  -17,    67), (  -13,    48), (  -11,    49),
     (  -26,    46), (  -25,    45), (  -24,    44), (  -23,    43),
     (  -22,    69), (  -13,    48), (  -11,    49), (  -20,    78),
     (  -61,    82), (  -10,    83), (  -26,    46), (  -25,    45),
     (  -24,    44), (  -23,    43), (  -22,    69), (  -13,    48),
     (  -11,    49), (  -27,    86), (  -14,    87), (  -29,    89),
     (  -39,    90), (  -13,    11), (  -12,     9), (   -6,    95),
     (  -57,    96), (  -60,    97), (  -18,   100), (  -28,   101),
     (  -27,   106), (  -14,   107), (  -34,   114), (  -33,   113),
     (  -32,   111), (  -31,   110), (  -30,   115), (  -41,   117),
     (  -40,   116), (  -13,    11), (  -12,    17), (  -59,   125),
     (  -58,   124), (  -13,   129), (  -11,   130), (   -8,   126),
     (  -13,    11), (  -12,     9), (   -6,   133), (  -37,   142),
     (  -35,   143), (  -34,   141), (  -33,   140), (  -41,   154),
     (  -53,   164), (  -59,   169), (  -13,   129), (  -11,   130),
     (   -8,   126), (  -13,    11), (  -12,    17), (  -36,   183),
     (  -37,   142), (  -35,   143), (  -34,   141), (  -33,   140),
     (  -38,   185), (  -42,   187), (  -44,   188), (  -45,   189),
     (  -46,   190), (  -47,   191), (  -48,   192), (  -49,   193),
     (  -50,   194), (  -51,   195), (  -35,   199), (  -34,   141),
     (  -33,   140), (  -35,   202), (  -34,   141), (  -33,   140),
     (  -43,   210), (  -43,   211), (  -43,   212), (  -43,   213),
     (  -43,   214), (  -43,   215), (  -43,   216), (  -43,   217),
     (  -52,   219), (  -35,   231), (  -34,   141), (  -33,   140),
     (  -52,   235), (  -43,   240), (  -43,   251));

   YY_Goto_Offset : constant array (0 .. 251) of Integer :=
    (    0,    2,    3,    3,    3,    7,    7,    7,
        10,   10,   10,   10,   10,   10,   10,   10,
        12,   13,   13,   13,   14,   14,   14,   15,
        16,   17,   20,   20,   20,   20,   20,   20,
        21,   29,   29,   31,   34,   34,   34,   34,
        34,   43,   50,   50,   50,   50,   50,   50,
        50,   50,   50,   50,   50,   50,   50,   50,
        51,   51,   52,   52,   52,   52,   52,   52,
        52,   52,   53,   60,   60,   60,   60,   62,
        62,   63,   64,   64,   64,   64,   64,   67,
        68,   68,   69,   69,   69,   70,   71,   71,
        71,   73,   78,   80,   80,   80,   80,   80,
        82,   87,   87,   87,   87,   90,   90,   90,
        90,   90,   90,   90,   90,   90,   90,   90,
        90,   94,   94,   94,   94,   95,   95,   96,
        96,   96,   96,   96,   96,  100,  100,  100,
       100,  100,  100,  100,  100,  100,  102,  102,
       102,  102,  102,  102,  102,  102,  102,  102,
       103,  107,  108,  108,  108,  108,  108,  108,
       108,  108,  108,  108,  109,  110,  111,  112,
       113,  114,  115,  116,  117,  117,  117,  117,
       117,  117,  117,  117,  117,  117,  117,  117,
       117,  117,  117,  117,  117,  117,  117,  120,
       120,  123,  123,  123,  124,  125,  126,  127,
       128,  129,  130,  131,  131,  132,  132,  132,
       132,  132,  135,  135,  135,  135,  135,  135,
       135,  135,  135,  135,  135,  135,  135,  135,
       135,  135,  135,  136,  136,  136,  136,  136,
       136,  136,  136,  136,  136,  136,  136,  136,
       136,  136,  136,  136,  136,  137,  137,  137,
       138,  138,  138,  138,  138,  138,  138,  138,
       138,  138,  138,  138);

   YY_Rule_Length : constant array (0 .. 160) of Integer :=
    (    2,    0,    3,    4,    5,    5,    1,    1,
         1,    1,    9,    6,    0,    8,    5,    3,
         0,    2,    1,    0,    1,    1,    2,    0,
         0,    8,    0,    0,    6,    0,    2,    3,
         1,    3,    0,    2,    1,    0,    1,    1,
         1,    1,    1,    1,    1,    4,    4,    5,
         4,    4,    6,    5,    5,    3,    2,    1,
         0,    0,    5,    1,    1,    1,    1,    2,
         2,    2,    1,    2,    2,    2,    1,    4,
         3,    3,    2,    3,    1,    2,    2,    2,
         1,    2,    2,    2,    1,    2,    2,    2,
         1,    5,    4,    3,    2,    0,    0,    5,
         2,    1,    0,    0,    4,    0,    4,    0,
         4,    0,    4,    0,    4,    0,    4,    0,
         4,    0,    4,    0,    7,    0,    6,    3,
         3,    3,    3,    3,    3,    3,    3,    3,
         3,    1,    1,    1,    1,    1,    1,    1,
         1,    1,    1,    1,    1,    2,    1,    0,
         3,    0,    6,    2,    2,    1,    0,    1,
         1,    1,    1,    1,    0,    5,    0,    4,
         0);

   YY_Get_LHS_Rule : constant array (0 .. 160) of Integer :=
    (   -1,   -3,   -2,   -5,   -5,   -5,   -5,   -9,
        -9,   -9,   -4,   -4,   -4,  -11,  -11,  -10,
       -10,   -6,   -6,   -6,  -12,  -12,  -13,  -15,
       -18,   -7,  -19,  -20,   -7,   -7,  -14,  -14,
       -17,  -16,  -16,  -21,  -21,  -21,  -22,  -22,
       -22,  -22,  -22,  -22,  -22,  -26,  -26,  -26,
       -23,  -23,  -23,  -23,  -23,  -27,  -28,  -28,
       -28,  -29,  -24,  -30,  -30,  -30,  -30,  -32,
       -32,  -32,  -32,  -32,  -32,  -32,  -32,  -33,
       -34,  -36,  -36,  -37,  -37,  -35,  -35,  -35,
       -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,
       -35,  -31,  -31,  -38,  -38,  -38,  -39,  -25,
       -40,  -40,  -40,  -42,  -41,  -44,  -41,  -45,
       -41,  -46,  -41,  -47,  -41,  -48,  -41,  -49,
       -41,  -50,  -41,  -51,  -41,  -53,  -41,  -52,
       -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,
       -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,
       -52,  -52,  -52,  -43,  -43,  -43,  -43,  -54,
        -8,  -57,  -55,  -55,  -58,  -58,  -58,  -59,
       -59,  -59,  -59,  -59,  -60,  -56,  -61,  -56,
       -56);

   YY_Shift_Reduce_Matrix : constant array (-1 .. 517) of Shift_Reduce_Entry :=
    ((   -1,    -1), (   -1,    -1), (    3,     3), (   -1,   -12),
     (    0, -3001), (   -1, -3000), (   29,     6), (   -1, -3000),
     (    1,     8), (    4,    12), (   24,    10), (   -1,   -19),
     (   -1, -3000), (   26,    14), (   -1, -3000), (    4,    12),
     (    7,    15), (   24,    10), (   -1,   -29), (   -1,    -6),
     (   -1,   -18), (   -1,   -20), (   -1,   -21), (    5,    18),
     (   -1, -3000), (   -1,    -2), (   22,    19), (   -1, -3000),
     (   13,    20), (   14,    21), (   -1,   -26), (   25,    24),
     (   -1, -3000), (   -1,   -17), (   -1,   -22), (   30,    27),
     (   31,    26), (   -1,   -16), (   15,    29), (   -1, -3000),
     (   16,    30), (   -1, -3000), (   -1,   -23), (   17,    32),
     (   -1,   -34), (   -1,  -143), (    4,    12), (   24,    10),
     (   -1,   -19), (   26,    36), (   -1, -3000), (   26,    37),
     (   -1, -3000), (    5,    38), (   -1, -3000), (   -1,   -30),
     (   15,    39), (   -1, -3000), (   17,    32), (   -1,   -34),
     (    3,    54), (    4,    12), (    8,    50), (    9,    51),
     (   10,    53), (   24,    47), (   42,    52), (   -1,   -37),
     (   11,    55), (   -1, -3000), (   12,    57), (   -1,  -160),
     (    1,    62), (    4,    12), (   22,    59), (   24,    10),
     (   25,    61), (   27,    60), (   -1,    -3), (   22,    64),
     (   -1, -3000), (   22,    65), (   -1, -3000), (   -1,   -11),
     (   -1,   -31), (    3,    54), (    4,    12), (    8,    50),
     (    9,    51), (   10,    53), (   24,    47), (   42,    52),
     (   -1,   -37), (    3,    54), (    4,    12), (    8,    50),
     (    9,    51), (   10,    53), (   18,    68), (   24,    47),
     (   42,    52), (   -1, -3000), (   -1,   -36), (   -1,   -38),
     (   -1,   -39), (   -1,   -40), (   -1,   -41), (   -1,   -42),
     (   -1,   -43), (   -1,   -44), (   12,    70), (   19,    71),
     (   -1, -3000), (   12,    72), (   -1, -3000), (   12,    73),
     (   -1, -3000), (   13,    74), (   14,    75), (   -1, -3000),
     (   29,    76), (   30,    77), (   -1, -3000), (   -1,   -27),
     (   11,    79), (   12,    81), (   28,    80), (   -1, -3000),
     (   -1,  -158), (   -1,  -144), (   -1,    -7), (   -1,    -8),
     (   -1,    -9), (   -1,    -4), (   -1,    -5), (   -1,   -15),
     (   31,    26), (   -1,   -16), (    3,    54), (    4,    12),
     (    8,    50), (    9,    51), (   10,    53), (   24,    47),
     (   42,    52), (   -1,   -32), (   11,    84), (   -1, -3000),
     (   -1,   -33), (   -1,   -35), (   13,    20), (   14,    21),
     (   20,    85), (   -1, -3000), (   12,    88), (   -1, -3000),
     (   -1,   -57), (   -1,   -94), (   15,    91), (   -1, -3000),
     (   16,    92), (   -1, -3000), (   26,    93), (   -1, -3000),
     (   26,    94), (   -1, -3000), (    4,    12), (   24,    10),
     (   -1,   -19), (   -1,  -145), (   -1,  -147), (   -1,  -156),
     (   26,    98), (   -1, -3000), (    5,    99), (   -1, -3000),
     (   -1,   -24), (   22,   102), (   -1,   -56), (   11,   103),
     (   -1, -3000), (   11,   104), (   23,   105), (   -1, -3000),
     (   13,    20), (   14,    21), (   20,    85), (   -1, -3000),
     (   32,   108), (   33,   109), (   34,   112), (   -1, -3000),
     (   12,   118), (   -1,   -98), (   11,   119), (   -1, -3000),
     (   11,   120), (   15,   121), (   -1, -3000), (   22,   122),
     (   -1, -3000), (   22,   123), (   -1, -3000), (    4,    12),
     (   24,    10), (   -1,   -28), (    3,    54), (    4,    12),
     (   22,   127), (   24,   128), (   25,    24), (   -1,  -150),
     (   26,   131), (   -1, -3000), (   22,   132), (   -1, -3000),
     (   -1,   -10), (    4,    12), (   24,    10), (   -1,   -19),
     (   21,   134), (   22,   135), (   -1, -3000), (   -1,   -55),
     (   -1,   -48), (   -1,   -49), (   12,   136), (   -1, -3000),
     (   11,   137), (   -1, -3000), (   11,   138), (   -1, -3000),
     (   -1,   -59), (   -1,   -60), (   -1,   -61), (   -1,   -62),
     (   12,   139), (   34,   144), (   41,   145), (   -1, -3000),
     (   38,   146), (   39,   147), (   40,   148), (   -1,   -66),
     (   38,   149), (   39,   150), (   40,   151), (   -1,   -70),
     (   11,   152), (   -1, -3000), (   11,   153), (   12,   118),
     (   -1, -3000), (   -1,   -97), (   43,   155), (   44,   156),
     (   45,   157), (   46,   158), (   47,   159), (   48,   160),
     (   49,   161), (   50,   162), (   51,   163), (   -1,  -117),
     (   -1,   -45), (   -1,   -46), (   11,   165), (   -1, -3000),
     (   30,   166), (   -1, -3000), (    5,   167), (   -1, -3000),
     (    3,    54), (    4,    12), (   22,   127), (   24,   128),
     (   25,    24), (   27,   168), (   -1, -3000), (   -1,  -149),
     (   -1,  -151), (   -1,  -152), (   -1,  -153), (   -1,  -154),
     (   -1,  -155), (   22,   170), (   -1, -3000), (   -1,  -159),
     (    4,    12), (   24,    10), (   -1,   -25), (   -1,   -53),
     (   -1,   -54), (   11,   171), (   -1, -3000), (   -1,   -51),
     (   -1,   -52), (   38,   172), (   39,   173), (   40,   174),
     (   -1,   -80), (   38,   175), (   39,   176), (   40,   177),
     (   -1,   -84), (   38,   178), (   39,   179), (   40,   180),
     (   -1,   -88), (   35,   181), (   37,   182), (   -1, -3000),
     (   36,   184), (   -1,   -76), (   12,   139), (   34,   144),
     (   -1, -3000), (   36,   186), (   -1,   -93), (   -1,   -63),
     (   -1,   -64), (   -1,   -65), (   -1,   -67), (   -1,   -68),
     (   -1,   -69), (   -1,   -58), (   -1,   -95), (   -1,   -96),
     (   -1,   -99), (   -1,  -101), (   -1,  -103), (   -1,  -105),
     (   -1,  -107), (   -1,  -109), (   -1,  -111), (   -1,  -113),
     (   -1,  -115), (   34,   196), (   -1, -3000), (   -1,   -47),
     (   26,   197), (   -1, -3000), (   -1,   -14), (   11,   198),
     (   -1, -3000), (   -1,  -148), (   -1,  -157), (   -1,   -50),
     (   -1,   -77), (   -1,   -78), (   -1,   -79), (   -1,   -81),
     (   -1,   -82), (   -1,   -83), (   -1,   -85), (   -1,   -86),
     (   -1,   -87), (   -1,   -72), (   12,   139), (   34,   144),
     (   -1, -3000), (   35,   200), (   36,   201), (   -1, -3000),
     (   12,   139), (   34,   144), (   -1, -3000), (   35,   203),
     (   36,   204), (   -1, -3000), (   12,   205), (   -1, -3000),
     (   22,   209), (   52,   206), (   53,   207), (   54,   208),
     (   -1, -3000), (   22,   209), (   52,   206), (   53,   207),
     (   54,   208), (   -1, -3000), (   22,   209), (   52,   206),
     (   53,   207), (   54,   208), (   -1, -3000), (   22,   209),
     (   52,   206), (   53,   207), (   54,   208), (   -1, -3000),
     (   22,   209), (   52,   206), (   53,   207), (   54,   208),
     (   -1, -3000), (   22,   209), (   52,   206), (   53,   207),
     (   54,   208), (   -1, -3000), (   22,   209), (   52,   206),
     (   53,   207), (   54,   208), (   -1, -3000), (   22,   209),
     (   52,   206), (   53,   207), (   54,   208), (   -1, -3000),
     (   34,   218), (   -1, -3000), (   12,   220), (   43,   221),
     (   44,   222), (   45,   223), (   46,   224), (   47,   225),
     (   48,   226), (   49,   227), (   50,   228), (   51,   229),
     (   -1, -3000), (   22,   230), (   -1, -3000), (   -1,  -146),
     (   -1,   -75), (   -1,   -71), (   12,   139), (   34,   144),
     (   -1, -3000), (   -1,   -74), (   39,   232), (   -1,   -90),
     (   12,   233), (   -1, -3000), (   -1,   -92), (   -1,  -139),
     (   -1,  -140), (   22,   234), (   -1, -3000), (   -1,  -142),
     (   -1,  -100), (   -1,  -102), (   -1,  -104), (   -1,  -106),
     (   -1,  -108), (   -1,  -110), (   -1,  -112), (   -1,  -114),
     (   12,   220), (   43,   221), (   44,   222), (   45,   223),
     (   46,   224), (   47,   225), (   48,   226), (   49,   227),
     (   50,   228), (   51,   229), (   -1, -3000), (   35,   236),
     (   36,   237), (   -1, -3000), (   -1,  -129), (   -1,  -130),
     (   -1,  -131), (   -1,  -132), (   -1,  -133), (   -1,  -134),
     (   -1,  -135), (   -1,  -136), (   -1,  -137), (   -1,  -138),
     (    5,   238), (   -1, -3000), (   -1,   -73), (   -1,   -89),
     (   -1,   -91), (   -1,  -141), (   35,   239), (   36,   237),
     (   -1, -3000), (   22,   209), (   52,   206), (   53,   207),
     (   54,   208), (   -1, -3000), (   12,   241), (   43,   242),
     (   44,   243), (   45,   244), (   46,   245), (   47,   246),
     (   48,   247), (   49,   248), (   50,   249), (   51,   250),
     (   -1, -3000), (   -1,   -13), (   22,   209), (   52,   206),
     (   53,   207), (   54,   208), (   -1, -3000), (   -1,  -118),
     (   -1,  -119), (   -1,  -120), (   -1,  -121), (   -1,  -122),
     (   -1,  -123), (   -1,  -124), (   -1,  -125), (   -1,  -126),
     (   -1,  -127), (   -1,  -128), (   -1,  -116));

   YY_Shift_Reduce_Offset : constant array (0 .. 251) of Integer :=
    (    0,    1,    3,    5,    7,   11,   12,   14,
        18,   19,   20,   21,   22,   24,   25,   27,
        30,   32,   33,   34,   37,   39,   41,   42,
        44,   45,   48,   50,   52,   54,   55,   57,
        59,   67,   69,   71,   78,   80,   82,   83,
        84,   92,  101,  102,  103,  104,  105,  106,
       107,  108,  109,  112,  114,  116,  119,  122,
       123,  127,  128,  129,  130,  131,  132,  133,
       134,  135,  137,  145,  147,  148,  149,  153,
       155,  156,  157,  159,  161,  163,  165,  168,
       169,  170,  171,  173,  175,  176,  178,  180,
       183,  187,  191,  193,  195,  198,  200,  202,
       205,  211,  213,  215,  216,  219,  222,  223,
       224,  225,  227,  229,  231,  232,  233,  234,
       235,  239,  243,  247,  249,  252,  253,  263,
       264,  265,  267,  269,  271,  278,  279,  280,
       281,  282,  283,  284,  286,  287,  290,  291,
       292,  294,  295,  296,  300,  304,  308,  311,
       313,  316,  318,  319,  320,  321,  322,  323,
       324,  325,  326,  327,  328,  329,  330,  331,
       332,  333,  334,  335,  336,  338,  339,  341,
       342,  344,  345,  346,  347,  348,  349,  350,
       351,  352,  353,  354,  355,  356,  357,  360,
       363,  366,  369,  371,  376,  381,  386,  391,
       396,  401,  406,  411,  413,  424,  426,  427,
       428,  429,  432,  433,  435,  437,  438,  439,
       440,  442,  443,  444,  445,  446,  447,  448,
       449,  450,  451,  462,  465,  466,  467,  468,
       469,  470,  471,  472,  473,  474,  475,  477,
       478,  479,  480,  481,  484,  489,  500,  501,
       506,  507,  508,  509,  510,  511,  512,  513,
       514,  515,  516,  517);

end XML.SAX.Simple_Readers.Parser.Tables;
