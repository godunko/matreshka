------------------------------------------------------------------------------
--                                                                          --
--                            Matreshka Project                             --
--                                                                          --
--                          Ada Modeling Framework                          --
--                                                                          --
--                        Runtime Library Component                         --
--                                                                          --
------------------------------------------------------------------------------
--                                                                          --
-- Copyright Â© 2010-2017, Vadim Godunko <vgodunko@gmail.com>                --
-- All rights reserved.                                                     --
--                                                                          --
-- Redistribution and use in source and binary forms, with or without       --
-- modification, are permitted provided that the following conditions       --
-- are met:                                                                 --
--                                                                          --
--  * Redistributions of source code must retain the above copyright        --
--    notice, this list of conditions and the following disclaimer.         --
--                                                                          --
--  * Redistributions in binary form must reproduce the above copyright     --
--    notice, this list of conditions and the following disclaimer in the   --
--    documentation and/or other materials provided with the distribution.  --
--                                                                          --
--  * Neither the name of the Vadim Godunko, IE nor the names of its        --
--    contributors may be used to endorse or promote products derived from  --
--    this software without specific prior written permission.              --
--                                                                          --
-- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS      --
-- "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT        --
-- LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR    --
-- A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT     --
-- HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,   --
-- SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED --
-- TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR   --
-- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF   --
-- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING     --
-- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS       --
-- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.             --
--                                                                          --
------------------------------------------------------------------------------
--  $Revision$ $Date$
------------------------------------------------------------------------------
--  This file is generated, don't edit it.
------------------------------------------------------------------------------
with Matreshka.Internals.Strings;

package AMF.Internals.Tables.UML_String_Data_0C is

   --  "The query unlimitedValue() gives a single UnlimitedNatural value when one can be computed."

   MS_0C00 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 95,
         Unused   => 90,
         Length   => 90,
         Value    =>
          (16#0054#, 16#0068#, 16#0065#, 16#0020#,
           16#0071#, 16#0075#, 16#0065#, 16#0072#,
           16#0079#, 16#0020#, 16#0075#, 16#006E#,
           16#006C#, 16#0069#, 16#006D#, 16#0069#,
           16#0074#, 16#0065#, 16#0064#, 16#0056#,
           16#0061#, 16#006C#, 16#0075#, 16#0065#,
           16#0028#, 16#0029#, 16#0020#, 16#0067#,
           16#0069#, 16#0076#, 16#0065#, 16#0073#,
           16#0020#, 16#0061#, 16#0020#, 16#0073#,
           16#0069#, 16#006E#, 16#0067#, 16#006C#,
           16#0065#, 16#0020#, 16#0055#, 16#006E#,
           16#006C#, 16#0069#, 16#006D#, 16#0069#,
           16#0074#, 16#0065#, 16#0064#, 16#004E#,
           16#0061#, 16#0074#, 16#0075#, 16#0072#,
           16#0061#, 16#006C#, 16#0020#, 16#0076#,
           16#0061#, 16#006C#, 16#0075#, 16#0065#,
           16#0020#, 16#0077#, 16#0068#, 16#0065#,
           16#006E#, 16#0020#, 16#006F#, 16#006E#,
           16#0065#, 16#0020#, 16#0063#, 16#0061#,
           16#006E#, 16#0020#, 16#0062#, 16#0065#,
           16#0020#, 16#0063#, 16#006F#, 16#006D#,
           16#0070#, 16#0075#, 16#0074#, 16#0065#,
           16#0064#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "A_deferrableTrigger_state"

   MS_0C01 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 31,
         Unused   => 25,
         Length   => 25,
         Value    =>
          (16#0041#, 16#005F#, 16#0064#, 16#0065#,
           16#0066#, 16#0065#, 16#0072#, 16#0072#,
           16#0061#, 16#0062#, 16#006C#, 16#0065#,
           16#0054#, 16#0072#, 16#0069#, 16#0067#,
           16#0067#, 16#0065#, 16#0072#, 16#005F#,
           16#0073#, 16#0074#, 16#0061#, 16#0074#,
           16#0065#,
           others => 16#0000#),
         others => <>);

   --  "LinkEndDestructionData for ordered nonunique association ends must have a single destroyAt input pin if isDestroyDuplicates is false. It must be of type UnlimitedNatural and have a multiplicity of 1..1. Otherwise, the action has no input pin for the removal position."

   MS_0C02 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 279,
         Unused   => 267,
         Length   => 267,
         Value    =>
          (16#004C#, 16#0069#, 16#006E#, 16#006B#,
           16#0045#, 16#006E#, 16#0064#, 16#0044#,
           16#0065#, 16#0073#, 16#0074#, 16#0072#,
           16#0075#, 16#0063#, 16#0074#, 16#0069#,
           16#006F#, 16#006E#, 16#0044#, 16#0061#,
           16#0074#, 16#0061#, 16#0020#, 16#0066#,
           16#006F#, 16#0072#, 16#0020#, 16#006F#,
           16#0072#, 16#0064#, 16#0065#, 16#0072#,
           16#0065#, 16#0064#, 16#0020#, 16#006E#,
           16#006F#, 16#006E#, 16#0075#, 16#006E#,
           16#0069#, 16#0071#, 16#0075#, 16#0065#,
           16#0020#, 16#0061#, 16#0073#, 16#0073#,
           16#006F#, 16#0063#, 16#0069#, 16#0061#,
           16#0074#, 16#0069#, 16#006F#, 16#006E#,
           16#0020#, 16#0065#, 16#006E#, 16#0064#,
           16#0073#, 16#0020#, 16#006D#, 16#0075#,
           16#0073#, 16#0074#, 16#0020#, 16#0068#,
           16#0061#, 16#0076#, 16#0065#, 16#0020#,
           16#0061#, 16#0020#, 16#0073#, 16#0069#,
           16#006E#, 16#0067#, 16#006C#, 16#0065#,
           16#0020#, 16#0064#, 16#0065#, 16#0073#,
           16#0074#, 16#0072#, 16#006F#, 16#0079#,
           16#0041#, 16#0074#, 16#0020#, 16#0069#,
           16#006E#, 16#0070#, 16#0075#, 16#0074#,
           16#0020#, 16#0070#, 16#0069#, 16#006E#,
           16#0020#, 16#0069#, 16#0066#, 16#0020#,
           16#0069#, 16#0073#, 16#0044#, 16#0065#,
           16#0073#, 16#0074#, 16#0072#, 16#006F#,
           16#0079#, 16#0044#, 16#0075#, 16#0070#,
           16#006C#, 16#0069#, 16#0063#, 16#0061#,
           16#0074#, 16#0065#, 16#0073#, 16#0020#,
           16#0069#, 16#0073#, 16#0020#, 16#0066#,
           16#0061#, 16#006C#, 16#0073#, 16#0065#,
           16#002E#, 16#0020#, 16#0049#, 16#0074#,
           16#0020#, 16#006D#, 16#0075#, 16#0073#,
           16#0074#, 16#0020#, 16#0062#, 16#0065#,
           16#0020#, 16#006F#, 16#0066#, 16#0020#,
           16#0074#, 16#0079#, 16#0070#, 16#0065#,
           16#0020#, 16#0055#, 16#006E#, 16#006C#,
           16#0069#, 16#006D#, 16#0069#, 16#0074#,
           16#0065#, 16#0064#, 16#004E#, 16#0061#,
           16#0074#, 16#0075#, 16#0072#, 16#0061#,
           16#006C#, 16#0020#, 16#0061#, 16#006E#,
           16#0064#, 16#0020#, 16#0068#, 16#0061#,
           16#0076#, 16#0065#, 16#0020#, 16#0061#,
           16#0020#, 16#006D#, 16#0075#, 16#006C#,
           16#0074#, 16#0069#, 16#0070#, 16#006C#,
           16#0069#, 16#0063#, 16#0069#, 16#0074#,
           16#0079#, 16#0020#, 16#006F#, 16#0066#,
           16#0020#, 16#0031#, 16#002E#, 16#002E#,
           16#0031#, 16#002E#, 16#0020#, 16#004F#,
           16#0074#, 16#0068#, 16#0065#, 16#0072#,
           16#0077#, 16#0069#, 16#0073#, 16#0065#,
           16#002C#, 16#0020#, 16#0074#, 16#0068#,
           16#0065#, 16#0020#, 16#0061#, 16#0063#,
           16#0074#, 16#0069#, 16#006F#, 16#006E#,
           16#0020#, 16#0068#, 16#0061#, 16#0073#,
           16#0020#, 16#006E#, 16#006F#, 16#0020#,
           16#0069#, 16#006E#, 16#0070#, 16#0075#,
           16#0074#, 16#0020#, 16#0070#, 16#0069#,
           16#006E#, 16#0020#, 16#0066#, 16#006F#,
           16#0072#, 16#0020#, 16#0074#, 16#0068#,
           16#0065#, 16#0020#, 16#0072#, 16#0065#,
           16#006D#, 16#006F#, 16#0076#, 16#0061#,
           16#006C#, 16#0020#, 16#0070#, 16#006F#,
           16#0073#, 16#0069#, 16#0074#, 16#0069#,
           16#006F#, 16#006E#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "A slot giving the value or values of a structural feature of the instance. An instance specification can have one slot per structural feature of its classifiers, including inherited features. It is not necessary to model a slot for each structural feature, in which case the instance specification is a partial description."

   MS_0C03 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 335,
         Unused   => 323,
         Length   => 323,
         Value    =>
          (16#0041#, 16#0020#, 16#0073#, 16#006C#,
           16#006F#, 16#0074#, 16#0020#, 16#0067#,
           16#0069#, 16#0076#, 16#0069#, 16#006E#,
           16#0067#, 16#0020#, 16#0074#, 16#0068#,
           16#0065#, 16#0020#, 16#0076#, 16#0061#,
           16#006C#, 16#0075#, 16#0065#, 16#0020#,
           16#006F#, 16#0072#, 16#0020#, 16#0076#,
           16#0061#, 16#006C#, 16#0075#, 16#0065#,
           16#0073#, 16#0020#, 16#006F#, 16#0066#,
           16#0020#, 16#0061#, 16#0020#, 16#0073#,
           16#0074#, 16#0072#, 16#0075#, 16#0063#,
           16#0074#, 16#0075#, 16#0072#, 16#0061#,
           16#006C#, 16#0020#, 16#0066#, 16#0065#,
           16#0061#, 16#0074#, 16#0075#, 16#0072#,
           16#0065#, 16#0020#, 16#006F#, 16#0066#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#0069#, 16#006E#, 16#0073#,
           16#0074#, 16#0061#, 16#006E#, 16#0063#,
           16#0065#, 16#002E#, 16#0020#, 16#0041#,
           16#006E#, 16#0020#, 16#0069#, 16#006E#,
           16#0073#, 16#0074#, 16#0061#, 16#006E#,
           16#0063#, 16#0065#, 16#0020#, 16#0073#,
           16#0070#, 16#0065#, 16#0063#, 16#0069#,
           16#0066#, 16#0069#, 16#0063#, 16#0061#,
           16#0074#, 16#0069#, 16#006F#, 16#006E#,
           16#0020#, 16#0063#, 16#0061#, 16#006E#,
           16#0020#, 16#0068#, 16#0061#, 16#0076#,
           16#0065#, 16#0020#, 16#006F#, 16#006E#,
           16#0065#, 16#0020#, 16#0073#, 16#006C#,
           16#006F#, 16#0074#, 16#0020#, 16#0070#,
           16#0065#, 16#0072#, 16#0020#, 16#0073#,
           16#0074#, 16#0072#, 16#0075#, 16#0063#,
           16#0074#, 16#0075#, 16#0072#, 16#0061#,
           16#006C#, 16#0020#, 16#0066#, 16#0065#,
           16#0061#, 16#0074#, 16#0075#, 16#0072#,
           16#0065#, 16#0020#, 16#006F#, 16#0066#,
           16#0020#, 16#0069#, 16#0074#, 16#0073#,
           16#0020#, 16#0063#, 16#006C#, 16#0061#,
           16#0073#, 16#0073#, 16#0069#, 16#0066#,
           16#0069#, 16#0065#, 16#0072#, 16#0073#,
           16#002C#, 16#0020#, 16#0069#, 16#006E#,
           16#0063#, 16#006C#, 16#0075#, 16#0064#,
           16#0069#, 16#006E#, 16#0067#, 16#0020#,
           16#0069#, 16#006E#, 16#0068#, 16#0065#,
           16#0072#, 16#0069#, 16#0074#, 16#0065#,
           16#0064#, 16#0020#, 16#0066#, 16#0065#,
           16#0061#, 16#0074#, 16#0075#, 16#0072#,
           16#0065#, 16#0073#, 16#002E#, 16#0020#,
           16#0049#, 16#0074#, 16#0020#, 16#0069#,
           16#0073#, 16#0020#, 16#006E#, 16#006F#,
           16#0074#, 16#0020#, 16#006E#, 16#0065#,
           16#0063#, 16#0065#, 16#0073#, 16#0073#,
           16#0061#, 16#0072#, 16#0079#, 16#0020#,
           16#0074#, 16#006F#, 16#0020#, 16#006D#,
           16#006F#, 16#0064#, 16#0065#, 16#006C#,
           16#0020#, 16#0061#, 16#0020#, 16#0073#,
           16#006C#, 16#006F#, 16#0074#, 16#0020#,
           16#0066#, 16#006F#, 16#0072#, 16#0020#,
           16#0065#, 16#0061#, 16#0063#, 16#0068#,
           16#0020#, 16#0073#, 16#0074#, 16#0072#,
           16#0075#, 16#0063#, 16#0074#, 16#0075#,
           16#0072#, 16#0061#, 16#006C#, 16#0020#,
           16#0066#, 16#0065#, 16#0061#, 16#0074#,
           16#0075#, 16#0072#, 16#0065#, 16#002C#,
           16#0020#, 16#0069#, 16#006E#, 16#0020#,
           16#0077#, 16#0068#, 16#0069#, 16#0063#,
           16#0068#, 16#0020#, 16#0063#, 16#0061#,
           16#0073#, 16#0065#, 16#0020#, 16#0074#,
           16#0068#, 16#0065#, 16#0020#, 16#0069#,
           16#006E#, 16#0073#, 16#0074#, 16#0061#,
           16#006E#, 16#0063#, 16#0065#, 16#0020#,
           16#0073#, 16#0070#, 16#0065#, 16#0063#,
           16#0069#, 16#0066#, 16#0069#, 16#0063#,
           16#0061#, 16#0074#, 16#0069#, 16#006F#,
           16#006E#, 16#0020#, 16#0069#, 16#0073#,
           16#0020#, 16#0061#, 16#0020#, 16#0070#,
           16#0061#, 16#0072#, 16#0074#, 16#0069#,
           16#0061#, 16#006C#, 16#0020#, 16#0064#,
           16#0065#, 16#0073#, 16#0063#, 16#0072#,
           16#0069#, 16#0070#, 16#0074#, 16#0069#,
           16#006F#, 16#006E#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "A_observation_duration"

   MS_0C04 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 23,
         Unused   => 22,
         Length   => 22,
         Value    =>
          (16#0041#, 16#005F#, 16#006F#, 16#0062#,
           16#0073#, 16#0065#, 16#0072#, 16#0076#,
           16#0061#, 16#0074#, 16#0069#, 16#006F#,
           16#006E#, 16#005F#, 16#0064#, 16#0075#,
           16#0072#, 16#0061#, 16#0074#, 16#0069#,
           16#006F#, 16#006E#,
           others => 16#0000#),
         others => <>);

   --  "direction"

   MS_0C05 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 15,
         Unused   => 9,
         Length   => 9,
         Value    =>
          (16#0064#, 16#0069#, 16#0072#, 16#0065#,
           16#0063#, 16#0074#, 16#0069#, 16#006F#,
           16#006E#,
           others => 16#0000#),
         others => <>);

   --  "incoming_edges_structured_only"

   MS_0C06 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 31,
         Unused   => 30,
         Length   => 30,
         Value    =>
          (16#0069#, 16#006E#, 16#0063#, 16#006F#,
           16#006D#, 16#0069#, 16#006E#, 16#0067#,
           16#005F#, 16#0065#, 16#0064#, 16#0067#,
           16#0065#, 16#0073#, 16#005F#, 16#0073#,
           16#0074#, 16#0072#, 16#0075#, 16#0063#,
           16#0074#, 16#0075#, 16#0072#, 16#0065#,
           16#0064#, 16#005F#, 16#006F#, 16#006E#,
           16#006C#, 16#0079#,
           others => 16#0000#),
         others => <>);

   --  "destroyObjectAction"

   MS_0C07 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 23,
         Unused   => 19,
         Length   => 19,
         Value    =>
          (16#0064#, 16#0065#, 16#0073#, 16#0074#,
           16#0072#, 16#006F#, 16#0079#, 16#004F#,
           16#0062#, 16#006A#, 16#0065#, 16#0063#,
           16#0074#, 16#0041#, 16#0063#, 16#0074#,
           16#0069#, 16#006F#, 16#006E#,
           others => 16#0000#),
         others => <>);

   --  "dimension_not_contained"

   MS_0C08 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 31,
         Unused   => 23,
         Length   => 23,
         Value    =>
          (16#0064#, 16#0069#, 16#006D#, 16#0065#,
           16#006E#, 16#0073#, 16#0069#, 16#006F#,
           16#006E#, 16#005F#, 16#006E#, 16#006F#,
           16#0074#, 16#005F#, 16#0063#, 16#006F#,
           16#006E#, 16#0074#, 16#0061#, 16#0069#,
           16#006E#, 16#0065#, 16#0064#,
           others => 16#0000#),
         others => <>);

   --  "An enumeration literal is a user-defined data value for an enumeration."

   MS_0C09 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 79,
         Unused   => 71,
         Length   => 71,
         Value    =>
          (16#0041#, 16#006E#, 16#0020#, 16#0065#,
           16#006E#, 16#0075#, 16#006D#, 16#0065#,
           16#0072#, 16#0061#, 16#0074#, 16#0069#,
           16#006F#, 16#006E#, 16#0020#, 16#006C#,
           16#0069#, 16#0074#, 16#0065#, 16#0072#,
           16#0061#, 16#006C#, 16#0020#, 16#0069#,
           16#0073#, 16#0020#, 16#0061#, 16#0020#,
           16#0075#, 16#0073#, 16#0065#, 16#0072#,
           16#002D#, 16#0064#, 16#0065#, 16#0066#,
           16#0069#, 16#006E#, 16#0065#, 16#0064#,
           16#0020#, 16#0064#, 16#0061#, 16#0074#,
           16#0061#, 16#0020#, 16#0076#, 16#0061#,
           16#006C#, 16#0075#, 16#0065#, 16#0020#,
           16#0066#, 16#006F#, 16#0072#, 16#0020#,
           16#0061#, 16#006E#, 16#0020#, 16#0065#,
           16#006E#, 16#0075#, 16#006D#, 16#0065#,
           16#0072#, 16#0061#, 16#0074#, 16#0069#,
           16#006F#, 16#006E#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "importedPackage"

   MS_0C0A : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 23,
         Unused   => 15,
         Length   => 15,
         Value    =>
          (16#0069#, 16#006D#, 16#0070#, 16#006F#,
           16#0072#, 16#0074#, 16#0065#, 16#0064#,
           16#0050#, 16#0061#, 16#0063#, 16#006B#,
           16#0061#, 16#0067#, 16#0065#,
           others => 16#0000#),
         others => <>);

   --  "condition"

   MS_0C0B : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 15,
         Unused   => 9,
         Length   => 9,
         Value    =>
          (16#0063#, 16#006F#, 16#006E#, 16#0064#,
           16#0069#, 16#0074#, 16#0069#, 16#006F#,
           16#006E#,
           others => 16#0000#),
         others => <>);

   --  "max"

   MS_0C0C : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 7,
         Unused   => 3,
         Length   => 3,
         Value    =>
          (16#006D#, 16#0061#, 16#0078#,
           others => 16#0000#),
         others => <>);

   --  "Constraint of the operand."

   MS_0C0D : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 31,
         Unused   => 26,
         Length   => 26,
         Value    =>
          (16#0043#, 16#006F#, 16#006E#, 16#0073#,
           16#0074#, 16#0072#, 16#0061#, 16#0069#,
           16#006E#, 16#0074#, 16#0020#, 16#006F#,
           16#0066#, 16#0020#, 16#0074#, 16#0068#,
           16#0065#, 16#0020#, 16#006F#, 16#0070#,
           16#0065#, 16#0072#, 16#0061#, 16#006E#,
           16#0064#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "Missing derivation for ProtocolTransition::/referred : Operation"

   MS_0C0E : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 71,
         Unused   => 64,
         Length   => 64,
         Value    =>
          (16#004D#, 16#0069#, 16#0073#, 16#0073#,
           16#0069#, 16#006E#, 16#0067#, 16#0020#,
           16#0064#, 16#0065#, 16#0072#, 16#0069#,
           16#0076#, 16#0061#, 16#0074#, 16#0069#,
           16#006F#, 16#006E#, 16#0020#, 16#0066#,
           16#006F#, 16#0072#, 16#0020#, 16#0050#,
           16#0072#, 16#006F#, 16#0074#, 16#006F#,
           16#0063#, 16#006F#, 16#006C#, 16#0054#,
           16#0072#, 16#0061#, 16#006E#, 16#0073#,
           16#0069#, 16#0074#, 16#0069#, 16#006F#,
           16#006E#, 16#003A#, 16#003A#, 16#002F#,
           16#0072#, 16#0065#, 16#0066#, 16#0065#,
           16#0072#, 16#0072#, 16#0065#, 16#0064#,
           16#0020#, 16#003A#, 16#0020#, 16#004F#,
           16#0070#, 16#0065#, 16#0072#, 16#0061#,
           16#0074#, 16#0069#, 16#006F#, 16#006E#,
           others => 16#0000#),
         others => <>);

   --  "A_elementImport_importingNamespace"

   MS_0C0F : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 39,
         Unused   => 34,
         Length   => 34,
         Value    =>
          (16#0041#, 16#005F#, 16#0065#, 16#006C#,
           16#0065#, 16#006D#, 16#0065#, 16#006E#,
           16#0074#, 16#0049#, 16#006D#, 16#0070#,
           16#006F#, 16#0072#, 16#0074#, 16#005F#,
           16#0069#, 16#006D#, 16#0070#, 16#006F#,
           16#0072#, 16#0074#, 16#0069#, 16#006E#,
           16#0067#, 16#004E#, 16#0061#, 16#006D#,
           16#0065#, 16#0073#, 16#0070#, 16#0061#,
           16#0063#, 16#0065#,
           others => 16#0000#),
         others => <>);

   --  "A_realizingClassifier_componentRealization"

   MS_0C10 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 47,
         Unused   => 42,
         Length   => 42,
         Value    =>
          (16#0041#, 16#005F#, 16#0072#, 16#0065#,
           16#0061#, 16#006C#, 16#0069#, 16#007A#,
           16#0069#, 16#006E#, 16#0067#, 16#0043#,
           16#006C#, 16#0061#, 16#0073#, 16#0073#,
           16#0069#, 16#0066#, 16#0069#, 16#0065#,
           16#0072#, 16#005F#, 16#0063#, 16#006F#,
           16#006D#, 16#0070#, 16#006F#, 16#006E#,
           16#0065#, 16#006E#, 16#0074#, 16#0052#,
           16#0065#, 16#0061#, 16#006C#, 16#0069#,
           16#007A#, 16#0061#, 16#0074#, 16#0069#,
           16#006F#, 16#006E#,
           others => 16#0000#),
         others => <>);

   --  "A_ownedAttribute_structuredClassifier"

   MS_0C11 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 39,
         Unused   => 37,
         Length   => 37,
         Value    =>
          (16#0041#, 16#005F#, 16#006F#, 16#0077#,
           16#006E#, 16#0065#, 16#0064#, 16#0041#,
           16#0074#, 16#0074#, 16#0072#, 16#0069#,
           16#0062#, 16#0075#, 16#0074#, 16#0065#,
           16#005F#, 16#0073#, 16#0074#, 16#0072#,
           16#0075#, 16#0063#, 16#0074#, 16#0075#,
           16#0072#, 16#0065#, 16#0064#, 16#0043#,
           16#006C#, 16#0061#, 16#0073#, 16#0073#,
           16#0069#, 16#0066#, 16#0069#, 16#0065#,
           16#0072#,
           others => 16#0000#),
         others => <>);

   --  "A_object_readIsClassifiedObjectAction"

   MS_0C12 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 39,
         Unused   => 37,
         Length   => 37,
         Value    =>
          (16#0041#, 16#005F#, 16#006F#, 16#0062#,
           16#006A#, 16#0065#, 16#0063#, 16#0074#,
           16#005F#, 16#0072#, 16#0065#, 16#0061#,
           16#0064#, 16#0049#, 16#0073#, 16#0043#,
           16#006C#, 16#0061#, 16#0073#, 16#0073#,
           16#0069#, 16#0066#, 16#0069#, 16#0065#,
           16#0064#, 16#004F#, 16#0062#, 16#006A#,
           16#0065#, 16#0063#, 16#0074#, 16#0041#,
           16#0063#, 16#0074#, 16#0069#, 16#006F#,
           16#006E#,
           others => 16#0000#),
         others => <>);

   --  "A_qualifier_associationEnd"

   MS_0C13 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 31,
         Unused   => 26,
         Length   => 26,
         Value    =>
          (16#0041#, 16#005F#, 16#0071#, 16#0075#,
           16#0061#, 16#006C#, 16#0069#, 16#0066#,
           16#0069#, 16#0065#, 16#0072#, 16#005F#,
           16#0061#, 16#0073#, 16#0073#, 16#006F#,
           16#0063#, 16#0069#, 16#0061#, 16#0074#,
           16#0069#, 16#006F#, 16#006E#, 16#0045#,
           16#006E#, 16#0064#,
           others => 16#0000#),
         others => <>);

   --  "sequential"

   MS_0C14 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 15,
         Unused   => 10,
         Length   => 10,
         Value    =>
          (16#0073#, 16#0065#, 16#0071#, 16#0075#,
           16#0065#, 16#006E#, 16#0074#, 16#0069#,
           16#0061#, 16#006C#,
           others => 16#0000#),
         others => <>);

   --  "The enclosing Interaction owning the Message"

   MS_0C15 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 47,
         Unused   => 44,
         Length   => 44,
         Value    =>
          (16#0054#, 16#0068#, 16#0065#, 16#0020#,
           16#0065#, 16#006E#, 16#0063#, 16#006C#,
           16#006F#, 16#0073#, 16#0069#, 16#006E#,
           16#0067#, 16#0020#, 16#0049#, 16#006E#,
           16#0074#, 16#0065#, 16#0072#, 16#0061#,
           16#0063#, 16#0074#, 16#0069#, 16#006F#,
           16#006E#, 16#0020#, 16#006F#, 16#0077#,
           16#006E#, 16#0069#, 16#006E#, 16#0067#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#004D#, 16#0065#, 16#0073#,
           16#0073#, 16#0061#, 16#0067#, 16#0065#,
           others => 16#0000#),
         others => <>);

   --  "The fromAction of an action input pin must have exactly one output pin."

   MS_0C16 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 79,
         Unused   => 71,
         Length   => 71,
         Value    =>
          (16#0054#, 16#0068#, 16#0065#, 16#0020#,
           16#0066#, 16#0072#, 16#006F#, 16#006D#,
           16#0041#, 16#0063#, 16#0074#, 16#0069#,
           16#006F#, 16#006E#, 16#0020#, 16#006F#,
           16#0066#, 16#0020#, 16#0061#, 16#006E#,
           16#0020#, 16#0061#, 16#0063#, 16#0074#,
           16#0069#, 16#006F#, 16#006E#, 16#0020#,
           16#0069#, 16#006E#, 16#0070#, 16#0075#,
           16#0074#, 16#0020#, 16#0070#, 16#0069#,
           16#006E#, 16#0020#, 16#006D#, 16#0075#,
           16#0073#, 16#0074#, 16#0020#, 16#0068#,
           16#0061#, 16#0076#, 16#0065#, 16#0020#,
           16#0065#, 16#0078#, 16#0061#, 16#0063#,
           16#0074#, 16#006C#, 16#0079#, 16#0020#,
           16#006F#, 16#006E#, 16#0065#, 16#0020#,
           16#006F#, 16#0075#, 16#0074#, 16#0070#,
           16#0075#, 16#0074#, 16#0020#, 16#0070#,
           16#0069#, 16#006E#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "The type and ordering of the result output pin of a read-variable action are the same as the type and ordering of the variable."

   MS_0C17 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 135,
         Unused   => 127,
         Length   => 127,
         Value    =>
          (16#0054#, 16#0068#, 16#0065#, 16#0020#,
           16#0074#, 16#0079#, 16#0070#, 16#0065#,
           16#0020#, 16#0061#, 16#006E#, 16#0064#,
           16#0020#, 16#006F#, 16#0072#, 16#0064#,
           16#0065#, 16#0072#, 16#0069#, 16#006E#,
           16#0067#, 16#0020#, 16#006F#, 16#0066#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#0072#, 16#0065#, 16#0073#,
           16#0075#, 16#006C#, 16#0074#, 16#0020#,
           16#006F#, 16#0075#, 16#0074#, 16#0070#,
           16#0075#, 16#0074#, 16#0020#, 16#0070#,
           16#0069#, 16#006E#, 16#0020#, 16#006F#,
           16#0066#, 16#0020#, 16#0061#, 16#0020#,
           16#0072#, 16#0065#, 16#0061#, 16#0064#,
           16#002D#, 16#0076#, 16#0061#, 16#0072#,
           16#0069#, 16#0061#, 16#0062#, 16#006C#,
           16#0065#, 16#0020#, 16#0061#, 16#0063#,
           16#0074#, 16#0069#, 16#006F#, 16#006E#,
           16#0020#, 16#0061#, 16#0072#, 16#0065#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#0073#, 16#0061#, 16#006D#,
           16#0065#, 16#0020#, 16#0061#, 16#0073#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#0074#, 16#0079#, 16#0070#,
           16#0065#, 16#0020#, 16#0061#, 16#006E#,
           16#0064#, 16#0020#, 16#006F#, 16#0072#,
           16#0064#, 16#0065#, 16#0072#, 16#0069#,
           16#006E#, 16#0067#, 16#0020#, 16#006F#,
           16#0066#, 16#0020#, 16#0074#, 16#0068#,
           16#0065#, 16#0020#, 16#0076#, 16#0061#,
           16#0072#, 16#0069#, 16#0061#, 16#0062#,
           16#006C#, 16#0065#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "object"

   MS_0C18 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 7,
         Unused   => 6,
         Length   => 6,
         Value    =>
          (16#006F#, 16#0062#, 16#006A#, 16#0065#,
           16#0063#, 16#0074#,
           others => 16#0000#),
         others => <>);

   --  "ownedUseCase"

   MS_0C19 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 15,
         Unused   => 12,
         Length   => 12,
         Value    =>
          (16#006F#, 16#0077#, 16#006E#, 16#0065#,
           16#0064#, 16#0055#, 16#0073#, 16#0065#,
           16#0043#, 16#0061#, 16#0073#, 16#0065#,
           others => 16#0000#),
         others => <>);

   --  "gates_match"

   MS_0C1A : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 15,
         Unused   => 11,
         Length   => 11,
         Value    =>
          (16#0067#, 16#0061#, 16#0074#, 16#0065#,
           16#0073#, 16#005F#, 16#006D#, 16#0061#,
           16#0074#, 16#0063#, 16#0068#,
           others => 16#0000#),
         others => <>);

   --  "durationObservation"

   MS_0C1B : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 23,
         Unused   => 19,
         Length   => 19,
         Value    =>
          (16#0064#, 16#0075#, 16#0072#, 16#0061#,
           16#0074#, 16#0069#, 16#006F#, 16#006E#,
           16#004F#, 16#0062#, 16#0073#, 16#0065#,
           16#0072#, 16#0076#, 16#0061#, 16#0074#,
           16#0069#, 16#006F#, 16#006E#,
           others => 16#0000#),
         others => <>);

   --  "actionInputPin"

   MS_0C1C : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 15,
         Unused   => 14,
         Length   => 14,
         Value    =>
          (16#0061#, 16#0063#, 16#0074#, 16#0069#,
           16#006F#, 16#006E#, 16#0049#, 16#006E#,
           16#0070#, 16#0075#, 16#0074#, 16#0050#,
           16#0069#, 16#006E#,
           others => 16#0000#),
         others => <>);

   --  "An execution environment is a node that offers an execution environment for specific types of components that are deployed on it in the form of executable artifacts."

   MS_0C1D : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 175,
         Unused   => 165,
         Length   => 165,
         Value    =>
          (16#0041#, 16#006E#, 16#0020#, 16#0065#,
           16#0078#, 16#0065#, 16#0063#, 16#0075#,
           16#0074#, 16#0069#, 16#006F#, 16#006E#,
           16#0020#, 16#0065#, 16#006E#, 16#0076#,
           16#0069#, 16#0072#, 16#006F#, 16#006E#,
           16#006D#, 16#0065#, 16#006E#, 16#0074#,
           16#0020#, 16#0069#, 16#0073#, 16#0020#,
           16#0061#, 16#0020#, 16#006E#, 16#006F#,
           16#0064#, 16#0065#, 16#0020#, 16#0074#,
           16#0068#, 16#0061#, 16#0074#, 16#0020#,
           16#006F#, 16#0066#, 16#0066#, 16#0065#,
           16#0072#, 16#0073#, 16#0020#, 16#0061#,
           16#006E#, 16#0020#, 16#0065#, 16#0078#,
           16#0065#, 16#0063#, 16#0075#, 16#0074#,
           16#0069#, 16#006F#, 16#006E#, 16#0020#,
           16#0065#, 16#006E#, 16#0076#, 16#0069#,
           16#0072#, 16#006F#, 16#006E#, 16#006D#,
           16#0065#, 16#006E#, 16#0074#, 16#0020#,
           16#0066#, 16#006F#, 16#0072#, 16#0020#,
           16#0073#, 16#0070#, 16#0065#, 16#0063#,
           16#0069#, 16#0066#, 16#0069#, 16#0063#,
           16#0020#, 16#0074#, 16#0079#, 16#0070#,
           16#0065#, 16#0073#, 16#0020#, 16#006F#,
           16#0066#, 16#0020#, 16#0063#, 16#006F#,
           16#006D#, 16#0070#, 16#006F#, 16#006E#,
           16#0065#, 16#006E#, 16#0074#, 16#0073#,
           16#0020#, 16#0074#, 16#0068#, 16#0061#,
           16#0074#, 16#0020#, 16#0061#, 16#0072#,
           16#0065#, 16#0020#, 16#0064#, 16#0065#,
           16#0070#, 16#006C#, 16#006F#, 16#0079#,
           16#0065#, 16#0064#, 16#0020#, 16#006F#,
           16#006E#, 16#0020#, 16#0069#, 16#0074#,
           16#0020#, 16#0069#, 16#006E#, 16#0020#,
           16#0074#, 16#0068#, 16#0065#, 16#0020#,
           16#0066#, 16#006F#, 16#0072#, 16#006D#,
           16#0020#, 16#006F#, 16#0066#, 16#0020#,
           16#0065#, 16#0078#, 16#0065#, 16#0063#,
           16#0075#, 16#0074#, 16#0061#, 16#0062#,
           16#006C#, 16#0065#, 16#0020#, 16#0061#,
           16#0072#, 16#0074#, 16#0069#, 16#0066#,
           16#0061#, 16#0063#, 16#0074#, 16#0073#,
           16#002E#,
           others => 16#0000#),
         others => <>);

   --  "endMessage"

   MS_0C1E : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 15,
         Unused   => 10,
         Length   => 10,
         Value    =>
          (16#0065#, 16#006E#, 16#0064#, 16#004D#,
           16#0065#, 16#0073#, 16#0073#, 16#0061#,
           16#0067#, 16#0065#,
           others => 16#0000#),
         others => <>);

   --  "The query stringValue() returns the string that concatenates, in order, all the component string literals of all the subexpressions that are part of the StringExpression."

   MS_0C1F : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 175,
         Unused   => 170,
         Length   => 170,
         Value    =>
          (16#0054#, 16#0068#, 16#0065#, 16#0020#,
           16#0071#, 16#0075#, 16#0065#, 16#0072#,
           16#0079#, 16#0020#, 16#0073#, 16#0074#,
           16#0072#, 16#0069#, 16#006E#, 16#0067#,
           16#0056#, 16#0061#, 16#006C#, 16#0075#,
           16#0065#, 16#0028#, 16#0029#, 16#0020#,
           16#0072#, 16#0065#, 16#0074#, 16#0075#,
           16#0072#, 16#006E#, 16#0073#, 16#0020#,
           16#0074#, 16#0068#, 16#0065#, 16#0020#,
           16#0073#, 16#0074#, 16#0072#, 16#0069#,
           16#006E#, 16#0067#, 16#0020#, 16#0074#,
           16#0068#, 16#0061#, 16#0074#, 16#0020#,
           16#0063#, 16#006F#, 16#006E#, 16#0063#,
           16#0061#, 16#0074#, 16#0065#, 16#006E#,
           16#0061#, 16#0074#, 16#0065#, 16#0073#,
           16#002C#, 16#0020#, 16#0069#, 16#006E#,
           16#0020#, 16#006F#, 16#0072#, 16#0064#,
           16#0065#, 16#0072#, 16#002C#, 16#0020#,
           16#0061#, 16#006C#, 16#006C#, 16#0020#,
           16#0074#, 16#0068#, 16#0065#, 16#0020#,
           16#0063#, 16#006F#, 16#006D#, 16#0070#,
           16#006F#, 16#006E#, 16#0065#, 16#006E#,
           16#0074#, 16#0020#, 16#0073#, 16#0074#,
           16#0072#, 16#0069#, 16#006E#, 16#0067#,
           16#0020#, 16#006C#, 16#0069#, 16#0074#,
           16#0065#, 16#0072#, 16#0061#, 16#006C#,
           16#0073#, 16#0020#, 16#006F#, 16#0066#,
           16#0020#, 16#0061#, 16#006C#, 16#006C#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#0073#, 16#0075#, 16#0062#,
           16#0065#, 16#0078#, 16#0070#, 16#0072#,
           16#0065#, 16#0073#, 16#0073#, 16#0069#,
           16#006F#, 16#006E#, 16#0073#, 16#0020#,
           16#0074#, 16#0068#, 16#0061#, 16#0074#,
           16#0020#, 16#0061#, 16#0072#, 16#0065#,
           16#0020#, 16#0070#, 16#0061#, 16#0072#,
           16#0074#, 16#0020#, 16#006F#, 16#0066#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#0053#, 16#0074#, 16#0072#,
           16#0069#, 16#006E#, 16#0067#, 16#0045#,
           16#0078#, 16#0070#, 16#0072#, 16#0065#,
           16#0073#, 16#0073#, 16#0069#, 16#006F#,
           16#006E#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "The query allOwnedElements() gives all of the direct and indirect owned elements of an element."

   MS_0C20 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 103,
         Unused   => 95,
         Length   => 95,
         Value    =>
          (16#0054#, 16#0068#, 16#0065#, 16#0020#,
           16#0071#, 16#0075#, 16#0065#, 16#0072#,
           16#0079#, 16#0020#, 16#0061#, 16#006C#,
           16#006C#, 16#004F#, 16#0077#, 16#006E#,
           16#0065#, 16#0064#, 16#0045#, 16#006C#,
           16#0065#, 16#006D#, 16#0065#, 16#006E#,
           16#0074#, 16#0073#, 16#0028#, 16#0029#,
           16#0020#, 16#0067#, 16#0069#, 16#0076#,
           16#0065#, 16#0073#, 16#0020#, 16#0061#,
           16#006C#, 16#006C#, 16#0020#, 16#006F#,
           16#0066#, 16#0020#, 16#0074#, 16#0068#,
           16#0065#, 16#0020#, 16#0064#, 16#0069#,
           16#0072#, 16#0065#, 16#0063#, 16#0074#,
           16#0020#, 16#0061#, 16#006E#, 16#0064#,
           16#0020#, 16#0069#, 16#006E#, 16#0064#,
           16#0069#, 16#0072#, 16#0065#, 16#0063#,
           16#0074#, 16#0020#, 16#006F#, 16#0077#,
           16#006E#, 16#0065#, 16#0064#, 16#0020#,
           16#0065#, 16#006C#, 16#0065#, 16#006D#,
           16#0065#, 16#006E#, 16#0074#, 16#0073#,
           16#0020#, 16#006F#, 16#0066#, 16#0020#,
           16#0061#, 16#006E#, 16#0020#, 16#0065#,
           16#006C#, 16#0065#, 16#006D#, 16#0065#,
           16#006E#, 16#0074#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "A structured classifier is an abstract metaclass that represents any classifier whose behavior can be fully or partly described by the collaboration of owned or referenced instances."

   MS_0C21 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 191,
         Unused   => 182,
         Length   => 182,
         Value    =>
          (16#0041#, 16#0020#, 16#0073#, 16#0074#,
           16#0072#, 16#0075#, 16#0063#, 16#0074#,
           16#0075#, 16#0072#, 16#0065#, 16#0064#,
           16#0020#, 16#0063#, 16#006C#, 16#0061#,
           16#0073#, 16#0073#, 16#0069#, 16#0066#,
           16#0069#, 16#0065#, 16#0072#, 16#0020#,
           16#0069#, 16#0073#, 16#0020#, 16#0061#,
           16#006E#, 16#0020#, 16#0061#, 16#0062#,
           16#0073#, 16#0074#, 16#0072#, 16#0061#,
           16#0063#, 16#0074#, 16#0020#, 16#006D#,
           16#0065#, 16#0074#, 16#0061#, 16#0063#,
           16#006C#, 16#0061#, 16#0073#, 16#0073#,
           16#0020#, 16#0074#, 16#0068#, 16#0061#,
           16#0074#, 16#0020#, 16#0072#, 16#0065#,
           16#0070#, 16#0072#, 16#0065#, 16#0073#,
           16#0065#, 16#006E#, 16#0074#, 16#0073#,
           16#0020#, 16#0061#, 16#006E#, 16#0079#,
           16#0020#, 16#0063#, 16#006C#, 16#0061#,
           16#0073#, 16#0073#, 16#0069#, 16#0066#,
           16#0069#, 16#0065#, 16#0072#, 16#0020#,
           16#0077#, 16#0068#, 16#006F#, 16#0073#,
           16#0065#, 16#0020#, 16#0062#, 16#0065#,
           16#0068#, 16#0061#, 16#0076#, 16#0069#,
           16#006F#, 16#0072#, 16#0020#, 16#0063#,
           16#0061#, 16#006E#, 16#0020#, 16#0062#,
           16#0065#, 16#0020#, 16#0066#, 16#0075#,
           16#006C#, 16#006C#, 16#0079#, 16#0020#,
           16#006F#, 16#0072#, 16#0020#, 16#0070#,
           16#0061#, 16#0072#, 16#0074#, 16#006C#,
           16#0079#, 16#0020#, 16#0064#, 16#0065#,
           16#0073#, 16#0063#, 16#0072#, 16#0069#,
           16#0062#, 16#0065#, 16#0064#, 16#0020#,
           16#0062#, 16#0079#, 16#0020#, 16#0074#,
           16#0068#, 16#0065#, 16#0020#, 16#0063#,
           16#006F#, 16#006C#, 16#006C#, 16#0061#,
           16#0062#, 16#006F#, 16#0072#, 16#0061#,
           16#0074#, 16#0069#, 16#006F#, 16#006E#,
           16#0020#, 16#006F#, 16#0066#, 16#0020#,
           16#006F#, 16#0077#, 16#006E#, 16#0065#,
           16#0064#, 16#0020#, 16#006F#, 16#0072#,
           16#0020#, 16#0072#, 16#0065#, 16#0066#,
           16#0065#, 16#0072#, 16#0065#, 16#006E#,
           16#0063#, 16#0065#, 16#0064#, 16#0020#,
           16#0069#, 16#006E#, 16#0073#, 16#0074#,
           16#0061#, 16#006E#, 16#0063#, 16#0065#,
           16#0073#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "Actor"

   MS_0C22 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 7,
         Unused   => 5,
         Length   => 5,
         Value    =>
          (16#0041#, 16#0063#, 16#0074#, 16#006F#,
           16#0072#,
           others => 16#0000#),
         others => <>);

   --  "A_ownedReception_class"

   MS_0C23 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 23,
         Unused   => 22,
         Length   => 22,
         Value    =>
          (16#0041#, 16#005F#, 16#006F#, 16#0077#,
           16#006E#, 16#0065#, 16#0064#, 16#0052#,
           16#0065#, 16#0063#, 16#0065#, 16#0070#,
           16#0074#, 16#0069#, 16#006F#, 16#006E#,
           16#005F#, 16#0063#, 16#006C#, 16#0061#,
           16#0073#, 16#0073#,
           others => 16#0000#),
         others => <>);

   --  "A_specification_owningInstanceSpec"

   MS_0C24 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 39,
         Unused   => 34,
         Length   => 34,
         Value    =>
          (16#0041#, 16#005F#, 16#0073#, 16#0070#,
           16#0065#, 16#0063#, 16#0069#, 16#0066#,
           16#0069#, 16#0063#, 16#0061#, 16#0074#,
           16#0069#, 16#006F#, 16#006E#, 16#005F#,
           16#006F#, 16#0077#, 16#006E#, 16#0069#,
           16#006E#, 16#0067#, 16#0049#, 16#006E#,
           16#0073#, 16#0074#, 16#0061#, 16#006E#,
           16#0063#, 16#0065#, 16#0053#, 16#0070#,
           16#0065#, 16#0063#,
           others => 16#0000#),
         others => <>);

   --  "If two (or more) InteractionUses within one Interaction, refer to Interactions with 'common Lifelines,' those Lifelines must also appear in the Interaction with the InteractionUses. By common Lifelines we mean Lifelines with the same selector and represents associations."

   MS_0C25 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 279,
         Unused   => 271,
         Length   => 271,
         Value    =>
          (16#0049#, 16#0066#, 16#0020#, 16#0074#,
           16#0077#, 16#006F#, 16#0020#, 16#0028#,
           16#006F#, 16#0072#, 16#0020#, 16#006D#,
           16#006F#, 16#0072#, 16#0065#, 16#0029#,
           16#0020#, 16#0049#, 16#006E#, 16#0074#,
           16#0065#, 16#0072#, 16#0061#, 16#0063#,
           16#0074#, 16#0069#, 16#006F#, 16#006E#,
           16#0055#, 16#0073#, 16#0065#, 16#0073#,
           16#0020#, 16#0077#, 16#0069#, 16#0074#,
           16#0068#, 16#0069#, 16#006E#, 16#0020#,
           16#006F#, 16#006E#, 16#0065#, 16#0020#,
           16#0049#, 16#006E#, 16#0074#, 16#0065#,
           16#0072#, 16#0061#, 16#0063#, 16#0074#,
           16#0069#, 16#006F#, 16#006E#, 16#002C#,
           16#0020#, 16#0072#, 16#0065#, 16#0066#,
           16#0065#, 16#0072#, 16#0020#, 16#0074#,
           16#006F#, 16#0020#, 16#0049#, 16#006E#,
           16#0074#, 16#0065#, 16#0072#, 16#0061#,
           16#0063#, 16#0074#, 16#0069#, 16#006F#,
           16#006E#, 16#0073#, 16#0020#, 16#0077#,
           16#0069#, 16#0074#, 16#0068#, 16#0020#,
           16#0027#, 16#0063#, 16#006F#, 16#006D#,
           16#006D#, 16#006F#, 16#006E#, 16#0020#,
           16#004C#, 16#0069#, 16#0066#, 16#0065#,
           16#006C#, 16#0069#, 16#006E#, 16#0065#,
           16#0073#, 16#002C#, 16#0027#, 16#0020#,
           16#0074#, 16#0068#, 16#006F#, 16#0073#,
           16#0065#, 16#0020#, 16#004C#, 16#0069#,
           16#0066#, 16#0065#, 16#006C#, 16#0069#,
           16#006E#, 16#0065#, 16#0073#, 16#0020#,
           16#006D#, 16#0075#, 16#0073#, 16#0074#,
           16#0020#, 16#0061#, 16#006C#, 16#0073#,
           16#006F#, 16#0020#, 16#0061#, 16#0070#,
           16#0070#, 16#0065#, 16#0061#, 16#0072#,
           16#0020#, 16#0069#, 16#006E#, 16#0020#,
           16#0074#, 16#0068#, 16#0065#, 16#0020#,
           16#0049#, 16#006E#, 16#0074#, 16#0065#,
           16#0072#, 16#0061#, 16#0063#, 16#0074#,
           16#0069#, 16#006F#, 16#006E#, 16#0020#,
           16#0077#, 16#0069#, 16#0074#, 16#0068#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#0049#, 16#006E#, 16#0074#,
           16#0065#, 16#0072#, 16#0061#, 16#0063#,
           16#0074#, 16#0069#, 16#006F#, 16#006E#,
           16#0055#, 16#0073#, 16#0065#, 16#0073#,
           16#002E#, 16#0020#, 16#0042#, 16#0079#,
           16#0020#, 16#0063#, 16#006F#, 16#006D#,
           16#006D#, 16#006F#, 16#006E#, 16#0020#,
           16#004C#, 16#0069#, 16#0066#, 16#0065#,
           16#006C#, 16#0069#, 16#006E#, 16#0065#,
           16#0073#, 16#0020#, 16#0077#, 16#0065#,
           16#0020#, 16#006D#, 16#0065#, 16#0061#,
           16#006E#, 16#0020#, 16#004C#, 16#0069#,
           16#0066#, 16#0065#, 16#006C#, 16#0069#,
           16#006E#, 16#0065#, 16#0073#, 16#0020#,
           16#0077#, 16#0069#, 16#0074#, 16#0068#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#0073#, 16#0061#, 16#006D#,
           16#0065#, 16#0020#, 16#0073#, 16#0065#,
           16#006C#, 16#0065#, 16#0063#, 16#0074#,
           16#006F#, 16#0072#, 16#0020#, 16#0061#,
           16#006E#, 16#0064#, 16#0020#, 16#0072#,
           16#0065#, 16#0070#, 16#0072#, 16#0065#,
           16#0073#, 16#0065#, 16#006E#, 16#0074#,
           16#0073#, 16#0020#, 16#0061#, 16#0073#,
           16#0073#, 16#006F#, 16#0063#, 16#0069#,
           16#0061#, 16#0074#, 16#0069#, 16#006F#,
           16#006E#, 16#0073#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "parameters"

   MS_0C26 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 15,
         Unused   => 10,
         Length   => 10,
         Value    =>
          (16#0070#, 16#0061#, 16#0072#, 16#0061#,
           16#006D#, 16#0065#, 16#0074#, 16#0065#,
           16#0072#, 16#0073#,
           others => 16#0000#),
         others => <>);

   --  "Specifies whether the existing links emanating from the object on this end should be destroyed before creating a new link."

   MS_0C27 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 127,
         Unused   => 122,
         Length   => 122,
         Value    =>
          (16#0053#, 16#0070#, 16#0065#, 16#0063#,
           16#0069#, 16#0066#, 16#0069#, 16#0065#,
           16#0073#, 16#0020#, 16#0077#, 16#0068#,
           16#0065#, 16#0074#, 16#0068#, 16#0065#,
           16#0072#, 16#0020#, 16#0074#, 16#0068#,
           16#0065#, 16#0020#, 16#0065#, 16#0078#,
           16#0069#, 16#0073#, 16#0074#, 16#0069#,
           16#006E#, 16#0067#, 16#0020#, 16#006C#,
           16#0069#, 16#006E#, 16#006B#, 16#0073#,
           16#0020#, 16#0065#, 16#006D#, 16#0061#,
           16#006E#, 16#0061#, 16#0074#, 16#0069#,
           16#006E#, 16#0067#, 16#0020#, 16#0066#,
           16#0072#, 16#006F#, 16#006D#, 16#0020#,
           16#0074#, 16#0068#, 16#0065#, 16#0020#,
           16#006F#, 16#0062#, 16#006A#, 16#0065#,
           16#0063#, 16#0074#, 16#0020#, 16#006F#,
           16#006E#, 16#0020#, 16#0074#, 16#0068#,
           16#0069#, 16#0073#, 16#0020#, 16#0065#,
           16#006E#, 16#0064#, 16#0020#, 16#0073#,
           16#0068#, 16#006F#, 16#0075#, 16#006C#,
           16#0064#, 16#0020#, 16#0062#, 16#0065#,
           16#0020#, 16#0064#, 16#0065#, 16#0073#,
           16#0074#, 16#0072#, 16#006F#, 16#0079#,
           16#0065#, 16#0064#, 16#0020#, 16#0062#,
           16#0065#, 16#0066#, 16#006F#, 16#0072#,
           16#0065#, 16#0020#, 16#0063#, 16#0072#,
           16#0065#, 16#0061#, 16#0074#, 16#0069#,
           16#006E#, 16#0067#, 16#0020#, 16#0061#,
           16#0020#, 16#006E#, 16#0065#, 16#0077#,
           16#0020#, 16#006C#, 16#0069#, 16#006E#,
           16#006B#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "one_incoming_edge"

   MS_0C28 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 23,
         Unused   => 17,
         Length   => 17,
         Value    =>
          (16#006F#, 16#006E#, 16#0065#, 16#005F#,
           16#0069#, 16#006E#, 16#0063#, 16#006F#,
           16#006D#, 16#0069#, 16#006E#, 16#0067#,
           16#005F#, 16#0065#, 16#0064#, 16#0067#,
           16#0065#,
           others => 16#0000#),
         others => <>);

   --  "A_protocol_port"

   MS_0C29 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 23,
         Unused   => 15,
         Length   => 15,
         Value    =>
          (16#0041#, 16#005F#, 16#0070#, 16#0072#,
           16#006F#, 16#0074#, 16#006F#, 16#0063#,
           16#006F#, 16#006C#, 16#005F#, 16#0070#,
           16#006F#, 16#0072#, 16#0074#,
           others => 16#0000#),
         others => <>);

   --  "The query isDistinguishableFrom() determines whether two BehavioralFeatures may coexist in the same Namespace. It specifies that they have to have different signatures."

   MS_0C2A : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 175,
         Unused   => 168,
         Length   => 168,
         Value    =>
          (16#0054#, 16#0068#, 16#0065#, 16#0020#,
           16#0071#, 16#0075#, 16#0065#, 16#0072#,
           16#0079#, 16#0020#, 16#0069#, 16#0073#,
           16#0044#, 16#0069#, 16#0073#, 16#0074#,
           16#0069#, 16#006E#, 16#0067#, 16#0075#,
           16#0069#, 16#0073#, 16#0068#, 16#0061#,
           16#0062#, 16#006C#, 16#0065#, 16#0046#,
           16#0072#, 16#006F#, 16#006D#, 16#0028#,
           16#0029#, 16#0020#, 16#0064#, 16#0065#,
           16#0074#, 16#0065#, 16#0072#, 16#006D#,
           16#0069#, 16#006E#, 16#0065#, 16#0073#,
           16#0020#, 16#0077#, 16#0068#, 16#0065#,
           16#0074#, 16#0068#, 16#0065#, 16#0072#,
           16#0020#, 16#0074#, 16#0077#, 16#006F#,
           16#0020#, 16#0042#, 16#0065#, 16#0068#,
           16#0061#, 16#0076#, 16#0069#, 16#006F#,
           16#0072#, 16#0061#, 16#006C#, 16#0046#,
           16#0065#, 16#0061#, 16#0074#, 16#0075#,
           16#0072#, 16#0065#, 16#0073#, 16#0020#,
           16#006D#, 16#0061#, 16#0079#, 16#0020#,
           16#0063#, 16#006F#, 16#0065#, 16#0078#,
           16#0069#, 16#0073#, 16#0074#, 16#0020#,
           16#0069#, 16#006E#, 16#0020#, 16#0074#,
           16#0068#, 16#0065#, 16#0020#, 16#0073#,
           16#0061#, 16#006D#, 16#0065#, 16#0020#,
           16#004E#, 16#0061#, 16#006D#, 16#0065#,
           16#0073#, 16#0070#, 16#0061#, 16#0063#,
           16#0065#, 16#002E#, 16#0020#, 16#0049#,
           16#0074#, 16#0020#, 16#0073#, 16#0070#,
           16#0065#, 16#0063#, 16#0069#, 16#0066#,
           16#0069#, 16#0065#, 16#0073#, 16#0020#,
           16#0074#, 16#0068#, 16#0061#, 16#0074#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0079#, 16#0020#, 16#0068#, 16#0061#,
           16#0076#, 16#0065#, 16#0020#, 16#0074#,
           16#006F#, 16#0020#, 16#0068#, 16#0061#,
           16#0076#, 16#0065#, 16#0020#, 16#0064#,
           16#0069#, 16#0066#, 16#0066#, 16#0065#,
           16#0072#, 16#0065#, 16#006E#, 16#0074#,
           16#0020#, 16#0073#, 16#0069#, 16#0067#,
           16#006E#, 16#0061#, 16#0074#, 16#0075#,
           16#0072#, 16#0065#, 16#0073#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "Nodes coordinated by the activity."

   MS_0C2B : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 39,
         Unused   => 34,
         Length   => 34,
         Value    =>
          (16#004E#, 16#006F#, 16#0064#, 16#0065#,
           16#0073#, 16#0020#, 16#0063#, 16#006F#,
           16#006F#, 16#0072#, 16#0064#, 16#0069#,
           16#006E#, 16#0061#, 16#0074#, 16#0065#,
           16#0064#, 16#0020#, 16#0062#, 16#0079#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#0061#, 16#0063#, 16#0074#,
           16#0069#, 16#0076#, 16#0069#, 16#0074#,
           16#0079#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "A transformation behavior has one input parameter and one output parameter. The input parameter must be the same as or a supertype of the type of object token coming from the source end. The output parameter must be the same or a subtype of the type of object token expected downstream. The behavior cannot have side effects."

   MS_0C2C : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 335,
         Unused   => 325,
         Length   => 325,
         Value    =>
          (16#0041#, 16#0020#, 16#0074#, 16#0072#,
           16#0061#, 16#006E#, 16#0073#, 16#0066#,
           16#006F#, 16#0072#, 16#006D#, 16#0061#,
           16#0074#, 16#0069#, 16#006F#, 16#006E#,
           16#0020#, 16#0062#, 16#0065#, 16#0068#,
           16#0061#, 16#0076#, 16#0069#, 16#006F#,
           16#0072#, 16#0020#, 16#0068#, 16#0061#,
           16#0073#, 16#0020#, 16#006F#, 16#006E#,
           16#0065#, 16#0020#, 16#0069#, 16#006E#,
           16#0070#, 16#0075#, 16#0074#, 16#0020#,
           16#0070#, 16#0061#, 16#0072#, 16#0061#,
           16#006D#, 16#0065#, 16#0074#, 16#0065#,
           16#0072#, 16#0020#, 16#0061#, 16#006E#,
           16#0064#, 16#0020#, 16#006F#, 16#006E#,
           16#0065#, 16#0020#, 16#006F#, 16#0075#,
           16#0074#, 16#0070#, 16#0075#, 16#0074#,
           16#0020#, 16#0070#, 16#0061#, 16#0072#,
           16#0061#, 16#006D#, 16#0065#, 16#0074#,
           16#0065#, 16#0072#, 16#002E#, 16#0020#,
           16#0054#, 16#0068#, 16#0065#, 16#0020#,
           16#0069#, 16#006E#, 16#0070#, 16#0075#,
           16#0074#, 16#0020#, 16#0070#, 16#0061#,
           16#0072#, 16#0061#, 16#006D#, 16#0065#,
           16#0074#, 16#0065#, 16#0072#, 16#0020#,
           16#006D#, 16#0075#, 16#0073#, 16#0074#,
           16#0020#, 16#0062#, 16#0065#, 16#0020#,
           16#0074#, 16#0068#, 16#0065#, 16#0020#,
           16#0073#, 16#0061#, 16#006D#, 16#0065#,
           16#0020#, 16#0061#, 16#0073#, 16#0020#,
           16#006F#, 16#0072#, 16#0020#, 16#0061#,
           16#0020#, 16#0073#, 16#0075#, 16#0070#,
           16#0065#, 16#0072#, 16#0074#, 16#0079#,
           16#0070#, 16#0065#, 16#0020#, 16#006F#,
           16#0066#, 16#0020#, 16#0074#, 16#0068#,
           16#0065#, 16#0020#, 16#0074#, 16#0079#,
           16#0070#, 16#0065#, 16#0020#, 16#006F#,
           16#0066#, 16#0020#, 16#006F#, 16#0062#,
           16#006A#, 16#0065#, 16#0063#, 16#0074#,
           16#0020#, 16#0074#, 16#006F#, 16#006B#,
           16#0065#, 16#006E#, 16#0020#, 16#0063#,
           16#006F#, 16#006D#, 16#0069#, 16#006E#,
           16#0067#, 16#0020#, 16#0066#, 16#0072#,
           16#006F#, 16#006D#, 16#0020#, 16#0074#,
           16#0068#, 16#0065#, 16#0020#, 16#0073#,
           16#006F#, 16#0075#, 16#0072#, 16#0063#,
           16#0065#, 16#0020#, 16#0065#, 16#006E#,
           16#0064#, 16#002E#, 16#0020#, 16#0054#,
           16#0068#, 16#0065#, 16#0020#, 16#006F#,
           16#0075#, 16#0074#, 16#0070#, 16#0075#,
           16#0074#, 16#0020#, 16#0070#, 16#0061#,
           16#0072#, 16#0061#, 16#006D#, 16#0065#,
           16#0074#, 16#0065#, 16#0072#, 16#0020#,
           16#006D#, 16#0075#, 16#0073#, 16#0074#,
           16#0020#, 16#0062#, 16#0065#, 16#0020#,
           16#0074#, 16#0068#, 16#0065#, 16#0020#,
           16#0073#, 16#0061#, 16#006D#, 16#0065#,
           16#0020#, 16#006F#, 16#0072#, 16#0020#,
           16#0061#, 16#0020#, 16#0073#, 16#0075#,
           16#0062#, 16#0074#, 16#0079#, 16#0070#,
           16#0065#, 16#0020#, 16#006F#, 16#0066#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#0074#, 16#0079#, 16#0070#,
           16#0065#, 16#0020#, 16#006F#, 16#0066#,
           16#0020#, 16#006F#, 16#0062#, 16#006A#,
           16#0065#, 16#0063#, 16#0074#, 16#0020#,
           16#0074#, 16#006F#, 16#006B#, 16#0065#,
           16#006E#, 16#0020#, 16#0065#, 16#0078#,
           16#0070#, 16#0065#, 16#0063#, 16#0074#,
           16#0065#, 16#0064#, 16#0020#, 16#0064#,
           16#006F#, 16#0077#, 16#006E#, 16#0073#,
           16#0074#, 16#0072#, 16#0065#, 16#0061#,
           16#006D#, 16#002E#, 16#0020#, 16#0054#,
           16#0068#, 16#0065#, 16#0020#, 16#0062#,
           16#0065#, 16#0068#, 16#0061#, 16#0076#,
           16#0069#, 16#006F#, 16#0072#, 16#0020#,
           16#0063#, 16#0061#, 16#006E#, 16#006E#,
           16#006F#, 16#0074#, 16#0020#, 16#0068#,
           16#0061#, 16#0076#, 16#0065#, 16#0020#,
           16#0073#, 16#0069#, 16#0064#, 16#0065#,
           16#0020#, 16#0065#, 16#0066#, 16#0066#,
           16#0065#, 16#0063#, 16#0074#, 16#0073#,
           16#002E#,
           others => 16#0000#),
         others => <>);

   --  "A deployment target is the location for a deployed artifact."

   MS_0C2D : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 63,
         Unused   => 60,
         Length   => 60,
         Value    =>
          (16#0041#, 16#0020#, 16#0064#, 16#0065#,
           16#0070#, 16#006C#, 16#006F#, 16#0079#,
           16#006D#, 16#0065#, 16#006E#, 16#0074#,
           16#0020#, 16#0074#, 16#0061#, 16#0072#,
           16#0067#, 16#0065#, 16#0074#, 16#0020#,
           16#0069#, 16#0073#, 16#0020#, 16#0074#,
           16#0068#, 16#0065#, 16#0020#, 16#006C#,
           16#006F#, 16#0063#, 16#0061#, 16#0074#,
           16#0069#, 16#006F#, 16#006E#, 16#0020#,
           16#0066#, 16#006F#, 16#0072#, 16#0020#,
           16#0061#, 16#0020#, 16#0064#, 16#0065#,
           16#0070#, 16#006C#, 16#006F#, 16#0079#,
           16#0065#, 16#0064#, 16#0020#, 16#0061#,
           16#0072#, 16#0074#, 16#0069#, 16#0066#,
           16#0061#, 16#0063#, 16#0074#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "An abstraction is a relationship that relates two elements or sets of elements that represent the same concept at different levels of abstraction or from different viewpoints."

   MS_0C2E : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 183,
         Unused   => 175,
         Length   => 175,
         Value    =>
          (16#0041#, 16#006E#, 16#0020#, 16#0061#,
           16#0062#, 16#0073#, 16#0074#, 16#0072#,
           16#0061#, 16#0063#, 16#0074#, 16#0069#,
           16#006F#, 16#006E#, 16#0020#, 16#0069#,
           16#0073#, 16#0020#, 16#0061#, 16#0020#,
           16#0072#, 16#0065#, 16#006C#, 16#0061#,
           16#0074#, 16#0069#, 16#006F#, 16#006E#,
           16#0073#, 16#0068#, 16#0069#, 16#0070#,
           16#0020#, 16#0074#, 16#0068#, 16#0061#,
           16#0074#, 16#0020#, 16#0072#, 16#0065#,
           16#006C#, 16#0061#, 16#0074#, 16#0065#,
           16#0073#, 16#0020#, 16#0074#, 16#0077#,
           16#006F#, 16#0020#, 16#0065#, 16#006C#,
           16#0065#, 16#006D#, 16#0065#, 16#006E#,
           16#0074#, 16#0073#, 16#0020#, 16#006F#,
           16#0072#, 16#0020#, 16#0073#, 16#0065#,
           16#0074#, 16#0073#, 16#0020#, 16#006F#,
           16#0066#, 16#0020#, 16#0065#, 16#006C#,
           16#0065#, 16#006D#, 16#0065#, 16#006E#,
           16#0074#, 16#0073#, 16#0020#, 16#0074#,
           16#0068#, 16#0061#, 16#0074#, 16#0020#,
           16#0072#, 16#0065#, 16#0070#, 16#0072#,
           16#0065#, 16#0073#, 16#0065#, 16#006E#,
           16#0074#, 16#0020#, 16#0074#, 16#0068#,
           16#0065#, 16#0020#, 16#0073#, 16#0061#,
           16#006D#, 16#0065#, 16#0020#, 16#0063#,
           16#006F#, 16#006E#, 16#0063#, 16#0065#,
           16#0070#, 16#0074#, 16#0020#, 16#0061#,
           16#0074#, 16#0020#, 16#0064#, 16#0069#,
           16#0066#, 16#0066#, 16#0065#, 16#0072#,
           16#0065#, 16#006E#, 16#0074#, 16#0020#,
           16#006C#, 16#0065#, 16#0076#, 16#0065#,
           16#006C#, 16#0073#, 16#0020#, 16#006F#,
           16#0066#, 16#0020#, 16#0061#, 16#0062#,
           16#0073#, 16#0074#, 16#0072#, 16#0061#,
           16#0063#, 16#0074#, 16#0069#, 16#006F#,
           16#006E#, 16#0020#, 16#006F#, 16#0072#,
           16#0020#, 16#0066#, 16#0072#, 16#006F#,
           16#006D#, 16#0020#, 16#0064#, 16#0069#,
           16#0066#, 16#0066#, 16#0065#, 16#0072#,
           16#0065#, 16#006E#, 16#0074#, 16#0020#,
           16#0076#, 16#0069#, 16#0065#, 16#0077#,
           16#0070#, 16#006F#, 16#0069#, 16#006E#,
           16#0074#, 16#0073#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "Feature"

   MS_0C2F : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 15,
         Unused   => 7,
         Length   => 7,
         Value    =>
          (16#0046#, 16#0065#, 16#0061#, 16#0074#,
           16#0075#, 16#0072#, 16#0065#,
           others => 16#0000#),
         others => <>);

   --  "LCA"

   MS_0C30 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 7,
         Unused   => 3,
         Length   => 3,
         Value    =>
          (16#004C#, 16#0043#, 16#0041#,
           others => 16#0000#),
         others => <>);

   --  "Every Generalization associated with a given GeneralizationSet must have the same general Classifier. That is, all Generalizations for a particular GeneralizationSet must have the same superclass."

   MS_0C31 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 207,
         Unused   => 196,
         Length   => 196,
         Value    =>
          (16#0045#, 16#0076#, 16#0065#, 16#0072#,
           16#0079#, 16#0020#, 16#0047#, 16#0065#,
           16#006E#, 16#0065#, 16#0072#, 16#0061#,
           16#006C#, 16#0069#, 16#007A#, 16#0061#,
           16#0074#, 16#0069#, 16#006F#, 16#006E#,
           16#0020#, 16#0061#, 16#0073#, 16#0073#,
           16#006F#, 16#0063#, 16#0069#, 16#0061#,
           16#0074#, 16#0065#, 16#0064#, 16#0020#,
           16#0077#, 16#0069#, 16#0074#, 16#0068#,
           16#0020#, 16#0061#, 16#0020#, 16#0067#,
           16#0069#, 16#0076#, 16#0065#, 16#006E#,
           16#0020#, 16#0047#, 16#0065#, 16#006E#,
           16#0065#, 16#0072#, 16#0061#, 16#006C#,
           16#0069#, 16#007A#, 16#0061#, 16#0074#,
           16#0069#, 16#006F#, 16#006E#, 16#0053#,
           16#0065#, 16#0074#, 16#0020#, 16#006D#,
           16#0075#, 16#0073#, 16#0074#, 16#0020#,
           16#0068#, 16#0061#, 16#0076#, 16#0065#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#0073#, 16#0061#, 16#006D#,
           16#0065#, 16#0020#, 16#0067#, 16#0065#,
           16#006E#, 16#0065#, 16#0072#, 16#0061#,
           16#006C#, 16#0020#, 16#0043#, 16#006C#,
           16#0061#, 16#0073#, 16#0073#, 16#0069#,
           16#0066#, 16#0069#, 16#0065#, 16#0072#,
           16#002E#, 16#0020#, 16#0054#, 16#0068#,
           16#0061#, 16#0074#, 16#0020#, 16#0069#,
           16#0073#, 16#002C#, 16#0020#, 16#0061#,
           16#006C#, 16#006C#, 16#0020#, 16#0047#,
           16#0065#, 16#006E#, 16#0065#, 16#0072#,
           16#0061#, 16#006C#, 16#0069#, 16#007A#,
           16#0061#, 16#0074#, 16#0069#, 16#006F#,
           16#006E#, 16#0073#, 16#0020#, 16#0066#,
           16#006F#, 16#0072#, 16#0020#, 16#0061#,
           16#0020#, 16#0070#, 16#0061#, 16#0072#,
           16#0074#, 16#0069#, 16#0063#, 16#0075#,
           16#006C#, 16#0061#, 16#0072#, 16#0020#,
           16#0047#, 16#0065#, 16#006E#, 16#0065#,
           16#0072#, 16#0061#, 16#006C#, 16#0069#,
           16#007A#, 16#0061#, 16#0074#, 16#0069#,
           16#006F#, 16#006E#, 16#0053#, 16#0065#,
           16#0074#, 16#0020#, 16#006D#, 16#0075#,
           16#0073#, 16#0074#, 16#0020#, 16#0068#,
           16#0061#, 16#0076#, 16#0065#, 16#0020#,
           16#0074#, 16#0068#, 16#0065#, 16#0020#,
           16#0073#, 16#0061#, 16#006D#, 16#0065#,
           16#0020#, 16#0073#, 16#0075#, 16#0070#,
           16#0065#, 16#0072#, 16#0063#, 16#006C#,
           16#0061#, 16#0073#, 16#0073#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "Indicates (via the associated Generalizations) whether or not the set of specific Classifiers are covering for a particular general classifier. When isCovering is true, every instance of a particular general Classifier is also an instance of at least one of its specific Classifiers for the GeneralizationSet. When isCovering is false, there are one or more instances of the particular general Classifier that are not instances of at least one of its specific Classifiers defined for the GeneralizationSet."

   MS_0C32 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 527,
         Unused   => 506,
         Length   => 506,
         Value    =>
          (16#0049#, 16#006E#, 16#0064#, 16#0069#,
           16#0063#, 16#0061#, 16#0074#, 16#0065#,
           16#0073#, 16#0020#, 16#0028#, 16#0076#,
           16#0069#, 16#0061#, 16#0020#, 16#0074#,
           16#0068#, 16#0065#, 16#0020#, 16#0061#,
           16#0073#, 16#0073#, 16#006F#, 16#0063#,
           16#0069#, 16#0061#, 16#0074#, 16#0065#,
           16#0064#, 16#0020#, 16#0047#, 16#0065#,
           16#006E#, 16#0065#, 16#0072#, 16#0061#,
           16#006C#, 16#0069#, 16#007A#, 16#0061#,
           16#0074#, 16#0069#, 16#006F#, 16#006E#,
           16#0073#, 16#0029#, 16#0020#, 16#0077#,
           16#0068#, 16#0065#, 16#0074#, 16#0068#,
           16#0065#, 16#0072#, 16#0020#, 16#006F#,
           16#0072#, 16#0020#, 16#006E#, 16#006F#,
           16#0074#, 16#0020#, 16#0074#, 16#0068#,
           16#0065#, 16#0020#, 16#0073#, 16#0065#,
           16#0074#, 16#0020#, 16#006F#, 16#0066#,
           16#0020#, 16#0073#, 16#0070#, 16#0065#,
           16#0063#, 16#0069#, 16#0066#, 16#0069#,
           16#0063#, 16#0020#, 16#0043#, 16#006C#,
           16#0061#, 16#0073#, 16#0073#, 16#0069#,
           16#0066#, 16#0069#, 16#0065#, 16#0072#,
           16#0073#, 16#0020#, 16#0061#, 16#0072#,
           16#0065#, 16#0020#, 16#0063#, 16#006F#,
           16#0076#, 16#0065#, 16#0072#, 16#0069#,
           16#006E#, 16#0067#, 16#0020#, 16#0066#,
           16#006F#, 16#0072#, 16#0020#, 16#0061#,
           16#0020#, 16#0070#, 16#0061#, 16#0072#,
           16#0074#, 16#0069#, 16#0063#, 16#0075#,
           16#006C#, 16#0061#, 16#0072#, 16#0020#,
           16#0067#, 16#0065#, 16#006E#, 16#0065#,
           16#0072#, 16#0061#, 16#006C#, 16#0020#,
           16#0063#, 16#006C#, 16#0061#, 16#0073#,
           16#0073#, 16#0069#, 16#0066#, 16#0069#,
           16#0065#, 16#0072#, 16#002E#, 16#0020#,
           16#0057#, 16#0068#, 16#0065#, 16#006E#,
           16#0020#, 16#0069#, 16#0073#, 16#0043#,
           16#006F#, 16#0076#, 16#0065#, 16#0072#,
           16#0069#, 16#006E#, 16#0067#, 16#0020#,
           16#0069#, 16#0073#, 16#0020#, 16#0074#,
           16#0072#, 16#0075#, 16#0065#, 16#002C#,
           16#0020#, 16#0065#, 16#0076#, 16#0065#,
           16#0072#, 16#0079#, 16#0020#, 16#0069#,
           16#006E#, 16#0073#, 16#0074#, 16#0061#,
           16#006E#, 16#0063#, 16#0065#, 16#0020#,
           16#006F#, 16#0066#, 16#0020#, 16#0061#,
           16#0020#, 16#0070#, 16#0061#, 16#0072#,
           16#0074#, 16#0069#, 16#0063#, 16#0075#,
           16#006C#, 16#0061#, 16#0072#, 16#0020#,
           16#0067#, 16#0065#, 16#006E#, 16#0065#,
           16#0072#, 16#0061#, 16#006C#, 16#0020#,
           16#0043#, 16#006C#, 16#0061#, 16#0073#,
           16#0073#, 16#0069#, 16#0066#, 16#0069#,
           16#0065#, 16#0072#, 16#0020#, 16#0069#,
           16#0073#, 16#0020#, 16#0061#, 16#006C#,
           16#0073#, 16#006F#, 16#0020#, 16#0061#,
           16#006E#, 16#0020#, 16#0069#, 16#006E#,
           16#0073#, 16#0074#, 16#0061#, 16#006E#,
           16#0063#, 16#0065#, 16#0020#, 16#006F#,
           16#0066#, 16#0020#, 16#0061#, 16#0074#,
           16#0020#, 16#006C#, 16#0065#, 16#0061#,
           16#0073#, 16#0074#, 16#0020#, 16#006F#,
           16#006E#, 16#0065#, 16#0020#, 16#006F#,
           16#0066#, 16#0020#, 16#0069#, 16#0074#,
           16#0073#, 16#0020#, 16#0073#, 16#0070#,
           16#0065#, 16#0063#, 16#0069#, 16#0066#,
           16#0069#, 16#0063#, 16#0020#, 16#0043#,
           16#006C#, 16#0061#, 16#0073#, 16#0073#,
           16#0069#, 16#0066#, 16#0069#, 16#0065#,
           16#0072#, 16#0073#, 16#0020#, 16#0066#,
           16#006F#, 16#0072#, 16#0020#, 16#0074#,
           16#0068#, 16#0065#, 16#0020#, 16#0047#,
           16#0065#, 16#006E#, 16#0065#, 16#0072#,
           16#0061#, 16#006C#, 16#0069#, 16#007A#,
           16#0061#, 16#0074#, 16#0069#, 16#006F#,
           16#006E#, 16#0053#, 16#0065#, 16#0074#,
           16#002E#, 16#0020#, 16#0057#, 16#0068#,
           16#0065#, 16#006E#, 16#0020#, 16#0069#,
           16#0073#, 16#0043#, 16#006F#, 16#0076#,
           16#0065#, 16#0072#, 16#0069#, 16#006E#,
           16#0067#, 16#0020#, 16#0069#, 16#0073#,
           16#0020#, 16#0066#, 16#0061#, 16#006C#,
           16#0073#, 16#0065#, 16#002C#, 16#0020#,
           16#0074#, 16#0068#, 16#0065#, 16#0072#,
           16#0065#, 16#0020#, 16#0061#, 16#0072#,
           16#0065#, 16#0020#, 16#006F#, 16#006E#,
           16#0065#, 16#0020#, 16#006F#, 16#0072#,
           16#0020#, 16#006D#, 16#006F#, 16#0072#,
           16#0065#, 16#0020#, 16#0069#, 16#006E#,
           16#0073#, 16#0074#, 16#0061#, 16#006E#,
           16#0063#, 16#0065#, 16#0073#, 16#0020#,
           16#006F#, 16#0066#, 16#0020#, 16#0074#,
           16#0068#, 16#0065#, 16#0020#, 16#0070#,
           16#0061#, 16#0072#, 16#0074#, 16#0069#,
           16#0063#, 16#0075#, 16#006C#, 16#0061#,
           16#0072#, 16#0020#, 16#0067#, 16#0065#,
           16#006E#, 16#0065#, 16#0072#, 16#0061#,
           16#006C#, 16#0020#, 16#0043#, 16#006C#,
           16#0061#, 16#0073#, 16#0073#, 16#0069#,
           16#0066#, 16#0069#, 16#0065#, 16#0072#,
           16#0020#, 16#0074#, 16#0068#, 16#0061#,
           16#0074#, 16#0020#, 16#0061#, 16#0072#,
           16#0065#, 16#0020#, 16#006E#, 16#006F#,
           16#0074#, 16#0020#, 16#0069#, 16#006E#,
           16#0073#, 16#0074#, 16#0061#, 16#006E#,
           16#0063#, 16#0065#, 16#0073#, 16#0020#,
           16#006F#, 16#0066#, 16#0020#, 16#0061#,
           16#0074#, 16#0020#, 16#006C#, 16#0065#,
           16#0061#, 16#0073#, 16#0074#, 16#0020#,
           16#006F#, 16#006E#, 16#0065#, 16#0020#,
           16#006F#, 16#0066#, 16#0020#, 16#0069#,
           16#0074#, 16#0073#, 16#0020#, 16#0073#,
           16#0070#, 16#0065#, 16#0063#, 16#0069#,
           16#0066#, 16#0069#, 16#0063#, 16#0020#,
           16#0043#, 16#006C#, 16#0061#, 16#0073#,
           16#0073#, 16#0069#, 16#0066#, 16#0069#,
           16#0065#, 16#0072#, 16#0073#, 16#0020#,
           16#0064#, 16#0065#, 16#0066#, 16#0069#,
           16#006E#, 16#0065#, 16#0064#, 16#0020#,
           16#0066#, 16#006F#, 16#0072#, 16#0020#,
           16#0074#, 16#0068#, 16#0065#, 16#0020#,
           16#0047#, 16#0065#, 16#006E#, 16#0065#,
           16#0072#, 16#0061#, 16#006C#, 16#0069#,
           16#007A#, 16#0061#, 16#0074#, 16#0069#,
           16#006F#, 16#006E#, 16#0053#, 16#0065#,
           16#0074#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "Physical definition of a graphical image."

   MS_0C33 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 47,
         Unused   => 41,
         Length   => 41,
         Value    =>
          (16#0050#, 16#0068#, 16#0079#, 16#0073#,
           16#0069#, 16#0063#, 16#0061#, 16#006C#,
           16#0020#, 16#0064#, 16#0065#, 16#0066#,
           16#0069#, 16#006E#, 16#0069#, 16#0074#,
           16#0069#, 16#006F#, 16#006E#, 16#0020#,
           16#006F#, 16#0066#, 16#0020#, 16#0061#,
           16#0020#, 16#0067#, 16#0072#, 16#0061#,
           16#0070#, 16#0068#, 16#0069#, 16#0063#,
           16#0061#, 16#006C#, 16#0020#, 16#0069#,
           16#006D#, 16#0061#, 16#0067#, 16#0065#,
           16#002E#,
           others => 16#0000#),
         others => <>);

   --  "The exitPoints kind pseudo states corresponding to this connection point."

   MS_0C34 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 79,
         Unused   => 73,
         Length   => 73,
         Value    =>
          (16#0054#, 16#0068#, 16#0065#, 16#0020#,
           16#0065#, 16#0078#, 16#0069#, 16#0074#,
           16#0050#, 16#006F#, 16#0069#, 16#006E#,
           16#0074#, 16#0073#, 16#0020#, 16#006B#,
           16#0069#, 16#006E#, 16#0064#, 16#0020#,
           16#0070#, 16#0073#, 16#0065#, 16#0075#,
           16#0064#, 16#006F#, 16#0020#, 16#0073#,
           16#0074#, 16#0061#, 16#0074#, 16#0065#,
           16#0073#, 16#0020#, 16#0063#, 16#006F#,
           16#0072#, 16#0072#, 16#0065#, 16#0073#,
           16#0070#, 16#006F#, 16#006E#, 16#0064#,
           16#0069#, 16#006E#, 16#0067#, 16#0020#,
           16#0074#, 16#006F#, 16#0020#, 16#0074#,
           16#0068#, 16#0069#, 16#0073#, 16#0020#,
           16#0063#, 16#006F#, 16#006E#, 16#006E#,
           16#0065#, 16#0063#, 16#0074#, 16#0069#,
           16#006F#, 16#006E#, 16#0020#, 16#0070#,
           16#006F#, 16#0069#, 16#006E#, 16#0074#,
           16#002E#,
           others => 16#0000#),
         others => <>);

   --  "The classifier that is the context for the execution of the behavior. If the behavior is owned by a BehavioredClassifier, that classifier is the context. Otherwise, the context is the first BehavioredClassifier reached by following the chain of owner relationships. For example, following this algorithm, the context of an entry action in a state machine is the classifier that owns the state machine. The features of the context classifier as well as the elements visible to the context classifier are visible to the behavior."

   MS_0C35 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 543,
         Unused   => 527,
         Length   => 527,
         Value    =>
          (16#0054#, 16#0068#, 16#0065#, 16#0020#,
           16#0063#, 16#006C#, 16#0061#, 16#0073#,
           16#0073#, 16#0069#, 16#0066#, 16#0069#,
           16#0065#, 16#0072#, 16#0020#, 16#0074#,
           16#0068#, 16#0061#, 16#0074#, 16#0020#,
           16#0069#, 16#0073#, 16#0020#, 16#0074#,
           16#0068#, 16#0065#, 16#0020#, 16#0063#,
           16#006F#, 16#006E#, 16#0074#, 16#0065#,
           16#0078#, 16#0074#, 16#0020#, 16#0066#,
           16#006F#, 16#0072#, 16#0020#, 16#0074#,
           16#0068#, 16#0065#, 16#0020#, 16#0065#,
           16#0078#, 16#0065#, 16#0063#, 16#0075#,
           16#0074#, 16#0069#, 16#006F#, 16#006E#,
           16#0020#, 16#006F#, 16#0066#, 16#0020#,
           16#0074#, 16#0068#, 16#0065#, 16#0020#,
           16#0062#, 16#0065#, 16#0068#, 16#0061#,
           16#0076#, 16#0069#, 16#006F#, 16#0072#,
           16#002E#, 16#0020#, 16#0049#, 16#0066#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#0062#, 16#0065#, 16#0068#,
           16#0061#, 16#0076#, 16#0069#, 16#006F#,
           16#0072#, 16#0020#, 16#0069#, 16#0073#,
           16#0020#, 16#006F#, 16#0077#, 16#006E#,
           16#0065#, 16#0064#, 16#0020#, 16#0062#,
           16#0079#, 16#0020#, 16#0061#, 16#0020#,
           16#0042#, 16#0065#, 16#0068#, 16#0061#,
           16#0076#, 16#0069#, 16#006F#, 16#0072#,
           16#0065#, 16#0064#, 16#0043#, 16#006C#,
           16#0061#, 16#0073#, 16#0073#, 16#0069#,
           16#0066#, 16#0069#, 16#0065#, 16#0072#,
           16#002C#, 16#0020#, 16#0074#, 16#0068#,
           16#0061#, 16#0074#, 16#0020#, 16#0063#,
           16#006C#, 16#0061#, 16#0073#, 16#0073#,
           16#0069#, 16#0066#, 16#0069#, 16#0065#,
           16#0072#, 16#0020#, 16#0069#, 16#0073#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#0063#, 16#006F#, 16#006E#,
           16#0074#, 16#0065#, 16#0078#, 16#0074#,
           16#002E#, 16#0020#, 16#004F#, 16#0074#,
           16#0068#, 16#0065#, 16#0072#, 16#0077#,
           16#0069#, 16#0073#, 16#0065#, 16#002C#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#0063#, 16#006F#, 16#006E#,
           16#0074#, 16#0065#, 16#0078#, 16#0074#,
           16#0020#, 16#0069#, 16#0073#, 16#0020#,
           16#0074#, 16#0068#, 16#0065#, 16#0020#,
           16#0066#, 16#0069#, 16#0072#, 16#0073#,
           16#0074#, 16#0020#, 16#0042#, 16#0065#,
           16#0068#, 16#0061#, 16#0076#, 16#0069#,
           16#006F#, 16#0072#, 16#0065#, 16#0064#,
           16#0043#, 16#006C#, 16#0061#, 16#0073#,
           16#0073#, 16#0069#, 16#0066#, 16#0069#,
           16#0065#, 16#0072#, 16#0020#, 16#0072#,
           16#0065#, 16#0061#, 16#0063#, 16#0068#,
           16#0065#, 16#0064#, 16#0020#, 16#0062#,
           16#0079#, 16#0020#, 16#0066#, 16#006F#,
           16#006C#, 16#006C#, 16#006F#, 16#0077#,
           16#0069#, 16#006E#, 16#0067#, 16#0020#,
           16#0074#, 16#0068#, 16#0065#, 16#0020#,
           16#0063#, 16#0068#, 16#0061#, 16#0069#,
           16#006E#, 16#0020#, 16#006F#, 16#0066#,
           16#0020#, 16#006F#, 16#0077#, 16#006E#,
           16#0065#, 16#0072#, 16#0020#, 16#0072#,
           16#0065#, 16#006C#, 16#0061#, 16#0074#,
           16#0069#, 16#006F#, 16#006E#, 16#0073#,
           16#0068#, 16#0069#, 16#0070#, 16#0073#,
           16#002E#, 16#0020#, 16#0046#, 16#006F#,
           16#0072#, 16#0020#, 16#0065#, 16#0078#,
           16#0061#, 16#006D#, 16#0070#, 16#006C#,
           16#0065#, 16#002C#, 16#0020#, 16#0066#,
           16#006F#, 16#006C#, 16#006C#, 16#006F#,
           16#0077#, 16#0069#, 16#006E#, 16#0067#,
           16#0020#, 16#0074#, 16#0068#, 16#0069#,
           16#0073#, 16#0020#, 16#0061#, 16#006C#,
           16#0067#, 16#006F#, 16#0072#, 16#0069#,
           16#0074#, 16#0068#, 16#006D#, 16#002C#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#0063#, 16#006F#, 16#006E#,
           16#0074#, 16#0065#, 16#0078#, 16#0074#,
           16#0020#, 16#006F#, 16#0066#, 16#0020#,
           16#0061#, 16#006E#, 16#0020#, 16#0065#,
           16#006E#, 16#0074#, 16#0072#, 16#0079#,
           16#0020#, 16#0061#, 16#0063#, 16#0074#,
           16#0069#, 16#006F#, 16#006E#, 16#0020#,
           16#0069#, 16#006E#, 16#0020#, 16#0061#,
           16#0020#, 16#0073#, 16#0074#, 16#0061#,
           16#0074#, 16#0065#, 16#0020#, 16#006D#,
           16#0061#, 16#0063#, 16#0068#, 16#0069#,
           16#006E#, 16#0065#, 16#0020#, 16#0069#,
           16#0073#, 16#0020#, 16#0074#, 16#0068#,
           16#0065#, 16#0020#, 16#0063#, 16#006C#,
           16#0061#, 16#0073#, 16#0073#, 16#0069#,
           16#0066#, 16#0069#, 16#0065#, 16#0072#,
           16#0020#, 16#0074#, 16#0068#, 16#0061#,
           16#0074#, 16#0020#, 16#006F#, 16#0077#,
           16#006E#, 16#0073#, 16#0020#, 16#0074#,
           16#0068#, 16#0065#, 16#0020#, 16#0073#,
           16#0074#, 16#0061#, 16#0074#, 16#0065#,
           16#0020#, 16#006D#, 16#0061#, 16#0063#,
           16#0068#, 16#0069#, 16#006E#, 16#0065#,
           16#002E#, 16#0020#, 16#0054#, 16#0068#,
           16#0065#, 16#0020#, 16#0066#, 16#0065#,
           16#0061#, 16#0074#, 16#0075#, 16#0072#,
           16#0065#, 16#0073#, 16#0020#, 16#006F#,
           16#0066#, 16#0020#, 16#0074#, 16#0068#,
           16#0065#, 16#0020#, 16#0063#, 16#006F#,
           16#006E#, 16#0074#, 16#0065#, 16#0078#,
           16#0074#, 16#0020#, 16#0063#, 16#006C#,
           16#0061#, 16#0073#, 16#0073#, 16#0069#,
           16#0066#, 16#0069#, 16#0065#, 16#0072#,
           16#0020#, 16#0061#, 16#0073#, 16#0020#,
           16#0077#, 16#0065#, 16#006C#, 16#006C#,
           16#0020#, 16#0061#, 16#0073#, 16#0020#,
           16#0074#, 16#0068#, 16#0065#, 16#0020#,
           16#0065#, 16#006C#, 16#0065#, 16#006D#,
           16#0065#, 16#006E#, 16#0074#, 16#0073#,
           16#0020#, 16#0076#, 16#0069#, 16#0073#,
           16#0069#, 16#0062#, 16#006C#, 16#0065#,
           16#0020#, 16#0074#, 16#006F#, 16#0020#,
           16#0074#, 16#0068#, 16#0065#, 16#0020#,
           16#0063#, 16#006F#, 16#006E#, 16#0074#,
           16#0065#, 16#0078#, 16#0074#, 16#0020#,
           16#0063#, 16#006C#, 16#0061#, 16#0073#,
           16#0073#, 16#0069#, 16#0066#, 16#0069#,
           16#0065#, 16#0072#, 16#0020#, 16#0061#,
           16#0072#, 16#0065#, 16#0020#, 16#0076#,
           16#0069#, 16#0073#, 16#0069#, 16#0062#,
           16#006C#, 16#0065#, 16#0020#, 16#0074#,
           16#006F#, 16#0020#, 16#0074#, 16#0068#,
           16#0065#, 16#0020#, 16#0062#, 16#0065#,
           16#0068#, 16#0061#, 16#0076#, 16#0069#,
           16#006F#, 16#0072#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "reentrant_behaviors"

   MS_0C36 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 23,
         Unused   => 19,
         Length   => 19,
         Value    =>
          (16#0072#, 16#0065#, 16#0065#, 16#006E#,
           16#0074#, 16#0072#, 16#0061#, 16#006E#,
           16#0074#, 16#005F#, 16#0062#, 16#0065#,
           16#0068#, 16#0061#, 16#0076#, 16#0069#,
           16#006F#, 16#0072#, 16#0073#,
           others => 16#0000#),
         others => <>);

   --  "The type input pin is the same as the type of the variable."

   MS_0C37 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 63,
         Unused   => 59,
         Length   => 59,
         Value    =>
          (16#0054#, 16#0068#, 16#0065#, 16#0020#,
           16#0074#, 16#0079#, 16#0070#, 16#0065#,
           16#0020#, 16#0069#, 16#006E#, 16#0070#,
           16#0075#, 16#0074#, 16#0020#, 16#0070#,
           16#0069#, 16#006E#, 16#0020#, 16#0069#,
           16#0073#, 16#0020#, 16#0074#, 16#0068#,
           16#0065#, 16#0020#, 16#0073#, 16#0061#,
           16#006D#, 16#0065#, 16#0020#, 16#0061#,
           16#0073#, 16#0020#, 16#0074#, 16#0068#,
           16#0065#, 16#0020#, 16#0074#, 16#0079#,
           16#0070#, 16#0065#, 16#0020#, 16#006F#,
           16#0066#, 16#0020#, 16#0074#, 16#0068#,
           16#0065#, 16#0020#, 16#0076#, 16#0061#,
           16#0072#, 16#0069#, 16#0061#, 16#0062#,
           16#006C#, 16#0065#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "A conditional node is a structured activity node that represents an exclusive choice among some number of alternatives."

   MS_0C38 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 127,
         Unused   => 119,
         Length   => 119,
         Value    =>
          (16#0041#, 16#0020#, 16#0063#, 16#006F#,
           16#006E#, 16#0064#, 16#0069#, 16#0074#,
           16#0069#, 16#006F#, 16#006E#, 16#0061#,
           16#006C#, 16#0020#, 16#006E#, 16#006F#,
           16#0064#, 16#0065#, 16#0020#, 16#0069#,
           16#0073#, 16#0020#, 16#0061#, 16#0020#,
           16#0073#, 16#0074#, 16#0072#, 16#0075#,
           16#0063#, 16#0074#, 16#0075#, 16#0072#,
           16#0065#, 16#0064#, 16#0020#, 16#0061#,
           16#0063#, 16#0074#, 16#0069#, 16#0076#,
           16#0069#, 16#0074#, 16#0079#, 16#0020#,
           16#006E#, 16#006F#, 16#0064#, 16#0065#,
           16#0020#, 16#0074#, 16#0068#, 16#0061#,
           16#0074#, 16#0020#, 16#0072#, 16#0065#,
           16#0070#, 16#0072#, 16#0065#, 16#0073#,
           16#0065#, 16#006E#, 16#0074#, 16#0073#,
           16#0020#, 16#0061#, 16#006E#, 16#0020#,
           16#0065#, 16#0078#, 16#0063#, 16#006C#,
           16#0075#, 16#0073#, 16#0069#, 16#0076#,
           16#0065#, 16#0020#, 16#0063#, 16#0068#,
           16#006F#, 16#0069#, 16#0063#, 16#0065#,
           16#0020#, 16#0061#, 16#006D#, 16#006F#,
           16#006E#, 16#0067#, 16#0020#, 16#0073#,
           16#006F#, 16#006D#, 16#0065#, 16#0020#,
           16#006E#, 16#0075#, 16#006D#, 16#0062#,
           16#0065#, 16#0072#, 16#0020#, 16#006F#,
           16#0066#, 16#0020#, 16#0061#, 16#006C#,
           16#0074#, 16#0065#, 16#0072#, 16#006E#,
           16#0061#, 16#0074#, 16#0069#, 16#0076#,
           16#0065#, 16#0073#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "finish"

   MS_0C39 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 7,
         Unused   => 6,
         Length   => 6,
         Value    =>
          (16#0066#, 16#0069#, 16#006E#, 16#0069#,
           16#0073#, 16#0068#,
           others => 16#0000#),
         others => <>);

   --  "A multiplicity of a composite aggregation must not have an upper bound greater than 1."

   MS_0C3A : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 95,
         Unused   => 86,
         Length   => 86,
         Value    =>
          (16#0041#, 16#0020#, 16#006D#, 16#0075#,
           16#006C#, 16#0074#, 16#0069#, 16#0070#,
           16#006C#, 16#0069#, 16#0063#, 16#0069#,
           16#0074#, 16#0079#, 16#0020#, 16#006F#,
           16#0066#, 16#0020#, 16#0061#, 16#0020#,
           16#0063#, 16#006F#, 16#006D#, 16#0070#,
           16#006F#, 16#0073#, 16#0069#, 16#0074#,
           16#0065#, 16#0020#, 16#0061#, 16#0067#,
           16#0067#, 16#0072#, 16#0065#, 16#0067#,
           16#0061#, 16#0074#, 16#0069#, 16#006F#,
           16#006E#, 16#0020#, 16#006D#, 16#0075#,
           16#0073#, 16#0074#, 16#0020#, 16#006E#,
           16#006F#, 16#0074#, 16#0020#, 16#0068#,
           16#0061#, 16#0076#, 16#0065#, 16#0020#,
           16#0061#, 16#006E#, 16#0020#, 16#0075#,
           16#0070#, 16#0070#, 16#0065#, 16#0072#,
           16#0020#, 16#0062#, 16#006F#, 16#0075#,
           16#006E#, 16#0064#, 16#0020#, 16#0067#,
           16#0072#, 16#0065#, 16#0061#, 16#0074#,
           16#0065#, 16#0072#, 16#0020#, 16#0074#,
           16#0068#, 16#0061#, 16#006E#, 16#0020#,
           16#0031#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "A_represents_lifeline"

   MS_0C3B : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 23,
         Unused   => 21,
         Length   => 21,
         Value    =>
          (16#0041#, 16#005F#, 16#0072#, 16#0065#,
           16#0070#, 16#0072#, 16#0065#, 16#0073#,
           16#0065#, 16#006E#, 16#0074#, 16#0073#,
           16#005F#, 16#006C#, 16#0069#, 16#0066#,
           16#0065#, 16#006C#, 16#0069#, 16#006E#,
           16#0065#,
           others => 16#0000#),
         others => <>);

   --  "connectionPointReference"

   MS_0C3C : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 31,
         Unused   => 24,
         Length   => 24,
         Value    =>
          (16#0063#, 16#006F#, 16#006E#, 16#006E#,
           16#0065#, 16#0063#, 16#0074#, 16#0069#,
           16#006F#, 16#006E#, 16#0050#, 16#006F#,
           16#0069#, 16#006E#, 16#0074#, 16#0052#,
           16#0065#, 16#0066#, 16#0065#, 16#0072#,
           16#0065#, 16#006E#, 16#0063#, 16#0065#,
           others => 16#0000#),
         others => <>);

   --  "ReadSelfAction"

   MS_0C3D : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 15,
         Unused   => 14,
         Length   => 14,
         Value    =>
          (16#0052#, 16#0065#, 16#0061#, 16#0064#,
           16#0053#, 16#0065#, 16#006C#, 16#0066#,
           16#0041#, 16#0063#, 16#0074#, 16#0069#,
           16#006F#, 16#006E#,
           others => 16#0000#),
         others => <>);

   --  "References the general classifier in the Generalization relationship."

   MS_0C3E : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 71,
         Unused   => 69,
         Length   => 69,
         Value    =>
          (16#0052#, 16#0065#, 16#0066#, 16#0065#,
           16#0072#, 16#0065#, 16#006E#, 16#0063#,
           16#0065#, 16#0073#, 16#0020#, 16#0074#,
           16#0068#, 16#0065#, 16#0020#, 16#0067#,
           16#0065#, 16#006E#, 16#0065#, 16#0072#,
           16#0061#, 16#006C#, 16#0020#, 16#0063#,
           16#006C#, 16#0061#, 16#0073#, 16#0073#,
           16#0069#, 16#0066#, 16#0069#, 16#0065#,
           16#0072#, 16#0020#, 16#0069#, 16#006E#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#0047#, 16#0065#, 16#006E#,
           16#0065#, 16#0072#, 16#0061#, 16#006C#,
           16#0069#, 16#007A#, 16#0061#, 16#0074#,
           16#0069#, 16#006F#, 16#006E#, 16#0020#,
           16#0072#, 16#0065#, 16#006C#, 16#0061#,
           16#0074#, 16#0069#, 16#006F#, 16#006E#,
           16#0073#, 16#0068#, 16#0069#, 16#0070#,
           16#002E#,
           others => 16#0000#),
         others => <>);

   --  "LiteralInteger"

   MS_0C3F : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 15,
         Unused   => 14,
         Length   => 14,
         Value    =>
          (16#004C#, 16#0069#, 16#0074#, 16#0065#,
           16#0072#, 16#0061#, 16#006C#, 16#0049#,
           16#006E#, 16#0074#, 16#0065#, 16#0067#,
           16#0065#, 16#0072#,
           others => 16#0000#),
         others => <>);

   --  "A_provided_port"

   MS_0C40 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 23,
         Unused   => 15,
         Length   => 15,
         Value    =>
          (16#0041#, 16#005F#, 16#0070#, 16#0072#,
           16#006F#, 16#0076#, 16#0069#, 16#0064#,
           16#0065#, 16#0064#, 16#005F#, 16#0070#,
           16#006F#, 16#0072#, 16#0074#,
           others => 16#0000#),
         others => <>);

   --  "The input pins have no type."

   MS_0C41 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 31,
         Unused   => 28,
         Length   => 28,
         Value    =>
          (16#0054#, 16#0068#, 16#0065#, 16#0020#,
           16#0069#, 16#006E#, 16#0070#, 16#0075#,
           16#0074#, 16#0020#, 16#0070#, 16#0069#,
           16#006E#, 16#0073#, 16#0020#, 16#0068#,
           16#0061#, 16#0076#, 16#0065#, 16#0020#,
           16#006E#, 16#006F#, 16#0020#, 16#0074#,
           16#0079#, 16#0070#, 16#0065#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "The decisionInputFlow of a decision node must be an incoming edge of the decision node."

   MS_0C42 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 95,
         Unused   => 87,
         Length   => 87,
         Value    =>
          (16#0054#, 16#0068#, 16#0065#, 16#0020#,
           16#0064#, 16#0065#, 16#0063#, 16#0069#,
           16#0073#, 16#0069#, 16#006F#, 16#006E#,
           16#0049#, 16#006E#, 16#0070#, 16#0075#,
           16#0074#, 16#0046#, 16#006C#, 16#006F#,
           16#0077#, 16#0020#, 16#006F#, 16#0066#,
           16#0020#, 16#0061#, 16#0020#, 16#0064#,
           16#0065#, 16#0063#, 16#0069#, 16#0073#,
           16#0069#, 16#006F#, 16#006E#, 16#0020#,
           16#006E#, 16#006F#, 16#0064#, 16#0065#,
           16#0020#, 16#006D#, 16#0075#, 16#0073#,
           16#0074#, 16#0020#, 16#0062#, 16#0065#,
           16#0020#, 16#0061#, 16#006E#, 16#0020#,
           16#0069#, 16#006E#, 16#0063#, 16#006F#,
           16#006D#, 16#0069#, 16#006E#, 16#0067#,
           16#0020#, 16#0065#, 16#0064#, 16#0067#,
           16#0065#, 16#0020#, 16#006F#, 16#0066#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#0064#, 16#0065#, 16#0063#,
           16#0069#, 16#0073#, 16#0069#, 16#006F#,
           16#006E#, 16#0020#, 16#006E#, 16#006F#,
           16#0064#, 16#0065#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "Specifies the PackageableElement whose name is to be added to a Namespace."

   MS_0C43 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 79,
         Unused   => 74,
         Length   => 74,
         Value    =>
          (16#0053#, 16#0070#, 16#0065#, 16#0063#,
           16#0069#, 16#0066#, 16#0069#, 16#0065#,
           16#0073#, 16#0020#, 16#0074#, 16#0068#,
           16#0065#, 16#0020#, 16#0050#, 16#0061#,
           16#0063#, 16#006B#, 16#0061#, 16#0067#,
           16#0065#, 16#0061#, 16#0062#, 16#006C#,
           16#0065#, 16#0045#, 16#006C#, 16#0065#,
           16#006D#, 16#0065#, 16#006E#, 16#0074#,
           16#0020#, 16#0077#, 16#0068#, 16#006F#,
           16#0073#, 16#0065#, 16#0020#, 16#006E#,
           16#0061#, 16#006D#, 16#0065#, 16#0020#,
           16#0069#, 16#0073#, 16#0020#, 16#0074#,
           16#006F#, 16#0020#, 16#0062#, 16#0065#,
           16#0020#, 16#0061#, 16#0064#, 16#0064#,
           16#0065#, 16#0064#, 16#0020#, 16#0074#,
           16#006F#, 16#0020#, 16#0061#, 16#0020#,
           16#004E#, 16#0061#, 16#006D#, 16#0065#,
           16#0073#, 16#0070#, 16#0061#, 16#0063#,
           16#0065#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "activity_parameter_node"

   MS_0C44 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 31,
         Unused   => 23,
         Length   => 23,
         Value    =>
          (16#0061#, 16#0063#, 16#0074#, 16#0069#,
           16#0076#, 16#0069#, 16#0074#, 16#0079#,
           16#005F#, 16#0070#, 16#0061#, 16#0072#,
           16#0061#, 16#006D#, 16#0065#, 16#0074#,
           16#0065#, 16#0072#, 16#005F#, 16#006E#,
           16#006F#, 16#0064#, 16#0065#,
           others => 16#0000#),
         others => <>);

   --  "List of qualifier values"

   MS_0C45 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 31,
         Unused   => 24,
         Length   => 24,
         Value    =>
          (16#004C#, 16#0069#, 16#0073#, 16#0074#,
           16#0020#, 16#006F#, 16#0066#, 16#0020#,
           16#0071#, 16#0075#, 16#0061#, 16#006C#,
           16#0069#, 16#0066#, 16#0069#, 16#0065#,
           16#0072#, 16#0020#, 16#0076#, 16#0061#,
           16#006C#, 16#0075#, 16#0065#, 16#0073#,
           others => 16#0000#),
         others => <>);

   --  "interfaceRealization"

   MS_0C46 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 23,
         Unused   => 20,
         Length   => 20,
         Value    =>
          (16#0069#, 16#006E#, 16#0074#, 16#0065#,
           16#0072#, 16#0066#, 16#0061#, 16#0063#,
           16#0065#, 16#0052#, 16#0065#, 16#0061#,
           16#006C#, 16#0069#, 16#007A#, 16#0061#,
           16#0074#, 16#0069#, 16#006F#, 16#006E#,
           others => 16#0000#),
         others => <>);

   --  "LiteralReal"

   MS_0C47 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 15,
         Unused   => 11,
         Length   => 11,
         Value    =>
          (16#004C#, 16#0069#, 16#0074#, 16#0065#,
           16#0072#, 16#0061#, 16#006C#, 16#0052#,
           16#0065#, 16#0061#, 16#006C#,
           others => 16#0000#),
         others => <>);

   --  "References the Package that is to be merged with the receiving package of the PackageMerge."

   MS_0C48 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 95,
         Unused   => 91,
         Length   => 91,
         Value    =>
          (16#0052#, 16#0065#, 16#0066#, 16#0065#,
           16#0072#, 16#0065#, 16#006E#, 16#0063#,
           16#0065#, 16#0073#, 16#0020#, 16#0074#,
           16#0068#, 16#0065#, 16#0020#, 16#0050#,
           16#0061#, 16#0063#, 16#006B#, 16#0061#,
           16#0067#, 16#0065#, 16#0020#, 16#0074#,
           16#0068#, 16#0061#, 16#0074#, 16#0020#,
           16#0069#, 16#0073#, 16#0020#, 16#0074#,
           16#006F#, 16#0020#, 16#0062#, 16#0065#,
           16#0020#, 16#006D#, 16#0065#, 16#0072#,
           16#0067#, 16#0065#, 16#0064#, 16#0020#,
           16#0077#, 16#0069#, 16#0074#, 16#0068#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#0072#, 16#0065#, 16#0063#,
           16#0065#, 16#0069#, 16#0076#, 16#0069#,
           16#006E#, 16#0067#, 16#0020#, 16#0070#,
           16#0061#, 16#0063#, 16#006B#, 16#0061#,
           16#0067#, 16#0065#, 16#0020#, 16#006F#,
           16#0066#, 16#0020#, 16#0074#, 16#0068#,
           16#0065#, 16#0020#, 16#0050#, 16#0061#,
           16#0063#, 16#006B#, 16#0061#, 16#0067#,
           16#0065#, 16#004D#, 16#0065#, 16#0072#,
           16#0067#, 16#0065#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "An expression represents a node in an expression tree, which may be non-terminal or terminal. It defines a symbol, and has a possibly empty sequence of operands which are value specifications."

   MS_0C49 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 199,
         Unused   => 192,
         Length   => 192,
         Value    =>
          (16#0041#, 16#006E#, 16#0020#, 16#0065#,
           16#0078#, 16#0070#, 16#0072#, 16#0065#,
           16#0073#, 16#0073#, 16#0069#, 16#006F#,
           16#006E#, 16#0020#, 16#0072#, 16#0065#,
           16#0070#, 16#0072#, 16#0065#, 16#0073#,
           16#0065#, 16#006E#, 16#0074#, 16#0073#,
           16#0020#, 16#0061#, 16#0020#, 16#006E#,
           16#006F#, 16#0064#, 16#0065#, 16#0020#,
           16#0069#, 16#006E#, 16#0020#, 16#0061#,
           16#006E#, 16#0020#, 16#0065#, 16#0078#,
           16#0070#, 16#0072#, 16#0065#, 16#0073#,
           16#0073#, 16#0069#, 16#006F#, 16#006E#,
           16#0020#, 16#0074#, 16#0072#, 16#0065#,
           16#0065#, 16#002C#, 16#0020#, 16#0077#,
           16#0068#, 16#0069#, 16#0063#, 16#0068#,
           16#0020#, 16#006D#, 16#0061#, 16#0079#,
           16#0020#, 16#0062#, 16#0065#, 16#0020#,
           16#006E#, 16#006F#, 16#006E#, 16#002D#,
           16#0074#, 16#0065#, 16#0072#, 16#006D#,
           16#0069#, 16#006E#, 16#0061#, 16#006C#,
           16#0020#, 16#006F#, 16#0072#, 16#0020#,
           16#0074#, 16#0065#, 16#0072#, 16#006D#,
           16#0069#, 16#006E#, 16#0061#, 16#006C#,
           16#002E#, 16#0020#, 16#0049#, 16#0074#,
           16#0020#, 16#0064#, 16#0065#, 16#0066#,
           16#0069#, 16#006E#, 16#0065#, 16#0073#,
           16#0020#, 16#0061#, 16#0020#, 16#0073#,
           16#0079#, 16#006D#, 16#0062#, 16#006F#,
           16#006C#, 16#002C#, 16#0020#, 16#0061#,
           16#006E#, 16#0064#, 16#0020#, 16#0068#,
           16#0061#, 16#0073#, 16#0020#, 16#0061#,
           16#0020#, 16#0070#, 16#006F#, 16#0073#,
           16#0073#, 16#0069#, 16#0062#, 16#006C#,
           16#0079#, 16#0020#, 16#0065#, 16#006D#,
           16#0070#, 16#0074#, 16#0079#, 16#0020#,
           16#0073#, 16#0065#, 16#0071#, 16#0075#,
           16#0065#, 16#006E#, 16#0063#, 16#0065#,
           16#0020#, 16#006F#, 16#0066#, 16#0020#,
           16#006F#, 16#0070#, 16#0065#, 16#0072#,
           16#0061#, 16#006E#, 16#0064#, 16#0073#,
           16#0020#, 16#0077#, 16#0068#, 16#0069#,
           16#0063#, 16#0068#, 16#0020#, 16#0061#,
           16#0072#, 16#0065#, 16#0020#, 16#0076#,
           16#0061#, 16#006C#, 16#0075#, 16#0065#,
           16#0020#, 16#0073#, 16#0070#, 16#0065#,
           16#0063#, 16#0069#, 16#0066#, 16#0069#,
           16#0063#, 16#0061#, 16#0074#, 16#0069#,
           16#006F#, 16#006E#, 16#0073#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "ActivityGroup"

   MS_0C4A : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 15,
         Unused   => 13,
         Length   => 13,
         Value    =>
          (16#0041#, 16#0063#, 16#0074#, 16#0069#,
           16#0076#, 16#0069#, 16#0074#, 16#0079#,
           16#0047#, 16#0072#, 16#006F#, 16#0075#,
           16#0070#,
           others => 16#0000#),
         others => <>);

   --  "A_signal_reception"

   MS_0C4B : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 23,
         Unused   => 18,
         Length   => 18,
         Value    =>
          (16#0041#, 16#005F#, 16#0073#, 16#0069#,
           16#0067#, 16#006E#, 16#0061#, 16#006C#,
           16#005F#, 16#0072#, 16#0065#, 16#0063#,
           16#0065#, 16#0070#, 16#0074#, 16#0069#,
           16#006F#, 16#006E#,
           others => 16#0000#),
         others => <>);

   --  "The upper bound must be greater than or equal to the lower bound."

   MS_0C4C : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 71,
         Unused   => 65,
         Length   => 65,
         Value    =>
          (16#0054#, 16#0068#, 16#0065#, 16#0020#,
           16#0075#, 16#0070#, 16#0070#, 16#0065#,
           16#0072#, 16#0020#, 16#0062#, 16#006F#,
           16#0075#, 16#006E#, 16#0064#, 16#0020#,
           16#006D#, 16#0075#, 16#0073#, 16#0074#,
           16#0020#, 16#0062#, 16#0065#, 16#0020#,
           16#0067#, 16#0072#, 16#0065#, 16#0061#,
           16#0074#, 16#0065#, 16#0072#, 16#0020#,
           16#0074#, 16#0068#, 16#0061#, 16#006E#,
           16#0020#, 16#006F#, 16#0072#, 16#0020#,
           16#0065#, 16#0071#, 16#0075#, 16#0061#,
           16#006C#, 16#0020#, 16#0074#, 16#006F#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#006C#, 16#006F#, 16#0077#,
           16#0065#, 16#0072#, 16#0020#, 16#0062#,
           16#006F#, 16#0075#, 16#006E#, 16#0064#,
           16#002E#,
           others => 16#0000#),
         others => <>);

   --  "Transitions outgoing pseudostates may not have a trigger."

   MS_0C4D : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 63,
         Unused   => 57,
         Length   => 57,
         Value    =>
          (16#0054#, 16#0072#, 16#0061#, 16#006E#,
           16#0073#, 16#0069#, 16#0074#, 16#0069#,
           16#006F#, 16#006E#, 16#0073#, 16#0020#,
           16#006F#, 16#0075#, 16#0074#, 16#0067#,
           16#006F#, 16#0069#, 16#006E#, 16#0067#,
           16#0020#, 16#0070#, 16#0073#, 16#0065#,
           16#0075#, 16#0064#, 16#006F#, 16#0073#,
           16#0074#, 16#0061#, 16#0074#, 16#0065#,
           16#0073#, 16#0020#, 16#006D#, 16#0061#,
           16#0079#, 16#0020#, 16#006E#, 16#006F#,
           16#0074#, 16#0020#, 16#0068#, 16#0061#,
           16#0076#, 16#0065#, 16#0020#, 16#0061#,
           16#0020#, 16#0074#, 16#0072#, 16#0069#,
           16#0067#, 16#0067#, 16#0065#, 16#0072#,
           16#002E#,
           others => 16#0000#),
         others => <>);

   --  "generalization"

   MS_0C4E : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 15,
         Unused   => 14,
         Length   => 14,
         Value    =>
          (16#0067#, 16#0065#, 16#006E#, 16#0065#,
           16#0072#, 16#0061#, 16#006C#, 16#0069#,
           16#007A#, 16#0061#, 16#0074#, 16#0069#,
           16#006F#, 16#006E#,
           others => 16#0000#),
         others => <>);

   --  "structured_node"

   MS_0C4F : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 23,
         Unused   => 15,
         Length   => 15,
         Value    =>
          (16#0073#, 16#0074#, 16#0072#, 16#0075#,
           16#0063#, 16#0074#, 16#0075#, 16#0072#,
           16#0065#, 16#0064#, 16#005F#, 16#006E#,
           16#006F#, 16#0064#, 16#0065#,
           others => 16#0000#),
         others => <>);

   --  "language_body_size"

   MS_0C50 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 23,
         Unused   => 18,
         Length   => 18,
         Value    =>
          (16#006C#, 16#0061#, 16#006E#, 16#0067#,
           16#0075#, 16#0061#, 16#0067#, 16#0065#,
           16#005F#, 16#0062#, 16#006F#, 16#0064#,
           16#0079#, 16#005F#, 16#0073#, 16#0069#,
           16#007A#, 16#0065#,
           others => 16#0000#),
         others => <>);

   --  "executionOccurrenceSpecification"

   MS_0C51 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 39,
         Unused   => 32,
         Length   => 32,
         Value    =>
          (16#0065#, 16#0078#, 16#0065#, 16#0063#,
           16#0075#, 16#0074#, 16#0069#, 16#006F#,
           16#006E#, 16#004F#, 16#0063#, 16#0063#,
           16#0075#, 16#0072#, 16#0072#, 16#0065#,
           16#006E#, 16#0063#, 16#0065#, 16#0053#,
           16#0070#, 16#0065#, 16#0063#, 16#0069#,
           16#0066#, 16#0069#, 16#0063#, 16#0061#,
           16#0074#, 16#0069#, 16#006F#, 16#006E#,
           others => 16#0000#),
         others => <>);

   --  "The test and body parts must be disjoint."

   MS_0C52 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 47,
         Unused   => 41,
         Length   => 41,
         Value    =>
          (16#0054#, 16#0068#, 16#0065#, 16#0020#,
           16#0074#, 16#0065#, 16#0073#, 16#0074#,
           16#0020#, 16#0061#, 16#006E#, 16#0064#,
           16#0020#, 16#0062#, 16#006F#, 16#0064#,
           16#0079#, 16#0020#, 16#0070#, 16#0061#,
           16#0072#, 16#0074#, 16#0073#, 16#0020#,
           16#006D#, 16#0075#, 16#0073#, 16#0074#,
           16#0020#, 16#0062#, 16#0065#, 16#0020#,
           16#0064#, 16#0069#, 16#0073#, 16#006A#,
           16#006F#, 16#0069#, 16#006E#, 16#0074#,
           16#002E#,
           others => 16#0000#),
         others => <>);

   --  "A read self action is an action that retrieves the host object of an action."

   MS_0C53 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 79,
         Unused   => 76,
         Length   => 76,
         Value    =>
          (16#0041#, 16#0020#, 16#0072#, 16#0065#,
           16#0061#, 16#0064#, 16#0020#, 16#0073#,
           16#0065#, 16#006C#, 16#0066#, 16#0020#,
           16#0061#, 16#0063#, 16#0074#, 16#0069#,
           16#006F#, 16#006E#, 16#0020#, 16#0069#,
           16#0073#, 16#0020#, 16#0061#, 16#006E#,
           16#0020#, 16#0061#, 16#0063#, 16#0074#,
           16#0069#, 16#006F#, 16#006E#, 16#0020#,
           16#0074#, 16#0068#, 16#0061#, 16#0074#,
           16#0020#, 16#0072#, 16#0065#, 16#0074#,
           16#0072#, 16#0069#, 16#0065#, 16#0076#,
           16#0065#, 16#0073#, 16#0020#, 16#0074#,
           16#0068#, 16#0065#, 16#0020#, 16#0068#,
           16#006F#, 16#0073#, 16#0074#, 16#0020#,
           16#006F#, 16#0062#, 16#006A#, 16#0065#,
           16#0063#, 16#0074#, 16#0020#, 16#006F#,
           16#0066#, 16#0020#, 16#0061#, 16#006E#,
           16#0020#, 16#0061#, 16#0063#, 16#0074#,
           16#0069#, 16#006F#, 16#006E#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "The number of argument pins and the number of parameters of the behavior of type in and in-out must be equal."

   MS_0C54 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 119,
         Unused   => 109,
         Length   => 109,
         Value    =>
          (16#0054#, 16#0068#, 16#0065#, 16#0020#,
           16#006E#, 16#0075#, 16#006D#, 16#0062#,
           16#0065#, 16#0072#, 16#0020#, 16#006F#,
           16#0066#, 16#0020#, 16#0061#, 16#0072#,
           16#0067#, 16#0075#, 16#006D#, 16#0065#,
           16#006E#, 16#0074#, 16#0020#, 16#0070#,
           16#0069#, 16#006E#, 16#0073#, 16#0020#,
           16#0061#, 16#006E#, 16#0064#, 16#0020#,
           16#0074#, 16#0068#, 16#0065#, 16#0020#,
           16#006E#, 16#0075#, 16#006D#, 16#0062#,
           16#0065#, 16#0072#, 16#0020#, 16#006F#,
           16#0066#, 16#0020#, 16#0070#, 16#0061#,
           16#0072#, 16#0061#, 16#006D#, 16#0065#,
           16#0074#, 16#0065#, 16#0072#, 16#0073#,
           16#0020#, 16#006F#, 16#0066#, 16#0020#,
           16#0074#, 16#0068#, 16#0065#, 16#0020#,
           16#0062#, 16#0065#, 16#0068#, 16#0061#,
           16#0076#, 16#0069#, 16#006F#, 16#0072#,
           16#0020#, 16#006F#, 16#0066#, 16#0020#,
           16#0074#, 16#0079#, 16#0070#, 16#0065#,
           16#0020#, 16#0069#, 16#006E#, 16#0020#,
           16#0061#, 16#006E#, 16#0064#, 16#0020#,
           16#0069#, 16#006E#, 16#002D#, 16#006F#,
           16#0075#, 16#0074#, 16#0020#, 16#006D#,
           16#0075#, 16#0073#, 16#0074#, 16#0020#,
           16#0062#, 16#0065#, 16#0020#, 16#0065#,
           16#0071#, 16#0075#, 16#0061#, 16#006C#,
           16#002E#,
           others => 16#0000#),
         others => <>);

   --  "A transition with kind external can source any vertex except entry points."

   MS_0C55 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 79,
         Unused   => 74,
         Length   => 74,
         Value    =>
          (16#0041#, 16#0020#, 16#0074#, 16#0072#,
           16#0061#, 16#006E#, 16#0073#, 16#0069#,
           16#0074#, 16#0069#, 16#006F#, 16#006E#,
           16#0020#, 16#0077#, 16#0069#, 16#0074#,
           16#0068#, 16#0020#, 16#006B#, 16#0069#,
           16#006E#, 16#0064#, 16#0020#, 16#0065#,
           16#0078#, 16#0074#, 16#0065#, 16#0072#,
           16#006E#, 16#0061#, 16#006C#, 16#0020#,
           16#0063#, 16#0061#, 16#006E#, 16#0020#,
           16#0073#, 16#006F#, 16#0075#, 16#0072#,
           16#0063#, 16#0065#, 16#0020#, 16#0061#,
           16#006E#, 16#0079#, 16#0020#, 16#0076#,
           16#0065#, 16#0072#, 16#0074#, 16#0065#,
           16#0078#, 16#0020#, 16#0065#, 16#0078#,
           16#0063#, 16#0065#, 16#0070#, 16#0074#,
           16#0020#, 16#0065#, 16#006E#, 16#0074#,
           16#0072#, 16#0079#, 16#0020#, 16#0070#,
           16#006F#, 16#0069#, 16#006E#, 16#0074#,
           16#0073#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "The Boolean query membersAreDistinguishable() determines whether all of the namespace's members are distinguishable within it."

   MS_0C56 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 135,
         Unused   => 126,
         Length   => 126,
         Value    =>
          (16#0054#, 16#0068#, 16#0065#, 16#0020#,
           16#0042#, 16#006F#, 16#006F#, 16#006C#,
           16#0065#, 16#0061#, 16#006E#, 16#0020#,
           16#0071#, 16#0075#, 16#0065#, 16#0072#,
           16#0079#, 16#0020#, 16#006D#, 16#0065#,
           16#006D#, 16#0062#, 16#0065#, 16#0072#,
           16#0073#, 16#0041#, 16#0072#, 16#0065#,
           16#0044#, 16#0069#, 16#0073#, 16#0074#,
           16#0069#, 16#006E#, 16#0067#, 16#0075#,
           16#0069#, 16#0073#, 16#0068#, 16#0061#,
           16#0062#, 16#006C#, 16#0065#, 16#0028#,
           16#0029#, 16#0020#, 16#0064#, 16#0065#,
           16#0074#, 16#0065#, 16#0072#, 16#006D#,
           16#0069#, 16#006E#, 16#0065#, 16#0073#,
           16#0020#, 16#0077#, 16#0068#, 16#0065#,
           16#0074#, 16#0068#, 16#0065#, 16#0072#,
           16#0020#, 16#0061#, 16#006C#, 16#006C#,
           16#0020#, 16#006F#, 16#0066#, 16#0020#,
           16#0074#, 16#0068#, 16#0065#, 16#0020#,
           16#006E#, 16#0061#, 16#006D#, 16#0065#,
           16#0073#, 16#0070#, 16#0061#, 16#0063#,
           16#0065#, 16#0027#, 16#0073#, 16#0020#,
           16#006D#, 16#0065#, 16#006D#, 16#0062#,
           16#0065#, 16#0072#, 16#0073#, 16#0020#,
           16#0061#, 16#0072#, 16#0065#, 16#0020#,
           16#0064#, 16#0069#, 16#0073#, 16#0074#,
           16#0069#, 16#006E#, 16#0067#, 16#0075#,
           16#0069#, 16#0073#, 16#0068#, 16#0061#,
           16#0062#, 16#006C#, 16#0065#, 16#0020#,
           16#0077#, 16#0069#, 16#0074#, 16#0068#,
           16#0069#, 16#006E#, 16#0020#, 16#0069#,
           16#0074#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "A_provided_component"

   MS_0C57 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 23,
         Unused   => 20,
         Length   => 20,
         Value    =>
          (16#0041#, 16#005F#, 16#0070#, 16#0072#,
           16#006F#, 16#0076#, 16#0069#, 16#0064#,
           16#0065#, 16#0064#, 16#005F#, 16#0063#,
           16#006F#, 16#006D#, 16#0070#, 16#006F#,
           16#006E#, 16#0065#, 16#006E#, 16#0074#,
           others => 16#0000#),
         others => <>);

   --  "join_segment_state"

   MS_0C58 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 23,
         Unused   => 18,
         Length   => 18,
         Value    =>
          (16#006A#, 16#006F#, 16#0069#, 16#006E#,
           16#005F#, 16#0073#, 16#0065#, 16#0067#,
           16#006D#, 16#0065#, 16#006E#, 16#0074#,
           16#005F#, 16#0073#, 16#0074#, 16#0061#,
           16#0074#, 16#0065#,
           others => 16#0000#),
         others => <>);

   --  "Specifies a ValueSpecification that represents a value to be used when no argument is supplied for the Parameter."

   MS_0C59 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 119,
         Unused   => 113,
         Length   => 113,
         Value    =>
          (16#0053#, 16#0070#, 16#0065#, 16#0063#,
           16#0069#, 16#0066#, 16#0069#, 16#0065#,
           16#0073#, 16#0020#, 16#0061#, 16#0020#,
           16#0056#, 16#0061#, 16#006C#, 16#0075#,
           16#0065#, 16#0053#, 16#0070#, 16#0065#,
           16#0063#, 16#0069#, 16#0066#, 16#0069#,
           16#0063#, 16#0061#, 16#0074#, 16#0069#,
           16#006F#, 16#006E#, 16#0020#, 16#0074#,
           16#0068#, 16#0061#, 16#0074#, 16#0020#,
           16#0072#, 16#0065#, 16#0070#, 16#0072#,
           16#0065#, 16#0073#, 16#0065#, 16#006E#,
           16#0074#, 16#0073#, 16#0020#, 16#0061#,
           16#0020#, 16#0076#, 16#0061#, 16#006C#,
           16#0075#, 16#0065#, 16#0020#, 16#0074#,
           16#006F#, 16#0020#, 16#0062#, 16#0065#,
           16#0020#, 16#0075#, 16#0073#, 16#0065#,
           16#0064#, 16#0020#, 16#0077#, 16#0068#,
           16#0065#, 16#006E#, 16#0020#, 16#006E#,
           16#006F#, 16#0020#, 16#0061#, 16#0072#,
           16#0067#, 16#0075#, 16#006D#, 16#0065#,
           16#006E#, 16#0074#, 16#0020#, 16#0069#,
           16#0073#, 16#0020#, 16#0073#, 16#0075#,
           16#0070#, 16#0070#, 16#006C#, 16#0069#,
           16#0065#, 16#0064#, 16#0020#, 16#0066#,
           16#006F#, 16#0072#, 16#0020#, 16#0074#,
           16#0068#, 16#0065#, 16#0020#, 16#0050#,
           16#0061#, 16#0072#, 16#0061#, 16#006D#,
           16#0065#, 16#0074#, 16#0065#, 16#0072#,
           16#002E#,
           others => 16#0000#),
         others => <>);

   --  "membersAreDistinguishable"

   MS_0C5A : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 31,
         Unused   => 25,
         Length   => 25,
         Value    =>
          (16#006D#, 16#0065#, 16#006D#, 16#0062#,
           16#0065#, 16#0072#, 16#0073#, 16#0041#,
           16#0072#, 16#0065#, 16#0044#, 16#0069#,
           16#0073#, 16#0074#, 16#0069#, 16#006E#,
           16#0067#, 16#0075#, 16#0069#, 16#0073#,
           16#0068#, 16#0061#, 16#0062#, 16#006C#,
           16#0065#,
           others => 16#0000#),
         others => <>);

   --  "out"

   MS_0C5B : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 7,
         Unused   => 3,
         Length   => 3,
         Value    =>
          (16#006F#, 16#0075#, 16#0074#,
           others => 16#0000#),
         others => <>);

   --  "The unmarshall classifier must have at least one structural feature."

   MS_0C5C : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 71,
         Unused   => 68,
         Length   => 68,
         Value    =>
          (16#0054#, 16#0068#, 16#0065#, 16#0020#,
           16#0075#, 16#006E#, 16#006D#, 16#0061#,
           16#0072#, 16#0073#, 16#0068#, 16#0061#,
           16#006C#, 16#006C#, 16#0020#, 16#0063#,
           16#006C#, 16#0061#, 16#0073#, 16#0073#,
           16#0069#, 16#0066#, 16#0069#, 16#0065#,
           16#0072#, 16#0020#, 16#006D#, 16#0075#,
           16#0073#, 16#0074#, 16#0020#, 16#0068#,
           16#0061#, 16#0076#, 16#0065#, 16#0020#,
           16#0061#, 16#0074#, 16#0020#, 16#006C#,
           16#0065#, 16#0061#, 16#0073#, 16#0074#,
           16#0020#, 16#006F#, 16#006E#, 16#0065#,
           16#0020#, 16#0073#, 16#0074#, 16#0072#,
           16#0075#, 16#0063#, 16#0074#, 16#0075#,
           16#0072#, 16#0061#, 16#006C#, 16#0020#,
           16#0066#, 16#0065#, 16#0061#, 16#0074#,
           16#0075#, 16#0072#, 16#0065#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "A template parameter substitution relates the actual parameter to a formal template parameter as part of a template binding."

   MS_0C5D : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 127,
         Unused   => 124,
         Length   => 124,
         Value    =>
          (16#0041#, 16#0020#, 16#0074#, 16#0065#,
           16#006D#, 16#0070#, 16#006C#, 16#0061#,
           16#0074#, 16#0065#, 16#0020#, 16#0070#,
           16#0061#, 16#0072#, 16#0061#, 16#006D#,
           16#0065#, 16#0074#, 16#0065#, 16#0072#,
           16#0020#, 16#0073#, 16#0075#, 16#0062#,
           16#0073#, 16#0074#, 16#0069#, 16#0074#,
           16#0075#, 16#0074#, 16#0069#, 16#006F#,
           16#006E#, 16#0020#, 16#0072#, 16#0065#,
           16#006C#, 16#0061#, 16#0074#, 16#0065#,
           16#0073#, 16#0020#, 16#0074#, 16#0068#,
           16#0065#, 16#0020#, 16#0061#, 16#0063#,
           16#0074#, 16#0075#, 16#0061#, 16#006C#,
           16#0020#, 16#0070#, 16#0061#, 16#0072#,
           16#0061#, 16#006D#, 16#0065#, 16#0074#,
           16#0065#, 16#0072#, 16#0020#, 16#0074#,
           16#006F#, 16#0020#, 16#0061#, 16#0020#,
           16#0066#, 16#006F#, 16#0072#, 16#006D#,
           16#0061#, 16#006C#, 16#0020#, 16#0074#,
           16#0065#, 16#006D#, 16#0070#, 16#006C#,
           16#0061#, 16#0074#, 16#0065#, 16#0020#,
           16#0070#, 16#0061#, 16#0072#, 16#0061#,
           16#006D#, 16#0065#, 16#0074#, 16#0065#,
           16#0072#, 16#0020#, 16#0061#, 16#0073#,
           16#0020#, 16#0070#, 16#0061#, 16#0072#,
           16#0074#, 16#0020#, 16#006F#, 16#0066#,
           16#0020#, 16#0061#, 16#0020#, 16#0074#,
           16#0065#, 16#006D#, 16#0070#, 16#006C#,
           16#0061#, 16#0074#, 16#0065#, 16#0020#,
           16#0062#, 16#0069#, 16#006E#, 16#0064#,
           16#0069#, 16#006E#, 16#0067#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "A package is used to group elements, and provides a namespace for the grouped elements."

   MS_0C5E : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 95,
         Unused   => 87,
         Length   => 87,
         Value    =>
          (16#0041#, 16#0020#, 16#0070#, 16#0061#,
           16#0063#, 16#006B#, 16#0061#, 16#0067#,
           16#0065#, 16#0020#, 16#0069#, 16#0073#,
           16#0020#, 16#0075#, 16#0073#, 16#0065#,
           16#0064#, 16#0020#, 16#0074#, 16#006F#,
           16#0020#, 16#0067#, 16#0072#, 16#006F#,
           16#0075#, 16#0070#, 16#0020#, 16#0065#,
           16#006C#, 16#0065#, 16#006D#, 16#0065#,
           16#006E#, 16#0074#, 16#0073#, 16#002C#,
           16#0020#, 16#0061#, 16#006E#, 16#0064#,
           16#0020#, 16#0070#, 16#0072#, 16#006F#,
           16#0076#, 16#0069#, 16#0064#, 16#0065#,
           16#0073#, 16#0020#, 16#0061#, 16#0020#,
           16#006E#, 16#0061#, 16#006D#, 16#0065#,
           16#0073#, 16#0070#, 16#0061#, 16#0063#,
           16#0065#, 16#0020#, 16#0066#, 16#006F#,
           16#0072#, 16#0020#, 16#0074#, 16#0068#,
           16#0065#, 16#0020#, 16#0067#, 16#0072#,
           16#006F#, 16#0075#, 16#0070#, 16#0065#,
           16#0064#, 16#0020#, 16#0065#, 16#006C#,
           16#0065#, 16#006D#, 16#0065#, 16#006E#,
           16#0074#, 16#0073#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "The states of a protocol state machine cannot have entry, exit, or do activity actions."

   MS_0C5F : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 95,
         Unused   => 87,
         Length   => 87,
         Value    =>
          (16#0054#, 16#0068#, 16#0065#, 16#0020#,
           16#0073#, 16#0074#, 16#0061#, 16#0074#,
           16#0065#, 16#0073#, 16#0020#, 16#006F#,
           16#0066#, 16#0020#, 16#0061#, 16#0020#,
           16#0070#, 16#0072#, 16#006F#, 16#0074#,
           16#006F#, 16#0063#, 16#006F#, 16#006C#,
           16#0020#, 16#0073#, 16#0074#, 16#0061#,
           16#0074#, 16#0065#, 16#0020#, 16#006D#,
           16#0061#, 16#0063#, 16#0068#, 16#0069#,
           16#006E#, 16#0065#, 16#0020#, 16#0063#,
           16#0061#, 16#006E#, 16#006E#, 16#006F#,
           16#0074#, 16#0020#, 16#0068#, 16#0061#,
           16#0076#, 16#0065#, 16#0020#, 16#0065#,
           16#006E#, 16#0074#, 16#0072#, 16#0079#,
           16#002C#, 16#0020#, 16#0065#, 16#0078#,
           16#0069#, 16#0074#, 16#002C#, 16#0020#,
           16#006F#, 16#0072#, 16#0020#, 16#0064#,
           16#006F#, 16#0020#, 16#0061#, 16#0063#,
           16#0074#, 16#0069#, 16#0076#, 16#0069#,
           16#0074#, 16#0079#, 16#0020#, 16#0061#,
           16#0063#, 16#0074#, 16#0069#, 16#006F#,
           16#006E#, 16#0073#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "The association ends of the link end data must not be static."

   MS_0C60 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 63,
         Unused   => 61,
         Length   => 61,
         Value    =>
          (16#0054#, 16#0068#, 16#0065#, 16#0020#,
           16#0061#, 16#0073#, 16#0073#, 16#006F#,
           16#0063#, 16#0069#, 16#0061#, 16#0074#,
           16#0069#, 16#006F#, 16#006E#, 16#0020#,
           16#0065#, 16#006E#, 16#0064#, 16#0073#,
           16#0020#, 16#006F#, 16#0066#, 16#0020#,
           16#0074#, 16#0068#, 16#0065#, 16#0020#,
           16#006C#, 16#0069#, 16#006E#, 16#006B#,
           16#0020#, 16#0065#, 16#006E#, 16#0064#,
           16#0020#, 16#0064#, 16#0061#, 16#0074#,
           16#0061#, 16#0020#, 16#006D#, 16#0075#,
           16#0073#, 16#0074#, 16#0020#, 16#006E#,
           16#006F#, 16#0074#, 16#0020#, 16#0062#,
           16#0065#, 16#0020#, 16#0073#, 16#0074#,
           16#0061#, 16#0074#, 16#0069#, 16#0063#,
           16#002E#,
           others => 16#0000#),
         others => <>);

   --  "A pin is an object node for inputs and outputs to actions."

   MS_0C61 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 63,
         Unused   => 58,
         Length   => 58,
         Value    =>
          (16#0041#, 16#0020#, 16#0070#, 16#0069#,
           16#006E#, 16#0020#, 16#0069#, 16#0073#,
           16#0020#, 16#0061#, 16#006E#, 16#0020#,
           16#006F#, 16#0062#, 16#006A#, 16#0065#,
           16#0063#, 16#0074#, 16#0020#, 16#006E#,
           16#006F#, 16#0064#, 16#0065#, 16#0020#,
           16#0066#, 16#006F#, 16#0072#, 16#0020#,
           16#0069#, 16#006E#, 16#0070#, 16#0075#,
           16#0074#, 16#0073#, 16#0020#, 16#0061#,
           16#006E#, 16#0064#, 16#0020#, 16#006F#,
           16#0075#, 16#0074#, 16#0070#, 16#0075#,
           16#0074#, 16#0073#, 16#0020#, 16#0074#,
           16#006F#, 16#0020#, 16#0061#, 16#0063#,
           16#0074#, 16#0069#, 16#006F#, 16#006E#,
           16#0073#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "In the case where the property is one navigable end of a binary association with both ends navigable, this gives the other end."

   MS_0C62 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 135,
         Unused   => 127,
         Length   => 127,
         Value    =>
          (16#0049#, 16#006E#, 16#0020#, 16#0074#,
           16#0068#, 16#0065#, 16#0020#, 16#0063#,
           16#0061#, 16#0073#, 16#0065#, 16#0020#,
           16#0077#, 16#0068#, 16#0065#, 16#0072#,
           16#0065#, 16#0020#, 16#0074#, 16#0068#,
           16#0065#, 16#0020#, 16#0070#, 16#0072#,
           16#006F#, 16#0070#, 16#0065#, 16#0072#,
           16#0074#, 16#0079#, 16#0020#, 16#0069#,
           16#0073#, 16#0020#, 16#006F#, 16#006E#,
           16#0065#, 16#0020#, 16#006E#, 16#0061#,
           16#0076#, 16#0069#, 16#0067#, 16#0061#,
           16#0062#, 16#006C#, 16#0065#, 16#0020#,
           16#0065#, 16#006E#, 16#0064#, 16#0020#,
           16#006F#, 16#0066#, 16#0020#, 16#0061#,
           16#0020#, 16#0062#, 16#0069#, 16#006E#,
           16#0061#, 16#0072#, 16#0079#, 16#0020#,
           16#0061#, 16#0073#, 16#0073#, 16#006F#,
           16#0063#, 16#0069#, 16#0061#, 16#0074#,
           16#0069#, 16#006F#, 16#006E#, 16#0020#,
           16#0077#, 16#0069#, 16#0074#, 16#0068#,
           16#0020#, 16#0062#, 16#006F#, 16#0074#,
           16#0068#, 16#0020#, 16#0065#, 16#006E#,
           16#0064#, 16#0073#, 16#0020#, 16#006E#,
           16#0061#, 16#0076#, 16#0069#, 16#0067#,
           16#0061#, 16#0062#, 16#006C#, 16#0065#,
           16#002C#, 16#0020#, 16#0074#, 16#0068#,
           16#0069#, 16#0073#, 16#0020#, 16#0067#,
           16#0069#, 16#0076#, 16#0065#, 16#0073#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#006F#, 16#0074#, 16#0068#,
           16#0065#, 16#0072#, 16#0020#, 16#0065#,
           16#006E#, 16#0064#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "A trigger for an AnyReceiveEvent is triggered by the receipt of any message that is not explicitly handled by any related trigger."

   MS_0C63 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 135,
         Unused   => 130,
         Length   => 130,
         Value    =>
          (16#0041#, 16#0020#, 16#0074#, 16#0072#,
           16#0069#, 16#0067#, 16#0067#, 16#0065#,
           16#0072#, 16#0020#, 16#0066#, 16#006F#,
           16#0072#, 16#0020#, 16#0061#, 16#006E#,
           16#0020#, 16#0041#, 16#006E#, 16#0079#,
           16#0052#, 16#0065#, 16#0063#, 16#0065#,
           16#0069#, 16#0076#, 16#0065#, 16#0045#,
           16#0076#, 16#0065#, 16#006E#, 16#0074#,
           16#0020#, 16#0069#, 16#0073#, 16#0020#,
           16#0074#, 16#0072#, 16#0069#, 16#0067#,
           16#0067#, 16#0065#, 16#0072#, 16#0065#,
           16#0064#, 16#0020#, 16#0062#, 16#0079#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#0072#, 16#0065#, 16#0063#,
           16#0065#, 16#0069#, 16#0070#, 16#0074#,
           16#0020#, 16#006F#, 16#0066#, 16#0020#,
           16#0061#, 16#006E#, 16#0079#, 16#0020#,
           16#006D#, 16#0065#, 16#0073#, 16#0073#,
           16#0061#, 16#0067#, 16#0065#, 16#0020#,
           16#0074#, 16#0068#, 16#0061#, 16#0074#,
           16#0020#, 16#0069#, 16#0073#, 16#0020#,
           16#006E#, 16#006F#, 16#0074#, 16#0020#,
           16#0065#, 16#0078#, 16#0070#, 16#006C#,
           16#0069#, 16#0063#, 16#0069#, 16#0074#,
           16#006C#, 16#0079#, 16#0020#, 16#0068#,
           16#0061#, 16#006E#, 16#0064#, 16#006C#,
           16#0065#, 16#0064#, 16#0020#, 16#0062#,
           16#0079#, 16#0020#, 16#0061#, 16#006E#,
           16#0079#, 16#0020#, 16#0072#, 16#0065#,
           16#006C#, 16#0061#, 16#0074#, 16#0065#,
           16#0064#, 16#0020#, 16#0074#, 16#0072#,
           16#0069#, 16#0067#, 16#0067#, 16#0065#,
           16#0072#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "isReentrant"

   MS_0C64 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 15,
         Unused   => 11,
         Length   => 11,
         Value    =>
          (16#0069#, 16#0073#, 16#0052#, 16#0065#,
           16#0065#, 16#006E#, 16#0074#, 16#0072#,
           16#0061#, 16#006E#, 16#0074#,
           others => 16#0000#),
         others => <>);

   --  "doActivity"

   MS_0C65 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 15,
         Unused   => 10,
         Length   => 10,
         Value    =>
          (16#0064#, 16#006F#, 16#0041#, 16#0063#,
           16#0074#, 16#0069#, 16#0076#, 16#0069#,
           16#0074#, 16#0079#,
           others => 16#0000#),
         others => <>);

   --  "DurationConstraint"

   MS_0C66 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 23,
         Unused   => 18,
         Length   => 18,
         Value    =>
          (16#0044#, 16#0075#, 16#0072#, 16#0061#,
           16#0074#, 16#0069#, 16#006F#, 16#006E#,
           16#0043#, 16#006F#, 16#006E#, 16#0073#,
           16#0074#, 16#0072#, 16#0061#, 16#0069#,
           16#006E#, 16#0074#,
           others => 16#0000#),
         others => <>);

   --  "A_fragment_enclosingInteraction"

   MS_0C67 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 39,
         Unused   => 31,
         Length   => 31,
         Value    =>
          (16#0041#, 16#005F#, 16#0066#, 16#0072#,
           16#0061#, 16#0067#, 16#006D#, 16#0065#,
           16#006E#, 16#0074#, 16#005F#, 16#0065#,
           16#006E#, 16#0063#, 16#006C#, 16#006F#,
           16#0073#, 16#0069#, 16#006E#, 16#0067#,
           16#0049#, 16#006E#, 16#0074#, 16#0065#,
           16#0072#, 16#0061#, 16#0063#, 16#0074#,
           16#0069#, 16#006F#, 16#006E#,
           others => 16#0000#),
         others => <>);

   --  "self_part_with_port"

   MS_0C68 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 23,
         Unused   => 19,
         Length   => 19,
         Value    =>
          (16#0073#, 16#0065#, 16#006C#, 16#0066#,
           16#005F#, 16#0070#, 16#0061#, 16#0072#,
           16#0074#, 16#005F#, 16#0077#, 16#0069#,
           16#0074#, 16#0068#, 16#005F#, 16#0070#,
           16#006F#, 16#0072#, 16#0074#,
           others => 16#0000#),
         others => <>);

   --  "The InteractionConstraint with minint and maxint only apply when attached to an InteractionOperand where the interactionOperator is loop."

   MS_0C69 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 143,
         Unused   => 137,
         Length   => 137,
         Value    =>
          (16#0054#, 16#0068#, 16#0065#, 16#0020#,
           16#0049#, 16#006E#, 16#0074#, 16#0065#,
           16#0072#, 16#0061#, 16#0063#, 16#0074#,
           16#0069#, 16#006F#, 16#006E#, 16#0043#,
           16#006F#, 16#006E#, 16#0073#, 16#0074#,
           16#0072#, 16#0061#, 16#0069#, 16#006E#,
           16#0074#, 16#0020#, 16#0077#, 16#0069#,
           16#0074#, 16#0068#, 16#0020#, 16#006D#,
           16#0069#, 16#006E#, 16#0069#, 16#006E#,
           16#0074#, 16#0020#, 16#0061#, 16#006E#,
           16#0064#, 16#0020#, 16#006D#, 16#0061#,
           16#0078#, 16#0069#, 16#006E#, 16#0074#,
           16#0020#, 16#006F#, 16#006E#, 16#006C#,
           16#0079#, 16#0020#, 16#0061#, 16#0070#,
           16#0070#, 16#006C#, 16#0079#, 16#0020#,
           16#0077#, 16#0068#, 16#0065#, 16#006E#,
           16#0020#, 16#0061#, 16#0074#, 16#0074#,
           16#0061#, 16#0063#, 16#0068#, 16#0065#,
           16#0064#, 16#0020#, 16#0074#, 16#006F#,
           16#0020#, 16#0061#, 16#006E#, 16#0020#,
           16#0049#, 16#006E#, 16#0074#, 16#0065#,
           16#0072#, 16#0061#, 16#0063#, 16#0074#,
           16#0069#, 16#006F#, 16#006E#, 16#004F#,
           16#0070#, 16#0065#, 16#0072#, 16#0061#,
           16#006E#, 16#0064#, 16#0020#, 16#0077#,
           16#0068#, 16#0065#, 16#0072#, 16#0065#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#0069#, 16#006E#, 16#0074#,
           16#0065#, 16#0072#, 16#0061#, 16#0063#,
           16#0074#, 16#0069#, 16#006F#, 16#006E#,
           16#004F#, 16#0070#, 16#0065#, 16#0072#,
           16#0061#, 16#0074#, 16#006F#, 16#0072#,
           16#0020#, 16#0069#, 16#0073#, 16#0020#,
           16#006C#, 16#006F#, 16#006F#, 16#0070#,
           16#002E#,
           others => 16#0000#),
         others => <>);

   --  "References a list of parameters to the behavior which describes the order and type of arguments that can be given when the behavior is invoked and of the values which will be returned when the behavior completes its execution."

   MS_0C6A : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 239,
         Unused   => 226,
         Length   => 226,
         Value    =>
          (16#0052#, 16#0065#, 16#0066#, 16#0065#,
           16#0072#, 16#0065#, 16#006E#, 16#0063#,
           16#0065#, 16#0073#, 16#0020#, 16#0061#,
           16#0020#, 16#006C#, 16#0069#, 16#0073#,
           16#0074#, 16#0020#, 16#006F#, 16#0066#,
           16#0020#, 16#0070#, 16#0061#, 16#0072#,
           16#0061#, 16#006D#, 16#0065#, 16#0074#,
           16#0065#, 16#0072#, 16#0073#, 16#0020#,
           16#0074#, 16#006F#, 16#0020#, 16#0074#,
           16#0068#, 16#0065#, 16#0020#, 16#0062#,
           16#0065#, 16#0068#, 16#0061#, 16#0076#,
           16#0069#, 16#006F#, 16#0072#, 16#0020#,
           16#0077#, 16#0068#, 16#0069#, 16#0063#,
           16#0068#, 16#0020#, 16#0064#, 16#0065#,
           16#0073#, 16#0063#, 16#0072#, 16#0069#,
           16#0062#, 16#0065#, 16#0073#, 16#0020#,
           16#0074#, 16#0068#, 16#0065#, 16#0020#,
           16#006F#, 16#0072#, 16#0064#, 16#0065#,
           16#0072#, 16#0020#, 16#0061#, 16#006E#,
           16#0064#, 16#0020#, 16#0074#, 16#0079#,
           16#0070#, 16#0065#, 16#0020#, 16#006F#,
           16#0066#, 16#0020#, 16#0061#, 16#0072#,
           16#0067#, 16#0075#, 16#006D#, 16#0065#,
           16#006E#, 16#0074#, 16#0073#, 16#0020#,
           16#0074#, 16#0068#, 16#0061#, 16#0074#,
           16#0020#, 16#0063#, 16#0061#, 16#006E#,
           16#0020#, 16#0062#, 16#0065#, 16#0020#,
           16#0067#, 16#0069#, 16#0076#, 16#0065#,
           16#006E#, 16#0020#, 16#0077#, 16#0068#,
           16#0065#, 16#006E#, 16#0020#, 16#0074#,
           16#0068#, 16#0065#, 16#0020#, 16#0062#,
           16#0065#, 16#0068#, 16#0061#, 16#0076#,
           16#0069#, 16#006F#, 16#0072#, 16#0020#,
           16#0069#, 16#0073#, 16#0020#, 16#0069#,
           16#006E#, 16#0076#, 16#006F#, 16#006B#,
           16#0065#, 16#0064#, 16#0020#, 16#0061#,
           16#006E#, 16#0064#, 16#0020#, 16#006F#,
           16#0066#, 16#0020#, 16#0074#, 16#0068#,
           16#0065#, 16#0020#, 16#0076#, 16#0061#,
           16#006C#, 16#0075#, 16#0065#, 16#0073#,
           16#0020#, 16#0077#, 16#0068#, 16#0069#,
           16#0063#, 16#0068#, 16#0020#, 16#0077#,
           16#0069#, 16#006C#, 16#006C#, 16#0020#,
           16#0062#, 16#0065#, 16#0020#, 16#0072#,
           16#0065#, 16#0074#, 16#0075#, 16#0072#,
           16#006E#, 16#0065#, 16#0064#, 16#0020#,
           16#0077#, 16#0068#, 16#0065#, 16#006E#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#0062#, 16#0065#, 16#0068#,
           16#0061#, 16#0076#, 16#0069#, 16#006F#,
           16#0072#, 16#0020#, 16#0063#, 16#006F#,
           16#006D#, 16#0070#, 16#006C#, 16#0065#,
           16#0074#, 16#0065#, 16#0073#, 16#0020#,
           16#0069#, 16#0074#, 16#0073#, 16#0020#,
           16#0065#, 16#0078#, 16#0065#, 16#0063#,
           16#0075#, 16#0074#, 16#0069#, 16#006F#,
           16#006E#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "If the trigger events are all TimeEvents, there is exactly one output pin."

   MS_0C6B : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 79,
         Unused   => 74,
         Length   => 74,
         Value    =>
          (16#0049#, 16#0066#, 16#0020#, 16#0074#,
           16#0068#, 16#0065#, 16#0020#, 16#0074#,
           16#0072#, 16#0069#, 16#0067#, 16#0067#,
           16#0065#, 16#0072#, 16#0020#, 16#0065#,
           16#0076#, 16#0065#, 16#006E#, 16#0074#,
           16#0073#, 16#0020#, 16#0061#, 16#0072#,
           16#0065#, 16#0020#, 16#0061#, 16#006C#,
           16#006C#, 16#0020#, 16#0054#, 16#0069#,
           16#006D#, 16#0065#, 16#0045#, 16#0076#,
           16#0065#, 16#006E#, 16#0074#, 16#0073#,
           16#002C#, 16#0020#, 16#0074#, 16#0068#,
           16#0065#, 16#0072#, 16#0065#, 16#0020#,
           16#0069#, 16#0073#, 16#0020#, 16#0065#,
           16#0078#, 16#0061#, 16#0063#, 16#0074#,
           16#006C#, 16#0079#, 16#0020#, 16#006F#,
           16#006E#, 16#0065#, 16#0020#, 16#006F#,
           16#0075#, 16#0074#, 16#0070#, 16#0075#,
           16#0074#, 16#0020#, 16#0070#, 16#0069#,
           16#006E#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "The element that is owned by this template parameter for the purpose of providing a default."

   MS_0C6C : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 95,
         Unused   => 92,
         Length   => 92,
         Value    =>
          (16#0054#, 16#0068#, 16#0065#, 16#0020#,
           16#0065#, 16#006C#, 16#0065#, 16#006D#,
           16#0065#, 16#006E#, 16#0074#, 16#0020#,
           16#0074#, 16#0068#, 16#0061#, 16#0074#,
           16#0020#, 16#0069#, 16#0073#, 16#0020#,
           16#006F#, 16#0077#, 16#006E#, 16#0065#,
           16#0064#, 16#0020#, 16#0062#, 16#0079#,
           16#0020#, 16#0074#, 16#0068#, 16#0069#,
           16#0073#, 16#0020#, 16#0074#, 16#0065#,
           16#006D#, 16#0070#, 16#006C#, 16#0061#,
           16#0074#, 16#0065#, 16#0020#, 16#0070#,
           16#0061#, 16#0072#, 16#0061#, 16#006D#,
           16#0065#, 16#0074#, 16#0065#, 16#0072#,
           16#0020#, 16#0066#, 16#006F#, 16#0072#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#0070#, 16#0075#, 16#0072#,
           16#0070#, 16#006F#, 16#0073#, 16#0065#,
           16#0020#, 16#006F#, 16#0066#, 16#0020#,
           16#0070#, 16#0072#, 16#006F#, 16#0076#,
           16#0069#, 16#0064#, 16#0069#, 16#006E#,
           16#0067#, 16#0020#, 16#0061#, 16#0020#,
           16#0064#, 16#0065#, 16#0066#, 16#0061#,
           16#0075#, 16#006C#, 16#0074#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "inActivity"

   MS_0C6D : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 15,
         Unused   => 10,
         Length   => 10,
         Value    =>
          (16#0069#, 16#006E#, 16#0041#, 16#0063#,
           16#0074#, 16#0069#, 16#0076#, 16#0069#,
           16#0074#, 16#0079#,
           others => 16#0000#),
         others => <>);

   --  "Specifies the way that the provided and required interfaces are derived from the Portâs Type. The default value is false."

   MS_0C6E : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 127,
         Unused   => 121,
         Length   => 121,
         Value    =>
          (16#0053#, 16#0070#, 16#0065#, 16#0063#,
           16#0069#, 16#0066#, 16#0069#, 16#0065#,
           16#0073#, 16#0020#, 16#0074#, 16#0068#,
           16#0065#, 16#0020#, 16#0077#, 16#0061#,
           16#0079#, 16#0020#, 16#0074#, 16#0068#,
           16#0061#, 16#0074#, 16#0020#, 16#0074#,
           16#0068#, 16#0065#, 16#0020#, 16#0070#,
           16#0072#, 16#006F#, 16#0076#, 16#0069#,
           16#0064#, 16#0065#, 16#0064#, 16#0020#,
           16#0061#, 16#006E#, 16#0064#, 16#0020#,
           16#0072#, 16#0065#, 16#0071#, 16#0075#,
           16#0069#, 16#0072#, 16#0065#, 16#0064#,
           16#0020#, 16#0069#, 16#006E#, 16#0074#,
           16#0065#, 16#0072#, 16#0066#, 16#0061#,
           16#0063#, 16#0065#, 16#0073#, 16#0020#,
           16#0061#, 16#0072#, 16#0065#, 16#0020#,
           16#0064#, 16#0065#, 16#0072#, 16#0069#,
           16#0076#, 16#0065#, 16#0064#, 16#0020#,
           16#0066#, 16#0072#, 16#006F#, 16#006D#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#0050#, 16#006F#, 16#0072#,
           16#0074#, 16#2019#, 16#0073#, 16#0020#,
           16#0054#, 16#0079#, 16#0070#, 16#0065#,
           16#002E#, 16#0020#, 16#0054#, 16#0068#,
           16#0065#, 16#0020#, 16#0064#, 16#0065#,
           16#0066#, 16#0061#, 16#0075#, 16#006C#,
           16#0074#, 16#0020#, 16#0076#, 16#0061#,
           16#006C#, 16#0075#, 16#0065#, 16#0020#,
           16#0069#, 16#0073#, 16#0020#, 16#0066#,
           16#0061#, 16#006C#, 16#0073#, 16#0065#,
           16#002E#,
           others => 16#0000#),
         others => <>);

   --  "The general ordering relationships contained in this fragment."

   MS_0C6F : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 63,
         Unused   => 62,
         Length   => 62,
         Value    =>
          (16#0054#, 16#0068#, 16#0065#, 16#0020#,
           16#0067#, 16#0065#, 16#006E#, 16#0065#,
           16#0072#, 16#0061#, 16#006C#, 16#0020#,
           16#006F#, 16#0072#, 16#0064#, 16#0065#,
           16#0072#, 16#0069#, 16#006E#, 16#0067#,
           16#0020#, 16#0072#, 16#0065#, 16#006C#,
           16#0061#, 16#0074#, 16#0069#, 16#006F#,
           16#006E#, 16#0073#, 16#0068#, 16#0069#,
           16#0070#, 16#0073#, 16#0020#, 16#0063#,
           16#006F#, 16#006E#, 16#0074#, 16#0061#,
           16#0069#, 16#006E#, 16#0065#, 16#0064#,
           16#0020#, 16#0069#, 16#006E#, 16#0020#,
           16#0074#, 16#0068#, 16#0069#, 16#0073#,
           16#0020#, 16#0066#, 16#0072#, 16#0061#,
           16#0067#, 16#006D#, 16#0065#, 16#006E#,
           16#0074#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "transformation_behaviour"

   MS_0C70 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 31,
         Unused   => 24,
         Length   => 24,
         Value    =>
          (16#0074#, 16#0072#, 16#0061#, 16#006E#,
           16#0073#, 16#0066#, 16#006F#, 16#0072#,
           16#006D#, 16#0061#, 16#0074#, 16#0069#,
           16#006F#, 16#006E#, 16#005F#, 16#0062#,
           16#0065#, 16#0068#, 16#0061#, 16#0076#,
           16#0069#, 16#006F#, 16#0075#, 16#0072#,
           others => 16#0000#),
         others => <>);

   --  "powertype"

   MS_0C71 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 15,
         Unused   => 9,
         Length   => 9,
         Value    =>
          (16#0070#, 16#006F#, 16#0077#, 16#0065#,
           16#0072#, 16#0074#, 16#0079#, 16#0070#,
           16#0065#,
           others => 16#0000#),
         others => <>);

   --  "The groups of an activity have no supergroups."

   MS_0C72 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 47,
         Unused   => 46,
         Length   => 46,
         Value    =>
          (16#0054#, 16#0068#, 16#0065#, 16#0020#,
           16#0067#, 16#0072#, 16#006F#, 16#0075#,
           16#0070#, 16#0073#, 16#0020#, 16#006F#,
           16#0066#, 16#0020#, 16#0061#, 16#006E#,
           16#0020#, 16#0061#, 16#0063#, 16#0074#,
           16#0069#, 16#0076#, 16#0069#, 16#0074#,
           16#0079#, 16#0020#, 16#0068#, 16#0061#,
           16#0076#, 16#0065#, 16#0020#, 16#006E#,
           16#006F#, 16#0020#, 16#0073#, 16#0075#,
           16#0070#, 16#0065#, 16#0072#, 16#0067#,
           16#0072#, 16#006F#, 16#0075#, 16#0070#,
           16#0073#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "References the Profiles that are applied to a Package through this ProfileApplication."

   MS_0C73 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 95,
         Unused   => 86,
         Length   => 86,
         Value    =>
          (16#0052#, 16#0065#, 16#0066#, 16#0065#,
           16#0072#, 16#0065#, 16#006E#, 16#0063#,
           16#0065#, 16#0073#, 16#0020#, 16#0074#,
           16#0068#, 16#0065#, 16#0020#, 16#0050#,
           16#0072#, 16#006F#, 16#0066#, 16#0069#,
           16#006C#, 16#0065#, 16#0073#, 16#0020#,
           16#0074#, 16#0068#, 16#0061#, 16#0074#,
           16#0020#, 16#0061#, 16#0072#, 16#0065#,
           16#0020#, 16#0061#, 16#0070#, 16#0070#,
           16#006C#, 16#0069#, 16#0065#, 16#0064#,
           16#0020#, 16#0074#, 16#006F#, 16#0020#,
           16#0061#, 16#0020#, 16#0050#, 16#0061#,
           16#0063#, 16#006B#, 16#0061#, 16#0067#,
           16#0065#, 16#0020#, 16#0074#, 16#0068#,
           16#0072#, 16#006F#, 16#0075#, 16#0067#,
           16#0068#, 16#0020#, 16#0074#, 16#0068#,
           16#0069#, 16#0073#, 16#0020#, 16#0050#,
           16#0072#, 16#006F#, 16#0066#, 16#0069#,
           16#006C#, 16#0065#, 16#0041#, 16#0070#,
           16#0070#, 16#006C#, 16#0069#, 16#0063#,
           16#0061#, 16#0074#, 16#0069#, 16#006F#,
           16#006E#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "A read link object end action is an action that retrieves an end object from a link object."

   MS_0C74 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 95,
         Unused   => 91,
         Length   => 91,
         Value    =>
          (16#0041#, 16#0020#, 16#0072#, 16#0065#,
           16#0061#, 16#0064#, 16#0020#, 16#006C#,
           16#0069#, 16#006E#, 16#006B#, 16#0020#,
           16#006F#, 16#0062#, 16#006A#, 16#0065#,
           16#0063#, 16#0074#, 16#0020#, 16#0065#,
           16#006E#, 16#0064#, 16#0020#, 16#0061#,
           16#0063#, 16#0074#, 16#0069#, 16#006F#,
           16#006E#, 16#0020#, 16#0069#, 16#0073#,
           16#0020#, 16#0061#, 16#006E#, 16#0020#,
           16#0061#, 16#0063#, 16#0074#, 16#0069#,
           16#006F#, 16#006E#, 16#0020#, 16#0074#,
           16#0068#, 16#0061#, 16#0074#, 16#0020#,
           16#0072#, 16#0065#, 16#0074#, 16#0072#,
           16#0069#, 16#0065#, 16#0076#, 16#0065#,
           16#0073#, 16#0020#, 16#0061#, 16#006E#,
           16#0020#, 16#0065#, 16#006E#, 16#0064#,
           16#0020#, 16#006F#, 16#0062#, 16#006A#,
           16#0065#, 16#0063#, 16#0074#, 16#0020#,
           16#0066#, 16#0072#, 16#006F#, 16#006D#,
           16#0020#, 16#0061#, 16#0020#, 16#006C#,
           16#0069#, 16#006E#, 16#006B#, 16#0020#,
           16#006F#, 16#0062#, 16#006A#, 16#0065#,
           16#0063#, 16#0074#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "behavioredClassifier"

   MS_0C75 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 23,
         Unused   => 20,
         Length   => 20,
         Value    =>
          (16#0062#, 16#0065#, 16#0068#, 16#0061#,
           16#0076#, 16#0069#, 16#006F#, 16#0072#,
           16#0065#, 16#0064#, 16#0043#, 16#006C#,
           16#0061#, 16#0073#, 16#0073#, 16#0069#,
           16#0066#, 16#0069#, 16#0065#, 16#0072#,
           others => 16#0000#),
         others => <>);

   --  "A_include_includingCase"

   MS_0C76 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 31,
         Unused   => 23,
         Length   => 23,
         Value    =>
          (16#0041#, 16#005F#, 16#0069#, 16#006E#,
           16#0063#, 16#006C#, 16#0075#, 16#0064#,
           16#0065#, 16#005F#, 16#0069#, 16#006E#,
           16#0063#, 16#006C#, 16#0075#, 16#0064#,
           16#0069#, 16#006E#, 16#0067#, 16#0043#,
           16#0061#, 16#0073#, 16#0065#,
           others => 16#0000#),
         others => <>);

   --  "source_and_target"

   MS_0C77 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 23,
         Unused   => 17,
         Length   => 17,
         Value    =>
          (16#0073#, 16#006F#, 16#0075#, 16#0072#,
           16#0063#, 16#0065#, 16#005F#, 16#0061#,
           16#006E#, 16#0064#, 16#005F#, 16#0074#,
           16#0061#, 16#0072#, 16#0067#, 16#0065#,
           16#0074#,
           others => 16#0000#),
         others => <>);

   --  "The interactionOperator alt designates that the CombinedFragment represents a choice of behavior. At most one of the operands will be chosen. The chosen operand must have an explicit or implicit guard expression that evaluates to true at this point in the interaction. An implicit true guard is implied if the operand has no guard."

   MS_0C78 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 343,
         Unused   => 331,
         Length   => 331,
         Value    =>
          (16#0054#, 16#0068#, 16#0065#, 16#0020#,
           16#0069#, 16#006E#, 16#0074#, 16#0065#,
           16#0072#, 16#0061#, 16#0063#, 16#0074#,
           16#0069#, 16#006F#, 16#006E#, 16#004F#,
           16#0070#, 16#0065#, 16#0072#, 16#0061#,
           16#0074#, 16#006F#, 16#0072#, 16#0020#,
           16#0061#, 16#006C#, 16#0074#, 16#0020#,
           16#0064#, 16#0065#, 16#0073#, 16#0069#,
           16#0067#, 16#006E#, 16#0061#, 16#0074#,
           16#0065#, 16#0073#, 16#0020#, 16#0074#,
           16#0068#, 16#0061#, 16#0074#, 16#0020#,
           16#0074#, 16#0068#, 16#0065#, 16#0020#,
           16#0043#, 16#006F#, 16#006D#, 16#0062#,
           16#0069#, 16#006E#, 16#0065#, 16#0064#,
           16#0046#, 16#0072#, 16#0061#, 16#0067#,
           16#006D#, 16#0065#, 16#006E#, 16#0074#,
           16#0020#, 16#0072#, 16#0065#, 16#0070#,
           16#0072#, 16#0065#, 16#0073#, 16#0065#,
           16#006E#, 16#0074#, 16#0073#, 16#0020#,
           16#0061#, 16#0020#, 16#0063#, 16#0068#,
           16#006F#, 16#0069#, 16#0063#, 16#0065#,
           16#0020#, 16#006F#, 16#0066#, 16#0020#,
           16#0062#, 16#0065#, 16#0068#, 16#0061#,
           16#0076#, 16#0069#, 16#006F#, 16#0072#,
           16#002E#, 16#0020#, 16#0041#, 16#0074#,
           16#0020#, 16#006D#, 16#006F#, 16#0073#,
           16#0074#, 16#0020#, 16#006F#, 16#006E#,
           16#0065#, 16#0020#, 16#006F#, 16#0066#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#006F#, 16#0070#, 16#0065#,
           16#0072#, 16#0061#, 16#006E#, 16#0064#,
           16#0073#, 16#0020#, 16#0077#, 16#0069#,
           16#006C#, 16#006C#, 16#0020#, 16#0062#,
           16#0065#, 16#0020#, 16#0063#, 16#0068#,
           16#006F#, 16#0073#, 16#0065#, 16#006E#,
           16#002E#, 16#0020#, 16#0054#, 16#0068#,
           16#0065#, 16#0020#, 16#0063#, 16#0068#,
           16#006F#, 16#0073#, 16#0065#, 16#006E#,
           16#0020#, 16#006F#, 16#0070#, 16#0065#,
           16#0072#, 16#0061#, 16#006E#, 16#0064#,
           16#0020#, 16#006D#, 16#0075#, 16#0073#,
           16#0074#, 16#0020#, 16#0068#, 16#0061#,
           16#0076#, 16#0065#, 16#0020#, 16#0061#,
           16#006E#, 16#0020#, 16#0065#, 16#0078#,
           16#0070#, 16#006C#, 16#0069#, 16#0063#,
           16#0069#, 16#0074#, 16#0020#, 16#006F#,
           16#0072#, 16#0020#, 16#0069#, 16#006D#,
           16#0070#, 16#006C#, 16#0069#, 16#0063#,
           16#0069#, 16#0074#, 16#0020#, 16#0067#,
           16#0075#, 16#0061#, 16#0072#, 16#0064#,
           16#0020#, 16#0065#, 16#0078#, 16#0070#,
           16#0072#, 16#0065#, 16#0073#, 16#0073#,
           16#0069#, 16#006F#, 16#006E#, 16#0020#,
           16#0074#, 16#0068#, 16#0061#, 16#0074#,
           16#0020#, 16#0065#, 16#0076#, 16#0061#,
           16#006C#, 16#0075#, 16#0061#, 16#0074#,
           16#0065#, 16#0073#, 16#0020#, 16#0074#,
           16#006F#, 16#0020#, 16#0074#, 16#0072#,
           16#0075#, 16#0065#, 16#0020#, 16#0061#,
           16#0074#, 16#0020#, 16#0074#, 16#0068#,
           16#0069#, 16#0073#, 16#0020#, 16#0070#,
           16#006F#, 16#0069#, 16#006E#, 16#0074#,
           16#0020#, 16#0069#, 16#006E#, 16#0020#,
           16#0074#, 16#0068#, 16#0065#, 16#0020#,
           16#0069#, 16#006E#, 16#0074#, 16#0065#,
           16#0072#, 16#0061#, 16#0063#, 16#0074#,
           16#0069#, 16#006F#, 16#006E#, 16#002E#,
           16#0020#, 16#0041#, 16#006E#, 16#0020#,
           16#0069#, 16#006D#, 16#0070#, 16#006C#,
           16#0069#, 16#0063#, 16#0069#, 16#0074#,
           16#0020#, 16#0074#, 16#0072#, 16#0075#,
           16#0065#, 16#0020#, 16#0067#, 16#0075#,
           16#0061#, 16#0072#, 16#0064#, 16#0020#,
           16#0069#, 16#0073#, 16#0020#, 16#0069#,
           16#006D#, 16#0070#, 16#006C#, 16#0069#,
           16#0065#, 16#0064#, 16#0020#, 16#0069#,
           16#0066#, 16#0020#, 16#0074#, 16#0068#,
           16#0065#, 16#0020#, 16#006F#, 16#0070#,
           16#0065#, 16#0072#, 16#0061#, 16#006E#,
           16#0064#, 16#0020#, 16#0068#, 16#0061#,
           16#0073#, 16#0020#, 16#006E#, 16#006F#,
           16#0020#, 16#0067#, 16#0075#, 16#0061#,
           16#0072#, 16#0064#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "external"

   MS_0C79 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 15,
         Unused   => 8,
         Length   => 8,
         Value    =>
          (16#0065#, 16#0078#, 16#0074#, 16#0065#,
           16#0072#, 16#006E#, 16#0061#, 16#006C#,
           others => 16#0000#),
         others => <>);

   --  "FIFO"

   MS_0C7A : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 7,
         Unused   => 4,
         Length   => 4,
         Value    =>
          (16#0046#, 16#0049#, 16#0046#, 16#004F#,
           others => 16#0000#),
         others => <>);

   --  "The query isRedefinitionContextValid() specifies whether the redefinition contexts of this RedefinableElement are properly related to the redefinition contexts of the specified RedefinableElement to allow this element to redefine the other. By default at least one of the redefinition contexts of this element must be a specialization of at least one of the redefinition contexts of the specified element."

   MS_0C7B : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 423,
         Unused   => 405,
         Length   => 405,
         Value    =>
          (16#0054#, 16#0068#, 16#0065#, 16#0020#,
           16#0071#, 16#0075#, 16#0065#, 16#0072#,
           16#0079#, 16#0020#, 16#0069#, 16#0073#,
           16#0052#, 16#0065#, 16#0064#, 16#0065#,
           16#0066#, 16#0069#, 16#006E#, 16#0069#,
           16#0074#, 16#0069#, 16#006F#, 16#006E#,
           16#0043#, 16#006F#, 16#006E#, 16#0074#,
           16#0065#, 16#0078#, 16#0074#, 16#0056#,
           16#0061#, 16#006C#, 16#0069#, 16#0064#,
           16#0028#, 16#0029#, 16#0020#, 16#0073#,
           16#0070#, 16#0065#, 16#0063#, 16#0069#,
           16#0066#, 16#0069#, 16#0065#, 16#0073#,
           16#0020#, 16#0077#, 16#0068#, 16#0065#,
           16#0074#, 16#0068#, 16#0065#, 16#0072#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#0072#, 16#0065#, 16#0064#,
           16#0065#, 16#0066#, 16#0069#, 16#006E#,
           16#0069#, 16#0074#, 16#0069#, 16#006F#,
           16#006E#, 16#0020#, 16#0063#, 16#006F#,
           16#006E#, 16#0074#, 16#0065#, 16#0078#,
           16#0074#, 16#0073#, 16#0020#, 16#006F#,
           16#0066#, 16#0020#, 16#0074#, 16#0068#,
           16#0069#, 16#0073#, 16#0020#, 16#0052#,
           16#0065#, 16#0064#, 16#0065#, 16#0066#,
           16#0069#, 16#006E#, 16#0061#, 16#0062#,
           16#006C#, 16#0065#, 16#0045#, 16#006C#,
           16#0065#, 16#006D#, 16#0065#, 16#006E#,
           16#0074#, 16#0020#, 16#0061#, 16#0072#,
           16#0065#, 16#0020#, 16#0070#, 16#0072#,
           16#006F#, 16#0070#, 16#0065#, 16#0072#,
           16#006C#, 16#0079#, 16#0020#, 16#0072#,
           16#0065#, 16#006C#, 16#0061#, 16#0074#,
           16#0065#, 16#0064#, 16#0020#, 16#0074#,
           16#006F#, 16#0020#, 16#0074#, 16#0068#,
           16#0065#, 16#0020#, 16#0072#, 16#0065#,
           16#0064#, 16#0065#, 16#0066#, 16#0069#,
           16#006E#, 16#0069#, 16#0074#, 16#0069#,
           16#006F#, 16#006E#, 16#0020#, 16#0063#,
           16#006F#, 16#006E#, 16#0074#, 16#0065#,
           16#0078#, 16#0074#, 16#0073#, 16#0020#,
           16#006F#, 16#0066#, 16#0020#, 16#0074#,
           16#0068#, 16#0065#, 16#0020#, 16#0073#,
           16#0070#, 16#0065#, 16#0063#, 16#0069#,
           16#0066#, 16#0069#, 16#0065#, 16#0064#,
           16#0020#, 16#0052#, 16#0065#, 16#0064#,
           16#0065#, 16#0066#, 16#0069#, 16#006E#,
           16#0061#, 16#0062#, 16#006C#, 16#0065#,
           16#0045#, 16#006C#, 16#0065#, 16#006D#,
           16#0065#, 16#006E#, 16#0074#, 16#0020#,
           16#0074#, 16#006F#, 16#0020#, 16#0061#,
           16#006C#, 16#006C#, 16#006F#, 16#0077#,
           16#0020#, 16#0074#, 16#0068#, 16#0069#,
           16#0073#, 16#0020#, 16#0065#, 16#006C#,
           16#0065#, 16#006D#, 16#0065#, 16#006E#,
           16#0074#, 16#0020#, 16#0074#, 16#006F#,
           16#0020#, 16#0072#, 16#0065#, 16#0064#,
           16#0065#, 16#0066#, 16#0069#, 16#006E#,
           16#0065#, 16#0020#, 16#0074#, 16#0068#,
           16#0065#, 16#0020#, 16#006F#, 16#0074#,
           16#0068#, 16#0065#, 16#0072#, 16#002E#,
           16#0020#, 16#0042#, 16#0079#, 16#0020#,
           16#0064#, 16#0065#, 16#0066#, 16#0061#,
           16#0075#, 16#006C#, 16#0074#, 16#0020#,
           16#0061#, 16#0074#, 16#0020#, 16#006C#,
           16#0065#, 16#0061#, 16#0073#, 16#0074#,
           16#0020#, 16#006F#, 16#006E#, 16#0065#,
           16#0020#, 16#006F#, 16#0066#, 16#0020#,
           16#0074#, 16#0068#, 16#0065#, 16#0020#,
           16#0072#, 16#0065#, 16#0064#, 16#0065#,
           16#0066#, 16#0069#, 16#006E#, 16#0069#,
           16#0074#, 16#0069#, 16#006F#, 16#006E#,
           16#0020#, 16#0063#, 16#006F#, 16#006E#,
           16#0074#, 16#0065#, 16#0078#, 16#0074#,
           16#0073#, 16#0020#, 16#006F#, 16#0066#,
           16#0020#, 16#0074#, 16#0068#, 16#0069#,
           16#0073#, 16#0020#, 16#0065#, 16#006C#,
           16#0065#, 16#006D#, 16#0065#, 16#006E#,
           16#0074#, 16#0020#, 16#006D#, 16#0075#,
           16#0073#, 16#0074#, 16#0020#, 16#0062#,
           16#0065#, 16#0020#, 16#0061#, 16#0020#,
           16#0073#, 16#0070#, 16#0065#, 16#0063#,
           16#0069#, 16#0061#, 16#006C#, 16#0069#,
           16#007A#, 16#0061#, 16#0074#, 16#0069#,
           16#006F#, 16#006E#, 16#0020#, 16#006F#,
           16#0066#, 16#0020#, 16#0061#, 16#0074#,
           16#0020#, 16#006C#, 16#0065#, 16#0061#,
           16#0073#, 16#0074#, 16#0020#, 16#006F#,
           16#006E#, 16#0065#, 16#0020#, 16#006F#,
           16#0066#, 16#0020#, 16#0074#, 16#0068#,
           16#0065#, 16#0020#, 16#0072#, 16#0065#,
           16#0064#, 16#0065#, 16#0066#, 16#0069#,
           16#006E#, 16#0069#, 16#0074#, 16#0069#,
           16#006F#, 16#006E#, 16#0020#, 16#0063#,
           16#006F#, 16#006E#, 16#0074#, 16#0065#,
           16#0078#, 16#0074#, 16#0073#, 16#0020#,
           16#006F#, 16#0066#, 16#0020#, 16#0074#,
           16#0068#, 16#0065#, 16#0020#, 16#0073#,
           16#0070#, 16#0065#, 16#0063#, 16#0069#,
           16#0066#, 16#0069#, 16#0065#, 16#0064#,
           16#0020#, 16#0065#, 16#006C#, 16#0065#,
           16#006D#, 16#0065#, 16#006E#, 16#0074#,
           16#002E#,
           others => 16#0000#),
         others => <>);

   --  "A templateable element is an element that can optionally be defined as a template and bound to other templates."

   MS_0C7C : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 119,
         Unused   => 111,
         Length   => 111,
         Value    =>
          (16#0041#, 16#0020#, 16#0074#, 16#0065#,
           16#006D#, 16#0070#, 16#006C#, 16#0061#,
           16#0074#, 16#0065#, 16#0061#, 16#0062#,
           16#006C#, 16#0065#, 16#0020#, 16#0065#,
           16#006C#, 16#0065#, 16#006D#, 16#0065#,
           16#006E#, 16#0074#, 16#0020#, 16#0069#,
           16#0073#, 16#0020#, 16#0061#, 16#006E#,
           16#0020#, 16#0065#, 16#006C#, 16#0065#,
           16#006D#, 16#0065#, 16#006E#, 16#0074#,
           16#0020#, 16#0074#, 16#0068#, 16#0061#,
           16#0074#, 16#0020#, 16#0063#, 16#0061#,
           16#006E#, 16#0020#, 16#006F#, 16#0070#,
           16#0074#, 16#0069#, 16#006F#, 16#006E#,
           16#0061#, 16#006C#, 16#006C#, 16#0079#,
           16#0020#, 16#0062#, 16#0065#, 16#0020#,
           16#0064#, 16#0065#, 16#0066#, 16#0069#,
           16#006E#, 16#0065#, 16#0064#, 16#0020#,
           16#0061#, 16#0073#, 16#0020#, 16#0061#,
           16#0020#, 16#0074#, 16#0065#, 16#006D#,
           16#0070#, 16#006C#, 16#0061#, 16#0074#,
           16#0065#, 16#0020#, 16#0061#, 16#006E#,
           16#0064#, 16#0020#, 16#0062#, 16#006F#,
           16#0075#, 16#006E#, 16#0064#, 16#0020#,
           16#0074#, 16#006F#, 16#0020#, 16#006F#,
           16#0074#, 16#0068#, 16#0065#, 16#0072#,
           16#0020#, 16#0074#, 16#0065#, 16#006D#,
           16#0070#, 16#006C#, 16#0061#, 16#0074#,
           16#0065#, 16#0073#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "clause_no_predecessor"

   MS_0C7D : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 23,
         Unused   => 21,
         Length   => 21,
         Value    =>
          (16#0063#, 16#006C#, 16#0061#, 16#0075#,
           16#0073#, 16#0065#, 16#005F#, 16#006E#,
           16#006F#, 16#005F#, 16#0070#, 16#0072#,
           16#0065#, 16#0064#, 16#0065#, 16#0063#,
           16#0065#, 16#0073#, 16#0073#, 16#006F#,
           16#0072#,
           others => 16#0000#),
         others => <>);

   --  "A protocol state machine is always defined in the context of a classifier. It specifies which operations of the classifier can be called in which state and under which condition, thus specifying the allowed call sequences on the classifier's operations. A protocol state machine presents the possible and permitted transitions on the instances of its context classifier, together with the operations which carry the transitions. In this manner, an instance lifecycle can be created for a classifier, by specifying the order in which the operations can be activated and the states through which an instance progresses during its existence."

   MS_0C7E : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 663,
         Unused   => 638,
         Length   => 638,
         Value    =>
          (16#0041#, 16#0020#, 16#0070#, 16#0072#,
           16#006F#, 16#0074#, 16#006F#, 16#0063#,
           16#006F#, 16#006C#, 16#0020#, 16#0073#,
           16#0074#, 16#0061#, 16#0074#, 16#0065#,
           16#0020#, 16#006D#, 16#0061#, 16#0063#,
           16#0068#, 16#0069#, 16#006E#, 16#0065#,
           16#0020#, 16#0069#, 16#0073#, 16#0020#,
           16#0061#, 16#006C#, 16#0077#, 16#0061#,
           16#0079#, 16#0073#, 16#0020#, 16#0064#,
           16#0065#, 16#0066#, 16#0069#, 16#006E#,
           16#0065#, 16#0064#, 16#0020#, 16#0069#,
           16#006E#, 16#0020#, 16#0074#, 16#0068#,
           16#0065#, 16#0020#, 16#0063#, 16#006F#,
           16#006E#, 16#0074#, 16#0065#, 16#0078#,
           16#0074#, 16#0020#, 16#006F#, 16#0066#,
           16#0020#, 16#0061#, 16#0020#, 16#0063#,
           16#006C#, 16#0061#, 16#0073#, 16#0073#,
           16#0069#, 16#0066#, 16#0069#, 16#0065#,
           16#0072#, 16#002E#, 16#0020#, 16#0049#,
           16#0074#, 16#0020#, 16#0073#, 16#0070#,
           16#0065#, 16#0063#, 16#0069#, 16#0066#,
           16#0069#, 16#0065#, 16#0073#, 16#0020#,
           16#0077#, 16#0068#, 16#0069#, 16#0063#,
           16#0068#, 16#0020#, 16#006F#, 16#0070#,
           16#0065#, 16#0072#, 16#0061#, 16#0074#,
           16#0069#, 16#006F#, 16#006E#, 16#0073#,
           16#0020#, 16#006F#, 16#0066#, 16#0020#,
           16#0074#, 16#0068#, 16#0065#, 16#0020#,
           16#0063#, 16#006C#, 16#0061#, 16#0073#,
           16#0073#, 16#0069#, 16#0066#, 16#0069#,
           16#0065#, 16#0072#, 16#0020#, 16#0063#,
           16#0061#, 16#006E#, 16#0020#, 16#0062#,
           16#0065#, 16#0020#, 16#0063#, 16#0061#,
           16#006C#, 16#006C#, 16#0065#, 16#0064#,
           16#0020#, 16#0069#, 16#006E#, 16#0020#,
           16#0077#, 16#0068#, 16#0069#, 16#0063#,
           16#0068#, 16#0020#, 16#0073#, 16#0074#,
           16#0061#, 16#0074#, 16#0065#, 16#0020#,
           16#0061#, 16#006E#, 16#0064#, 16#0020#,
           16#0075#, 16#006E#, 16#0064#, 16#0065#,
           16#0072#, 16#0020#, 16#0077#, 16#0068#,
           16#0069#, 16#0063#, 16#0068#, 16#0020#,
           16#0063#, 16#006F#, 16#006E#, 16#0064#,
           16#0069#, 16#0074#, 16#0069#, 16#006F#,
           16#006E#, 16#002C#, 16#0020#, 16#0074#,
           16#0068#, 16#0075#, 16#0073#, 16#0020#,
           16#0073#, 16#0070#, 16#0065#, 16#0063#,
           16#0069#, 16#0066#, 16#0079#, 16#0069#,
           16#006E#, 16#0067#, 16#0020#, 16#0074#,
           16#0068#, 16#0065#, 16#0020#, 16#0061#,
           16#006C#, 16#006C#, 16#006F#, 16#0077#,
           16#0065#, 16#0064#, 16#0020#, 16#0063#,
           16#0061#, 16#006C#, 16#006C#, 16#0020#,
           16#0073#, 16#0065#, 16#0071#, 16#0075#,
           16#0065#, 16#006E#, 16#0063#, 16#0065#,
           16#0073#, 16#0020#, 16#006F#, 16#006E#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#0063#, 16#006C#, 16#0061#,
           16#0073#, 16#0073#, 16#0069#, 16#0066#,
           16#0069#, 16#0065#, 16#0072#, 16#0027#,
           16#0073#, 16#0020#, 16#006F#, 16#0070#,
           16#0065#, 16#0072#, 16#0061#, 16#0074#,
           16#0069#, 16#006F#, 16#006E#, 16#0073#,
           16#002E#, 16#0020#, 16#0041#, 16#0020#,
           16#0070#, 16#0072#, 16#006F#, 16#0074#,
           16#006F#, 16#0063#, 16#006F#, 16#006C#,
           16#0020#, 16#0073#, 16#0074#, 16#0061#,
           16#0074#, 16#0065#, 16#0020#, 16#006D#,
           16#0061#, 16#0063#, 16#0068#, 16#0069#,
           16#006E#, 16#0065#, 16#0020#, 16#0070#,
           16#0072#, 16#0065#, 16#0073#, 16#0065#,
           16#006E#, 16#0074#, 16#0073#, 16#0020#,
           16#0074#, 16#0068#, 16#0065#, 16#0020#,
           16#0070#, 16#006F#, 16#0073#, 16#0073#,
           16#0069#, 16#0062#, 16#006C#, 16#0065#,
           16#0020#, 16#0061#, 16#006E#, 16#0064#,
           16#0020#, 16#0070#, 16#0065#, 16#0072#,
           16#006D#, 16#0069#, 16#0074#, 16#0074#,
           16#0065#, 16#0064#, 16#0020#, 16#0074#,
           16#0072#, 16#0061#, 16#006E#, 16#0073#,
           16#0069#, 16#0074#, 16#0069#, 16#006F#,
           16#006E#, 16#0073#, 16#0020#, 16#006F#,
           16#006E#, 16#0020#, 16#0074#, 16#0068#,
           16#0065#, 16#0020#, 16#0069#, 16#006E#,
           16#0073#, 16#0074#, 16#0061#, 16#006E#,
           16#0063#, 16#0065#, 16#0073#, 16#0020#,
           16#006F#, 16#0066#, 16#0020#, 16#0069#,
           16#0074#, 16#0073#, 16#0020#, 16#0063#,
           16#006F#, 16#006E#, 16#0074#, 16#0065#,
           16#0078#, 16#0074#, 16#0020#, 16#0063#,
           16#006C#, 16#0061#, 16#0073#, 16#0073#,
           16#0069#, 16#0066#, 16#0069#, 16#0065#,
           16#0072#, 16#002C#, 16#0020#, 16#0074#,
           16#006F#, 16#0067#, 16#0065#, 16#0074#,
           16#0068#, 16#0065#, 16#0072#, 16#0020#,
           16#0077#, 16#0069#, 16#0074#, 16#0068#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#006F#, 16#0070#, 16#0065#,
           16#0072#, 16#0061#, 16#0074#, 16#0069#,
           16#006F#, 16#006E#, 16#0073#, 16#0020#,
           16#0077#, 16#0068#, 16#0069#, 16#0063#,
           16#0068#, 16#0020#, 16#0063#, 16#0061#,
           16#0072#, 16#0072#, 16#0079#, 16#0020#,
           16#0074#, 16#0068#, 16#0065#, 16#0020#,
           16#0074#, 16#0072#, 16#0061#, 16#006E#,
           16#0073#, 16#0069#, 16#0074#, 16#0069#,
           16#006F#, 16#006E#, 16#0073#, 16#002E#,
           16#0020#, 16#0049#, 16#006E#, 16#0020#,
           16#0074#, 16#0068#, 16#0069#, 16#0073#,
           16#0020#, 16#006D#, 16#0061#, 16#006E#,
           16#006E#, 16#0065#, 16#0072#, 16#002C#,
           16#0020#, 16#0061#, 16#006E#, 16#0020#,
           16#0069#, 16#006E#, 16#0073#, 16#0074#,
           16#0061#, 16#006E#, 16#0063#, 16#0065#,
           16#0020#, 16#006C#, 16#0069#, 16#0066#,
           16#0065#, 16#0063#, 16#0079#, 16#0063#,
           16#006C#, 16#0065#, 16#0020#, 16#0063#,
           16#0061#, 16#006E#, 16#0020#, 16#0062#,
           16#0065#, 16#0020#, 16#0063#, 16#0072#,
           16#0065#, 16#0061#, 16#0074#, 16#0065#,
           16#0064#, 16#0020#, 16#0066#, 16#006F#,
           16#0072#, 16#0020#, 16#0061#, 16#0020#,
           16#0063#, 16#006C#, 16#0061#, 16#0073#,
           16#0073#, 16#0069#, 16#0066#, 16#0069#,
           16#0065#, 16#0072#, 16#002C#, 16#0020#,
           16#0062#, 16#0079#, 16#0020#, 16#0073#,
           16#0070#, 16#0065#, 16#0063#, 16#0069#,
           16#0066#, 16#0079#, 16#0069#, 16#006E#,
           16#0067#, 16#0020#, 16#0074#, 16#0068#,
           16#0065#, 16#0020#, 16#006F#, 16#0072#,
           16#0064#, 16#0065#, 16#0072#, 16#0020#,
           16#0069#, 16#006E#, 16#0020#, 16#0077#,
           16#0068#, 16#0069#, 16#0063#, 16#0068#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#006F#, 16#0070#, 16#0065#,
           16#0072#, 16#0061#, 16#0074#, 16#0069#,
           16#006F#, 16#006E#, 16#0073#, 16#0020#,
           16#0063#, 16#0061#, 16#006E#, 16#0020#,
           16#0062#, 16#0065#, 16#0020#, 16#0061#,
           16#0063#, 16#0074#, 16#0069#, 16#0076#,
           16#0061#, 16#0074#, 16#0065#, 16#0064#,
           16#0020#, 16#0061#, 16#006E#, 16#0064#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#0073#, 16#0074#, 16#0061#,
           16#0074#, 16#0065#, 16#0073#, 16#0020#,
           16#0074#, 16#0068#, 16#0072#, 16#006F#,
           16#0075#, 16#0067#, 16#0068#, 16#0020#,
           16#0077#, 16#0068#, 16#0069#, 16#0063#,
           16#0068#, 16#0020#, 16#0061#, 16#006E#,
           16#0020#, 16#0069#, 16#006E#, 16#0073#,
           16#0074#, 16#0061#, 16#006E#, 16#0063#,
           16#0065#, 16#0020#, 16#0070#, 16#0072#,
           16#006F#, 16#0067#, 16#0072#, 16#0065#,
           16#0073#, 16#0073#, 16#0065#, 16#0073#,
           16#0020#, 16#0064#, 16#0075#, 16#0072#,
           16#0069#, 16#006E#, 16#0067#, 16#0020#,
           16#0069#, 16#0074#, 16#0073#, 16#0020#,
           16#0065#, 16#0078#, 16#0069#, 16#0073#,
           16#0074#, 16#0065#, 16#006E#, 16#0063#,
           16#0065#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "The multiplicity of the object input pin is 1..1"

   MS_0C7F : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 55,
         Unused   => 48,
         Length   => 48,
         Value    =>
          (16#0054#, 16#0068#, 16#0065#, 16#0020#,
           16#006D#, 16#0075#, 16#006C#, 16#0074#,
           16#0069#, 16#0070#, 16#006C#, 16#0069#,
           16#0063#, 16#0069#, 16#0074#, 16#0079#,
           16#0020#, 16#006F#, 16#0066#, 16#0020#,
           16#0074#, 16#0068#, 16#0065#, 16#0020#,
           16#006F#, 16#0062#, 16#006A#, 16#0065#,
           16#0063#, 16#0074#, 16#0020#, 16#0069#,
           16#006E#, 16#0070#, 16#0075#, 16#0074#,
           16#0020#, 16#0070#, 16#0069#, 16#006E#,
           16#0020#, 16#0069#, 16#0073#, 16#0020#,
           16#0031#, 16#002E#, 16#002E#, 16#0031#,
           others => 16#0000#),
         others => <>);

   --  "TemplateSignature"

   MS_0C80 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 23,
         Unused   => 17,
         Length   => 17,
         Value    =>
          (16#0054#, 16#0065#, 16#006D#, 16#0070#,
           16#006C#, 16#0061#, 16#0074#, 16#0065#,
           16#0053#, 16#0069#, 16#0067#, 16#006E#,
           16#0061#, 16#0074#, 16#0075#, 16#0072#,
           16#0065#,
           others => 16#0000#),
         others => <>);

   --  "A_method_specification"

   MS_0C81 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 23,
         Unused   => 22,
         Length   => 22,
         Value    =>
          (16#0041#, 16#005F#, 16#006D#, 16#0065#,
           16#0074#, 16#0068#, 16#006F#, 16#0064#,
           16#005F#, 16#0073#, 16#0070#, 16#0065#,
           16#0063#, 16#0069#, 16#0066#, 16#0069#,
           16#0063#, 16#0061#, 16#0074#, 16#0069#,
           16#006F#, 16#006E#,
           others => 16#0000#),
         others => <>);

   --  "The query isConsistentWith() specifies, for any two RedefinableTemplateSignatures in a context in which redefinition is possible, whether redefinition would be logically consistent. A redefining template signature is always consistent with a redefined template signature, since redefinition only adds new formal parameters."

   MS_0C82 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 335,
         Unused   => 323,
         Length   => 323,
         Value    =>
          (16#0054#, 16#0068#, 16#0065#, 16#0020#,
           16#0071#, 16#0075#, 16#0065#, 16#0072#,
           16#0079#, 16#0020#, 16#0069#, 16#0073#,
           16#0043#, 16#006F#, 16#006E#, 16#0073#,
           16#0069#, 16#0073#, 16#0074#, 16#0065#,
           16#006E#, 16#0074#, 16#0057#, 16#0069#,
           16#0074#, 16#0068#, 16#0028#, 16#0029#,
           16#0020#, 16#0073#, 16#0070#, 16#0065#,
           16#0063#, 16#0069#, 16#0066#, 16#0069#,
           16#0065#, 16#0073#, 16#002C#, 16#0020#,
           16#0066#, 16#006F#, 16#0072#, 16#0020#,
           16#0061#, 16#006E#, 16#0079#, 16#0020#,
           16#0074#, 16#0077#, 16#006F#, 16#0020#,
           16#0052#, 16#0065#, 16#0064#, 16#0065#,
           16#0066#, 16#0069#, 16#006E#, 16#0061#,
           16#0062#, 16#006C#, 16#0065#, 16#0054#,
           16#0065#, 16#006D#, 16#0070#, 16#006C#,
           16#0061#, 16#0074#, 16#0065#, 16#0053#,
           16#0069#, 16#0067#, 16#006E#, 16#0061#,
           16#0074#, 16#0075#, 16#0072#, 16#0065#,
           16#0073#, 16#0020#, 16#0069#, 16#006E#,
           16#0020#, 16#0061#, 16#0020#, 16#0063#,
           16#006F#, 16#006E#, 16#0074#, 16#0065#,
           16#0078#, 16#0074#, 16#0020#, 16#0069#,
           16#006E#, 16#0020#, 16#0077#, 16#0068#,
           16#0069#, 16#0063#, 16#0068#, 16#0020#,
           16#0072#, 16#0065#, 16#0064#, 16#0065#,
           16#0066#, 16#0069#, 16#006E#, 16#0069#,
           16#0074#, 16#0069#, 16#006F#, 16#006E#,
           16#0020#, 16#0069#, 16#0073#, 16#0020#,
           16#0070#, 16#006F#, 16#0073#, 16#0073#,
           16#0069#, 16#0062#, 16#006C#, 16#0065#,
           16#002C#, 16#0020#, 16#0077#, 16#0068#,
           16#0065#, 16#0074#, 16#0068#, 16#0065#,
           16#0072#, 16#0020#, 16#0072#, 16#0065#,
           16#0064#, 16#0065#, 16#0066#, 16#0069#,
           16#006E#, 16#0069#, 16#0074#, 16#0069#,
           16#006F#, 16#006E#, 16#0020#, 16#0077#,
           16#006F#, 16#0075#, 16#006C#, 16#0064#,
           16#0020#, 16#0062#, 16#0065#, 16#0020#,
           16#006C#, 16#006F#, 16#0067#, 16#0069#,
           16#0063#, 16#0061#, 16#006C#, 16#006C#,
           16#0079#, 16#0020#, 16#0063#, 16#006F#,
           16#006E#, 16#0073#, 16#0069#, 16#0073#,
           16#0074#, 16#0065#, 16#006E#, 16#0074#,
           16#002E#, 16#0020#, 16#0041#, 16#0020#,
           16#0072#, 16#0065#, 16#0064#, 16#0065#,
           16#0066#, 16#0069#, 16#006E#, 16#0069#,
           16#006E#, 16#0067#, 16#0020#, 16#0074#,
           16#0065#, 16#006D#, 16#0070#, 16#006C#,
           16#0061#, 16#0074#, 16#0065#, 16#0020#,
           16#0073#, 16#0069#, 16#0067#, 16#006E#,
           16#0061#, 16#0074#, 16#0075#, 16#0072#,
           16#0065#, 16#0020#, 16#0069#, 16#0073#,
           16#0020#, 16#0061#, 16#006C#, 16#0077#,
           16#0061#, 16#0079#, 16#0073#, 16#0020#,
           16#0063#, 16#006F#, 16#006E#, 16#0073#,
           16#0069#, 16#0073#, 16#0074#, 16#0065#,
           16#006E#, 16#0074#, 16#0020#, 16#0077#,
           16#0069#, 16#0074#, 16#0068#, 16#0020#,
           16#0061#, 16#0020#, 16#0072#, 16#0065#,
           16#0064#, 16#0065#, 16#0066#, 16#0069#,
           16#006E#, 16#0065#, 16#0064#, 16#0020#,
           16#0074#, 16#0065#, 16#006D#, 16#0070#,
           16#006C#, 16#0061#, 16#0074#, 16#0065#,
           16#0020#, 16#0073#, 16#0069#, 16#0067#,
           16#006E#, 16#0061#, 16#0074#, 16#0075#,
           16#0072#, 16#0065#, 16#002C#, 16#0020#,
           16#0073#, 16#0069#, 16#006E#, 16#0063#,
           16#0065#, 16#0020#, 16#0072#, 16#0065#,
           16#0064#, 16#0065#, 16#0066#, 16#0069#,
           16#006E#, 16#0069#, 16#0074#, 16#0069#,
           16#006F#, 16#006E#, 16#0020#, 16#006F#,
           16#006E#, 16#006C#, 16#0079#, 16#0020#,
           16#0061#, 16#0064#, 16#0064#, 16#0073#,
           16#0020#, 16#006E#, 16#0065#, 16#0077#,
           16#0020#, 16#0066#, 16#006F#, 16#0072#,
           16#006D#, 16#0061#, 16#006C#, 16#0020#,
           16#0070#, 16#0061#, 16#0072#, 16#0061#,
           16#006D#, 16#0065#, 16#0074#, 16#0065#,
           16#0072#, 16#0073#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "An ordered list of extension points belonging to the extended use case, specifying where the respective behavioral fragments of the extending use case are to be inserted. The first fragment in the extending use case is associated with the first extension point in the list, the second fragment with the second point, and so on. (Note that, in most practical cases, the extending use case has just a single behavior fragment, so that the list of extension points is trivial.)"

   MS_0C83 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 495,
         Unused   => 474,
         Length   => 474,
         Value    =>
          (16#0041#, 16#006E#, 16#0020#, 16#006F#,
           16#0072#, 16#0064#, 16#0065#, 16#0072#,
           16#0065#, 16#0064#, 16#0020#, 16#006C#,
           16#0069#, 16#0073#, 16#0074#, 16#0020#,
           16#006F#, 16#0066#, 16#0020#, 16#0065#,
           16#0078#, 16#0074#, 16#0065#, 16#006E#,
           16#0073#, 16#0069#, 16#006F#, 16#006E#,
           16#0020#, 16#0070#, 16#006F#, 16#0069#,
           16#006E#, 16#0074#, 16#0073#, 16#0020#,
           16#0062#, 16#0065#, 16#006C#, 16#006F#,
           16#006E#, 16#0067#, 16#0069#, 16#006E#,
           16#0067#, 16#0020#, 16#0074#, 16#006F#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#0065#, 16#0078#, 16#0074#,
           16#0065#, 16#006E#, 16#0064#, 16#0065#,
           16#0064#, 16#0020#, 16#0075#, 16#0073#,
           16#0065#, 16#0020#, 16#0063#, 16#0061#,
           16#0073#, 16#0065#, 16#002C#, 16#0020#,
           16#0073#, 16#0070#, 16#0065#, 16#0063#,
           16#0069#, 16#0066#, 16#0079#, 16#0069#,
           16#006E#, 16#0067#, 16#0020#, 16#0077#,
           16#0068#, 16#0065#, 16#0072#, 16#0065#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#0072#, 16#0065#, 16#0073#,
           16#0070#, 16#0065#, 16#0063#, 16#0074#,
           16#0069#, 16#0076#, 16#0065#, 16#0020#,
           16#0062#, 16#0065#, 16#0068#, 16#0061#,
           16#0076#, 16#0069#, 16#006F#, 16#0072#,
           16#0061#, 16#006C#, 16#0020#, 16#0066#,
           16#0072#, 16#0061#, 16#0067#, 16#006D#,
           16#0065#, 16#006E#, 16#0074#, 16#0073#,
           16#0020#, 16#006F#, 16#0066#, 16#0020#,
           16#0074#, 16#0068#, 16#0065#, 16#0020#,
           16#0065#, 16#0078#, 16#0074#, 16#0065#,
           16#006E#, 16#0064#, 16#0069#, 16#006E#,
           16#0067#, 16#0020#, 16#0075#, 16#0073#,
           16#0065#, 16#0020#, 16#0063#, 16#0061#,
           16#0073#, 16#0065#, 16#0020#, 16#0061#,
           16#0072#, 16#0065#, 16#0020#, 16#0074#,
           16#006F#, 16#0020#, 16#0062#, 16#0065#,
           16#0020#, 16#0069#, 16#006E#, 16#0073#,
           16#0065#, 16#0072#, 16#0074#, 16#0065#,
           16#0064#, 16#002E#, 16#0020#, 16#0054#,
           16#0068#, 16#0065#, 16#0020#, 16#0066#,
           16#0069#, 16#0072#, 16#0073#, 16#0074#,
           16#0020#, 16#0066#, 16#0072#, 16#0061#,
           16#0067#, 16#006D#, 16#0065#, 16#006E#,
           16#0074#, 16#0020#, 16#0069#, 16#006E#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#0065#, 16#0078#, 16#0074#,
           16#0065#, 16#006E#, 16#0064#, 16#0069#,
           16#006E#, 16#0067#, 16#0020#, 16#0075#,
           16#0073#, 16#0065#, 16#0020#, 16#0063#,
           16#0061#, 16#0073#, 16#0065#, 16#0020#,
           16#0069#, 16#0073#, 16#0020#, 16#0061#,
           16#0073#, 16#0073#, 16#006F#, 16#0063#,
           16#0069#, 16#0061#, 16#0074#, 16#0065#,
           16#0064#, 16#0020#, 16#0077#, 16#0069#,
           16#0074#, 16#0068#, 16#0020#, 16#0074#,
           16#0068#, 16#0065#, 16#0020#, 16#0066#,
           16#0069#, 16#0072#, 16#0073#, 16#0074#,
           16#0020#, 16#0065#, 16#0078#, 16#0074#,
           16#0065#, 16#006E#, 16#0073#, 16#0069#,
           16#006F#, 16#006E#, 16#0020#, 16#0070#,
           16#006F#, 16#0069#, 16#006E#, 16#0074#,
           16#0020#, 16#0069#, 16#006E#, 16#0020#,
           16#0074#, 16#0068#, 16#0065#, 16#0020#,
           16#006C#, 16#0069#, 16#0073#, 16#0074#,
           16#002C#, 16#0020#, 16#0074#, 16#0068#,
           16#0065#, 16#0020#, 16#0073#, 16#0065#,
           16#0063#, 16#006F#, 16#006E#, 16#0064#,
           16#0020#, 16#0066#, 16#0072#, 16#0061#,
           16#0067#, 16#006D#, 16#0065#, 16#006E#,
           16#0074#, 16#0020#, 16#0077#, 16#0069#,
           16#0074#, 16#0068#, 16#0020#, 16#0074#,
           16#0068#, 16#0065#, 16#0020#, 16#0073#,
           16#0065#, 16#0063#, 16#006F#, 16#006E#,
           16#0064#, 16#0020#, 16#0070#, 16#006F#,
           16#0069#, 16#006E#, 16#0074#, 16#002C#,
           16#0020#, 16#0061#, 16#006E#, 16#0064#,
           16#0020#, 16#0073#, 16#006F#, 16#0020#,
           16#006F#, 16#006E#, 16#002E#, 16#0020#,
           16#0028#, 16#004E#, 16#006F#, 16#0074#,
           16#0065#, 16#0020#, 16#0074#, 16#0068#,
           16#0061#, 16#0074#, 16#002C#, 16#0020#,
           16#0069#, 16#006E#, 16#0020#, 16#006D#,
           16#006F#, 16#0073#, 16#0074#, 16#0020#,
           16#0070#, 16#0072#, 16#0061#, 16#0063#,
           16#0074#, 16#0069#, 16#0063#, 16#0061#,
           16#006C#, 16#0020#, 16#0063#, 16#0061#,
           16#0073#, 16#0065#, 16#0073#, 16#002C#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#0065#, 16#0078#, 16#0074#,
           16#0065#, 16#006E#, 16#0064#, 16#0069#,
           16#006E#, 16#0067#, 16#0020#, 16#0075#,
           16#0073#, 16#0065#, 16#0020#, 16#0063#,
           16#0061#, 16#0073#, 16#0065#, 16#0020#,
           16#0068#, 16#0061#, 16#0073#, 16#0020#,
           16#006A#, 16#0075#, 16#0073#, 16#0074#,
           16#0020#, 16#0061#, 16#0020#, 16#0073#,
           16#0069#, 16#006E#, 16#0067#, 16#006C#,
           16#0065#, 16#0020#, 16#0062#, 16#0065#,
           16#0068#, 16#0061#, 16#0076#, 16#0069#,
           16#006F#, 16#0072#, 16#0020#, 16#0066#,
           16#0072#, 16#0061#, 16#0067#, 16#006D#,
           16#0065#, 16#006E#, 16#0074#, 16#002C#,
           16#0020#, 16#0073#, 16#006F#, 16#0020#,
           16#0074#, 16#0068#, 16#0061#, 16#0074#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#006C#, 16#0069#, 16#0073#,
           16#0074#, 16#0020#, 16#006F#, 16#0066#,
           16#0020#, 16#0065#, 16#0078#, 16#0074#,
           16#0065#, 16#006E#, 16#0073#, 16#0069#,
           16#006F#, 16#006E#, 16#0020#, 16#0070#,
           16#006F#, 16#0069#, 16#006E#, 16#0074#,
           16#0073#, 16#0020#, 16#0069#, 16#0073#,
           16#0020#, 16#0074#, 16#0072#, 16#0069#,
           16#0076#, 16#0069#, 16#0061#, 16#006C#,
           16#002E#, 16#0029#,
           others => 16#0000#),
         others => <>);

   --  "A_precondition_preContext"

   MS_0C84 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 31,
         Unused   => 25,
         Length   => 25,
         Value    =>
          (16#0041#, 16#005F#, 16#0070#, 16#0072#,
           16#0065#, 16#0063#, 16#006F#, 16#006E#,
           16#0064#, 16#0069#, 16#0074#, 16#0069#,
           16#006F#, 16#006E#, 16#005F#, 16#0070#,
           16#0072#, 16#0065#, 16#0043#, 16#006F#,
           16#006E#, 16#0074#, 16#0065#, 16#0078#,
           16#0074#,
           others => 16#0000#),
         others => <>);

   --  "A feature declares a behavioral or structural characteristic of instances of classifiers."

   MS_0C85 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 95,
         Unused   => 89,
         Length   => 89,
         Value    =>
          (16#0041#, 16#0020#, 16#0066#, 16#0065#,
           16#0061#, 16#0074#, 16#0075#, 16#0072#,
           16#0065#, 16#0020#, 16#0064#, 16#0065#,
           16#0063#, 16#006C#, 16#0061#, 16#0072#,
           16#0065#, 16#0073#, 16#0020#, 16#0061#,
           16#0020#, 16#0062#, 16#0065#, 16#0068#,
           16#0061#, 16#0076#, 16#0069#, 16#006F#,
           16#0072#, 16#0061#, 16#006C#, 16#0020#,
           16#006F#, 16#0072#, 16#0020#, 16#0073#,
           16#0074#, 16#0072#, 16#0075#, 16#0063#,
           16#0074#, 16#0075#, 16#0072#, 16#0061#,
           16#006C#, 16#0020#, 16#0063#, 16#0068#,
           16#0061#, 16#0072#, 16#0061#, 16#0063#,
           16#0074#, 16#0065#, 16#0072#, 16#0069#,
           16#0073#, 16#0074#, 16#0069#, 16#0063#,
           16#0020#, 16#006F#, 16#0066#, 16#0020#,
           16#0069#, 16#006E#, 16#0073#, 16#0074#,
           16#0061#, 16#006E#, 16#0063#, 16#0065#,
           16#0073#, 16#0020#, 16#006F#, 16#0066#,
           16#0020#, 16#0063#, 16#006C#, 16#0061#,
           16#0073#, 16#0073#, 16#0069#, 16#0066#,
           16#0069#, 16#0065#, 16#0072#, 16#0073#,
           16#002E#,
           others => 16#0000#),
         others => <>);

   --  "deep_history_vertex"

   MS_0C86 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 23,
         Unused   => 19,
         Length   => 19,
         Value    =>
          (16#0064#, 16#0065#, 16#0065#, 16#0070#,
           16#005F#, 16#0068#, 16#0069#, 16#0073#,
           16#0074#, 16#006F#, 16#0072#, 16#0079#,
           16#005F#, 16#0076#, 16#0065#, 16#0072#,
           16#0074#, 16#0065#, 16#0078#,
           others => 16#0000#),
         others => <>);

   --  "Groups containing the edge."

   MS_0C87 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 31,
         Unused   => 27,
         Length   => 27,
         Value    =>
          (16#0047#, 16#0072#, 16#006F#, 16#0075#,
           16#0070#, 16#0073#, 16#0020#, 16#0063#,
           16#006F#, 16#006E#, 16#0074#, 16#0061#,
           16#0069#, 16#006E#, 16#0069#, 16#006E#,
           16#0067#, 16#0020#, 16#0074#, 16#0068#,
           16#0065#, 16#0020#, 16#0065#, 16#0064#,
           16#0067#, 16#0065#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "allIncludedUseCases"

   MS_0C88 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 23,
         Unused   => 19,
         Length   => 19,
         Value    =>
          (16#0061#, 16#006C#, 16#006C#, 16#0049#,
           16#006E#, 16#0063#, 16#006C#, 16#0075#,
           16#0064#, 16#0065#, 16#0064#, 16#0055#,
           16#0073#, 16#0065#, 16#0043#, 16#0061#,
           16#0073#, 16#0065#, 16#0073#,
           others => 16#0000#),
         others => <>);

   --  "The interactionOperator loop designates that the CombinedFragment represents a loop. The loop operand will be repeated a number of times."

   MS_0C89 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 143,
         Unused   => 137,
         Length   => 137,
         Value    =>
          (16#0054#, 16#0068#, 16#0065#, 16#0020#,
           16#0069#, 16#006E#, 16#0074#, 16#0065#,
           16#0072#, 16#0061#, 16#0063#, 16#0074#,
           16#0069#, 16#006F#, 16#006E#, 16#004F#,
           16#0070#, 16#0065#, 16#0072#, 16#0061#,
           16#0074#, 16#006F#, 16#0072#, 16#0020#,
           16#006C#, 16#006F#, 16#006F#, 16#0070#,
           16#0020#, 16#0064#, 16#0065#, 16#0073#,
           16#0069#, 16#0067#, 16#006E#, 16#0061#,
           16#0074#, 16#0065#, 16#0073#, 16#0020#,
           16#0074#, 16#0068#, 16#0061#, 16#0074#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#0043#, 16#006F#, 16#006D#,
           16#0062#, 16#0069#, 16#006E#, 16#0065#,
           16#0064#, 16#0046#, 16#0072#, 16#0061#,
           16#0067#, 16#006D#, 16#0065#, 16#006E#,
           16#0074#, 16#0020#, 16#0072#, 16#0065#,
           16#0070#, 16#0072#, 16#0065#, 16#0073#,
           16#0065#, 16#006E#, 16#0074#, 16#0073#,
           16#0020#, 16#0061#, 16#0020#, 16#006C#,
           16#006F#, 16#006F#, 16#0070#, 16#002E#,
           16#0020#, 16#0054#, 16#0068#, 16#0065#,
           16#0020#, 16#006C#, 16#006F#, 16#006F#,
           16#0070#, 16#0020#, 16#006F#, 16#0070#,
           16#0065#, 16#0072#, 16#0061#, 16#006E#,
           16#0064#, 16#0020#, 16#0077#, 16#0069#,
           16#006C#, 16#006C#, 16#0020#, 16#0062#,
           16#0065#, 16#0020#, 16#0072#, 16#0065#,
           16#0070#, 16#0065#, 16#0061#, 16#0074#,
           16#0065#, 16#0064#, 16#0020#, 16#0061#,
           16#0020#, 16#006E#, 16#0075#, 16#006D#,
           16#0062#, 16#0065#, 16#0072#, 16#0020#,
           16#006F#, 16#0066#, 16#0020#, 16#0074#,
           16#0069#, 16#006D#, 16#0065#, 16#0073#,
           16#002E#,
           others => 16#0000#),
         others => <>);

   --  "A_signature_templateBinding"

   MS_0C8A : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 31,
         Unused   => 27,
         Length   => 27,
         Value    =>
          (16#0041#, 16#005F#, 16#0073#, 16#0069#,
           16#0067#, 16#006E#, 16#0061#, 16#0074#,
           16#0075#, 16#0072#, 16#0065#, 16#005F#,
           16#0074#, 16#0065#, 16#006D#, 16#0070#,
           16#006C#, 16#0061#, 16#0074#, 16#0065#,
           16#0042#, 16#0069#, 16#006E#, 16#0064#,
           16#0069#, 16#006E#, 16#0067#,
           others => 16#0000#),
         others => <>);

   --  "Class"

   MS_0C8B : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 7,
         Unused   => 5,
         Length   => 5,
         Value    =>
          (16#0043#, 16#006C#, 16#0061#, 16#0073#,
           16#0073#,
           others => 16#0000#),
         others => <>);

   --  "operand"

   MS_0C8C : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 15,
         Unused   => 7,
         Length   => 7,
         Value    =>
          (16#006F#, 16#0070#, 16#0065#, 16#0072#,
           16#0061#, 16#006E#, 16#0064#,
           others => 16#0000#),
         others => <>);

   --  "binaryAssociationsOnly"

   MS_0C8D : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 23,
         Unused   => 22,
         Length   => 22,
         Value    =>
          (16#0062#, 16#0069#, 16#006E#, 16#0061#,
           16#0072#, 16#0079#, 16#0041#, 16#0073#,
           16#0073#, 16#006F#, 16#0063#, 16#0069#,
           16#0061#, 16#0074#, 16#0069#, 16#006F#,
           16#006E#, 16#0073#, 16#004F#, 16#006E#,
           16#006C#, 16#0079#,
           others => 16#0000#),
         others => <>);

   --  "The query isDistinguishableFrom() determines whether two NamedElements may logically co-exist within a Namespace. By default, two named elements are distinguishable if (a) they have unrelated types or (b) they have related types but different names."

   MS_0C8E : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 263,
         Unused   => 249,
         Length   => 249,
         Value    =>
          (16#0054#, 16#0068#, 16#0065#, 16#0020#,
           16#0071#, 16#0075#, 16#0065#, 16#0072#,
           16#0079#, 16#0020#, 16#0069#, 16#0073#,
           16#0044#, 16#0069#, 16#0073#, 16#0074#,
           16#0069#, 16#006E#, 16#0067#, 16#0075#,
           16#0069#, 16#0073#, 16#0068#, 16#0061#,
           16#0062#, 16#006C#, 16#0065#, 16#0046#,
           16#0072#, 16#006F#, 16#006D#, 16#0028#,
           16#0029#, 16#0020#, 16#0064#, 16#0065#,
           16#0074#, 16#0065#, 16#0072#, 16#006D#,
           16#0069#, 16#006E#, 16#0065#, 16#0073#,
           16#0020#, 16#0077#, 16#0068#, 16#0065#,
           16#0074#, 16#0068#, 16#0065#, 16#0072#,
           16#0020#, 16#0074#, 16#0077#, 16#006F#,
           16#0020#, 16#004E#, 16#0061#, 16#006D#,
           16#0065#, 16#0064#, 16#0045#, 16#006C#,
           16#0065#, 16#006D#, 16#0065#, 16#006E#,
           16#0074#, 16#0073#, 16#0020#, 16#006D#,
           16#0061#, 16#0079#, 16#0020#, 16#006C#,
           16#006F#, 16#0067#, 16#0069#, 16#0063#,
           16#0061#, 16#006C#, 16#006C#, 16#0079#,
           16#0020#, 16#0063#, 16#006F#, 16#002D#,
           16#0065#, 16#0078#, 16#0069#, 16#0073#,
           16#0074#, 16#0020#, 16#0077#, 16#0069#,
           16#0074#, 16#0068#, 16#0069#, 16#006E#,
           16#0020#, 16#0061#, 16#0020#, 16#004E#,
           16#0061#, 16#006D#, 16#0065#, 16#0073#,
           16#0070#, 16#0061#, 16#0063#, 16#0065#,
           16#002E#, 16#0020#, 16#0042#, 16#0079#,
           16#0020#, 16#0064#, 16#0065#, 16#0066#,
           16#0061#, 16#0075#, 16#006C#, 16#0074#,
           16#002C#, 16#0020#, 16#0074#, 16#0077#,
           16#006F#, 16#0020#, 16#006E#, 16#0061#,
           16#006D#, 16#0065#, 16#0064#, 16#0020#,
           16#0065#, 16#006C#, 16#0065#, 16#006D#,
           16#0065#, 16#006E#, 16#0074#, 16#0073#,
           16#0020#, 16#0061#, 16#0072#, 16#0065#,
           16#0020#, 16#0064#, 16#0069#, 16#0073#,
           16#0074#, 16#0069#, 16#006E#, 16#0067#,
           16#0075#, 16#0069#, 16#0073#, 16#0068#,
           16#0061#, 16#0062#, 16#006C#, 16#0065#,
           16#0020#, 16#0069#, 16#0066#, 16#0020#,
           16#0028#, 16#0061#, 16#0029#, 16#0020#,
           16#0074#, 16#0068#, 16#0065#, 16#0079#,
           16#0020#, 16#0068#, 16#0061#, 16#0076#,
           16#0065#, 16#0020#, 16#0075#, 16#006E#,
           16#0072#, 16#0065#, 16#006C#, 16#0061#,
           16#0074#, 16#0065#, 16#0064#, 16#0020#,
           16#0074#, 16#0079#, 16#0070#, 16#0065#,
           16#0073#, 16#0020#, 16#006F#, 16#0072#,
           16#0020#, 16#0028#, 16#0062#, 16#0029#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0079#, 16#0020#, 16#0068#, 16#0061#,
           16#0076#, 16#0065#, 16#0020#, 16#0072#,
           16#0065#, 16#006C#, 16#0061#, 16#0074#,
           16#0065#, 16#0064#, 16#0020#, 16#0074#,
           16#0079#, 16#0070#, 16#0065#, 16#0073#,
           16#0020#, 16#0062#, 16#0075#, 16#0074#,
           16#0020#, 16#0064#, 16#0069#, 16#0066#,
           16#0066#, 16#0065#, 16#0072#, 16#0065#,
           16#006E#, 16#0074#, 16#0020#, 16#006E#,
           16#0061#, 16#006D#, 16#0065#, 16#0073#,
           16#002E#,
           others => 16#0000#),
         others => <>);

   --  "location"

   MS_0C8F : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 15,
         Unused   => 8,
         Length   => 8,
         Value    =>
          (16#006C#, 16#006F#, 16#0063#, 16#0061#,
           16#0074#, 16#0069#, 16#006F#, 16#006E#,
           others => 16#0000#),
         others => <>);

   --  "stream_and_exception"

   MS_0C90 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 23,
         Unused   => 20,
         Length   => 20,
         Value    =>
          (16#0073#, 16#0074#, 16#0072#, 16#0065#,
           16#0061#, 16#006D#, 16#005F#, 16#0061#,
           16#006E#, 16#0064#, 16#005F#, 16#0065#,
           16#0078#, 16#0063#, 16#0065#, 16#0070#,
           16#0074#, 16#0069#, 16#006F#, 16#006E#,
           others => 16#0000#),
         others => <>);

   --  "history_vertices"

   MS_0C91 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 23,
         Unused   => 16,
         Length   => 16,
         Value    =>
          (16#0068#, 16#0069#, 16#0073#, 16#0074#,
           16#006F#, 16#0072#, 16#0079#, 16#005F#,
           16#0076#, 16#0065#, 16#0072#, 16#0074#,
           16#0069#, 16#0063#, 16#0065#, 16#0073#,
           others => 16#0000#),
         others => <>);

   --  "Assume that within Interaction X, Lifeline L is of class C and decomposed to D. Assume also that there is within X an InteractionUse (say) U that covers L. According to the constraint above U will have a counterpart CU within D. Within the Interaction referenced by U, L should also be decomposed, and the decomposition should reference CU. (This rule is called commutativity of decomposition)"

   MS_0C92 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 407,
         Unused   => 393,
         Length   => 393,
         Value    =>
          (16#0041#, 16#0073#, 16#0073#, 16#0075#,
           16#006D#, 16#0065#, 16#0020#, 16#0074#,
           16#0068#, 16#0061#, 16#0074#, 16#0020#,
           16#0077#, 16#0069#, 16#0074#, 16#0068#,
           16#0069#, 16#006E#, 16#0020#, 16#0049#,
           16#006E#, 16#0074#, 16#0065#, 16#0072#,
           16#0061#, 16#0063#, 16#0074#, 16#0069#,
           16#006F#, 16#006E#, 16#0020#, 16#0058#,
           16#002C#, 16#0020#, 16#004C#, 16#0069#,
           16#0066#, 16#0065#, 16#006C#, 16#0069#,
           16#006E#, 16#0065#, 16#0020#, 16#004C#,
           16#0020#, 16#0069#, 16#0073#, 16#0020#,
           16#006F#, 16#0066#, 16#0020#, 16#0063#,
           16#006C#, 16#0061#, 16#0073#, 16#0073#,
           16#0020#, 16#0043#, 16#0020#, 16#0061#,
           16#006E#, 16#0064#, 16#0020#, 16#0064#,
           16#0065#, 16#0063#, 16#006F#, 16#006D#,
           16#0070#, 16#006F#, 16#0073#, 16#0065#,
           16#0064#, 16#0020#, 16#0074#, 16#006F#,
           16#0020#, 16#0044#, 16#002E#, 16#0020#,
           16#0041#, 16#0073#, 16#0073#, 16#0075#,
           16#006D#, 16#0065#, 16#0020#, 16#0061#,
           16#006C#, 16#0073#, 16#006F#, 16#0020#,
           16#0074#, 16#0068#, 16#0061#, 16#0074#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0072#, 16#0065#, 16#0020#, 16#0069#,
           16#0073#, 16#0020#, 16#0077#, 16#0069#,
           16#0074#, 16#0068#, 16#0069#, 16#006E#,
           16#0020#, 16#0058#, 16#0020#, 16#0061#,
           16#006E#, 16#0020#, 16#0049#, 16#006E#,
           16#0074#, 16#0065#, 16#0072#, 16#0061#,
           16#0063#, 16#0074#, 16#0069#, 16#006F#,
           16#006E#, 16#0055#, 16#0073#, 16#0065#,
           16#0020#, 16#0028#, 16#0073#, 16#0061#,
           16#0079#, 16#0029#, 16#0020#, 16#0055#,
           16#0020#, 16#0074#, 16#0068#, 16#0061#,
           16#0074#, 16#0020#, 16#0063#, 16#006F#,
           16#0076#, 16#0065#, 16#0072#, 16#0073#,
           16#0020#, 16#004C#, 16#002E#, 16#0020#,
           16#0041#, 16#0063#, 16#0063#, 16#006F#,
           16#0072#, 16#0064#, 16#0069#, 16#006E#,
           16#0067#, 16#0020#, 16#0074#, 16#006F#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#0063#, 16#006F#, 16#006E#,
           16#0073#, 16#0074#, 16#0072#, 16#0061#,
           16#0069#, 16#006E#, 16#0074#, 16#0020#,
           16#0061#, 16#0062#, 16#006F#, 16#0076#,
           16#0065#, 16#0020#, 16#0055#, 16#0020#,
           16#0077#, 16#0069#, 16#006C#, 16#006C#,
           16#0020#, 16#0068#, 16#0061#, 16#0076#,
           16#0065#, 16#0020#, 16#0061#, 16#0020#,
           16#0063#, 16#006F#, 16#0075#, 16#006E#,
           16#0074#, 16#0065#, 16#0072#, 16#0070#,
           16#0061#, 16#0072#, 16#0074#, 16#0020#,
           16#0043#, 16#0055#, 16#0020#, 16#0077#,
           16#0069#, 16#0074#, 16#0068#, 16#0069#,
           16#006E#, 16#0020#, 16#0044#, 16#002E#,
           16#0020#, 16#0057#, 16#0069#, 16#0074#,
           16#0068#, 16#0069#, 16#006E#, 16#0020#,
           16#0074#, 16#0068#, 16#0065#, 16#0020#,
           16#0049#, 16#006E#, 16#0074#, 16#0065#,
           16#0072#, 16#0061#, 16#0063#, 16#0074#,
           16#0069#, 16#006F#, 16#006E#, 16#0020#,
           16#0072#, 16#0065#, 16#0066#, 16#0065#,
           16#0072#, 16#0065#, 16#006E#, 16#0063#,
           16#0065#, 16#0064#, 16#0020#, 16#0062#,
           16#0079#, 16#0020#, 16#0055#, 16#002C#,
           16#0020#, 16#004C#, 16#0020#, 16#0073#,
           16#0068#, 16#006F#, 16#0075#, 16#006C#,
           16#0064#, 16#0020#, 16#0061#, 16#006C#,
           16#0073#, 16#006F#, 16#0020#, 16#0062#,
           16#0065#, 16#0020#, 16#0064#, 16#0065#,
           16#0063#, 16#006F#, 16#006D#, 16#0070#,
           16#006F#, 16#0073#, 16#0065#, 16#0064#,
           16#002C#, 16#0020#, 16#0061#, 16#006E#,
           16#0064#, 16#0020#, 16#0074#, 16#0068#,
           16#0065#, 16#0020#, 16#0064#, 16#0065#,
           16#0063#, 16#006F#, 16#006D#, 16#0070#,
           16#006F#, 16#0073#, 16#0069#, 16#0074#,
           16#0069#, 16#006F#, 16#006E#, 16#0020#,
           16#0073#, 16#0068#, 16#006F#, 16#0075#,
           16#006C#, 16#0064#, 16#0020#, 16#0072#,
           16#0065#, 16#0066#, 16#0065#, 16#0072#,
           16#0065#, 16#006E#, 16#0063#, 16#0065#,
           16#0020#, 16#0043#, 16#0055#, 16#002E#,
           16#0020#, 16#0028#, 16#0054#, 16#0068#,
           16#0069#, 16#0073#, 16#0020#, 16#0072#,
           16#0075#, 16#006C#, 16#0065#, 16#0020#,
           16#0069#, 16#0073#, 16#0020#, 16#0063#,
           16#0061#, 16#006C#, 16#006C#, 16#0065#,
           16#0064#, 16#0020#, 16#0063#, 16#006F#,
           16#006D#, 16#006D#, 16#0075#, 16#0074#,
           16#0061#, 16#0074#, 16#0069#, 16#0076#,
           16#0069#, 16#0074#, 16#0079#, 16#0020#,
           16#006F#, 16#0066#, 16#0020#, 16#0064#,
           16#0065#, 16#0063#, 16#006F#, 16#006D#,
           16#0070#, 16#006F#, 16#0073#, 16#0069#,
           16#0074#, 16#0069#, 16#006F#, 16#006E#,
           16#0029#,
           others => 16#0000#),
         others => <>);

   --  "The entry and exit connection points used in conjunction with this (submachine) state, i.e. as targets and sources, respectively, in the region with the submachine state. A connection point reference references the corresponding definition of a connection point pseudostate in the statemachine referenced by the submachinestate."

   MS_0C93 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 343,
         Unused   => 328,
         Length   => 328,
         Value    =>
          (16#0054#, 16#0068#, 16#0065#, 16#0020#,
           16#0065#, 16#006E#, 16#0074#, 16#0072#,
           16#0079#, 16#0020#, 16#0061#, 16#006E#,
           16#0064#, 16#0020#, 16#0065#, 16#0078#,
           16#0069#, 16#0074#, 16#0020#, 16#0063#,
           16#006F#, 16#006E#, 16#006E#, 16#0065#,
           16#0063#, 16#0074#, 16#0069#, 16#006F#,
           16#006E#, 16#0020#, 16#0070#, 16#006F#,
           16#0069#, 16#006E#, 16#0074#, 16#0073#,
           16#0020#, 16#0075#, 16#0073#, 16#0065#,
           16#0064#, 16#0020#, 16#0069#, 16#006E#,
           16#0020#, 16#0063#, 16#006F#, 16#006E#,
           16#006A#, 16#0075#, 16#006E#, 16#0063#,
           16#0074#, 16#0069#, 16#006F#, 16#006E#,
           16#0020#, 16#0077#, 16#0069#, 16#0074#,
           16#0068#, 16#0020#, 16#0074#, 16#0068#,
           16#0069#, 16#0073#, 16#0020#, 16#0028#,
           16#0073#, 16#0075#, 16#0062#, 16#006D#,
           16#0061#, 16#0063#, 16#0068#, 16#0069#,
           16#006E#, 16#0065#, 16#0029#, 16#0020#,
           16#0073#, 16#0074#, 16#0061#, 16#0074#,
           16#0065#, 16#002C#, 16#0020#, 16#0069#,
           16#002E#, 16#0065#, 16#002E#, 16#0020#,
           16#0061#, 16#0073#, 16#0020#, 16#0074#,
           16#0061#, 16#0072#, 16#0067#, 16#0065#,
           16#0074#, 16#0073#, 16#0020#, 16#0061#,
           16#006E#, 16#0064#, 16#0020#, 16#0073#,
           16#006F#, 16#0075#, 16#0072#, 16#0063#,
           16#0065#, 16#0073#, 16#002C#, 16#0020#,
           16#0072#, 16#0065#, 16#0073#, 16#0070#,
           16#0065#, 16#0063#, 16#0074#, 16#0069#,
           16#0076#, 16#0065#, 16#006C#, 16#0079#,
           16#002C#, 16#0020#, 16#0069#, 16#006E#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#0072#, 16#0065#, 16#0067#,
           16#0069#, 16#006F#, 16#006E#, 16#0020#,
           16#0077#, 16#0069#, 16#0074#, 16#0068#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#0073#, 16#0075#, 16#0062#,
           16#006D#, 16#0061#, 16#0063#, 16#0068#,
           16#0069#, 16#006E#, 16#0065#, 16#0020#,
           16#0073#, 16#0074#, 16#0061#, 16#0074#,
           16#0065#, 16#002E#, 16#0020#, 16#0041#,
           16#0020#, 16#0063#, 16#006F#, 16#006E#,
           16#006E#, 16#0065#, 16#0063#, 16#0074#,
           16#0069#, 16#006F#, 16#006E#, 16#0020#,
           16#0070#, 16#006F#, 16#0069#, 16#006E#,
           16#0074#, 16#0020#, 16#0072#, 16#0065#,
           16#0066#, 16#0065#, 16#0072#, 16#0065#,
           16#006E#, 16#0063#, 16#0065#, 16#0020#,
           16#0072#, 16#0065#, 16#0066#, 16#0065#,
           16#0072#, 16#0065#, 16#006E#, 16#0063#,
           16#0065#, 16#0073#, 16#0020#, 16#0074#,
           16#0068#, 16#0065#, 16#0020#, 16#0063#,
           16#006F#, 16#0072#, 16#0072#, 16#0065#,
           16#0073#, 16#0070#, 16#006F#, 16#006E#,
           16#0064#, 16#0069#, 16#006E#, 16#0067#,
           16#0020#, 16#0064#, 16#0065#, 16#0066#,
           16#0069#, 16#006E#, 16#0069#, 16#0074#,
           16#0069#, 16#006F#, 16#006E#, 16#0020#,
           16#006F#, 16#0066#, 16#0020#, 16#0061#,
           16#0020#, 16#0063#, 16#006F#, 16#006E#,
           16#006E#, 16#0065#, 16#0063#, 16#0074#,
           16#0069#, 16#006F#, 16#006E#, 16#0020#,
           16#0070#, 16#006F#, 16#0069#, 16#006E#,
           16#0074#, 16#0020#, 16#0070#, 16#0073#,
           16#0065#, 16#0075#, 16#0064#, 16#006F#,
           16#0073#, 16#0074#, 16#0061#, 16#0074#,
           16#0065#, 16#0020#, 16#0069#, 16#006E#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#0073#, 16#0074#, 16#0061#,
           16#0074#, 16#0065#, 16#006D#, 16#0061#,
           16#0063#, 16#0068#, 16#0069#, 16#006E#,
           16#0065#, 16#0020#, 16#0072#, 16#0065#,
           16#0066#, 16#0065#, 16#0072#, 16#0065#,
           16#006E#, 16#0063#, 16#0065#, 16#0064#,
           16#0020#, 16#0062#, 16#0079#, 16#0020#,
           16#0074#, 16#0068#, 16#0065#, 16#0020#,
           16#0073#, 16#0075#, 16#0062#, 16#006D#,
           16#0061#, 16#0063#, 16#0068#, 16#0069#,
           16#006E#, 16#0065#, 16#0073#, 16#0074#,
           16#0061#, 16#0074#, 16#0065#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "The classifier whose instances are to be retrieved."

   MS_0C94 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 55,
         Unused   => 51,
         Length   => 51,
         Value    =>
          (16#0054#, 16#0068#, 16#0065#, 16#0020#,
           16#0063#, 16#006C#, 16#0061#, 16#0073#,
           16#0073#, 16#0069#, 16#0066#, 16#0069#,
           16#0065#, 16#0072#, 16#0020#, 16#0077#,
           16#0068#, 16#006F#, 16#0073#, 16#0065#,
           16#0020#, 16#0069#, 16#006E#, 16#0073#,
           16#0074#, 16#0061#, 16#006E#, 16#0063#,
           16#0065#, 16#0073#, 16#0020#, 16#0061#,
           16#0072#, 16#0065#, 16#0020#, 16#0074#,
           16#006F#, 16#0020#, 16#0062#, 16#0065#,
           16#0020#, 16#0072#, 16#0065#, 16#0074#,
           16#0072#, 16#0069#, 16#0065#, 16#0076#,
           16#0065#, 16#0064#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "By specializing multiplicity element, it supports a multiplicity that specifies valid cardinalities for the collection of values associated with an instantiation of the structural feature."

   MS_0C95 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 199,
         Unused   => 188,
         Length   => 188,
         Value    =>
          (16#0042#, 16#0079#, 16#0020#, 16#0073#,
           16#0070#, 16#0065#, 16#0063#, 16#0069#,
           16#0061#, 16#006C#, 16#0069#, 16#007A#,
           16#0069#, 16#006E#, 16#0067#, 16#0020#,
           16#006D#, 16#0075#, 16#006C#, 16#0074#,
           16#0069#, 16#0070#, 16#006C#, 16#0069#,
           16#0063#, 16#0069#, 16#0074#, 16#0079#,
           16#0020#, 16#0065#, 16#006C#, 16#0065#,
           16#006D#, 16#0065#, 16#006E#, 16#0074#,
           16#002C#, 16#0020#, 16#0069#, 16#0074#,
           16#0020#, 16#0073#, 16#0075#, 16#0070#,
           16#0070#, 16#006F#, 16#0072#, 16#0074#,
           16#0073#, 16#0020#, 16#0061#, 16#0020#,
           16#006D#, 16#0075#, 16#006C#, 16#0074#,
           16#0069#, 16#0070#, 16#006C#, 16#0069#,
           16#0063#, 16#0069#, 16#0074#, 16#0079#,
           16#0020#, 16#0074#, 16#0068#, 16#0061#,
           16#0074#, 16#0020#, 16#0073#, 16#0070#,
           16#0065#, 16#0063#, 16#0069#, 16#0066#,
           16#0069#, 16#0065#, 16#0073#, 16#0020#,
           16#0076#, 16#0061#, 16#006C#, 16#0069#,
           16#0064#, 16#0020#, 16#0063#, 16#0061#,
           16#0072#, 16#0064#, 16#0069#, 16#006E#,
           16#0061#, 16#006C#, 16#0069#, 16#0074#,
           16#0069#, 16#0065#, 16#0073#, 16#0020#,
           16#0066#, 16#006F#, 16#0072#, 16#0020#,
           16#0074#, 16#0068#, 16#0065#, 16#0020#,
           16#0063#, 16#006F#, 16#006C#, 16#006C#,
           16#0065#, 16#0063#, 16#0074#, 16#0069#,
           16#006F#, 16#006E#, 16#0020#, 16#006F#,
           16#0066#, 16#0020#, 16#0076#, 16#0061#,
           16#006C#, 16#0075#, 16#0065#, 16#0073#,
           16#0020#, 16#0061#, 16#0073#, 16#0073#,
           16#006F#, 16#0063#, 16#0069#, 16#0061#,
           16#0074#, 16#0065#, 16#0064#, 16#0020#,
           16#0077#, 16#0069#, 16#0074#, 16#0068#,
           16#0020#, 16#0061#, 16#006E#, 16#0020#,
           16#0069#, 16#006E#, 16#0073#, 16#0074#,
           16#0061#, 16#006E#, 16#0074#, 16#0069#,
           16#0061#, 16#0074#, 16#0069#, 16#006F#,
           16#006E#, 16#0020#, 16#006F#, 16#0066#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#0073#, 16#0074#, 16#0072#,
           16#0075#, 16#0063#, 16#0074#, 16#0075#,
           16#0072#, 16#0061#, 16#006C#, 16#0020#,
           16#0066#, 16#0065#, 16#0061#, 16#0074#,
           16#0075#, 16#0072#, 16#0065#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "An ExpansionRegion must have one or more argument ExpansionNodes and zero or more result ExpansionNodes."

   MS_0C96 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 111,
         Unused   => 104,
         Length   => 104,
         Value    =>
          (16#0041#, 16#006E#, 16#0020#, 16#0045#,
           16#0078#, 16#0070#, 16#0061#, 16#006E#,
           16#0073#, 16#0069#, 16#006F#, 16#006E#,
           16#0052#, 16#0065#, 16#0067#, 16#0069#,
           16#006F#, 16#006E#, 16#0020#, 16#006D#,
           16#0075#, 16#0073#, 16#0074#, 16#0020#,
           16#0068#, 16#0061#, 16#0076#, 16#0065#,
           16#0020#, 16#006F#, 16#006E#, 16#0065#,
           16#0020#, 16#006F#, 16#0072#, 16#0020#,
           16#006D#, 16#006F#, 16#0072#, 16#0065#,
           16#0020#, 16#0061#, 16#0072#, 16#0067#,
           16#0075#, 16#006D#, 16#0065#, 16#006E#,
           16#0074#, 16#0020#, 16#0045#, 16#0078#,
           16#0070#, 16#0061#, 16#006E#, 16#0073#,
           16#0069#, 16#006F#, 16#006E#, 16#004E#,
           16#006F#, 16#0064#, 16#0065#, 16#0073#,
           16#0020#, 16#0061#, 16#006E#, 16#0064#,
           16#0020#, 16#007A#, 16#0065#, 16#0072#,
           16#006F#, 16#0020#, 16#006F#, 16#0072#,
           16#0020#, 16#006D#, 16#006F#, 16#0072#,
           16#0065#, 16#0020#, 16#0072#, 16#0065#,
           16#0073#, 16#0075#, 16#006C#, 16#0074#,
           16#0020#, 16#0045#, 16#0078#, 16#0070#,
           16#0061#, 16#006E#, 16#0073#, 16#0069#,
           16#006F#, 16#006E#, 16#004E#, 16#006F#,
           16#0064#, 16#0065#, 16#0073#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "A_expr_timeExpression"

   MS_0C97 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 23,
         Unused   => 21,
         Length   => 21,
         Value    =>
          (16#0041#, 16#005F#, 16#0065#, 16#0078#,
           16#0070#, 16#0072#, 16#005F#, 16#0074#,
           16#0069#, 16#006D#, 16#0065#, 16#0045#,
           16#0078#, 16#0070#, 16#0072#, 16#0065#,
           16#0073#, 16#0073#, 16#0069#, 16#006F#,
           16#006E#,
           others => 16#0000#),
         others => <>);

   --  "sendEvent present and receiveEvent absent"

   MS_0C98 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 47,
         Unused   => 41,
         Length   => 41,
         Value    =>
          (16#0073#, 16#0065#, 16#006E#, 16#0064#,
           16#0045#, 16#0076#, 16#0065#, 16#006E#,
           16#0074#, 16#0020#, 16#0070#, 16#0072#,
           16#0065#, 16#0073#, 16#0065#, 16#006E#,
           16#0074#, 16#0020#, 16#0061#, 16#006E#,
           16#0064#, 16#0020#, 16#0072#, 16#0065#,
           16#0063#, 16#0065#, 16#0069#, 16#0076#,
           16#0065#, 16#0045#, 16#0076#, 16#0065#,
           16#006E#, 16#0074#, 16#0020#, 16#0061#,
           16#0062#, 16#0073#, 16#0065#, 16#006E#,
           16#0074#,
           others => 16#0000#),
         others => <>);

   --  "objectFlow"

   MS_0C99 : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 15,
         Unused   => 10,
         Length   => 10,
         Value    =>
          (16#006F#, 16#0062#, 16#006A#, 16#0065#,
           16#0063#, 16#0074#, 16#0046#, 16#006C#,
           16#006F#, 16#0077#,
           others => 16#0000#),
         others => <>);

   --  "The invoked behavior. It must be capable of accepting and returning control."

   MS_0C9A : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 79,
         Unused   => 76,
         Length   => 76,
         Value    =>
          (16#0054#, 16#0068#, 16#0065#, 16#0020#,
           16#0069#, 16#006E#, 16#0076#, 16#006F#,
           16#006B#, 16#0065#, 16#0064#, 16#0020#,
           16#0062#, 16#0065#, 16#0068#, 16#0061#,
           16#0076#, 16#0069#, 16#006F#, 16#0072#,
           16#002E#, 16#0020#, 16#0049#, 16#0074#,
           16#0020#, 16#006D#, 16#0075#, 16#0073#,
           16#0074#, 16#0020#, 16#0062#, 16#0065#,
           16#0020#, 16#0063#, 16#0061#, 16#0070#,
           16#0061#, 16#0062#, 16#006C#, 16#0065#,
           16#0020#, 16#006F#, 16#0066#, 16#0020#,
           16#0061#, 16#0063#, 16#0063#, 16#0065#,
           16#0070#, 16#0074#, 16#0069#, 16#006E#,
           16#0067#, 16#0020#, 16#0061#, 16#006E#,
           16#0064#, 16#0020#, 16#0072#, 16#0065#,
           16#0074#, 16#0075#, 16#0072#, 16#006E#,
           16#0069#, 16#006E#, 16#0067#, 16#0020#,
           16#0063#, 16#006F#, 16#006E#, 16#0074#,
           16#0072#, 16#006F#, 16#006C#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "Join nodes have a Boolean value specification using the names of the incoming edges to specify the conditions under which the join will emit a token."

   MS_0C9B : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 159,
         Unused   => 149,
         Length   => 149,
         Value    =>
          (16#004A#, 16#006F#, 16#0069#, 16#006E#,
           16#0020#, 16#006E#, 16#006F#, 16#0064#,
           16#0065#, 16#0073#, 16#0020#, 16#0068#,
           16#0061#, 16#0076#, 16#0065#, 16#0020#,
           16#0061#, 16#0020#, 16#0042#, 16#006F#,
           16#006F#, 16#006C#, 16#0065#, 16#0061#,
           16#006E#, 16#0020#, 16#0076#, 16#0061#,
           16#006C#, 16#0075#, 16#0065#, 16#0020#,
           16#0073#, 16#0070#, 16#0065#, 16#0063#,
           16#0069#, 16#0066#, 16#0069#, 16#0063#,
           16#0061#, 16#0074#, 16#0069#, 16#006F#,
           16#006E#, 16#0020#, 16#0075#, 16#0073#,
           16#0069#, 16#006E#, 16#0067#, 16#0020#,
           16#0074#, 16#0068#, 16#0065#, 16#0020#,
           16#006E#, 16#0061#, 16#006D#, 16#0065#,
           16#0073#, 16#0020#, 16#006F#, 16#0066#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#0069#, 16#006E#, 16#0063#,
           16#006F#, 16#006D#, 16#0069#, 16#006E#,
           16#0067#, 16#0020#, 16#0065#, 16#0064#,
           16#0067#, 16#0065#, 16#0073#, 16#0020#,
           16#0074#, 16#006F#, 16#0020#, 16#0073#,
           16#0070#, 16#0065#, 16#0063#, 16#0069#,
           16#0066#, 16#0079#, 16#0020#, 16#0074#,
           16#0068#, 16#0065#, 16#0020#, 16#0063#,
           16#006F#, 16#006E#, 16#0064#, 16#0069#,
           16#0074#, 16#0069#, 16#006F#, 16#006E#,
           16#0073#, 16#0020#, 16#0075#, 16#006E#,
           16#0064#, 16#0065#, 16#0072#, 16#0020#,
           16#0077#, 16#0068#, 16#0069#, 16#0063#,
           16#0068#, 16#0020#, 16#0074#, 16#0068#,
           16#0065#, 16#0020#, 16#006A#, 16#006F#,
           16#0069#, 16#006E#, 16#0020#, 16#0077#,
           16#0069#, 16#006C#, 16#006C#, 16#0020#,
           16#0065#, 16#006D#, 16#0069#, 16#0074#,
           16#0020#, 16#0061#, 16#0020#, 16#0074#,
           16#006F#, 16#006B#, 16#0065#, 16#006E#,
           16#002E#,
           others => 16#0000#),
         others => <>);

   --  "CallConcurrencyKind is an enumeration type."

   MS_0C9C : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 47,
         Unused   => 43,
         Length   => 43,
         Value    =>
          (16#0043#, 16#0061#, 16#006C#, 16#006C#,
           16#0043#, 16#006F#, 16#006E#, 16#0063#,
           16#0075#, 16#0072#, 16#0072#, 16#0065#,
           16#006E#, 16#0063#, 16#0079#, 16#004B#,
           16#0069#, 16#006E#, 16#0064#, 16#0020#,
           16#0069#, 16#0073#, 16#0020#, 16#0061#,
           16#006E#, 16#0020#, 16#0065#, 16#006E#,
           16#0075#, 16#006D#, 16#0065#, 16#0072#,
           16#0061#, 16#0074#, 16#0069#, 16#006F#,
           16#006E#, 16#0020#, 16#0074#, 16#0079#,
           16#0070#, 16#0065#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "Designates the instances of Generalization which are members of a given GeneralizationSet."

   MS_0C9D : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 95,
         Unused   => 90,
         Length   => 90,
         Value    =>
          (16#0044#, 16#0065#, 16#0073#, 16#0069#,
           16#0067#, 16#006E#, 16#0061#, 16#0074#,
           16#0065#, 16#0073#, 16#0020#, 16#0074#,
           16#0068#, 16#0065#, 16#0020#, 16#0069#,
           16#006E#, 16#0073#, 16#0074#, 16#0061#,
           16#006E#, 16#0063#, 16#0065#, 16#0073#,
           16#0020#, 16#006F#, 16#0066#, 16#0020#,
           16#0047#, 16#0065#, 16#006E#, 16#0065#,
           16#0072#, 16#0061#, 16#006C#, 16#0069#,
           16#007A#, 16#0061#, 16#0074#, 16#0069#,
           16#006F#, 16#006E#, 16#0020#, 16#0077#,
           16#0068#, 16#0069#, 16#0063#, 16#0068#,
           16#0020#, 16#0061#, 16#0072#, 16#0065#,
           16#0020#, 16#006D#, 16#0065#, 16#006D#,
           16#0062#, 16#0065#, 16#0072#, 16#0073#,
           16#0020#, 16#006F#, 16#0066#, 16#0020#,
           16#0061#, 16#0020#, 16#0067#, 16#0069#,
           16#0076#, 16#0065#, 16#006E#, 16#0020#,
           16#0047#, 16#0065#, 16#006E#, 16#0065#,
           16#0072#, 16#0061#, 16#006C#, 16#0069#,
           16#007A#, 16#0061#, 16#0074#, 16#0069#,
           16#006F#, 16#006E#, 16#0053#, 16#0065#,
           16#0074#, 16#002E#,
           others => 16#0000#),
         others => <>);

   --  "structuredNodeOutput"

   MS_0C9E : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 23,
         Unused   => 20,
         Length   => 20,
         Value    =>
          (16#0073#, 16#0074#, 16#0072#, 16#0075#,
           16#0063#, 16#0074#, 16#0075#, 16#0072#,
           16#0065#, 16#0064#, 16#004E#, 16#006F#,
           16#0064#, 16#0065#, 16#004F#, 16#0075#,
           16#0074#, 16#0070#, 16#0075#, 16#0074#,
           others => 16#0000#),
         others => <>);

   --  "If the MessageEnds are both OccurrenceSpecifications then the connector must go between the Parts represented by the Lifelines of the two MessageEnds."

   MS_0C9F : aliased Matreshka.Internals.Strings.Shared_String
     := (Capacity => 159,
         Unused   => 150,
         Length   => 150,
         Value    =>
          (16#0049#, 16#0066#, 16#0020#, 16#0074#,
           16#0068#, 16#0065#, 16#0020#, 16#004D#,
           16#0065#, 16#0073#, 16#0073#, 16#0061#,
           16#0067#, 16#0065#, 16#0045#, 16#006E#,
           16#0064#, 16#0073#, 16#0020#, 16#0061#,
           16#0072#, 16#0065#, 16#0020#, 16#0062#,
           16#006F#, 16#0074#, 16#0068#, 16#0020#,
           16#004F#, 16#0063#, 16#0063#, 16#0075#,
           16#0072#, 16#0072#, 16#0065#, 16#006E#,
           16#0063#, 16#0065#, 16#0053#, 16#0070#,
           16#0065#, 16#0063#, 16#0069#, 16#0066#,
           16#0069#, 16#0063#, 16#0061#, 16#0074#,
           16#0069#, 16#006F#, 16#006E#, 16#0073#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#006E#, 16#0020#, 16#0074#, 16#0068#,
           16#0065#, 16#0020#, 16#0063#, 16#006F#,
           16#006E#, 16#006E#, 16#0065#, 16#0063#,
           16#0074#, 16#006F#, 16#0072#, 16#0020#,
           16#006D#, 16#0075#, 16#0073#, 16#0074#,
           16#0020#, 16#0067#, 16#006F#, 16#0020#,
           16#0062#, 16#0065#, 16#0074#, 16#0077#,
           16#0065#, 16#0065#, 16#006E#, 16#0020#,
           16#0074#, 16#0068#, 16#0065#, 16#0020#,
           16#0050#, 16#0061#, 16#0072#, 16#0074#,
           16#0073#, 16#0020#, 16#0072#, 16#0065#,
           16#0070#, 16#0072#, 16#0065#, 16#0073#,
           16#0065#, 16#006E#, 16#0074#, 16#0065#,
           16#0064#, 16#0020#, 16#0062#, 16#0079#,
           16#0020#, 16#0074#, 16#0068#, 16#0065#,
           16#0020#, 16#004C#, 16#0069#, 16#0066#,
           16#0065#, 16#006C#, 16#0069#, 16#006E#,
           16#0065#, 16#0073#, 16#0020#, 16#006F#,
           16#0066#, 16#0020#, 16#0074#, 16#0068#,
           16#0065#, 16#0020#, 16#0074#, 16#0077#,
           16#006F#, 16#0020#, 16#004D#, 16#0065#,
           16#0073#, 16#0073#, 16#0061#, 16#0067#,
           16#0065#, 16#0045#, 16#006E#, 16#0064#,
           16#0073#, 16#002E#,
           others => 16#0000#),
         others => <>);

end AMF.Internals.Tables.UML_String_Data_0C;
