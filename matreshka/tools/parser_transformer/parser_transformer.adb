------------------------------------------------------------------------------
--                                                                          --
--                            Matreshka Project                             --
--                                                                          --
--         Localization, Internationalization, Globalization for Ada        --
--                                                                          --
--                              Tools Component                             --
--                                                                          --
------------------------------------------------------------------------------
--                                                                          --
-- Copyright Â© 2010 Vadim Godunko <vgodunko@gmail.com>                      --
--                                                                          --
-- Matreshka is free software;  you can  redistribute it  and/or modify  it --
-- under terms of the  GNU General Public License as published  by the Free --
-- Software  Foundation;  either version 2,  or (at your option)  any later --
-- version.  Matreshka  is distributed in the hope that it will be  useful, --
-- but   WITHOUT  ANY  WARRANTY;  without  even  the  implied  warranty  of --
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General --
-- Public License for more details.  You should have received a copy of the --
-- GNU General Public License distributed with Matreshka; see file COPYING. --
-- If not, write  to  the  Free Software Foundation,  51  Franklin  Street, --
-- Fifth Floor, Boston, MA 02110-1301, USA.                                 --
--                                                                          --
------------------------------------------------------------------------------
--  $Revision$ $Date$
------------------------------------------------------------------------------
--  This program extracts data from the code generated by ayacc, and generates
--  actual implementation of parser for regular expression engine.

with Ada.Characters.Conversions;
with Ada.Command_Line;
with Ada.Wide_Text_IO;

with Asis.Ada_Environments;
with Asis.Compilation_Units;
with Asis.Elements;
with Asis.Implementation;

with Parser_Extractor;
with Parser_Generator;

procedure Parser_Transformer is
   Transformer_Context : Asis.Context;
   Parser_Unit         : Asis.Compilation_Unit;
   Parser_Body         : Asis.Element;

begin
   Asis.Implementation.Initialize ("-asis05");
   Asis.Ada_Environments.Associate
    (Transformer_Context,
     "Transformer_Context",
     "-C1 "
       & Ada.Characters.Conversions.To_Wide_String
          (Ada.Command_Line.Argument (1)));
   Asis.Ada_Environments.Open (Transformer_Context);

   Parser_Unit :=
     Asis.Compilation_Units.Compilation_Unit_Body
      ("Regexp_Parser", Transformer_Context);
   Parser_Body := Asis.Elements.Unit_Declaration (Parser_Unit);
   Parser_Extractor.Extract (Parser_Body);

   Parser_Unit :=
     Asis.Compilation_Units.Library_Unit_Declaration
      ("Regexp_Parser.Goto_Table", Transformer_Context);
   Parser_Body := Asis.Elements.Unit_Declaration (Parser_Unit);
   Parser_Extractor.Extract (Parser_Body);

   Parser_Unit :=
     Asis.Compilation_Units.Library_Unit_Declaration
      ("Regexp_Parser.Shift_Reduce", Transformer_Context);
   Parser_Body := Asis.Elements.Unit_Declaration (Parser_Unit);
   Parser_Extractor.Extract (Parser_Body);

   Parser_Generator.Generate_Parser_Code;
   Parser_Generator.Generate_Parser_Tables;

   Asis.Ada_Environments.Close (Transformer_Context);
   Asis.Ada_Environments.Dissociate (Transformer_Context);
   Asis.Implementation.Finalize;
end Parser_Transformer;
