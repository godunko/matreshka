------------------------------------------------------------------------------
--                                                                          --
--                            Matreshka Project                             --
--                                                                          --
--         Localization, Internationalization, Globalization for Ada        --
--                                                                          --
--                              Tools Component                             --
--                                                                          --
------------------------------------------------------------------------------
--                                                                          --
-- Copyright Â© 2010, Vadim Godunko <vgodunko@gmail.com>                     --
-- All rights reserved.                                                     --
--                                                                          --
-- Redistribution and use in source and binary forms, with or without       --
-- modification, are permitted provided that the following conditions       --
-- are met:                                                                 --
--                                                                          --
--  * Redistributions of source code must retain the above copyright        --
--    notice, this list of conditions and the following disclaimer.         --
--                                                                          --
--  * Redistributions in binary form must reproduce the above copyright     --
--    notice, this list of conditions and the following disclaimer in the   --
--    documentation and/or other materials provided with the distribution.  --
--                                                                          --
--  * Neither the name of the Vadim Godunko, IE nor the names of its        --
--    contributors may be used to endorse or promote products derived from  --
--    this software without specific prior written permission.              --
--                                                                          --
-- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS      --
-- "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT        --
-- LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR    --
-- A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT     --
-- HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,   --
-- SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED --
-- TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR   --
-- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF   --
-- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING     --
-- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS       --
-- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.             --
--                                                                          --
------------------------------------------------------------------------------
--  $Revision$ $Date$
------------------------------------------------------------------------------
--  This program extracts data from the code generated by ayacc, and generates
--  tokens package for regular expression engine.

with Ada.Characters.Conversions;
with Ada.Command_Line;
with Ada.Wide_Text_IO;

with Asis.Ada_Environments;
with Asis.Compilation_Units;
with Asis.Elements;
with Asis.Implementation;

with Token_Extractor;
with Token_Generator;

procedure Token_Transformer is
   Transformer_Context : Asis.Context;
   Token_Unit          : Asis.Compilation_Unit;
   Token_Body          : Asis.Element;

begin
   Asis.Implementation.Initialize ("-asis05");
   Asis.Ada_Environments.Associate
    (Transformer_Context,
     "Transformer_Context",
     "-C1 "
       & Ada.Characters.Conversions.To_Wide_String
          (Ada.Command_Line.Argument (2)));
   Asis.Ada_Environments.Open (Transformer_Context);

   if Ada.Command_Line.Argument (1) = "regexp" then
      Token_Unit :=
        Asis.Compilation_Units.Library_Unit_Declaration
         ("Regexp_Parser_Tokens", Transformer_Context);

   elsif Ada.Command_Line.Argument (1) = "xml" then
      Token_Unit :=
        Asis.Compilation_Units.Library_Unit_Declaration
         ("Xml_Parser_Tokens", Transformer_Context);
   end if;

   Token_Body := Asis.Elements.Unit_Declaration (Token_Unit);
   Token_Extractor.Extract (Token_Body);

   Token_Generator.Generate_Parser_Tokens;

   Asis.Ada_Environments.Close (Transformer_Context);
   Asis.Ada_Environments.Dissociate (Transformer_Context);
   Asis.Implementation.Finalize;
end Token_Transformer;
